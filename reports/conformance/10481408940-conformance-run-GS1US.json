{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0a580eec-07a3-4066-ac87-dd7139f02786",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f8eae7c2-4e88-4a81-be8d-64be0d14107c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df7f19aa-b04b-4fa5-8a3c-56a8e226026e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ad3d98c-9d8a-414b-9263-c482a1105f7e"
                }
              }
            ]
          },
          {
            "id": "cd698a3f-8e94-4b26-b1c1-51e1f9ab4a92",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77cc131a-f6ee-405a-b77a-3bd93602ebec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "edcde6f5-b578-4982-82e0-de91395b5f72"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "382345f8-e8fc-48d6-87e2-cffab1911060",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fb71596b-f34f-43cf-b16a-8b2ac3c6ca5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "263d9e68-db40-413c-ab00-2fd3ba89db69",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ff3968e-03bd-4b27-b949-d37aa6db493a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a8924c1-16ed-4924-8350-167539851f1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d85710b7-437b-4a33-8342-3f42a4497ddd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f022d299-8df7-433d-8d36-1a808213628f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c13a5e0-3fdf-4c27-8566-0380e31d9f8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15262024-7072-484e-aad7-12e7b5665af2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f134dc0f-8123-42ae-b81d-df95f2c710c7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6dd5461a-c672-4625-86c0-71f3af923da4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5175cf28-e4b6-488c-ad69-acbc30ea3954",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "206143f0-800b-4565-8045-937f2d6f1137"
            }
          }
        ]
      },
      {
        "id": "ff15bb3b-7f9c-40ec-8774-2b69e8ace307",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "111e9700-6c16-4f8e-a9f2-6bafec85b175",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3b31199-d6f0-4ab0-85d0-a66067d3f432",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b29f92e-cef5-45c0-a1d2-79ce79cf8ca1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab141d2-4655-49a9-a856-c1f2725a4a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be9684ba-3278-4880-847f-cad83e0eeeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf68a7e8-b178-4cd7-b4d3-f69ec390309a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae7ff2f-ed4e-4da0-b8fb-a74551f65d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28d28e96-f9fd-48e5-98ce-ddc9eb2320a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ae0b04-514a-473e-9654-31cf8475b2e9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336b7d18-3901-4f82-abb2-cae420cc0c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e404a4e2-00bf-4aa3-945e-4de78ffae288"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbceb7cc-432d-4f07-beb8-7e8ea21e0d13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c145c0c-077f-43aa-aab5-c3640f4a0a21",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3530e4-2b62-41ff-a690-fcd7d70929cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e1913e5-92f9-4e7c-954c-0507c6d3ba86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aac7ac-324e-4643-aab9-03184debcf1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982a556c-4034-4547-82c5-d93715f6ea8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "61ed12fb-becd-4713-9039-500053551df4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc10ce2a-2c8e-4d96-a7b1-709361ab461b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd4aaced-8494-4e82-9061-38f7caa0ec1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4fded26f-7c44-499e-8f62-b2677deeae92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d198c03d-23cf-45bd-a777-f36e7af2fe70",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9f65ccf4-6b52-4472-aeac-b6063bb2f989"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0288e889-2a82-40bf-ad16-f6caccaae883",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bf8a91a-76cc-4a52-b262-cd0d69d36445"
            }
          }
        ]
      },
      {
        "id": "0e3188a0-0b12-45f9-a663-5196a1c0f71c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "89b08c03-8c56-49ea-ab16-88d36acc45ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b620b91b-3d61-4f23-bab5-6fb0d81db82c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cc3de5a4-ae71-4332-8074-1b4609770c2c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7acb940-c504-402c-92ca-5f981385240c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921bd52d-82ad-4a42-bb87-b35746ae85fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e67430-5d09-42d9-9016-ec0f57d0b93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5444d4a1-ea82-4b36-b24a-f2fa8192ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdee4bfd-aed0-44c0-86bd-ee9e576a0c95",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab24083-29a0-4110-a4a3-9524c1907d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5669e20-e9f0-4367-9a9d-5e8364409ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d4ec80-94b2-498b-b670-738e058b3f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b782146b-7da3-484a-b1c3-3e2f1f6e7c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc9b470-19ac-4016-9615-a6f7e7104c03",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52247e3e-ac6a-438a-beb3-c3bd1a59bd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bf4e0c-6676-4825-b630-c32dd3b38688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8b6175-3b1d-429b-9b91-ac885e3c3240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44e0f699-e129-426c-a8ee-853f3a733bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93e0b7d-1369-43c1-87fa-cb3ab48ad4ac",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105edce8-e761-46f5-b58b-fe051a4ea5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877ce442-0086-499a-862b-f9ba3dd9a191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c455f91-8b32-4590-8b42-21a307e9a1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa212152-3416-461d-8260-cc30092e3b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc43940-b7b1-4c80-959b-a10e109c7aec",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce585b4-838e-4481-ad98-0cbd16ba89a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60611285-62f6-44f9-87b6-957d09756787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6de222f-1edf-4ac0-a0f8-1e9641f74a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee7260f9-629d-49bc-b8d4-50e975db54d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09637dd8-e613-4af5-b192-4b0d84a194e3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36fc2d2-346c-4515-9f39-c27f727be7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5745b2-960b-4b37-bb95-7c5baec2943c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ac6077-f841-4592-aff3-a1d9eec46c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f315e0c7-e8a3-4217-818e-91a7e23f2f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96792f07-3107-4bfd-b161-8b26caec103e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f8825c-7a47-4877-b20c-505e04203ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd2373c-1ac1-44a0-99cb-bd66762d47c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fb216a-1ca0-4f11-9077-27119cc52a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4b01f0b-ebea-4852-8ae7-529f0dbcf073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94c2459-3951-4c34-9366-cfced2fba624",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea8a398-29f5-4042-8e06-c16878f31e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d774b92-2208-4a82-a930-2e8544e57c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c36c8b9-cc88-4c8b-a4c7-41fc3c983d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b7a360-bedd-46e2-bb5f-3861e3b86209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d68ab3-e7c4-4d8a-ae07-9bc9534700c1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d23531-39e7-4a3a-af39-3b0bbe64b287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef7c3fc-9195-4cb5-81c7-051cf9e082f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753e4395-9a6f-45d9-b197-2a51d9557099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12f1271f-bac7-44ec-8ab2-fbf1d09ac02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bd0863-ae56-4134-8e27-c54724a36544",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f36123b-a91d-452a-a453-df939b32100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901f8cc1-1d1d-4b0e-a360-3f691e69fe8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97303433-71f6-4bba-9b09-896b0a8752d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c07295f2-959e-4054-844b-c7123db3f939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a994c110-0ace-407f-b9cb-d7d232295402",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6a5e4e-1081-47c3-8030-7ceb3be8391c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2c0ae2-aebd-473f-bca0-e83ee4e22204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6332fd-ca7f-4955-aafd-5b4bfa9df8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cf780e2-77d9-4ff4-b7ca-061f6edaa1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb263be7-207c-44c1-93ce-2877837c2bbc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8338e8-6794-4abc-a67b-55293aeb7846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2a1d63-8f75-47df-a2c0-e11fec571256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc300d1-774a-4a3e-8d9d-a14aee2db5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0db0b81-f21d-43d0-a133-2edf942c4160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c648e0-a017-4bf2-aff7-df91b40ba78e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e6c464-9c0e-4e7d-bd0c-48ed2ad54334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd95fe30-c2b8-42c6-ba83-785c63492818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1732bad6-70f4-49c1-aae4-1f61d664be5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a09daca-f805-4ad7-9f01-1c50800499c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b02c7c-1718-43d0-92bf-c07be5b777c6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779d4b08-a5f2-452f-9e9a-329517a46781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4633ddf4-e573-4125-9b51-039d04382b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a79b6b-88d9-4dd1-871e-8cbdd00db8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3199694a-4ce9-4842-ad1d-4dc0dd702643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cba45a3-f9fa-4d4e-8229-6151a5c50825",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7562536b-5cec-4d83-a1eb-20b5a4b392bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53cff80e-5f61-4a7c-a9c8-31dea290b6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda6942a-cc07-4375-8228-cca195a7de22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "183e7218-7b1b-444d-9fd8-b7476a947954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289c25a0-1d1c-4f0b-a58d-8f8cd9a3af8d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d912aad9-f4de-4c63-aa90-1f3ffe904ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df16a469-0560-4cc9-8689-96a484989461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ba98df-7a6f-497e-a830-b65c2f9fd4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46881195-e920-4fc8-945c-3c1fd6cc3f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3778e26-d1d3-4f30-b0a6-ace7835a1295",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a53a22-22e4-4ad6-9c4e-5763f5660bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc3f54b-c756-47b0-95f7-be608ddecaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f93ffa-05f9-4866-970e-7c30c4463574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c448170e-909a-470e-9635-b1a2c314c422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b244ab-a041-460e-bc44-1bf74b2ef415",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165743db-9f5a-447b-b4db-9fde88fb5936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9436774e-bd3f-4d90-8c5c-7f92572aed7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a76897d-6141-480a-82c6-d628c687c616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a10d88f-7114-4a7b-bfc9-5eb71213b858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76221776-d904-4753-94cb-c08bc5493dba",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a62a8e0-b55d-4d64-8e74-49b830e7521c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81844611-1e8a-43cb-a7a5-61095dc84376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a069fc-3587-4656-acbb-70d594f6d7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "676f8af0-4da4-4e3c-a68d-1476197caacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29a5cb6-d6f9-4f0f-8529-afaa465bbe09",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220ad783-1c8a-4054-add9-d7bcfcc62309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7428ba57-90cc-47f0-bb6c-b40dff1ed9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e8891a-f688-4a21-bbba-4859efcc1b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e780bd5-f285-46b3-9dbc-459ce8a80594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053c9379-ce3d-4b19-b8a7-7aa44a82ed1b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f1f9b3-9338-40d1-bc42-36f7bd3433e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fad9178-fc82-451b-b3de-8dbc53e9fc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeff0f73-e6da-411e-b084-efeabe7692c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f4dc8b-d63b-4f61-9931-a560d7056f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b124bb-f643-4ec8-aabe-44c6cefe0de2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99dfa14-ad25-4b80-beed-316c528bb411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b98af92-a216-45b8-9c9e-490821cd7ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27f7ed8-e69c-4c66-9764-6a621caaa626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3099e71e-04d6-457b-b196-521133fd5d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b3ae96-677a-4cde-925d-e4bb7e03934c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f97e7e7-f29c-4b14-8c4c-65dd8f65c216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a211da0-d40f-4bc5-8952-4264164da9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bb2735-f052-46be-ae97-3f037563f65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8075817d-fe4c-4999-bd3b-9dfe283fb6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781b51d6-9c46-40d5-977a-43a5f9faa62a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fa0764-4077-4cba-8a19-35d23136131d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccac8b6-ad9c-45c3-8854-f778411f379a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b871726a-3899-4674-b613-7930e4a66df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9708539e-34df-46df-86e3-b3faefa8afa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c515f0-2dd6-43f4-9f5d-0fd9d372f617",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fabfc3-e4fc-4d1f-9d0c-567e908a86e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2c9b20-adcb-474c-a561-e1d5a6a2e1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35c2d17-3b13-43a2-9190-a6a0a415701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5319a37-a990-45bd-baeb-d68e5c978a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ce4a32-ca34-45cf-b59d-cdbed90cf8f9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30b712e-997b-4641-b59b-32eb6b7a6f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f392c888-ed59-4833-9980-d5160b4aae65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40bf96a-8017-40fa-af0a-af2c0175e684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cff8af3-7cec-4f74-bff0-fa368bd49813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65583691-022a-45b4-bde1-554c9a974541",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fae4832-9697-4959-b6ab-bc93297aee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407f3953-9d70-4e83-b140-599f71dd7eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dd0989-cfaf-4ae3-a9ad-fdb716bb5868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f4dff1-00f4-46d6-9142-1848410e52eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07669ce-4484-405a-a3ea-c03f02fbdabe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e172f7-9083-4ea7-baf9-2444f1480447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a382e3-cf39-472d-9e90-8dc98206ec24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4ee392-fdda-4600-b113-360eb1cba3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8fbf38-2025-4cc1-a7b1-3357d0b23917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dbb249-1ac3-4f1e-9f62-002e34253d1d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd9f370-4c73-420f-883b-5947849700a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ecdafe-73e8-4aae-ba80-f5fd511f9f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053a3a87-56e2-4531-b796-7c191327339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "871f2187-79bd-4c6b-829a-bfd9b3c4d421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbec3a7-dd8c-4941-b048-66bee7ac2a75",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d155eb-47c9-4c99-bdf5-5cfcdf5266e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa73530-8d15-45cb-8a10-fe465a5f0f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b9e9f6-261d-4ead-80cb-b20b95fb29bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdcd15a-342f-4a17-8c52-534a7f001c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eeead2-c333-4b2e-aceb-dc01516842f8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d0560f-3e09-47c1-b4d3-f45d8dedbbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7921095-a30e-44d9-854c-a95a36b6f360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae863e0d-ebcb-4dc3-b8bc-ef5c3b00b9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f0e9ae-70ca-4da2-a8ac-ebe8ec9f66bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3961d8c3-a34a-489b-95a6-1e0ab2a903f6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8148ff42-41a5-4703-90ad-b61b5d7e70ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e891886-51dd-4bc0-a2fc-5e6cdaab62b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68a4a03-f99a-4272-b814-043de130819b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55371443-f1b1-4f26-9dd0-e58a065cbd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b3b0df-507a-4662-bd9f-02305ab42d64",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cad6beb-a2a2-4ef5-a519-4fcb303ff515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b4358a-3cbc-4746-b15e-b45dfb2206a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d56d76-1106-4101-8ce5-826b8e2d0dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2af0bce-2433-4237-b10d-d57ec1c54dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9c74ce-480d-4be0-a3a3-024fbf0cb23d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bacb86-5348-4f57-949d-97117260d607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c206bac7-052e-41f5-9b11-e305c529facf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4950da4f-229f-424c-94c5-2fe0a1ca1668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bc92ab-124e-4592-8029-bfb4374c4de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dadacf2-053f-44ea-8784-04106cf6c0a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9ad86d-737f-48d8-ad21-949f7080e564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c609a5-d51d-4049-9048-69f087ec97ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d95c0e-e3c3-4901-be75-ce2added2c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "82b96248-eefb-42c8-aa67-38a57da9d78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e3ad06-9e25-458d-be20-7ee8991f867c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221922d8-3feb-491e-8485-c767d3779597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83aebcf0-5e2a-4e01-a877-86069e5df5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf1286f-1efc-47b5-9af0-fce92121123b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "177d9abf-280f-48f2-9893-88f7ccb4de23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa59e9c8-100b-4441-80be-750161d7383f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5598b315-7456-4b92-866e-48960d44b7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f6b090-72d1-4f67-b93b-76dbc8250619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429eb26f-1d04-493e-85c8-ee6aeb901efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18aede8f-204a-4d14-895e-fbedcb23f24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cc442d-236d-4fcb-b975-578fb282b8fb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41db187-b03b-4e3e-93bf-043b816cd614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e9b9c0-6191-485c-9649-e79f17ea0904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5c5cf5-231f-4a94-8fe5-912b3068fd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdef414d-79fa-4b8d-bd36-dfb25cf00878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761b9ab6-8a8b-4fd7-9b82-4c791b0cb087",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb0e2f7-d30e-435d-b8a0-e715223ac6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d18552-c3a9-4df6-8f15-a4362c5cedec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59968cd7-e59f-42de-b0ad-d0f522f33cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db2d87d9-4737-4c42-82b1-818710867b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215b0eed-610d-4ef6-81c8-e3782c851e76",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e22f481-0547-47b2-8af4-9b1e23e80cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1680345-3d97-47df-b90f-c4d899b2b575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b3d729-4b83-41af-b2e1-212a49ac085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6fe08d-7727-4e58-b0fe-ba5bf3b33a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4398f16d-0242-4804-a7d7-a3af1731b978",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2207b23f-7231-4910-9ba9-895ab7ef94b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb08b44-8b9b-4188-8782-112062942f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee96d9c-b7a9-4a90-a519-f5c3bfb2a30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77ec0ef9-60cb-4aec-a34c-45ee480b9726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d780a27-b9c2-4e81-9442-c4d1ee3cd438",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c218d1-1142-43b4-a2f4-0b1ca72b4e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be79deef-bf5c-4bfa-8da6-299b741af766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f1b5a1-3580-49e6-86cb-d7eb9da07a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2be20f41-c4a8-464d-8387-f235b16a9822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a82512f-8003-4e92-8d2d-88d5aa7d35c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4253ed81-dfd3-4823-8c51-3f1cb74889e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54fda12-00cd-45e9-94a4-acd78f74d14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e67085-bc47-4905-bf74-9c228b7563a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b1f045-2d96-41b4-82e8-2a46577b9b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd576194-5216-4567-9076-9af6772d9c65",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee13b781-1793-401e-8de9-59fc4e633d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974709c1-a038-4f76-b509-d72a5ac1eed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca191f9e-7e71-4b9d-9325-f51e780fd35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "57be41d4-2e78-446c-aa76-182a0a3fe851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45437a22-6705-4e30-971b-bce254f18a09",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db2eddc-0ac4-4289-9825-dff37918861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b488e20-fa7e-440d-a051-2da0ceca87e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ee62be-4122-408d-8fb3-4be932946d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccd052d-a108-4a3e-a024-b59ffee5d14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a56b32d-7e8d-48cc-a8ff-e87011048c98",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9eca25-beb2-4efe-a59f-d792f7274877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6968b9b3-976f-4dde-abbb-dab1f359103c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9203121b-1d20-442b-8c53-a857aa207188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea9b820-3f4a-4861-9ef9-672d7d3291d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61b24e8-820c-40b9-8e9d-d2a690739ccf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121f9533-ad2a-446e-9894-762a1698e7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b19d4c-4d1b-4f26-91a7-8febe579b057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7b4149-90ad-498a-b36d-bc81638d0989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a09fe9d-1551-4047-97d9-d171bf4d44b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ee7c9e-aea3-4a8a-8639-9b432027539f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80725019-3502-4cf8-b07f-f1378743e8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be27f07a-e8a7-482e-86ba-6e56c351e0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b5a7fa-9e74-48e0-be25-2e82e3170565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba336e04-15a1-4ae3-9854-05709f7aff1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2926044-6c1f-44b2-bfcf-743e14e2949f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f5754-72c0-4f2b-af77-1bdf46ce429f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3f1baf-9524-4b7d-9654-351bda6a58d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd51024f-c729-4526-b434-d41cfadf20bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93b013ea-1ac0-48d7-94bf-7bb7129776da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd38ea6-dd08-4680-bae7-c1065aa93d54",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876acbb3-e6f1-47c7-8346-119b5deb14b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c5486e-5f87-4218-9db0-75203848e0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863e7988-f129-4b92-a288-a36459a4123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fec6f58-3cfd-4a7d-ae16-4f532f37a5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e97f48-4f55-4268-b64a-e52393c9ea32",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97db335b-bff7-4a35-a29a-271324f26fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a099359b-463a-4763-8825-ecc95fd4a75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcfff74-e537-4c55-aebe-df4ed291fd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "112ee8eb-c4b8-44ba-ac1e-c31536c69218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8ee6e7-b7db-4422-a073-07c43d099156",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47758371-d410-4dfa-912e-0f4a16d15e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b63d015-52db-4fd9-a6df-ca786b7c10e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf6947b-b6db-46ba-b4e9-631683f7bd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9714ee3c-09a5-438f-9615-7de3e3a9f12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9893e0-d70e-466b-a705-6f1aa817a442",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e21716-ac35-4047-b243-f2caf5ab8ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1984f078-79a0-4a5f-b8c6-48123068c271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a81fa7-5155-4972-83cb-10f8662db15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "876b4696-1f98-4df4-870b-66c91445721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4179abeb-aed0-4d23-8c5a-19ece89c4a9b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd7eed6-3602-4454-97e3-3644baf312fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129a0e6d-51a3-439c-b2ae-81716a537e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5800c08-de4c-4fc3-893b-fca46f06e20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a1878b-e8fe-4c85-8566-cef315af2007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5b4f50-3453-4763-aa8d-37f7f021a861",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479be900-70cb-46e4-92e8-612ff8a24fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e89b482-026f-404b-a788-43c25cd1f676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea2a81c-ef61-46aa-a52a-1516380c7cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec21203e-aff1-4f2f-ba7d-3e7ec4de5794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8699d63d-8d46-4dd2-8c50-3d6185222956",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405b02e6-0103-4a6e-aa8c-3a8408874bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347e7119-9f70-4aa7-83ad-fa256828e405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd52035-d22c-4f76-9b81-969307c19f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3fb765-8a2b-4701-8d56-d9de70081fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5656a606-ceda-4803-b428-302ae21af687",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09172a1d-35f2-4c48-b31c-b2ede04f0049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48762c94-cef0-4ced-8a9a-cb03d00b1770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac08288c-5b5c-4dfb-9252-897c83ce82ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "864cb027-ba4e-4a6f-a21b-8ae4c1c46408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1561c6fc-287a-4247-ac82-206abd9f7b5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6bb376-265a-4139-9abd-bedf28ea4f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e991679-0aa2-4747-891a-e2334cdb878b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b08b7f7-853c-4d15-a258-4c64ebd54460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "edb5b092-36ea-42b4-9098-df2d0dbf978c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bdc1d2-6b8e-45a1-83d2-d79859cdbad0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4353ea5-8705-4f5a-b171-5639aa8c3442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9648b9-41ae-4f3c-9d0e-8bbc70ee5fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec9b963-b085-4390-a140-c2d54e874fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "054eb8cd-4797-4dc9-8a8b-f4cf00290365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec84e26-b765-48d7-bbbd-eebefb38d311",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4079deac-16d3-4b82-b46e-a2795134750c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fd013d-731d-4f78-98a8-68243adc2bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d08cfc-19ac-4070-81f4-baa832154c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "160ef310-3dc4-4395-bf42-e109fb6ba90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b070a1d-cc86-4a5a-a9df-d9416a5c60d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cede92e-46d9-432e-8ab2-9545f8b7758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c451aa2-cd87-4b3e-8f46-31a1429d51d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f6c36b-2258-46cc-853d-ba4abdd5aa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "acc92f57-c0ed-413f-a93f-95fbb3faf7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb19079-7360-4fed-9807-cb1d1d327ede",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0347ed35-634a-4588-82f9-4e1c756161ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bf308e-c5fd-40f5-a6dc-a9f610c09775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e852ab-f65c-4b5f-83ef-ccbe1ee71e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "965ca974-d9e8-445d-b1c6-dcfff845b8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f038cd3-56ce-4ed7-9f78-d944d815f655",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666e76ce-562c-4634-8598-5073af1edf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d9ac50-cca8-4af5-98f7-cfa9b29c2cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a742d4-6aa9-413d-a2a2-defd5f9aa42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f6f4b8-0444-4e88-b502-51ad2f408f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206a21ee-87df-4034-93ee-0bbc1332a618",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16ca07a-e3a5-4e5b-bcca-d24fb3b5eb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fbcaf1-4d24-4b83-b7b4-92120db40a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3f3f14-964a-4493-92f3-ef2fe0592191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f392b4b6-3b9a-416c-aea8-b4d8d907150f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cb14e6-06dc-4dfa-b132-94cacced0bed",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87911260-8101-4de3-ade7-7b06826ab380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b447376b-c03a-417f-8d4a-74af09556d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bca1eac-61cb-4428-9fce-5c013ec732ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdc1025-ed16-4012-b3fb-aacbd4573032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44ae149-a7f6-435f-962e-acd844a3e8aa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eedd3c2-cbcd-45e4-b022-56f3591212da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f990e70-ef56-444f-b802-575348d714ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffb6899-e1be-47c0-8f48-4eeb7930ac61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83e49b4-f4a4-4efb-bade-abd107444652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deb9090-2215-4763-b031-6f819bdb2bad",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a6d9b7-e87f-4213-a011-74c5366083a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b99b53-d511-4b6d-8899-263166d8aba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7158d754-77da-47e0-808f-487b054c0ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7fd72c-faad-4ad3-a164-eff239467b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8bd2b7-12fe-4efe-a60b-0de0023da144",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff035673-a13d-48ea-a5c6-97d46dfef275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1cb6f4-dc12-48b8-9c86-6f67c257c307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cf5b8a-cbc0-4ec4-acce-2cceb900e4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "11121a47-f66f-4804-b9dd-7443b77fc83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9540076-e870-4409-a73b-e1e25f93ded8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a9a0c2-0115-4e08-a433-ec1626a20d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414ce16c-a861-4d62-9c35-8f5cd0f81fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d1c604-b45c-499d-a76f-5f93abe6e478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "780e2b8e-52c8-4f82-bbaa-53aa1e428063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56352053-7144-4cca-8f19-3dd84a6efc9c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b89329-8855-4eec-a3f3-f0a4a12708d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97613d4b-350c-4b16-869f-e250d4a62c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2422765d-eb22-46c0-b565-8e8ca0557015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9762955a-1f8e-4a38-bb36-75680363816d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618d9099-62d3-4bf0-939e-c031fb3e7074",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92da181-47fc-4720-96e1-aa9442c86a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2786c476-bdd9-416d-8d55-e76e17db27d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4490b8d-3507-450c-95ba-6716b67a9a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea826d8-4428-41d8-9f23-48ef6f6cf4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7e0af4-56d4-457a-95e5-02b7aad0552f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee82acfa-cc48-4a87-bea4-8951bc807abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbd67df-f058-4663-8896-c91a60392367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2300511-b6a7-45fe-a8c3-2698bff5a83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1b013a-a0fe-413f-b146-be83a56f02bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13ac23a-ccaa-4e67-b2d2-0bd75b7fd081",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0005eed1-58d9-4bfa-a760-7b64b74524de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dd3ecf-ddff-414e-8a9d-17fe2d220302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89af620-78ad-4215-a1c2-0dec5609cf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8ef845-3fe0-4a43-a536-1bd5247c8038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8966b6dd-626c-4969-8b07-b4e34e2cec35",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601ef69b-71bd-44d3-80aa-78809c727898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59cd4f5-4151-4e66-a34d-b336c7bba6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210e902c-7ec0-40c5-83b4-2d4c49ffe1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45461710-2ca2-4c1d-baa2-a48aca1eb1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47290af-9277-451e-a3f0-45f3ee4187f3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827b11f1-2a74-4a45-a08a-c85e609f97c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760b72db-13eb-400a-a959-ac6aa5d060bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656c3b24-4b1b-4561-b893-10de1969d856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e54442a-d097-4388-a3fa-05e8d553fbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb57a4c-344c-452a-aaf1-97faabb73c31",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986e9267-86e4-48bd-98c0-78fccc10b59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07a28f0-b1bb-43a3-9940-0bdcb9e9ce05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99db13c2-2214-403f-b58f-0a12b8e1c4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ad4d2c-15f3-4829-b5c0-f935d642cfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fb626f-4ab5-4542-b438-b54fd3be05b8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db9ee97-767c-4013-a746-7a97badda733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b95467-91f9-4ffb-85e1-09cc3c465787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f02cc3f-f869-40c1-bd43-9203d2725a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a511a1f5-1308-46f2-b897-309f4b3accd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f75fa50-434e-44d6-9903-a90dd481cea0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb7a3c3-78ae-4191-84c6-ea9918107def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d42f83-952a-46ee-92ac-ef965e074eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2f03cc-a5c2-4ad2-bd61-037e9dabc14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba8069b-9224-4f03-97c8-b196586681ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b453018-db05-40ae-8289-a81f6c1ba94f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e9f462-6b8b-4481-b3ea-c433e3efb798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb41d98-e6ae-4c63-8c90-4a5c9fb4860f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9354d5e2-fb41-41cf-8757-9f82bf3a3344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2682b8-903c-47ca-ad90-4d39250a5094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2107e59c-0dc6-44cc-95d8-722c155fdf72",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c4610b-b1aa-4f48-9810-29eae1122be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05117119-d6c6-441a-a673-3ac57ab2ebee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015e031a-57a9-4d15-bf80-5679b879d926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8aa767-9039-4d05-a33e-b8b404b81fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51166271-69d1-4e2f-aecd-4685880eaa14",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbb4010-ce19-4552-b1d2-d54dbe906f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e8365c-2d37-46d0-a76d-623f65a41b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b8e263-fb2d-4ed3-8694-6ba524df38e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a7ed5d-6bc3-4d37-9f32-3a33364f2bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204718fa-70b8-406e-95d0-bdf67fe86647",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d49bf5-a746-4b1a-b9f0-f52a4e935e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f53aea6-838c-4d1b-9820-ec140063538e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4006f196-fab2-4a7e-805d-3366eec9693c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67bac01-3643-47f2-961a-f0af1aadef83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b806e79a-2699-4bef-a458-15289bf2fc0d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2df3e0-5c62-4393-a925-5dcbce7fcb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95269abe-5d84-4464-bd6c-da4362b055cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6325472b-c1b3-4d44-b04b-c7c1ddb01a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad816089-a368-4de2-a4b3-ad9e38dbc7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535f3bd4-45d0-4160-8650-ac8a807df002",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b48ab7b-6204-4150-b36a-cc06a45fd102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37ec4bd-5466-4f19-a6f7-ad0d8583e55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284743a5-dedb-4cb8-8987-f97593962142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99bf3824-2ae1-4e1c-bc77-59386ee8ca1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb940c4-96ea-4f46-ad02-38c388273da6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7de71e7-7300-4753-88be-de9bf0020f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26d84d3-b6aa-4bdb-a3bf-58c11e6059fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004474f0-453d-4d2d-95c5-4c6554896c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d58e511f-f5ca-4b90-8897-ec83da7e1d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e52f279-08b2-4797-b121-de56ca1feb1e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071dfba7-dfce-4853-ae5c-1a4a0d8f614d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c8b496-b25b-450b-b000-d8e713108c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24708f59-6e21-4554-a1ab-ce55f1a18346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13a9837f-779c-4e9c-b951-b978f7e4b6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3877cda8-9cac-4370-b13f-3aea9691e3ca",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293baf5a-490e-4958-ae70-25d26c691077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742d66cb-9858-4f8d-aa8f-0e8896550e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8660f283-3f37-4747-9a41-9f7b0f939a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8711bf14-2a6e-44f8-a46c-01cfee35537a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cd8faf-fab4-45df-a195-6f2efec17376",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2756a6-1b4b-49b9-91cf-68eac1af81bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4413c6-eaf2-46ae-8ebd-3a028c3504ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c602cd7-9c3e-4db6-a76a-ad943dd065eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cee513ed-c57b-47f9-b0c1-c599deb9dc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a3175d-8c7b-4116-8875-e47235fba34a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b79794-cdeb-46fa-afc4-8b449c261269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a3d186-d214-4c0c-8a9c-5560e4cc4b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8544624a-b86b-4b41-8480-0436fe02dc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ca015b-628a-4289-bd1b-0533dfb077a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5286c726-cfa7-4299-920d-7198aea57a78",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1898a853-02b8-44f7-be50-8edb3bad29cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331dd8b0-0365-4f33-820b-c404bc8111fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f958e0-4dbf-47c9-ba00-8246e4a1cf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64cc2726-e701-4b3c-b172-1a5959992a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4293aa-329a-4c05-951f-49126886e629",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ec8c96-2915-414e-9f3c-89528b1b0014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4eb5ec-691d-478a-b9d6-191a7451593b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ffdffd-7f3a-4a62-8c51-6ab2f2368997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c47fbdd-2aa0-4cf3-9101-49e6fbd83be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042edbde-daaa-480c-843f-85d28732bf8d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e803a-e0db-46b2-81b5-8b199089d6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a3a66cc5-e5be-4bc1-8efd-8ef9290e7b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf91f978-db34-441b-91da-fd77676a2143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ce520e-98ca-4732-83f2-cc8eb88e164e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b196f98f-e8bd-4b96-9c00-640122565bee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c6a0e5d-d928-4765-adb0-649840023285",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542936f6-4edc-4e27-8ccb-0fadc33308b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa7f2e1c-73e9-42da-a069-ed8efabeafff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f251e552-5e2b-468b-90ab-db58e3ef7b63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93aa1222-0739-4843-aced-c416a9cc2ca4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6757a704-9523-49a4-8cf0-3eb06ba8e9ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc46a260-ee89-4c8f-ad65-8958b0aa1ec9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec08b5d7-936a-4800-abc5-24a38f93aa2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "041b11ed-553d-40d3-adae-274e6479c996"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "520b443b-6ed7-4521-9609-acf3943786aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40de6306-126b-4ba1-8e28-6c5d85f65596"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16167d13-42f2-43b1-bf54-6de222075328",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "543c4557-0f22-4062-970d-499c51bd527b"
                }
              }
            ]
          },
          {
            "id": "0dab73a3-90e1-4bf3-9c03-5c183004a696",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52e9a075-a108-49ff-9e1c-21142b449631",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ed5e6df9-6a66-4f5f-b1a2-ce2ad0d11295",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c261ae-91c2-4578-b9dc-9c34f4a5684f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "775d7527-76d3-4a16-be43-b53df56ba021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5656a802-1614-41e4-a7a3-2de929b233a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74baf24-a33a-4496-bf54-8cb97f36d5e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10ee639f-a615-4455-b8dc-f15da67ca7c9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b11a0af3-465d-459a-9af1-fa3034907128",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "633d4a96-fb04-4be3-97e6-bcf5a4bd0255"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9be0615d-aa39-444a-9ff5-c143977b8844",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59ae1800-5b41-4965-b26c-312779a180c6"
                    }
                  }
                ]
              },
              {
                "id": "f77a18d7-0676-4a41-b58b-a8313f040eb3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95a0235c-a6ee-4339-8099-0aa1f9ca979f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb18d23f-bd43-435b-9d12-062fd4538081"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e619b48-577a-442c-8d09-9af4e194e764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4daee708-36ba-42b5-8a97-a4fc8eb4f745"
                    }
                  }
                ]
              },
              {
                "id": "d4f76288-7496-4045-8ccb-6b1c29be7cfa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85fe3ba1-2307-4648-9354-d1ada453229f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3142f2c2-0585-4add-bde6-c50a2368eb75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fff720e2-cc9f-4e39-abf1-5e6aa4fd4e39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce6c7523-ca99-46eb-8050-b4a3cac87139"
                    }
                  }
                ]
              },
              {
                "id": "29ec77a5-d28b-4ff4-ab93-0ed0616954bc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a74fb996-cd57-41d1-90aa-f67b70fc0ad3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0310f06-2adc-43e2-b17a-ad4769a9bac9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae6fe8f4-618a-4350-905c-2972e714b953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "30845094-59a8-446f-bd10-fdcebb239366"
                    }
                  }
                ]
              },
              {
                "id": "afc000bb-70d0-45c1-9957-d00ccc0c0006",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ffca766-0751-4211-8a1f-da808468c736",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c08458e-d0e9-431d-94b7-72c7d2590501"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18ab3cf5-eafd-4e7d-82a8-982134465442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c1f41a63-77f5-4f03-a02a-11b3b94c3baa"
                    }
                  }
                ]
              },
              {
                "id": "87698041-f7ca-43cb-967c-ebf369366d70",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a7a0e09-ef77-4910-9f0b-d6a378e23554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1e88872-2fc6-49d6-87b7-57e11894a2dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "416e4e3d-4d46-44cd-bb97-4bc894ea2a2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8dd6b2d-e421-4604-a1cd-6137d6578441"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0929f5f0-3c0c-4384-af44-d7960ab8e8d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "328381b3-48c6-4e30-9f57-f96c209cccad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "670f87bf-7fa7-4617-b7bd-a2172bcde47e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ab69ed9-f605-4306-b70a-561b3aa7df9e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36c8ede9-8f9b-4897-86dc-ff114d0cff7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "12ab2d84-8413-45fa-8c15-69299a0f94b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e057bdcf-ba12-4013-b86a-6f567b264abb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efb5a2ba-becd-4df8-8821-67ce33529ff7"
            }
          }
        ]
      },
      {
        "id": "6ab93f27-33af-40fb-a0a6-2e82110e8f07",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "180f112a-3df2-4e8b-a665-f14cecc34e93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8616d64-1055-4e2d-93c6-0773da3ce8f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b12dff3e-89af-49d4-b9e7-b12140c658a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bd69ca-c830-4fd2-81f7-fe2eba36e1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af98c169-b4da-4220-9145-af4d6caf2b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667d99ed-22d5-4432-9356-88043db3ab15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "40b0a076-8af9-4d89-88eb-ee4fbf97e504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce98ba0-0ede-493c-b3fc-1fa8f4cc97e6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082a0bd0-cf59-43cf-8362-0bd67ecaa6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a07e7d-0971-472a-9589-035767940889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23799ab6-3f07-4116-9433-4ceb5029a040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad96c91-7106-4b42-81d5-9b04c2b80307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4173972c-81a1-4ea0-94ff-8d274c6e3fcf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bb8a40-10c1-4d44-9f00-b14cd434a273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61567a6e-8ad1-4ec2-bbae-3caa6a5fec98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de28de5-5add-4082-a93e-b49089718824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3847c21-e20c-427c-90a3-eab83bc0e952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe053e5-25b4-47cc-9068-90f859dfdd40",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed204cd8-563c-4073-a61c-ef7785da843b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c7c1d5-64ff-45ce-8aa4-7abaa4678799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f507c3a9-ddee-458a-a5fc-e79f35e9aca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15379c3a-689c-478b-a64b-d964fadfd796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8fd4c0-38d2-443b-a4d4-97385623b28f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2673c6f9-ca0e-4b01-9312-294569e09e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5f8f9b-7218-4603-8536-42f51cd4528d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64a821a-1d76-4de0-bac6-a3d50c5eeb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aba43e71-453c-4802-b5b2-86d7b96f3985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eca5ee0-0206-4871-bd14-239fc3d4175e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d51eaa-3f0f-44ac-b00c-7f6066f015b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6c5a7a-820e-47c5-b668-33408b192bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfc18af-90c1-4c20-89bd-0beb70c29c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc2d480-5394-448c-9837-0ac7f0ebd256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3d761f-2f56-4da3-b7e1-a4476d4dbd70",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e707435-4c09-4bc9-9fd6-4aa7ea72242f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba63590-826e-4828-80f7-9d7e3cf070fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc17a65-156e-46c3-a980-2a4139d03eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "be903a61-f0c8-48af-aa05-60cb9a621076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e428ede7-2e79-419c-873b-dc4d6c08ed54",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc9cc0f-a1ae-4159-94cd-d06218137527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa9f579-e6c7-4943-88d2-60f033f10d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dc846f-d16c-475a-9077-7ee69c0ba493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f60daee8-8e9e-4071-983e-d0dc2b56b3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f60ff7e-2d1b-4f54-a787-ba4994992e1d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5ca884-29f1-4d79-94d3-c105a33e7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2a46e9-a6e4-40be-8840-35924acfc052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672a4255-cebe-40eb-bbd0-fc7715e45746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3c0395-4951-4201-9845-c3cc6d45f8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4747aa-d992-4cb3-aba4-13e6a4e03b88",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f1ea63-d71d-4ca8-82a9-18eea42bdb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34beae2c-0566-4ce9-b4cc-8a4af81c00f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a90608-a95a-4ceb-b49e-c2b21e10a8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3dd080-042a-44a2-8a77-aa630fb8ff1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175fd260-6df2-4882-8204-750664e8f08c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a38543-9388-4119-b5ab-65ba3d13bfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426fdddd-1b5e-42e6-a95f-fe6a036c8bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a4d8b7-0016-4c47-af67-0eebb1c9dedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a250c193-7519-4bf3-bdb9-6729ec51fee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a73136-3405-415f-a11d-89b2637b4d67",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a564f8f-3ab5-46f9-acb2-34567c19d8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25547735-3093-438b-b251-f217af6454b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70160c29-14f0-41e0-9b97-941b66bf699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54a28dd4-2eb4-4626-805a-80bbbf195f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fd67eb-feba-44d8-ad4c-93b130b90bc6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3798bfc4-6114-4437-b69a-07b4494c2a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcb4384-e945-49c3-bfe7-dec3ed376d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85ad98d-387e-4963-b3b2-34c681fa99ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d4ce8d-e0ac-47a2-943c-b0107d6bd070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2392cd0-2290-4b9a-ae58-d38827382828",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360874d0-5f9e-49c2-b3c5-29fc68e2a814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cee12cd-9f11-48d6-8a42-8a3b16b190eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c648b644-08d5-40e0-88d3-cde87ff47ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2e6a39-f670-44f3-9cd0-3d2b02466907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa821a0-6fc1-40c1-a651-b3f1a89f2a0f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce2a82c-0014-47ce-ba62-fc6dce0864cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb19e63-f3e6-421d-9b4d-06375860bb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f583213d-217b-4c98-a710-1761688e1e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "541ddda0-7b6d-440e-9b8d-25da8d626cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3568c6-34a7-44aa-98db-8af1a20954ca",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86fcc8a-cf96-41fd-930d-ec700886685e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683464c9-5461-4270-9ae3-b08895625e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea098f2-e4a6-45fa-9d9b-d44bd01b0612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa0c420-66e1-4cd9-bba8-1e5bd30846cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8b4441-01fd-4fdd-9274-5e3bdc429728",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faec5b2-b234-4023-9171-92dae620d7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf3457b-35e7-443d-84b5-0fd33325df43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62af0939-3c76-4500-9e91-2a332b5734d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "53493208-88d0-4a1f-abe8-8c5889919084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64a5657-85c9-4744-9ddf-79247cb9b22f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb971d48-bb22-4ab0-88e0-9f4ccedfb774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4377bcb-12eb-4a14-9c15-6bf98f62bd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc536bd-d261-4cee-881d-39ca7a473966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b150ddd-1fb5-4038-8b9b-234ff9c48432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46692a30-42ac-4f4a-8d82-c3efe632bc81",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2b293f-fe28-428d-a44b-f6a055ff069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05090ad1-ea81-4d77-b738-339871facb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edee4e0d-cf01-4df3-9747-6730910b9fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e614804a-640b-4613-9a4f-1f613b0227cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc77a9a-9409-4402-8ae0-e4731b31729a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39c3a62-5a34-49bb-80b4-ae19b7e482db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b4204f-f045-469a-8804-d31c65979192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069dcf34-226a-4428-bf4c-481e21a4b9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58901777-9f9d-418d-af1f-a6f375f17432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ab833c-5198-49e9-95b1-dcbcc38c8963",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7379fd2c-ed79-49f4-8c05-dfb11fddd8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280ad26e-c523-4ee3-8d9b-976ee00b0dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5719dfa4-66c4-4d08-b1c2-d3c1c081dd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ff03ca-f4f0-405c-8185-75c0233d5001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df70b61-7204-48a0-87ab-49d93d0a7cb4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3576a093-210c-4dee-b160-aab8cdd1e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b3c241-bf8e-4525-adb7-30c1db6deccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1301b35e-f98f-46fc-b144-5f166fe48f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2b8ef8-a515-453a-ba42-8a337617129c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b84d09-b9b1-44c1-a1a7-39542003c56f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183ae4e7-52a6-4775-9848-146370871113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966b32be-c60b-4545-9f1b-176f18c4fc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365bbe54-d3ce-4463-9fce-a80dbf6ebd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6feaf7f-7cd7-4253-9015-b210bdca3d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90985666-3a93-4eef-8009-df8ef7f80f59",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b085f986-a2d8-46bc-b08b-395cbc209e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2507425-8382-4bb2-abfc-b97bf67e6c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e314836-ffd2-41ce-a9bf-7f0f154112e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b33b518-81ae-4665-8b21-3a29010b1361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578681f8-6e84-4eea-b9c5-f52af72ff18b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2e0c3d-be08-4c4d-a2aa-36d673895537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c5f5d2-ec13-44fa-be70-40d6a8353c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ee4a51-4fb8-4811-9682-6de60a40fc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f117701-c954-4aae-8317-9b6d963eef07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746651c2-9d05-4bb6-ad19-14fcf0231622",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e97114-fd06-4a93-9fa9-22223f234d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d096afa4-a68a-4942-a929-f06b2e39cb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0addc64-d5bf-4e37-856e-11d3e71fa0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7066d08d-6221-40ef-8526-606582223ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3279893-c329-4ad1-af39-1060371d730e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360518a2-a65d-4755-86cf-4ad553290d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a0de0c-4157-4377-97b0-f4dd05d175df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46573e1-80c2-40a0-b953-60db8d270d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2474d4c-bc3f-46cf-9a0b-7ff1718a7f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ecd40d-4bc0-4f1b-b3a3-ed28ae507071",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e828a3a7-b8d8-4c29-a384-e74376cb2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4be3389-18de-423c-a3fd-3c5fbd1d142b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34aec1f7-7058-4b18-ba90-d5b4811a156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f5767a-3c1d-4c90-90c3-06065b33f662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751a5bad-e830-464a-8287-49a67cea3738",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83beb34-8e3b-43b1-97a8-200b24d0dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dc479a-3b80-4581-af82-8e8f14b8d807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9510825-80c0-415d-80ee-eb9f88879352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cacad0a2-9ae4-4d15-8d00-e81da572f35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f1270-4230-4002-8669-a3b87dc8b2ff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefb1c64-e488-418d-9e6b-d5ac80af0461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab52f39-9be9-4c15-bd79-38c5917f3051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87a4ed4-2c49-4545-b070-7f75ebec9ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e5e861-1e64-40cd-ae68-82df0f75dd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a699de-2143-45f6-aae7-b5e64f75e2bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d5d80b-38d8-4aae-9334-12fa638f4969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12ccb18-ee68-43f7-a10e-6a0734530104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6880b93-3b87-4693-869b-40cdcfb56001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64bd96a1-1330-446e-b709-68d9d28953ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b5b4a2-5210-4216-9853-8048a15cdbc3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e309febe-8a06-49cc-ac99-48839d633de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749a91a8-d338-4beb-9d3b-f29e99f5a75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e87d8c-8fb7-4ebb-9f10-e2d11af5f077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd378c6b-b33a-4ae3-948a-97ba832a7d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f940f9a-dcf1-40d0-b59f-13b1f1a4c28d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17b6b59-1f40-4a99-8cf8-206d697b4b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4077aeba-043d-4e24-954a-fa532894e4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c39cdf-42ae-4efd-9bf6-b99287408ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e582e49-a62b-48e2-a24d-bb313c240417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f260f251-6ae2-45d1-bcbc-7f9a1fee42b4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4317c08e-24a8-4faf-b1bb-96eb85a996d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fe3ad2-6424-407e-8433-4b187ea85250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eea51f6-316b-43aa-a445-85c70ec18934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb76a261-d381-437c-a72d-2de6e5cad510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81d346f-7617-44e5-9b10-e58a61a6eb19",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7af237-44b7-4dd9-a053-6d63d675c8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af84b1a3-81c4-4c34-b939-e4b7c06c5f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb30e5a-80c2-4774-b58b-2911073a365e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf39666-bb94-4ff5-9dd5-abb0231b2fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf844bd-fdfa-4dfe-867e-dac419ab85bd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5e19b7-6017-43a5-a8e2-043ecab73b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d231bb79-4fe9-4b9f-8fcc-cc901341884b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6372c0d6-de97-4e0b-8ade-99231addaf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67a4789-e1e4-4649-8702-5bacb12fc090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f37c908-3789-4556-af08-969f2ddb9e41",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62261e6-02b0-4529-9735-df8fe9a73b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b59b08e-eb19-4f6b-a0ac-a8514eaa4256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8db196d-7cc6-44ed-8b8f-84d439fc49c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f32f46dd-9644-4cf6-bca8-0511dc648661"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99553f41-49c6-4542-967a-5d6a54e34412",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfbbf9e2-7120-47a4-8165-81958172b742",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b4465c-8976-44b1-8111-200ea69f7027",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "696b73a8-25c3-4259-9261-9ad986a1ea20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe91e1da-3cba-4249-aea0-4aaae7283406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7257e5e7-3494-44ae-a1ad-b65e5962bc33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8868bc2b-e4d5-48d5-ad73-65caf539c061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87112ddc-c936-46a4-bb50-d4f3216078d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a16af8-3be2-408a-87c1-677cf8b65789",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3383b6bc-f945-4a9c-a723-695c275219ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3076c3cc-da9d-4840-a4dd-9e0d2db73425",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6d2b6cd6-7488-41f6-9e52-45bd4aa02af2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "860033f4-3f35-44e3-9743-5a3f2e1e7135",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f297a853-15b1-43bf-9185-29d6524b9bbd"
            }
          }
        ]
      },
      {
        "id": "3eb70df4-88de-443c-9be0-1ed5ec3f55d2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1572c83e-42ad-437d-b41b-5f614ed7662a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e18172c6-a001-4286-a703-92cc99044e17",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a471e064-1b7d-41e9-ba7d-2755bdb489a2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da46b540-7bb9-4a1e-97f0-d7ced8db779a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6196a078-8257-40d4-a0de-bb368e358e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f60a02-9421-4119-8194-e00e52024b4d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f462659-e945-4f7e-b25e-638b614a5afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b37607-2ec8-41bd-acfc-69be6d9f38a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24502ee-85f0-4a73-aa72-b88b015df08d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6c9812-2934-4398-bb6a-51ae90600b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6088c7-86a5-4fd6-aaf8-a8a1162fc1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bc6742-68c2-4dca-810d-c951cd1d660b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a307a83-ff21-40eb-a939-c0e856b5b773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e02d41-b79d-4d36-bb72-2d48730361bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbd617d-e49b-4c2b-8f57-4bafe8e92bdf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4288bf68-5eec-4d1a-bca0-fb33a09b903c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac7693d-8a28-4cab-ab67-64ad8afd686d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8956f48-4434-4b8d-860b-55d9adb1dab2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63afc378-2172-48c8-86ea-845404f21982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2641c0a-dfbc-4734-9622-990c25391ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d440bf1-8ac9-4aac-8972-df07c1fc159d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1bb752-9cb4-4152-94fb-4e42de438e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c7a29b-ab34-4e97-b855-fd1e12925707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9553a317-174f-4d37-afd8-d4560a2cd1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea431a3d-f992-4085-b11b-856b2cf18047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af9e703-89a7-4036-9368-0d170aab1cde",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b760ab-d3e0-4dd2-a50d-08e30e657cfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607a026f-2b12-4741-8b1c-3c1303d6dd24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25645a-574f-4f95-bd8e-0a76bf5343c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2496e431-c260-4532-8aa2-8c6c8f9d76fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c37f8f-28dc-4a51-abfc-1b00b941e8d8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e689e1-8a76-4b67-a5d3-82642e0c856f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf93a44e-b4af-4a7c-8969-95f0bf6a1a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab7a511-330d-4074-8150-2563e563b06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41f1d1f-eee1-4b8f-86e8-17cafa039a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d16938f-985c-41bd-bc89-5074128022b7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf221f-0dff-4b63-bd06-851d8ab3fbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0601be81-e568-4319-b39b-b29b3f60331f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ea21d5-3a93-4725-8f69-f8f1df11c756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0857b6-9cf3-45f1-990e-8172d3e9803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a6c99f-e6e1-46af-9fd8-d2e4968929e4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf4c28a-22da-4510-90c6-7f7867716860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768a83c1-ce33-4de8-9a3c-f32e33fb972e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b948c56-0e7f-4928-b480-de2d0af1bdea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a55bf5-57d9-4d3e-a4f2-1bd46d7c5b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2649c636-ef53-4db2-b56d-6e82a5003b16",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b78b53-2ff8-48e1-a5d5-3b3ed6924111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7ab6ee-f05c-4ddb-b85e-80d51eba2450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e939579-8297-4516-93d6-dbf15da6f2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da71aa7-b7c8-4813-9c06-fbf6c84c31f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8569e3-0c30-4850-8ce4-6a265687d0a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877a29cc-a97c-4abd-800e-5e103123ada6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb82f62d-064e-4444-b945-d9468842c5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d519f07d-6821-4ec3-a8f7-8fde3a05cb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0901ead4-3572-41fe-b2c3-4db45d46e34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89641963-508b-42d0-9adf-975aba7b94e8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186c5997-e7c9-4194-ab85-36c737f97d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17845a2f-a856-4a18-9bd3-a0238f7ff8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c20c9d-b2f6-466f-a3dd-012476ddc0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfbf0bb-dddb-497c-8ca9-bf9d70271d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eadb90-67b4-471f-88ab-dccf856f4afc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0e214c-b996-4119-b3d4-8149545a338c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2348b650-0804-451b-b7cb-148335177e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9b584f-f164-445d-8e16-6fb44162bdc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c65335-c883-438c-891f-4006e243b477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52749b76-d9a6-4198-9e75-2c902232322a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9d2093-bae8-4c26-95d2-86f0ce9b7899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0c9cca-0cb4-4979-b217-446aea75be18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de0c377-87c0-4965-8671-94c7e6113417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c03091-709c-4fdc-83f4-c8b5110599c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aea2c2-d3e1-450a-9ca2-8dfa2f3798e6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af3ebd8-07e9-47e4-8c96-f787b15e9130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a438b98c-6078-4e46-a3d5-9c45352643be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64860cdb-91d8-4938-9e02-03177f3df681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f02d7a3-a3ad-4a4a-bd7c-bac216c21843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d5a23f-6e61-41ae-b9f2-6dec23730568",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac446bf-3f96-4478-9318-03be85616528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5864436a-d2a0-4058-9a7b-0a70cedce6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b9ecb7-487c-4b3b-b246-ad7ef827fce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22517f48-5989-48a2-9ff9-e7016364c56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5e77ff-5695-44c2-9589-e9171d69c18c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcf0049-86cd-4527-97c1-25b8e49e11c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5836a1-ca6b-42b6-8f48-12535f0de6e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def570c6-6f5a-41ff-a2e7-7319bb2c7124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07a9400-269b-4832-82be-1f8e71f56032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eb10e2-afd1-40ff-9b06-93601c108758",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90dc33b-1f3f-42c3-84a3-bf724dc1c240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3793df8-7d2a-4f4e-8a02-6a25f629a808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22674dc3-a0b3-4026-beab-599632e68db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d047bacc-da0b-4c10-bc5a-3692c9b23e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ef9626-b889-4acb-a8a7-527d6f03a90a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccd777b-2f22-4f6d-be77-416b608c6237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fd3659-61a3-42a3-a7cb-58d484327df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b590abe-ccee-40a8-b5ea-f0c674e12600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f528906-a55e-4939-915f-141da3b70786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128f5c67-635a-4ba1-bdcc-975455213d5e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f1297e-844f-48ca-ac67-db787b44a825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae7272c-f94e-47fc-bc9d-1885d75d3f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cba9ff-3b67-46e9-8137-fe33f9726e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4131c09a-6f4e-4ef4-820c-8783fa1a25c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b2b554-9631-4886-97f1-5101c2db57cf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b116b25b-52f1-48b4-b4d7-dee6d932f264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f9aead-3007-4be2-a14c-e90115a9b28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba291d9-85fb-4b94-8070-b534c7e5f178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022cbfd8-e1a3-4481-8b6b-c1439a5b6001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc36daa9-72d5-42ba-be86-66ed1f88e54b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f208fb2-30ed-422c-999f-2d771d716256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad7b08c-f79e-4a80-8f52-39d324af65e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6ba54d-600f-428e-bb21-3df07497a15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554e2716-158c-4f33-81ae-71e8cc02c6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e9f373-b215-45c2-8041-fcaf701d8373",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c41749-0dc1-40e6-a100-fd3b426673ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54afb11f-b259-4c67-8d12-db81c55e2854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b71205-7274-4473-b439-e96acd9a8fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fabbbbf-ccee-4f40-b468-bdceed9b9526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a815711-d323-4957-9502-a9c5d5e1a838",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5eff8ab-8e24-4040-b591-ce54283423ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333cf9a4-4760-4e52-b580-3384bb0c4b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0bc55c-8eaa-4293-9852-be8deb8d79f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36719f4-7ead-4b9c-9302-4fbe8a0cd9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa15338-8638-464a-9fb9-7a1b0c241f36",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62997934-baf5-46ed-9275-2bc737acd25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150beead-8e78-47ba-8f79-1d90bf00cef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff08303-5214-4c5d-9e64-5f8b8ef053fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b32fb9d-e642-4468-916f-903a9b6fb616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150603f4-0972-4766-9f22-1faea6013219",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90415792-b65f-430d-9412-ace53e5e0c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775edfc9-8c1d-4aa1-a47a-4bb18358668e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53798670-f9dd-4313-af10-64e43738a205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5825c2a0-a94c-499b-bae9-d0c1eb44de37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8ef8b2-c565-498b-8a80-ed545f2a1e3a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eae8e70-9723-42b6-aa7e-5e1327ef1968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad9c0b1-3c54-4caf-a935-a2cabd497b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d705772-50d7-4529-ae00-4c31efdb19b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e063481-cc01-4cd8-8ac3-a5231841d059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2338b2ba-7a90-417e-8f7d-6aa2231497f3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b08aa89-588d-4c2d-8b8e-2c8af89eb248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1f9d9f-a0eb-452f-a8db-0c02c3660b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ed0340-5014-49fa-9c58-8b8712b0e2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c67ad8-8c89-4369-8a9d-f2a62dbbda3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6935a7-b097-4d24-8a11-1253e19281ed",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66c1afd-46e1-4e7f-bc1e-b756b7549420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb291489-c8f9-4ac1-b0f0-8d580cf2c671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9448ff67-668d-4727-b951-35fe1a262e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553b88ee-c892-44ec-b3bd-0f89671e7190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3aea6f-840b-4faa-b0e1-1355a9ea5321",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b523561-d40b-4648-9c3d-26bb6421ea4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f9d6cea-5664-4df5-b96a-76285d12dbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9981a0fc-9731-4a6b-b635-91621058fdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612fbac8-aabc-4f41-945b-b5624131b1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becd96bc-d657-4d82-81fa-07e5ff3583f4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce6d057-d56e-4c3a-a4b6-e2d882bf500e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c675cf77-2ab0-447e-9713-52e7a23b591e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13775b5e-18e0-4b14-a3dc-ac12584106f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cd6881-9a87-4ead-931c-fa21d1714a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a967221-c0ba-4d0d-bc33-0ec07f79dc08",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cef3797-de05-4f19-bb61-81cd040843db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983fa7e4-35d7-41a0-a02c-1f4596a3d345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de24fa10-3d58-4622-891a-9d4e2be1f3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8bdfa6-deef-4e56-8cc7-914512da9615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5456a2c-c09e-4fd0-a50c-709dc83997f4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f3f402-e43e-4caf-ae51-f4ba84d648a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5994f9-7a74-451f-bf8d-840366bfa268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676ade80-9adc-40f2-8448-f83bedc6f0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc60e38-9df9-458e-8d97-462df26cc59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59656a10-f0a1-41b5-b3f0-42c89afd5f87",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bdab30-12dd-4dd7-a5ee-168371fa58da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9554c104-f483-417c-a98c-8005091538a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3063b4df-9462-451c-9def-3ec402be6d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3e679d-732e-4ff4-9969-600b792f5404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe040a08-d767-404b-81c1-a8ab7813e74b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336a73c8-f1b8-461b-b7e1-a4f9dc60f6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6abcec5-48e9-4853-9071-60259ec5c431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2e1a75-089e-4c3d-b4eb-d0ba939d729b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed2ecb2-1802-4b7d-9e29-21c596d42b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf746529-3047-459d-9171-899b7c5d576b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd15c5fb-8ce8-47a4-aee3-d68348924da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fc6c91-1383-4a63-95b2-95b002cb513c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e765c6-eee2-453b-b345-a99b80d183e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7c863e-8950-4fe2-92f8-ce7dc6134d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3559e8-5542-4950-8f57-f4025e0ad5f6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f47916-9993-46e9-8652-53e1d0b93794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249d449f-5b32-49b4-a328-257c8dbb8948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aca534-4bd1-475f-9b2d-9c0212aaaebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c723fc3-4517-4e91-a07a-7cee3e776d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d26859-847e-4df5-8c42-efa3dc680f79",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c173dbf-283b-42d1-9d50-412013905394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47875c2-68cd-43fc-ae91-818a57d19e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a438d5f-f8e7-491a-bd23-86307fcd95d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9f66ae-9baa-4a2e-94f9-a1b9b22bfe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eec4b5-0a33-47d2-a6d5-7490230ac0ce",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b443e140-0c96-4d46-bdd0-18b21d90cd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103d4da8-69b1-4f25-bfc1-70717b4838e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1054db37-6b7a-400d-a4bb-76b48d0da6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ccc83b-6f13-4dbc-9d04-c36ad2119861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cf1458-d789-4eaa-b996-a3f40b8ffc3b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d36024-9e2c-4cf8-8f79-0d2defdacc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda79b96-c796-4ceb-b416-9a220ac2aa48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000da7ae-17c6-424a-baf0-fa88fb834b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359caf18-f0a1-496c-bb79-b1de624761bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df442e1-1ed5-420f-8679-72994c48eb09",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caae517-c278-4b07-8285-d79076d718c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44e3814-5914-4401-b55f-f1b89a7c927c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42694ffc-59c9-4923-a59d-463f514c0d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2040e282-74d7-40ee-b6f5-936496199bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22d4127-e259-4f4f-8e13-2a35723ea00d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffda349-80b9-489a-b3ef-30bd22aa3b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa79ddbf-6b83-44f4-b529-9b5338494606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e94a02-7b9d-4973-9d44-ec8e099bfaaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8ce172-38c9-4637-aa44-17670f402721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea89111b-3a70-43a5-97a7-8c7a993834b2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956a75d2-145e-45c0-bf32-93de42c7ad62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f84ccc-ccf4-44fd-8a7e-b58eba0c5553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119ef87c-73cd-4847-8be7-88c1149e66f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5c8c8b-50d4-4336-8059-b12cbbfc9124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2eb8f0-2693-48a5-b54c-bb38b7818d31",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29196aee-3c23-4cfa-bc26-72835eb5a772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d279052-0f98-4fea-b11c-f73cb19cf967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5292f830-8e90-4b6d-9b39-a2cfdf7bc7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb25a688-f287-4500-aeaf-6b7b19aef6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bcd27c-fd94-4dbe-8560-197e6cf60983",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebacb42f-4349-4bc8-abd6-7924e07035ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5f5dfe-f4de-48a8-88e9-30c2eda2ddea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5830ae8d-2875-44fd-9ca0-dd0d272fc9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a79938-4dbc-41e6-bf23-0d2567b1f865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36871dc3-df1f-4a2d-ae70-5867013f5136",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8de95ae-9e70-4b5e-ad77-939ce287e6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d043965f-fa34-4e82-9a7f-70dae5234997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eb7e01-d777-4b87-ac72-5e0b26777802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94134e24-ef66-428e-9318-e51d91b06851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa00d25-6a68-4592-bb31-86ae61a0a6de",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fc0eaf-aca8-4ed8-9c11-70c7c0bf295f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6663057e-c437-4a66-abd3-ed12d1d2600e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676b7925-b19d-4c2c-8536-c0f418b5c674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca6bd11-ab00-48a5-8b67-95a6512ee507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c180a07f-a271-476f-8d0f-f0889045dd28",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f57501-bb1f-4359-9250-9a66640512be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7307bf81-557b-46ca-a640-fe13a139d52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b5c6d3-7c33-474d-9b50-793341caf906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57956d5d-847c-47d8-9dbf-a646e716625a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a363b44-af26-4eb2-be8a-8927b6e41290",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133367f9-a87a-40ec-a1a2-8c1733076ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded5e492-5eb2-418e-b824-4d663373a8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c565bf4e-aba8-49f3-8c69-5c6810703002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bb7f8f-bed5-4b34-b4f1-b1de975d6925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708f3c54-8e27-4e76-a5fe-fc309b929260",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9689edbb-f527-4641-9ffc-b5cb3be443f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9396c6-f327-4114-9ee7-44c691d0480b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde61f8c-2166-4aed-8b49-dd18d34a6f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c255f6df-62aa-4360-826e-eefc3287470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b22fd7-1f57-422a-aa94-f7cc733f7c88",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef85df6-2062-4fdc-8e2c-d6bba3965e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe44124-9c71-4c7e-af7a-b4dc55993c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6daf948-82da-403c-b24a-44f3fb0b7504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba575f99-9ed2-4fb3-aafc-46f26aca6951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac35ec9b-d2e0-4029-8ae0-4b68ef9c06ae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3c51ee-d504-43e4-832c-8202476af36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd8b682-3d7b-4c83-bb1d-07a66f7e8a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd5cbb4-da30-4d7d-b28d-46a42f622a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9e5783-c13a-489f-8bfd-ee448287dc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0b640e-a281-43b2-b507-8c4345278d89",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e544cb1-25a0-42a2-af56-4063ec97761c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3826dd8c-92bd-4583-9ee1-428bc63f242a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fe87ac-169d-4ffb-b929-fcd19712c862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1cc958-a99a-489b-bdc0-98d0aaa3d2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a17aa17-af49-464b-b988-dc08bd0eab7f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb0654a-5e62-4801-88e8-1ecf8624bc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b57049e-5d44-4d69-ad7c-5311c4c55eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd816e24-4d61-4fff-8c63-f3483f7a17c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51885540-a8ce-4a54-8556-568e1999ca18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb062a88-8b2f-4d86-95c9-e2a7625b7396",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99551f6-ffea-42d5-9309-90a2a94aeb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1726bf5e-6fa5-4f3b-9d2d-8f6be460d822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc4aa7c-9857-4958-b500-f17f95defccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6199948b-db2f-479f-8d3b-f48d970790a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53628d0e-41b2-4aad-be5f-bbfe4c38d8ce",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaed0fa4-f53c-42ad-aef3-2e64ba324f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997a71fd-a76a-4163-b90f-9e76f6e664ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2d1142-b106-4a4a-bd95-d483bca036fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97a2e8e-5495-4d13-8493-b416c7c7c4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac839d52-80b8-4108-a3e7-a8995523933b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d53a558-96e8-434d-b4ab-a37c2d1fe70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8003abb-e11c-4d24-a68b-dd62ab61f26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc22c7e-7cdd-4de4-9b81-2b55059aaa14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5639b0ef-bac0-4c07-a741-2c39787337a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa61c86-da14-41de-b281-10ec214e7109",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ddd0e3-ba00-40bf-bcc3-ab71747f4dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29886ac2-d3c8-44f1-8df8-b6fd9adf058b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad962b6c-0333-48fe-8237-04a5ba0a59f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee10588-3d91-47de-a980-6e40f6a717ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738c09f8-c402-4a7b-81ac-6ffbc87d2e61",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6076f6a7-cef7-4e13-aed3-82073a7a579e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef349c8b-5c16-426c-b669-c98f9e03ee99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f37cc3d-0655-481c-9f0b-0ff3a00bccbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d24a2d3-9e12-46ee-8c93-5cabe4586d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80e1b96-046e-481c-b5a7-922ce34e918a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8d56c3-4a78-4b7b-9bc3-8e4bff3767f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe5d0fd-f5a9-48d6-be59-33910a4b4327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b300d548-aca0-4961-a359-36c6d7aed838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b58f8e-c83c-44cd-85a5-74f473f4a77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681af3ab-96cb-4ff6-b5aa-003da5668872",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3868a45-ab36-48bc-b42c-892359e22693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9ee57f-f55c-46be-a75e-f86d1feb961f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afd78f6-1269-4307-936e-b7aadcd1a876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31c4732-6737-4b08-abf4-02ca56e5a978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0205e7df-5f19-472f-b33e-e0803002fa33",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd0ee1b-2d6e-4548-9714-0ddf4274e509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22abf9cb-eebf-47e4-851f-0e9f95238bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3150e7e-71dd-45e1-b1f4-02f6342c337e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d359f63a-5e60-48d8-9b9e-15f7d5b9af4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e55ad23-0211-4f6f-b9d1-a252fa42ff7b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b241f1-6991-4423-95cd-58daa7301f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb040247-32b7-4ae1-b254-39587a95e6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223bca9c-e8b1-4cb4-99ea-3fa95b72e450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40c6e51-5c4b-4627-8e7b-a2c8333fad79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a3e7d2-bf21-4589-a528-1743dd5c288b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be5bd67-abef-4778-9eda-5972f88854d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17ae373d-8a8d-495c-ab78-9450b2049b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65506861-0aef-4b26-84c3-7c406206b10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c55235-11a2-4821-a31f-feba9ff39256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45a5f1c-8762-46b7-922f-31fc686a380b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa462bf-2e75-4daa-8dfa-62d04d1ba96c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5dabcbd-18ac-4ec1-8fd0-24b4de78b5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef0fea1-4cc8-4818-b8b7-d55a78f0691e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eced8d81-a67a-4add-9eef-ad7cacb39c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03d0e34-20c1-4b4a-bc17-c2075afae868",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdf2ccc-6adf-4963-92f0-91861d20be84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a3af9a-3566-4d3c-81ee-539cf7c75173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a48d7-7191-4037-8383-b0ea9e9e5516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119b29c9-82a4-4b15-bedc-75702a578203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abec1ba9-8540-4d00-98b5-a41e00a15c1f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddef40ac-428f-477a-be71-4a29a9951d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f6b7b6-e086-4b23-83e8-1500e5c90a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9268d6e8-bf26-4917-85f6-ff4c479e02ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ade1cd4-30a9-4f7d-a5e8-91c65cf11766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb4e901-6930-423b-9986-2150dbf660fc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8908aa-b367-4348-828f-a32fd40bb17b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da4bc05e-22e4-4f65-bf8a-af227927222a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98723333-e68e-4a5e-81d2-69365c0b950a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b9e39c-9f6c-4a74-978b-1fc155b7b8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b1fdf8-db6d-4cc7-8ca3-2061cdef8623",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6954003-9fa2-44cf-bbb2-afd150410e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "632fec18-0101-48bc-9094-2db9c2dc9ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f899cd28-2d15-40ce-80c5-e93adb05f680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defe5146-61aa-44e4-954e-ace7c45df68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8337be-867e-4217-95d3-43cb4713e6a1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9865f74-5c40-45ce-a609-0878f714dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2cf5bd7-9e23-4435-adf7-16d1631f41aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eee2c2d-dd58-4922-afa8-023d6148e50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b678e5-e84f-4ae6-aa99-c2a1fc95657c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07501e52-5cd0-4998-8532-23e67a20b8ac",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1da280-bed3-49aa-ac38-9e185c2817ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232f9478-ec8c-48b4-974c-3c4b945c0277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63aa97e5-93a4-4aac-9ab2-29669a837046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b83e27-6398-47c8-aa64-6514e0217113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73728a9c-47d8-412d-a8d6-f3b44fab9c0e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0775728f-4827-4452-95db-a59b31de5c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e304ba-17bb-4e59-aac9-b65ee9e53e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2670ca93-58e1-47f1-80b6-97b7448d9371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cbf374-b223-4c30-a1d6-d6f107903412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eff7391-2430-4cad-adff-bd26ae198890",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52b4441-9815-4f1c-9ba4-d5721674f86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34561f15-34fc-4d56-ad7a-bb7e21a3ce6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0162dd39-41f6-462a-b6a1-dd70298b3ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e1f36d-7df0-4ef7-aea2-46e679ef9e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980bc455-977e-4624-9f99-074a8ac6e37b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5826c8-d617-4854-89f9-8833577db817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c708781a-a8e5-44be-aa78-36ea644fe114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7920ace-1b79-4f32-b006-25303ed30592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4922cc8-f95c-4089-b186-c2f382e61819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca6ec04-d3b9-4c02-84bd-088395d2b574",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8533407e-8a65-49de-aaee-0a40fe6c7db1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fcfffbd-7549-4091-b33d-2e69c622a4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dd7ac9-ba5f-4298-97f9-6137793e4e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786f6caa-765e-45ed-89cc-e82b3f8cc34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99802ab-2a1b-42df-8fe7-5a6f348189bb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7660e683-e4fd-4ef0-80ee-c5bf1f7145ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc3d3d25-29aa-4c2b-be7d-04903015e5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de46bc2-5ea7-45c3-8371-299521ccb4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ebf2d7f-f107-4cf3-ae0e-fc70ec8954b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd02bd4-aaa3-47a6-b415-b3543b83bea5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151c0797-cb1c-44fe-948a-27cf4da4f8b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7856fa67-9ae0-4027-8d6e-53803250f201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2fb730-c466-4929-8b73-77d82ed2ee74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9fddc6-3a9f-446d-8383-5127b32e4adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb50d92-7068-4903-b39e-6d327922e4e1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec7b260-b4b1-40d9-b741-bf6cbf497b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cfbda35-769d-45e7-8467-ee16ddf9a6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bc3de1-1d4f-40ce-ab1e-d7f67f6f2e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01104b09-1da4-4126-818c-eaf50c33e98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dbcc18-6bfb-44a5-93f8-f9864cd6e2dd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce3f0be-4778-4700-8605-932f3eb94ed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aee247a-85ea-46f3-8353-d47ffc5cf027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f0fa07-27fb-4df2-a1fe-5a0767e310c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f22fc2c-fdad-44c5-b3a6-cf1224e58f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f85de58-632c-4d45-a7c0-eb50195fea0d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae44f0e-81ed-47b8-93bf-0a700b4303cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38546af6-8de1-42a2-a2e5-01f67e3779d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e86a2f0-b94a-4163-82de-6a0048a90ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e50c94-517d-43b4-a17c-891f94f400dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c3c7ea-bab5-4ef6-80b9-1e93409e5747",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a234752-4788-4ea6-9fe2-7e08805c65bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989f38cb-6389-4f4d-8d8a-416b0525cec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aea7045-940c-475a-a392-e41526eaa8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6802fe0b-68c8-43d6-b864-bae3b61bb87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7adf17-608b-44af-9093-2f16e4d24413",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26376ae4-34ff-405d-8be5-105d05344a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efcbba47-2aaa-471b-b2c8-e228b478fad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d772b6cd-a614-4c91-a874-01a55d753dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f44294a-3ac2-47ce-a710-7d593ac25a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126bcf39-a8f0-41d2-a9d4-27419a62e600",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c74d2fa-d91f-4b4b-a800-4832c9764056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca0d3e4-c49c-4f0f-9fde-dae56b80dc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4f6749-7ec7-48ca-bfa3-ee1bd4b18c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716d9e45-7edc-4448-a7b0-fe17bd597add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d54449-fc2d-477f-a33d-884dbcc50d75",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a6e6b0-31a2-419a-96b1-4cd40e91c3e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0977a4-54c8-45eb-a75f-6dc0d12e3997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abec006-cea5-48a3-a75b-f7dda9af46a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef1ff0e-59d0-4d02-ad64-3ff91510b0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47838b66-bf88-44bc-b72c-99b4502f3da2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ed7f33-ff00-46c7-bb86-85def794be5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef5907b-f5db-4433-8349-baa59611ee8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03263353-8659-4b05-9310-f48c2d51dfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34865a4-84b1-4c68-ac13-05c5f3478b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a981af-aee3-44ea-bc76-fc13fd326d89",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b51041-5b0d-4eb0-a8dd-60ba1d02c0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8faebe61-5001-4298-b8c7-6280366b6cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8be43b0-461e-4e96-a646-cb37932d2c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad4a149-dcaf-4353-9bef-fd706296441c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1867bbdc-2f8c-42dc-8990-88fd1219976b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98798d9-c5f6-4a9c-bf94-0a1bc8398c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb0cfe23-1781-413e-bedd-f7248e5c4fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f277e9be-2cf4-4387-a50c-adef60542c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1269f5d-627d-4e5b-b3dc-8181b9e7cb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18133cb4-bcc8-49cf-84ad-957466b14c2c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f66af4-cad6-4533-9736-917a0df2c51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0dec7f-f024-413b-9232-8da33afa4db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285906e1-7d44-446b-afd5-b7f2ad47b888",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3474646f-5c27-4a4b-bf88-812de65670c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d284705d-3445-4404-9c61-ab12ceedc19b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2140fba7-d4fc-4897-bb37-7fca72e4ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d3864c7-f593-444c-a8a5-6df37522d7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51aa282-6c21-4a2e-a197-db0ce7b955f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c865d3b-2f09-4f34-8ef3-3882fe80c36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec40d85-738f-4f55-983a-707a0587d1b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9ba9fa-cb41-46d9-91d6-116781acd605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b370e80a-186a-4d75-9ff1-22694e7c19f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e08384-99bd-4c0f-b054-ebd10bd453ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fdebd4-938a-4d69-a3d9-65dc3e2e0fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b8ab1e-7dcb-4a7d-aa47-9138e780f21b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea5ffb6-1b0d-4120-9369-9be6c9f290eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c259eb3b-0f62-4a20-8b3e-c941b7288251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293bf0cc-8a93-4986-baf3-55d97b1edd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38889b49-1d7e-4a67-82da-28ea13d5c980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2670fc01-d6f9-46aa-bc2c-1f812206ec6c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc67f7c-0caa-48d3-ad4e-c5d813e7c9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d72a768-0011-4543-9d1b-63ad5ad95cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877770a5-dcd8-45d8-a37b-139f04cb3d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12f0351-9a9a-4b58-8bc2-ec45fc03bdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319bb159-f822-49f1-95a6-8b097c4afa1c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf624b5-def3-498e-a0d8-f4756a783baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868f2958-e132-474f-bc1b-b196b3653747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e681dc6-d001-4ac3-83e2-7554325d64d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c819f796-9584-4cb4-8742-2fbf01444a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd37b4f-b046-44e9-b17a-53ebbd2e142c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd311f35-4cc0-4d61-a9de-d77b80db8bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87c2e0b-f479-4123-9a42-e3b707a7a084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4399ac-6d8e-4e32-add9-e1a0dc9ea267",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3617278-3a64-428d-9006-ba1efc4554d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0687e85f-76e7-4e12-b442-78a4934d9ef6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea89b756-0a40-46c7-832e-4ff6f895efee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a651a58a-f38f-4117-8b7c-51c270a98741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98148d5d-cbd5-4045-8303-e56d44424801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f67f149-79d9-4157-b14a-d2443e616d9a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78ba3214-670c-44ea-886c-1d437043e7e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dddaf34-9ab3-4a8e-886a-6ca5428f88b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7398d219-953b-460a-af68-618389e65de7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afb4eb11-bbe7-4a8f-88be-df3947b4c7de"
                    }
                  }
                ]
              },
              {
                "id": "6034a996-321d-43e8-bb5e-87f908c0b82f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7175f78-240e-4f13-b479-4f5c09916b02",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c39657-3e66-488b-a526-9c0fd5c94df5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f0c4c2f9-fb5e-4436-a78a-5fc0864d248e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2c723b-2ba3-4094-b3d2-6c0a67e80b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a33bab4-ac5f-410d-a14e-73b2314b3089"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c661e37d-6358-43a5-8b2a-d36915c460f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b481844-ac4a-4f35-99fc-2dda58e48821"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dc7986e-3165-4d80-a6cb-39dfa4622c64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "201e812d-7496-4d6f-bf45-1c89ecfd79a0"
                    }
                  }
                ]
              },
              {
                "id": "9c161818-143d-40da-8eb8-594ea1cceb8f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1441f7c1-5d67-4e3c-8456-44eea28e8ef8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cafc94c-b5fc-47a1-8ca4-88c1e582202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b740c091-a5f8-4cb0-9588-123c9f93ac43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f299b40e-7455-4240-8f90-311ffadadb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761344b0-c25b-45c2-ad97-49fb083fefd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7eb56436-0549-4fb3-b85c-37c36dd33a62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b60632e-6e97-4202-a550-a2482f5de974",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbd1ec03-e115-42cd-98f5-3be8fa6acf9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10b70033-7254-460e-93b2-f8c698d1fcf7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "414d8dd6-9218-40ff-8554-dba307595fbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9484dda9-32e9-4728-ac42-1b6eacfe5bf3"
                    }
                  }
                ]
              },
              {
                "id": "46dd21ca-dba5-466d-b27f-ba02fe97e846",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7e6e128-9a7b-41ee-b71e-2aa24442ecb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "967c33c7-27bb-46bb-83e9-588785119fe5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61ddf084-aca5-4a09-b44a-7a59763d7737",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d5f91ca-9e95-470f-b7f3-ab65b95ddc05"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b85b42f-ebf5-47f0-9553-9f3f90485078",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "001b77a8-f3aa-4ba6-b254-36b73afdd5e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dae24024-5d53-4ea2-be58-8e77cb4ec29e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6867237c-a306-4073-9d93-9c310dc538b1"
            }
          }
        ]
      },
      {
        "id": "9e7ee9c7-eadf-4d9c-860f-27fadb1fa330",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "99eb6863-9850-421f-8468-4bb3a1fd0f95",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d56d8607-da3a-46f2-b262-e70367e91563",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42c09d20-03c5-41b7-a828-1b365dc3616e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0005f8d1-73ee-4645-94f8-21656653407e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dfa60183-4dae-4299-9e20-4e8016014916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc0e7b2-31e7-4cf2-b4bd-507297c6dce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59fd99ba-7dfe-4490-9a53-0e4cc3d5bc2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53587fa2-179e-4ba6-935e-00b13815f3ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb027b03-9f0b-4d57-aaf0-57f7711a94fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46241146-d56a-472e-bc11-f96633d6a748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b82088a-bd4a-4494-ba3a-fe4618e3ff37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff9d3e77-dc0c-4a3f-9f39-504f2dbed29d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c37ede59-bbb5-4701-b930-3f87f1e5957c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6aa27398-4adf-49cc-982e-10b3c60b65ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1e8c075-3972-403a-b13b-448892fd7a64"
            }
          }
        ]
      },
      {
        "id": "12ffa0de-0b0d-42c9-8c0e-249aae3727dd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6704b58d-ef1e-4a0a-bc9c-f9cc80caaf1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57f78cde-2031-4945-a048-4ce4e5521731",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64fa840b-1945-41b8-9960-b72166318dc5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f831224-79ec-42ec-9199-89fb0252ad16",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca4504f0-0b43-4383-a429-2479646f92bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b2a3bd-080d-401e-96fd-fc105d299a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bac3df8f-19cb-47ce-a60d-0adebcc004d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9566d0b-3bce-4e1c-9dbd-78c509e89206",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04092fc1-a79b-4b7b-8c73-2f71cc2863b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55c6d094-e07a-4f85-8a4a-c5568fda4822",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25756394-3c81-49ce-bc63-7405d600c8b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3375461-474e-4ef6-ae48-7ff55b226465",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "af4c24cf-5f24-42a0-b470-e2a2f250b7d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f067595-f046-4f98-8d8d-6811c9d4a91a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37a18e73-ee56-44e5-8ffd-65d28a6dc433"
            }
          }
        ]
      },
      {
        "id": "a85d15d3-66d6-421c-8eb8-8fef4b2cd6f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "79224935-9b90-4865-a996-59a24b774115",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e90885bd-3404-4d9a-8b8f-69637bc4457c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "baa631f0-8ce3-4140-b9b4-ccb2a8177f18",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e338ea6-ab69-4d91-a3a7-1d4e43b611d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22ba44c8-44c4-4f65-9a1a-77eea59ea762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3044c61-69e1-4fe2-80db-8def98d42876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b80d1d9-eb7c-46e9-a541-5e9b94259e09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38c47630-d0ad-457f-a964-e76ff9181c40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "550248ee-a466-43ed-b42f-e2f7a68d7f38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9c12e7f-ebad-4b4b-b979-8c4abb952792",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a44664f2-2f35-45ba-80f5-4bf4e21749dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78c331c5-48db-4e8e-8e7c-58a32d9bd590",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0737b5df-0df8-43ef-b9ae-aee18c6004c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a788162e-901e-4d8b-b378-e72f0968498c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b65de7ce-8ead-40e5-8e78-dd37d8b655dd"
            }
          }
        ]
      },
      {
        "id": "a05460da-a495-4d09-9808-52fe3b60f9b9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a9a4849-90c7-4697-8433-479b3c8212ed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "743c1bef-3156-4207-a414-7a61c7776ce3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e0044b32-ff2d-4d60-83c6-9eeff52beb71",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a30b3148-7dd5-4ada-b1ce-b35dd9526ecb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "640c148c-5844-4914-a9a3-e18442e2aa77",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 127.95238095238108,
      "responseMin": 11,
      "responseMax": 11191,
      "responseSd": 782.2031092252402,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724200813854,
      "completed": 1724200854221
    },
    "executions": [
      {
        "id": "f8eae7c2-4e88-4a81-be8d-64be0d14107c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9c08c0bd-c972-439d-b807-f83722c0a197",
          "httpRequestId": "8c3f1ea0-3a8b-4862-b326-11f32b351c88"
        },
        "item": {
          "id": "f8eae7c2-4e88-4a81-be8d-64be0d14107c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "71aa3b4a-dce2-4d4e-ae43-6c869275303e",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "cd698a3f-8e94-4b26-b1c1-51e1f9ab4a92",
        "cursor": {
          "ref": "a6a9bbd3-8ea9-46dd-a32a-3c2f5d2d0df5",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "46b92e54-a58a-49d6-8e04-dff7e2fee944"
        },
        "item": {
          "id": "cd698a3f-8e94-4b26-b1c1-51e1f9ab4a92",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c2edb70b-f1d5-4a0f-af34-be8ca11ef54c",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "263d9e68-db40-413c-ab00-2fd3ba89db69",
        "cursor": {
          "ref": "4f9c123b-7cd3-4e52-839e-a751273d0513",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6be15395-1a98-4331-a48d-68faf000cc68"
        },
        "item": {
          "id": "263d9e68-db40-413c-ab00-2fd3ba89db69",
          "name": "did_json"
        },
        "response": {
          "id": "9325bd54-6584-43f3-8090-17c91da4d725",
          "status": "OK",
          "code": 200,
          "responseTime": 332,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b29f92e-cef5-45c0-a1d2-79ce79cf8ca1",
        "cursor": {
          "ref": "bf5c6acf-2d04-4367-bafb-6906bf613111",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7e5274d5-1da7-4f4c-b89a-a16b685fcd91"
        },
        "item": {
          "id": "3b29f92e-cef5-45c0-a1d2-79ce79cf8ca1",
          "name": "did:invalid"
        },
        "response": {
          "id": "ce568aa7-54ae-4ee3-aae8-d0f07aa51db1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1550,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b29f92e-cef5-45c0-a1d2-79ce79cf8ca1",
        "cursor": {
          "ref": "bf5c6acf-2d04-4367-bafb-6906bf613111",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7e5274d5-1da7-4f4c-b89a-a16b685fcd91"
        },
        "item": {
          "id": "3b29f92e-cef5-45c0-a1d2-79ce79cf8ca1",
          "name": "did:invalid"
        },
        "response": {
          "id": "ce568aa7-54ae-4ee3-aae8-d0f07aa51db1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1550,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf68a7e8-b178-4cd7-b4d3-f69ec390309a",
        "cursor": {
          "ref": "d5e11c46-1d72-4d4d-ba5b-d91df6d45723",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "06d10bd3-1950-4d87-8a2f-d9eab2937ff4"
        },
        "item": {
          "id": "cf68a7e8-b178-4cd7-b4d3-f69ec390309a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a4b064b2-e5f5-4e46-809a-ff227db76a0d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ae0b04-514a-473e-9654-31cf8475b2e9",
        "cursor": {
          "ref": "c350dcf5-7f00-47a8-b712-a7c36ad8db8a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3b95470d-504f-4252-87de-a930658e278d"
        },
        "item": {
          "id": "49ae0b04-514a-473e-9654-31cf8475b2e9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b9fe9009-a7d5-44ac-8993-f2b5224f60a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c145c0c-077f-43aa-aab5-c3640f4a0a21",
        "cursor": {
          "ref": "3ea0cfe7-7235-4562-9a71-a100cb106fd4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "90f11c7a-6d89-4e54-bab5-bc5725c40f91"
        },
        "item": {
          "id": "5c145c0c-077f-43aa-aab5-c3640f4a0a21",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "153962a2-4dfc-40d2-8d8d-c44a3285e8c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc10ce2a-2c8e-4d96-a7b1-709361ab461b",
        "cursor": {
          "ref": "e20bc9bb-a03f-4b0e-9a8d-20a48d01ae6f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c9869a12-eecc-4579-9358-7a876c0c0ffa"
        },
        "item": {
          "id": "dc10ce2a-2c8e-4d96-a7b1-709361ab461b",
          "name": "identifiers"
        },
        "response": {
          "id": "7893663f-914b-4780-9b3e-a2fb657791a3",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3de5a4-ae71-4332-8074-1b4609770c2c",
        "cursor": {
          "ref": "ec8c3084-3c1c-475e-b7d3-672925f8f9f1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7d985c9a-b7fe-4189-bff9-3215861a00ff"
        },
        "item": {
          "id": "cc3de5a4-ae71-4332-8074-1b4609770c2c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0c765cc5-a138-4cbb-8e3f-e852651bfd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdee4bfd-aed0-44c0-86bd-ee9e576a0c95",
        "cursor": {
          "ref": "1440ba6a-52ca-4015-8b35-135ad819ea33",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "57817387-476d-4ade-98d8-7712453e4672"
        },
        "item": {
          "id": "fdee4bfd-aed0-44c0-86bd-ee9e576a0c95",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cac9548f-95d0-4058-880f-87f0f214b2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc9b470-19ac-4016-9615-a6f7e7104c03",
        "cursor": {
          "ref": "533e9e65-6cd4-4633-9e38-d9eac9d05eab",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "471e3781-52ef-4e60-b38d-65e0491b28d9"
        },
        "item": {
          "id": "1bc9b470-19ac-4016-9615-a6f7e7104c03",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6fc6ba21-9a2a-4b3d-8fe8-bb39fcbec288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93e0b7d-1369-43c1-87fa-cb3ab48ad4ac",
        "cursor": {
          "ref": "d535411e-684f-48af-97c6-9ae45fc85083",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1d9730f-0f5a-4c0d-b565-deb29972e61d"
        },
        "item": {
          "id": "d93e0b7d-1369-43c1-87fa-cb3ab48ad4ac",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c5f7a27-23a3-4d02-8f8b-196a20c72847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc43940-b7b1-4c80-959b-a10e109c7aec",
        "cursor": {
          "ref": "adf3eca0-489f-4043-94e8-9702e055417b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "24a177a3-9706-4598-a839-a0f37df6876a"
        },
        "item": {
          "id": "abc43940-b7b1-4c80-959b-a10e109c7aec",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bd3919c0-535f-4186-bce1-9486c6654b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09637dd8-e613-4af5-b192-4b0d84a194e3",
        "cursor": {
          "ref": "7217642a-108d-4c83-8e66-94f686f56286",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b2fc7a46-f8c1-4363-b1bb-8e9a5bc18784"
        },
        "item": {
          "id": "09637dd8-e613-4af5-b192-4b0d84a194e3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f665fb6e-d75c-4705-b55d-56a11742e9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96792f07-3107-4bfd-b161-8b26caec103e",
        "cursor": {
          "ref": "50878ffa-c1fd-436e-ab96-c481f9021d2b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b1e29f4c-15e8-4e1a-ba01-315bf966739f"
        },
        "item": {
          "id": "96792f07-3107-4bfd-b161-8b26caec103e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6a86b1f5-5e01-41bb-be9b-748a7b5e9bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94c2459-3951-4c34-9366-cfced2fba624",
        "cursor": {
          "ref": "86a8ffd2-c115-4bbc-b29d-a06b1d1d92de",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8b3a9c2b-ff6e-471c-94de-c081d602faf4"
        },
        "item": {
          "id": "b94c2459-3951-4c34-9366-cfced2fba624",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ab666c98-0f8d-4c1b-870e-0e184c21a091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d68ab3-e7c4-4d8a-ae07-9bc9534700c1",
        "cursor": {
          "ref": "c3442911-4bab-4b3e-a61b-17d631069e2d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "36e98074-2295-4226-9e5e-c79db7a772ae"
        },
        "item": {
          "id": "51d68ab3-e7c4-4d8a-ae07-9bc9534700c1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5c8a8dac-510f-49bb-a4ad-5dd3bf1f63de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bd0863-ae56-4134-8e27-c54724a36544",
        "cursor": {
          "ref": "b416f01d-b3a3-492a-a7df-9690aca0a61e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "20afaa28-56d1-4a5c-a071-303c742c4c6d"
        },
        "item": {
          "id": "09bd0863-ae56-4134-8e27-c54724a36544",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "835f49dc-30e1-4e86-ba81-7f48f3925954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a994c110-0ace-407f-b9cb-d7d232295402",
        "cursor": {
          "ref": "5cf67e00-c824-4a63-b93f-b1a9cea7690e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3aea6121-6379-4e4c-8f3a-f183f36eb098"
        },
        "item": {
          "id": "a994c110-0ace-407f-b9cb-d7d232295402",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c9a46457-abe5-4e2d-b209-71aca83a11ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb263be7-207c-44c1-93ce-2877837c2bbc",
        "cursor": {
          "ref": "a5b6991f-0c39-4505-b480-907ce1c6beea",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ddc53a28-73ea-4a9d-9289-27e7ca393bc1"
        },
        "item": {
          "id": "eb263be7-207c-44c1-93ce-2877837c2bbc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b5fe9424-5be0-4c9f-9654-a2b4ed0c8944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c648e0-a017-4bf2-aff7-df91b40ba78e",
        "cursor": {
          "ref": "c143d977-2d16-4e49-9708-b7bc91fe623c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e707a802-df18-4898-8e82-c285e97d65f1"
        },
        "item": {
          "id": "d9c648e0-a017-4bf2-aff7-df91b40ba78e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7688de50-3f79-4785-99af-b10ed65284b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b02c7c-1718-43d0-92bf-c07be5b777c6",
        "cursor": {
          "ref": "9a41c049-1773-40fb-b0f6-a281e51e7892",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fdef62a6-8001-4e0a-b727-6734a25c2f80"
        },
        "item": {
          "id": "08b02c7c-1718-43d0-92bf-c07be5b777c6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7d430e98-dfa1-4377-9e63-ebb9953767f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cba45a3-f9fa-4d4e-8229-6151a5c50825",
        "cursor": {
          "ref": "0fbbd04f-8546-4c64-a8b5-84498a6638df",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2b30776f-2085-421b-9f0f-5c19be0b90d0"
        },
        "item": {
          "id": "7cba45a3-f9fa-4d4e-8229-6151a5c50825",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "73c4b5ef-06f3-4908-9623-91158ef0488c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289c25a0-1d1c-4f0b-a58d-8f8cd9a3af8d",
        "cursor": {
          "ref": "b692727a-4974-41d3-8afb-a10f0fc6bf97",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "97b50e78-2887-4b87-a949-cb059b0fa50d"
        },
        "item": {
          "id": "289c25a0-1d1c-4f0b-a58d-8f8cd9a3af8d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c4bfe1fb-7d2f-4054-9d94-cf21352c976c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3778e26-d1d3-4f30-b0a6-ace7835a1295",
        "cursor": {
          "ref": "bf511948-fe70-4100-b654-77abc38f9ec4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2ac63229-8aba-4e05-8f97-39fdcb0c8e16"
        },
        "item": {
          "id": "f3778e26-d1d3-4f30-b0a6-ace7835a1295",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8b38e390-dec6-491c-abbe-1c4b7fa6a87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b244ab-a041-460e-bc44-1bf74b2ef415",
        "cursor": {
          "ref": "8fd46a58-c1e6-4d08-bd72-116130c0f71a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1d0ad1f6-d7d0-49e5-9e15-ed9a2449420a"
        },
        "item": {
          "id": "82b244ab-a041-460e-bc44-1bf74b2ef415",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "59b6b363-2a92-487a-80a5-ddd0c3c019b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76221776-d904-4753-94cb-c08bc5493dba",
        "cursor": {
          "ref": "e2b94213-9a5c-48fb-bc06-af20d9efc886",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "388919ba-a207-4287-bfa1-15a377181717"
        },
        "item": {
          "id": "76221776-d904-4753-94cb-c08bc5493dba",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4f90c756-c994-497b-8db2-f801bd522eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29a5cb6-d6f9-4f0f-8529-afaa465bbe09",
        "cursor": {
          "ref": "424fc85c-4bbf-411e-9a4b-ae28ce73faf9",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "92c97b59-9de7-4368-866f-1c94a444c078"
        },
        "item": {
          "id": "b29a5cb6-d6f9-4f0f-8529-afaa465bbe09",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5ad513be-1113-4372-a854-8637a25f9158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053c9379-ce3d-4b19-b8a7-7aa44a82ed1b",
        "cursor": {
          "ref": "f0c0fd89-3261-4236-9669-25b9300d8de2",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "919960ac-1dfb-4e33-9003-a8d52e6fef43"
        },
        "item": {
          "id": "053c9379-ce3d-4b19-b8a7-7aa44a82ed1b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "614fb70f-4dea-416b-8285-fd1621c08dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b124bb-f643-4ec8-aabe-44c6cefe0de2",
        "cursor": {
          "ref": "490ddc3e-4655-4a07-9180-0e6c35029f55",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "23076dfd-52d1-4e6b-b3e7-eb9a3bc717fc"
        },
        "item": {
          "id": "96b124bb-f643-4ec8-aabe-44c6cefe0de2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d0695d8a-7c32-4499-80e5-ca8cad421950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b3ae96-677a-4cde-925d-e4bb7e03934c",
        "cursor": {
          "ref": "af441dfa-e5e7-440c-bf57-117be5b0bcd7",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c59ffb4b-be0a-409b-855f-79cee4a59316"
        },
        "item": {
          "id": "d1b3ae96-677a-4cde-925d-e4bb7e03934c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1527bdaa-18b6-4aac-865d-f4b96fab2b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781b51d6-9c46-40d5-977a-43a5f9faa62a",
        "cursor": {
          "ref": "f26baaf6-4f44-4906-9b7a-de269b601e89",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3b28bb3c-7d4c-4c48-ab3a-3bf3054ca269"
        },
        "item": {
          "id": "781b51d6-9c46-40d5-977a-43a5f9faa62a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3df46e33-9bf5-4fce-b685-55a7255965ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c515f0-2dd6-43f4-9f5d-0fd9d372f617",
        "cursor": {
          "ref": "6f85c76e-727f-4407-9bdc-d1a8982fb500",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "608e0ce1-55fb-4e96-8732-ba263229fabb"
        },
        "item": {
          "id": "b3c515f0-2dd6-43f4-9f5d-0fd9d372f617",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "790cd7d6-6217-4512-8585-0626ebff6c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ce4a32-ca34-45cf-b59d-cdbed90cf8f9",
        "cursor": {
          "ref": "d9abbda5-ba3b-43f5-9cb6-03b32e90379e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "549a12da-68b2-423b-9aad-e6ba0fb3abe1"
        },
        "item": {
          "id": "c9ce4a32-ca34-45cf-b59d-cdbed90cf8f9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4dd3124f-8499-4f22-ae65-a60431c9c144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65583691-022a-45b4-bde1-554c9a974541",
        "cursor": {
          "ref": "af0fc397-9571-4b10-9bf5-e2ea666b1f2a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5b654c71-77ca-4d1f-a72f-738b733d5baf"
        },
        "item": {
          "id": "65583691-022a-45b4-bde1-554c9a974541",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "92f3e836-c32c-44a4-93c9-45736ff40693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07669ce-4484-405a-a3ea-c03f02fbdabe",
        "cursor": {
          "ref": "1d61fdf4-834c-4b75-99ca-9b579f20ba9c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "be5498d8-f5ce-4953-9170-2ba1b7b5dbf8"
        },
        "item": {
          "id": "f07669ce-4484-405a-a3ea-c03f02fbdabe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "143721c4-bb78-4fcb-9a4f-e624f38c1033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dbb249-1ac3-4f1e-9f62-002e34253d1d",
        "cursor": {
          "ref": "6cfa9edc-20e8-4bca-83a0-5443d7824eda",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bc480b26-7e6c-4aa6-b4ba-dd62c19fc483"
        },
        "item": {
          "id": "d6dbb249-1ac3-4f1e-9f62-002e34253d1d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ee11350a-fef4-4972-adf8-80b816e0f888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbec3a7-dd8c-4941-b048-66bee7ac2a75",
        "cursor": {
          "ref": "750ac699-0f76-42df-82f7-5c3d4a95f75a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3cb18334-97dd-4759-b4a4-30a632c9789a"
        },
        "item": {
          "id": "edbec3a7-dd8c-4941-b048-66bee7ac2a75",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7d275d89-0400-44d3-a027-e1abad3ad753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eeead2-c333-4b2e-aceb-dc01516842f8",
        "cursor": {
          "ref": "a0bae979-0496-420a-9f01-d1dfb6c7cfc4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c5fc9c61-b3cb-4af6-8257-f853477636c8"
        },
        "item": {
          "id": "b1eeead2-c333-4b2e-aceb-dc01516842f8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "38a21c2d-d6a1-43d2-9985-59b5e7ff81ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3961d8c3-a34a-489b-95a6-1e0ab2a903f6",
        "cursor": {
          "ref": "12bf4fdd-961a-40fd-9440-ec67f8f5192f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8e91ce5e-2047-4fb5-9bac-ccfb80508df0"
        },
        "item": {
          "id": "3961d8c3-a34a-489b-95a6-1e0ab2a903f6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0a68e657-7438-4655-9a94-1d5e362ce4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b3b0df-507a-4662-bd9f-02305ab42d64",
        "cursor": {
          "ref": "b2ef7e9f-2412-45d6-b378-e76b6116d97d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "433b61b2-2e14-453d-9669-4b01682ab901"
        },
        "item": {
          "id": "c4b3b0df-507a-4662-bd9f-02305ab42d64",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a8809595-f02d-4e30-861b-036db9f980fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9c74ce-480d-4be0-a3a3-024fbf0cb23d",
        "cursor": {
          "ref": "03dc5e76-4192-4386-98b6-fba4f496f516",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1498eb69-72f9-41b0-afb3-c42298b74a83"
        },
        "item": {
          "id": "6f9c74ce-480d-4be0-a3a3-024fbf0cb23d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "660a90c3-2a59-42ee-a8a6-81ae81e4eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dadacf2-053f-44ea-8784-04106cf6c0a0",
        "cursor": {
          "ref": "ee6a0b0c-f1b8-4078-a764-2faed93fd3de",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ffc4809d-f23b-40a7-acfa-2f02d2e31447"
        },
        "item": {
          "id": "2dadacf2-053f-44ea-8784-04106cf6c0a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "37c9610a-27ef-4ebd-ac72-2026a056445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e3ad06-9e25-458d-be20-7ee8991f867c",
        "cursor": {
          "ref": "4f0d7bb8-8cef-4c3b-9ac1-566df4688c55",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a5cdb170-76b6-4e94-9d20-05c0992d8744"
        },
        "item": {
          "id": "c1e3ad06-9e25-458d-be20-7ee8991f867c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "decafbd6-167a-452b-88b7-0f8b156a3cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa59e9c8-100b-4441-80be-750161d7383f",
        "cursor": {
          "ref": "a8628bdf-58da-4de4-b1eb-28954326bc1b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "95315631-d7c5-4ba8-9ac3-a6d2489e0a50"
        },
        "item": {
          "id": "fa59e9c8-100b-4441-80be-750161d7383f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "56a963a9-cb85-44bd-aa70-e8bdeefac513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cc442d-236d-4fcb-b975-578fb282b8fb",
        "cursor": {
          "ref": "82dd7148-85a1-4dea-bafd-ac9aefe54e90",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bf792620-55a7-47b7-98fc-5133085805e6"
        },
        "item": {
          "id": "b2cc442d-236d-4fcb-b975-578fb282b8fb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8be97974-38de-45a8-8518-ffbd6a55d648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761b9ab6-8a8b-4fd7-9b82-4c791b0cb087",
        "cursor": {
          "ref": "0312914b-0b0d-4782-b407-aff5192636f6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "98d80176-b0a9-47fd-a53a-0f68469059c8"
        },
        "item": {
          "id": "761b9ab6-8a8b-4fd7-9b82-4c791b0cb087",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7c507a6d-7b54-4528-ae51-93091cf04144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215b0eed-610d-4ef6-81c8-e3782c851e76",
        "cursor": {
          "ref": "807c2839-4278-4281-b499-315ef381917a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "81e07abf-5157-4ee8-847f-93fe25e75587"
        },
        "item": {
          "id": "215b0eed-610d-4ef6-81c8-e3782c851e76",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "60fbbe8b-c34d-4200-af0c-3e5096fc29c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4398f16d-0242-4804-a7d7-a3af1731b978",
        "cursor": {
          "ref": "a1c56094-1c19-4fb3-9bd1-7ae463192989",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e571fa67-e13e-4807-a512-55be9d14014b"
        },
        "item": {
          "id": "4398f16d-0242-4804-a7d7-a3af1731b978",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b742768f-58fd-46c6-84b1-1b55b0de6fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d780a27-b9c2-4e81-9442-c4d1ee3cd438",
        "cursor": {
          "ref": "1b915222-950d-455f-b1f7-a4a0f6c46bb6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "17865da3-1bed-4792-bca5-a7be7478a75b"
        },
        "item": {
          "id": "5d780a27-b9c2-4e81-9442-c4d1ee3cd438",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6e51fd2b-40a7-4a07-ae46-0dfdf5ec145d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a82512f-8003-4e92-8d2d-88d5aa7d35c1",
        "cursor": {
          "ref": "eebbb937-1a1d-49a5-84f4-d3866f9ffaa7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dba284c7-f8ae-4b48-994e-d214dbb77662"
        },
        "item": {
          "id": "4a82512f-8003-4e92-8d2d-88d5aa7d35c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bce3d7a4-7753-4f6b-890f-7c34c6932d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd576194-5216-4567-9076-9af6772d9c65",
        "cursor": {
          "ref": "1a3790ac-bb54-42ff-a83c-5323b3895121",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "968b2ec3-3c08-4030-9eb1-2bc5d87ebbe6"
        },
        "item": {
          "id": "cd576194-5216-4567-9076-9af6772d9c65",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4c278054-743a-4b89-957f-c8618fb637a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45437a22-6705-4e30-971b-bce254f18a09",
        "cursor": {
          "ref": "9954dc1a-932b-4d6d-a47e-4313b1f19a85",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d93a1b8d-9578-4a19-9949-fb3ca4da83f4"
        },
        "item": {
          "id": "45437a22-6705-4e30-971b-bce254f18a09",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "28591e20-09fb-40c1-92a5-c474453e26e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a56b32d-7e8d-48cc-a8ff-e87011048c98",
        "cursor": {
          "ref": "92168e44-2464-4590-b831-9fd53f847650",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c05a565e-326a-45a3-9883-3321467f774a"
        },
        "item": {
          "id": "6a56b32d-7e8d-48cc-a8ff-e87011048c98",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b0782d81-6093-4f31-9cd3-6928f213e7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61b24e8-820c-40b9-8e9d-d2a690739ccf",
        "cursor": {
          "ref": "0ff5cef4-5e62-4db7-a070-60333c8a1d3b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b5374b3b-75c8-4a76-af4d-6052fed7271e"
        },
        "item": {
          "id": "f61b24e8-820c-40b9-8e9d-d2a690739ccf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b08f3bfe-3827-4c9e-b1d9-e8247bcc1128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ee7c9e-aea3-4a8a-8639-9b432027539f",
        "cursor": {
          "ref": "e76ee770-7d28-4580-a1f5-469d96cff7e0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "de8d6cf9-d19f-4730-b385-9b7da6a20bc4"
        },
        "item": {
          "id": "d0ee7c9e-aea3-4a8a-8639-9b432027539f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0dfb53ef-377c-4f5a-8a19-853a40db52ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2926044-6c1f-44b2-bfcf-743e14e2949f",
        "cursor": {
          "ref": "9dd94293-64b1-45d0-939e-79542667c7a5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6a5ba8a6-5229-4298-9f41-6d391f8a9461"
        },
        "item": {
          "id": "e2926044-6c1f-44b2-bfcf-743e14e2949f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "987ffdf7-4d62-407d-830d-fbe8400160b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd38ea6-dd08-4680-bae7-c1065aa93d54",
        "cursor": {
          "ref": "5ab3bff7-b8fc-426e-b7c5-ff27c2a8a804",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "10ba8eb0-fdf6-4439-a93e-8abf21a5dd59"
        },
        "item": {
          "id": "cbd38ea6-dd08-4680-bae7-c1065aa93d54",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8f34aaaf-eda8-4273-9e90-cd39947a1971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e97f48-4f55-4268-b64a-e52393c9ea32",
        "cursor": {
          "ref": "7bfc461e-6064-4f9a-9b23-3bd211a32af9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "45f8b832-fdee-4855-94f8-3ce853e14fe9"
        },
        "item": {
          "id": "20e97f48-4f55-4268-b64a-e52393c9ea32",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bc70b500-c6c1-4f23-82a8-8c23c03dd5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8ee6e7-b7db-4422-a073-07c43d099156",
        "cursor": {
          "ref": "19912fa6-4620-4791-809a-488d91d8b5e6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "17f8d925-674c-4727-b6c6-836d65d00ced"
        },
        "item": {
          "id": "fb8ee6e7-b7db-4422-a073-07c43d099156",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1ee323cb-a528-4ad3-9f2c-4cccea14daf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9893e0-d70e-466b-a705-6f1aa817a442",
        "cursor": {
          "ref": "f9673f50-beaf-436b-a8d1-01bae0ba61d2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5eea5d4d-bf86-4e5c-98ec-307042e94f45"
        },
        "item": {
          "id": "db9893e0-d70e-466b-a705-6f1aa817a442",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "803e9498-f77c-41e1-be5c-ca63e9a9b461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4179abeb-aed0-4d23-8c5a-19ece89c4a9b",
        "cursor": {
          "ref": "410ec284-788f-4065-b06b-bba6ceedcc4c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "08dbbc72-ffe9-436b-86b9-66f4d612c1e6"
        },
        "item": {
          "id": "4179abeb-aed0-4d23-8c5a-19ece89c4a9b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e7dc038f-29b4-4bc5-8bc3-261e9e41421f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5b4f50-3453-4763-aa8d-37f7f021a861",
        "cursor": {
          "ref": "00639e75-dfad-475a-9b82-74f7734432a8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "aeddccf4-9802-4b91-a180-e409ea0dd7f7"
        },
        "item": {
          "id": "ed5b4f50-3453-4763-aa8d-37f7f021a861",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "51ccddeb-8bb1-432f-9fc3-c9bf95d9d5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8699d63d-8d46-4dd2-8c50-3d6185222956",
        "cursor": {
          "ref": "567bcbba-314c-440f-a90b-4c751b32960c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "db066319-1164-41de-a644-19cc22a55c0e"
        },
        "item": {
          "id": "8699d63d-8d46-4dd2-8c50-3d6185222956",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a9fda170-86b6-438e-8603-09b47ed22f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5656a606-ceda-4803-b428-302ae21af687",
        "cursor": {
          "ref": "5eed4452-2be6-4b3e-885d-57e03107379c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cba19168-16fb-4c36-882d-15ebefbeea20"
        },
        "item": {
          "id": "5656a606-ceda-4803-b428-302ae21af687",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "263059cf-c402-46bf-b193-a43a0af01387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1561c6fc-287a-4247-ac82-206abd9f7b5f",
        "cursor": {
          "ref": "b2b9ada7-b293-464c-a4a0-51805a978a4d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "56d21e97-55d6-4ce2-9692-fff01ca9b00f"
        },
        "item": {
          "id": "1561c6fc-287a-4247-ac82-206abd9f7b5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cad86e65-921a-4862-ba0f-50aaadd2617b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bdc1d2-6b8e-45a1-83d2-d79859cdbad0",
        "cursor": {
          "ref": "5349d109-3a5b-48cf-803f-9fc487bafdb8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "80538d58-574a-41c6-a2bd-ce6e36d2d578"
        },
        "item": {
          "id": "a5bdc1d2-6b8e-45a1-83d2-d79859cdbad0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "112bdb0a-93c5-4a14-873f-5f85f5cabec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec84e26-b765-48d7-bbbd-eebefb38d311",
        "cursor": {
          "ref": "fd0e9a79-181d-4b39-9d54-e4782d4f8747",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fd744baa-fba0-47c9-8c2d-25766aa1f0b9"
        },
        "item": {
          "id": "9ec84e26-b765-48d7-bbbd-eebefb38d311",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "99f0ef95-e05c-43a7-8bec-bc99c00f37f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b070a1d-cc86-4a5a-a9df-d9416a5c60d6",
        "cursor": {
          "ref": "e2616f05-f3ad-4d84-9cf0-3c2a19d1d01f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c5261b0f-e705-4690-b0fc-8ba50e048825"
        },
        "item": {
          "id": "8b070a1d-cc86-4a5a-a9df-d9416a5c60d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6cb63728-cdd1-4fdb-9a44-24fed3c7c5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb19079-7360-4fed-9807-cb1d1d327ede",
        "cursor": {
          "ref": "db599760-548c-49d6-beb5-0c5a18272f07",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "da5d9933-477a-4ef2-b28d-d8b81b547f2c"
        },
        "item": {
          "id": "2fb19079-7360-4fed-9807-cb1d1d327ede",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "00dfe790-1f3f-4db0-a60e-0229de9f818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f038cd3-56ce-4ed7-9f78-d944d815f655",
        "cursor": {
          "ref": "136cd34e-69d8-4afd-abf4-60eb9fbf3ae6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d630a3d0-bd0e-4a3e-b51f-2ffa1b89b575"
        },
        "item": {
          "id": "0f038cd3-56ce-4ed7-9f78-d944d815f655",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fb83d34e-4a1a-4adb-8865-3993817123c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206a21ee-87df-4034-93ee-0bbc1332a618",
        "cursor": {
          "ref": "a60c6e61-699c-4254-9b60-507babfe9c6a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8c4f52fe-1cb3-42df-ab6e-8d1845920338"
        },
        "item": {
          "id": "206a21ee-87df-4034-93ee-0bbc1332a618",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d2963d2f-15cc-4de5-b5f5-b0185b9c4609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cb14e6-06dc-4dfa-b132-94cacced0bed",
        "cursor": {
          "ref": "4da9d774-6ad3-4e08-96c6-2d5416f27f93",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9c41ddac-2b3d-4f2d-9331-948a7c5960d7"
        },
        "item": {
          "id": "82cb14e6-06dc-4dfa-b132-94cacced0bed",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f0f4a0e3-2a9a-4c1c-be13-9582beeeb028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44ae149-a7f6-435f-962e-acd844a3e8aa",
        "cursor": {
          "ref": "eca6c546-1dde-49ce-9256-22e74a724f83",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d812259f-e5ed-4e23-b969-952819a1db72"
        },
        "item": {
          "id": "a44ae149-a7f6-435f-962e-acd844a3e8aa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a6a67aae-d002-4251-8a06-1616392470bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deb9090-2215-4763-b031-6f819bdb2bad",
        "cursor": {
          "ref": "f00bae3f-eb78-4afe-a263-efc759074062",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e3268a50-07e3-48dd-9d04-240caf755c0b"
        },
        "item": {
          "id": "9deb9090-2215-4763-b031-6f819bdb2bad",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "10d3f320-f274-4657-a17b-9db24baa9efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8bd2b7-12fe-4efe-a60b-0de0023da144",
        "cursor": {
          "ref": "f8250b2e-a3b7-4155-aeda-b259fcfe244b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c6c1ff32-4c58-47c4-8795-f7f7cd459b53"
        },
        "item": {
          "id": "3b8bd2b7-12fe-4efe-a60b-0de0023da144",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "46ba48c3-5765-4e6b-a1db-53b7d835ab87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9540076-e870-4409-a73b-e1e25f93ded8",
        "cursor": {
          "ref": "a562acd9-d1f6-4d5d-be1c-d5ca65fe1f5f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b2c62a32-54e9-4e3e-a5cd-235ca64f4f3d"
        },
        "item": {
          "id": "e9540076-e870-4409-a73b-e1e25f93ded8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "27fd7844-ec96-4c4f-8292-932c9157deb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56352053-7144-4cca-8f19-3dd84a6efc9c",
        "cursor": {
          "ref": "066e6897-ae8f-411c-b41f-00a8614c8c75",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bc8b9fc9-0af4-4b07-bef8-25532ca0d181"
        },
        "item": {
          "id": "56352053-7144-4cca-8f19-3dd84a6efc9c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "accd2b72-ee8b-4db2-8690-d02d61ee452d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618d9099-62d3-4bf0-939e-c031fb3e7074",
        "cursor": {
          "ref": "e8bd025b-4a19-43fd-8dc7-03111effe853",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "06f994a8-dca0-48f1-aa78-450c5995d382"
        },
        "item": {
          "id": "618d9099-62d3-4bf0-939e-c031fb3e7074",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "03c2d48c-45f4-4d77-a57b-19d997e8fcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7e0af4-56d4-457a-95e5-02b7aad0552f",
        "cursor": {
          "ref": "cd134b32-4691-4632-b7bb-48383f42334f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99e51a22-c0bd-48a4-bf51-18b69b232b0b"
        },
        "item": {
          "id": "bc7e0af4-56d4-457a-95e5-02b7aad0552f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "419655f8-1846-4520-a4a8-294302d0d285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13ac23a-ccaa-4e67-b2d2-0bd75b7fd081",
        "cursor": {
          "ref": "ba152427-0f5a-410a-af94-824a5d2b86e8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5ebe9ce3-8aa8-425c-9575-44fa8de5778a"
        },
        "item": {
          "id": "e13ac23a-ccaa-4e67-b2d2-0bd75b7fd081",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ba6a09aa-ae6b-477a-b969-ab42f75dda2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8966b6dd-626c-4969-8b07-b4e34e2cec35",
        "cursor": {
          "ref": "7d6b203d-39ae-4c37-9317-6e14d2864622",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eabb2fe7-8a22-4bf5-b197-9eb75836160c"
        },
        "item": {
          "id": "8966b6dd-626c-4969-8b07-b4e34e2cec35",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "80b67e6c-60ad-48bf-813a-57057d08b605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47290af-9277-451e-a3f0-45f3ee4187f3",
        "cursor": {
          "ref": "02fb5540-82b2-4894-aaba-8ae0e5e487b6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8a682a98-bbd3-4509-854d-7c92ed25ea07"
        },
        "item": {
          "id": "d47290af-9277-451e-a3f0-45f3ee4187f3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bf76f7c5-3cf2-4e1f-a3df-f5c11eb56ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb57a4c-344c-452a-aaf1-97faabb73c31",
        "cursor": {
          "ref": "3f8be877-05ba-428c-9066-fd316ef989bf",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "de83ab2f-e150-4eb2-8538-d4e4f12de572"
        },
        "item": {
          "id": "5eb57a4c-344c-452a-aaf1-97faabb73c31",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "64e64601-1767-4f39-9d96-ac4b6f9b9a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fb626f-4ab5-4542-b438-b54fd3be05b8",
        "cursor": {
          "ref": "fd6bea50-ff45-4a3c-87f2-b7586a2d5c17",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "98265c59-55df-4334-9e47-fdbdd68bbbab"
        },
        "item": {
          "id": "b8fb626f-4ab5-4542-b438-b54fd3be05b8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d2410ea1-737b-483e-8999-06b6156bb810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f75fa50-434e-44d6-9903-a90dd481cea0",
        "cursor": {
          "ref": "58c76c13-8851-482b-a653-0de1193d31f7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ce7288cb-d6ba-4c4a-8a4e-d01d20987a9d"
        },
        "item": {
          "id": "8f75fa50-434e-44d6-9903-a90dd481cea0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d474fb85-8145-49e3-bb19-53117d5f4ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b453018-db05-40ae-8289-a81f6c1ba94f",
        "cursor": {
          "ref": "e40f57b0-5a10-43ca-ad90-c31ba167ef0e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5b079ef7-d1d9-40d2-9581-fe66a8f0238a"
        },
        "item": {
          "id": "4b453018-db05-40ae-8289-a81f6c1ba94f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "75dd6a22-74bc-4450-a435-d34db4114c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2107e59c-0dc6-44cc-95d8-722c155fdf72",
        "cursor": {
          "ref": "cf9a8bc6-9dbb-4066-b576-bb5a5dd6de4c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3007efdb-cf37-47d5-9c65-fd0d60ea6f48"
        },
        "item": {
          "id": "2107e59c-0dc6-44cc-95d8-722c155fdf72",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d041d482-6207-44a2-9c32-a28ca61be28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51166271-69d1-4e2f-aecd-4685880eaa14",
        "cursor": {
          "ref": "451f34e6-34ea-4d87-ae90-fb6f2fa05506",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "381eb6ad-e416-4fd1-882d-691f99adc1ec"
        },
        "item": {
          "id": "51166271-69d1-4e2f-aecd-4685880eaa14",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9e65e38d-460a-42f6-b70a-ec0b62046110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204718fa-70b8-406e-95d0-bdf67fe86647",
        "cursor": {
          "ref": "7e0bc9aa-b418-427b-b6c3-72c20de7d3b5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d27f4ca3-6fb9-486a-8053-198d1540e86a"
        },
        "item": {
          "id": "204718fa-70b8-406e-95d0-bdf67fe86647",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8e318a4a-cef6-42c5-b096-305dda1dfd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b806e79a-2699-4bef-a458-15289bf2fc0d",
        "cursor": {
          "ref": "6d72635f-f4df-4d07-a2ec-5fb8f6d17a6f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3b6a09c2-47c3-4621-be53-406850deb608"
        },
        "item": {
          "id": "b806e79a-2699-4bef-a458-15289bf2fc0d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e12cae26-19ee-4bbf-89d7-98e6a2131899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535f3bd4-45d0-4160-8650-ac8a807df002",
        "cursor": {
          "ref": "8900a35d-0ed5-4c20-aca8-3627f9bd3112",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b072d47b-1788-4bc3-9d53-4713ff8cd3ba"
        },
        "item": {
          "id": "535f3bd4-45d0-4160-8650-ac8a807df002",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1d08a5cf-3254-445f-ad02-138fa800f6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb940c4-96ea-4f46-ad02-38c388273da6",
        "cursor": {
          "ref": "1fdddfef-7b04-4d2e-b08a-b32e61effbc7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c16ed235-be9b-4e37-900c-bf943cf1e4f5"
        },
        "item": {
          "id": "ddb940c4-96ea-4f46-ad02-38c388273da6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b8150ddc-bd07-4f8f-ab87-af5c684d6c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e52f279-08b2-4797-b121-de56ca1feb1e",
        "cursor": {
          "ref": "b0ba28f8-3b97-4c55-b6c0-149315e1ebd4",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1a03c1db-a6eb-4081-a336-84a98d3bbd5d"
        },
        "item": {
          "id": "7e52f279-08b2-4797-b121-de56ca1feb1e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "837c9724-4cfa-4c64-9495-221e22a86ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3877cda8-9cac-4370-b13f-3aea9691e3ca",
        "cursor": {
          "ref": "9c8e3595-88eb-41ad-bcfd-91252941e1c1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "579b6ecb-9d47-4731-b8ca-71eec65295d6"
        },
        "item": {
          "id": "3877cda8-9cac-4370-b13f-3aea9691e3ca",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e7ab0416-3403-480e-88dd-784553d3f7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cd8faf-fab4-45df-a195-6f2efec17376",
        "cursor": {
          "ref": "7ec89248-7b00-41a3-9657-b3f2b73a0c51",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "67bb07e3-4b46-482d-b3a3-250483bfec21"
        },
        "item": {
          "id": "23cd8faf-fab4-45df-a195-6f2efec17376",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "03d2233c-54f8-4978-a79e-cb923a4a4f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a3175d-8c7b-4116-8875-e47235fba34a",
        "cursor": {
          "ref": "db6f7fb6-4e07-416a-9530-80b7fbd7cdb5",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5d8649c7-037e-44be-a500-4e55f3366cb3"
        },
        "item": {
          "id": "a5a3175d-8c7b-4116-8875-e47235fba34a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4f8d3af8-5dfc-467d-82f1-05e7e518e1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5286c726-cfa7-4299-920d-7198aea57a78",
        "cursor": {
          "ref": "3cc99c1a-b0ea-413f-ab43-03f082416586",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1f79cb34-5a18-48da-b092-0e65425014b1"
        },
        "item": {
          "id": "5286c726-cfa7-4299-920d-7198aea57a78",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "373737f8-2b99-4d74-b610-a4730402fe48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4293aa-329a-4c05-951f-49126886e629",
        "cursor": {
          "ref": "c14e8fa2-225a-47b0-802d-84bca8754850",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d2f615d1-12b0-4ef3-b077-dd57c146dac3"
        },
        "item": {
          "id": "ce4293aa-329a-4c05-951f-49126886e629",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a574567c-353c-4b39-8e4e-35b7cbf72d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042edbde-daaa-480c-843f-85d28732bf8d",
        "cursor": {
          "ref": "c50e2c3a-24df-41ce-af3c-e1d147fb9831",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "32e53539-837e-4320-a3dc-de927d44c0b7"
        },
        "item": {
          "id": "042edbde-daaa-480c-843f-85d28732bf8d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bd013714-e0b4-4c5d-8454-aceb99c942df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6a0e5d-d928-4765-adb0-649840023285",
        "cursor": {
          "ref": "daf7cbda-e38a-4212-9fab-329a83265ce3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b523ff8c-29aa-4d99-8ca2-e7729c10e721"
        },
        "item": {
          "id": "0c6a0e5d-d928-4765-adb0-649840023285",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2c064205-1d4a-4dd1-913c-31dcff5f4480",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5e6df9-6a66-4f5f-b1a2-ce2ad0d11295",
        "cursor": {
          "ref": "5c0e4a87-180b-4218-a5ec-70acdbffc1ea",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "713951e9-08ee-4a14-a4ab-e99fa8f75be0"
        },
        "item": {
          "id": "ed5e6df9-6a66-4f5f-b1a2-ce2ad0d11295",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "da6f70ed-4a7e-4219-9f10-6c22a98ab3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "10ee639f-a615-4455-b8dc-f15da67ca7c9",
        "cursor": {
          "ref": "334cbc37-e07e-4dee-9a36-4f4add2fb05d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ec07e626-9d55-4eba-89a7-94a49c6473dd"
        },
        "item": {
          "id": "10ee639f-a615-4455-b8dc-f15da67ca7c9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7be1b1aa-3d4f-40fc-b0a5-b8340b20b905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f77a18d7-0676-4a41-b58b-a8313f040eb3",
        "cursor": {
          "ref": "6a4ef36d-d4f3-4bcc-bf21-95effb376ef8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5dd54173-9300-49d2-afa3-d028f38abca4"
        },
        "item": {
          "id": "f77a18d7-0676-4a41-b58b-a8313f040eb3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "874df80d-03e7-41ff-b4e5-d3b62b64bbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d4f76288-7496-4045-8ccb-6b1c29be7cfa",
        "cursor": {
          "ref": "b376c982-e938-4f8c-870a-322b3754aa23",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ffa66460-7a97-4935-801b-65c5b51cb4dc"
        },
        "item": {
          "id": "d4f76288-7496-4045-8ccb-6b1c29be7cfa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3a27ce8a-b1d5-4548-997c-c9e1b8110746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "29ec77a5-d28b-4ff4-ab93-0ed0616954bc",
        "cursor": {
          "ref": "d7cd3946-4d8b-4ee7-b1a2-be4da291fd5d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9e9df8d0-6d9e-449f-97b3-2be76bc6663b"
        },
        "item": {
          "id": "29ec77a5-d28b-4ff4-ab93-0ed0616954bc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f3d69a78-f95f-429c-9883-8f3eeebc407b",
          "status": "Created",
          "code": 201,
          "responseTime": 11191,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc000bb-70d0-45c1-9957-d00ccc0c0006",
        "cursor": {
          "ref": "f5ab75ab-8918-465e-8740-9b53037f3228",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3c0ac350-9a8d-4e4d-b556-3be7dd62aa81"
        },
        "item": {
          "id": "afc000bb-70d0-45c1-9957-d00ccc0c0006",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c6dc945b-65a7-4e57-bab8-0de789e1423d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "87698041-f7ca-43cb-967c-ebf369366d70",
        "cursor": {
          "ref": "f2e08b9b-d169-4926-81c4-283b1d26d593",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f5845247-9091-4b9f-9313-0657b9ebad2e"
        },
        "item": {
          "id": "87698041-f7ca-43cb-967c-ebf369366d70",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ffec8a6f-8b57-4c53-bd7a-e15193195ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b12dff3e-89af-49d4-b9e7-b12140c658a3",
        "cursor": {
          "ref": "fa9f279f-17c8-4cde-bfd6-400d9a1287aa",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2e3e5b3b-b4a5-4f9a-8bd5-93b9b280e5a3"
        },
        "item": {
          "id": "b12dff3e-89af-49d4-b9e7-b12140c658a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "67d28563-2726-4592-b9f1-2a0321c504fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce98ba0-0ede-493c-b3fc-1fa8f4cc97e6",
        "cursor": {
          "ref": "0029d973-5197-4edf-af0a-6cefb2b3f340",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "00025f40-abf9-4077-a112-b268f85c30c2"
        },
        "item": {
          "id": "5ce98ba0-0ede-493c-b3fc-1fa8f4cc97e6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6b6c1d9c-93ca-48e1-92be-fe0001c3b514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4173972c-81a1-4ea0-94ff-8d274c6e3fcf",
        "cursor": {
          "ref": "0f6262eb-f22d-48ca-9113-71df3101e6fb",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6117facb-b37d-4470-ba2a-058b3da150f1"
        },
        "item": {
          "id": "4173972c-81a1-4ea0-94ff-8d274c6e3fcf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8903498b-c692-4ea0-81da-2d001c5364fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe053e5-25b4-47cc-9068-90f859dfdd40",
        "cursor": {
          "ref": "3319f2c2-9fd5-4899-aade-2cb119685b5e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b308ca52-ca14-41a5-8ad4-50c819a941e7"
        },
        "item": {
          "id": "4fe053e5-25b4-47cc-9068-90f859dfdd40",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0083c0b4-db09-43f4-b942-ba0ad1d75ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8fd4c0-38d2-443b-a4d4-97385623b28f",
        "cursor": {
          "ref": "b47017f8-7639-4ed7-8efe-2ed96fc295c7",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ed8d50b0-b93a-41c2-94b5-26ca76425ed5"
        },
        "item": {
          "id": "da8fd4c0-38d2-443b-a4d4-97385623b28f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "66cf6d20-5f9f-4fdf-83de-89d2885615df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eca5ee0-0206-4871-bd14-239fc3d4175e",
        "cursor": {
          "ref": "01039f6c-7767-44f6-9815-88ade47df79c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bdd934d1-7d81-46e4-8cf8-d2fb51f73043"
        },
        "item": {
          "id": "9eca5ee0-0206-4871-bd14-239fc3d4175e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1f0460d3-4e8a-400d-b85e-a5361055362b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3d761f-2f56-4da3-b7e1-a4476d4dbd70",
        "cursor": {
          "ref": "3564387a-dc15-479d-b3b2-d09cfd7e86ed",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "70d2a190-d222-411e-b31e-6ae70c3eb3c1"
        },
        "item": {
          "id": "fb3d761f-2f56-4da3-b7e1-a4476d4dbd70",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "105b9bd1-aa2c-4918-8eeb-e92c3a094c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e428ede7-2e79-419c-873b-dc4d6c08ed54",
        "cursor": {
          "ref": "eeb8eb39-5a3b-4fe5-8574-a845fce64d8b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3d4f9013-a9cc-4ec5-b846-d4516c7a15fc"
        },
        "item": {
          "id": "e428ede7-2e79-419c-873b-dc4d6c08ed54",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7ef52929-fbc3-492b-8c0b-75cb78a45110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f60ff7e-2d1b-4f54-a787-ba4994992e1d",
        "cursor": {
          "ref": "c1072b09-7e52-4547-9e90-ac3bf3dfe7b0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7c151434-71b2-4d67-a47a-7d475312e7d2"
        },
        "item": {
          "id": "3f60ff7e-2d1b-4f54-a787-ba4994992e1d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b513060c-eb06-47ba-829a-57c439981702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4747aa-d992-4cb3-aba4-13e6a4e03b88",
        "cursor": {
          "ref": "61f403a7-2914-42b6-9008-794d016e09de",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7265b4e9-83d1-40bb-ba03-275d32daf403"
        },
        "item": {
          "id": "ac4747aa-d992-4cb3-aba4-13e6a4e03b88",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a4246ef9-ba4a-426b-89f9-ca1815c79a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175fd260-6df2-4882-8204-750664e8f08c",
        "cursor": {
          "ref": "86348ddc-3fff-4b6a-a99a-b491d28c4169",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3a1a4f1b-5eec-4a68-a426-614b3fc70b94"
        },
        "item": {
          "id": "175fd260-6df2-4882-8204-750664e8f08c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "271b675b-bb69-4683-964f-9b6b7ca61217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a73136-3405-415f-a11d-89b2637b4d67",
        "cursor": {
          "ref": "9e8cad71-63f7-4935-b9f2-ec27f4fb250f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "84b2b38a-4a26-480c-a3fa-09dc04c97a93"
        },
        "item": {
          "id": "57a73136-3405-415f-a11d-89b2637b4d67",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "24a7af1f-3d95-415d-8e6a-239fb1b8efdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd67eb-feba-44d8-ad4c-93b130b90bc6",
        "cursor": {
          "ref": "90348b1a-95e4-4b73-ac6e-6756be4fbfe8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1747a7a8-ea10-4ff0-9cc1-d4fc491b7be2"
        },
        "item": {
          "id": "29fd67eb-feba-44d8-ad4c-93b130b90bc6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8ce42b04-ca0b-4ba0-9647-52b417933e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2392cd0-2290-4b9a-ae58-d38827382828",
        "cursor": {
          "ref": "6e6053c8-160c-46fc-8b2f-50e1d4d861ed",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "42521d58-2876-4c70-9d14-e9ccd4efdf8f"
        },
        "item": {
          "id": "b2392cd0-2290-4b9a-ae58-d38827382828",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a8643e0e-a7e8-484a-bd1a-030f5dbc4e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa821a0-6fc1-40c1-a651-b3f1a89f2a0f",
        "cursor": {
          "ref": "c4d864b9-94a0-4494-8d1a-2e30271365e5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9fbf4a16-78ef-4d42-9157-5b19d6163595"
        },
        "item": {
          "id": "8aa821a0-6fc1-40c1-a651-b3f1a89f2a0f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0c135fd7-c893-489f-abbf-9ec49423974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3568c6-34a7-44aa-98db-8af1a20954ca",
        "cursor": {
          "ref": "24c28bd9-3288-4330-ac15-aca4bcc3e6b1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "996b9701-7390-464e-b173-dc5f3906317c"
        },
        "item": {
          "id": "9e3568c6-34a7-44aa-98db-8af1a20954ca",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8e1b4a6d-7e76-4e76-b882-155206173eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8b4441-01fd-4fdd-9274-5e3bdc429728",
        "cursor": {
          "ref": "829f36a0-5a6a-4b63-9625-eb5338584e3a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "535d32b7-d88e-4e40-8a9e-517a3695d670"
        },
        "item": {
          "id": "1c8b4441-01fd-4fdd-9274-5e3bdc429728",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "66e9005d-1e3e-4ad5-902f-bb1043899d57",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a64a5657-85c9-4744-9ddf-79247cb9b22f",
        "cursor": {
          "ref": "c6c75edb-c5c0-4634-8a86-92b32767c9f3",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ba4638f6-d81c-4257-9588-67888f0382b7"
        },
        "item": {
          "id": "a64a5657-85c9-4744-9ddf-79247cb9b22f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4ec9620e-896c-4199-ab54-4bf45446ed54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46692a30-42ac-4f4a-8d82-c3efe632bc81",
        "cursor": {
          "ref": "3c790fb4-fb70-4f20-91fa-ea6e4a9ae14f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e34aac3d-2342-40a2-a260-eb9bd540a035"
        },
        "item": {
          "id": "46692a30-42ac-4f4a-8d82-c3efe632bc81",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2c385170-98f7-44d3-8fa5-f1ff9d772a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc77a9a-9409-4402-8ae0-e4731b31729a",
        "cursor": {
          "ref": "a05a430c-a22d-401b-bb2f-bea63f007362",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e088446d-480e-460a-8a0b-6f631d88b464"
        },
        "item": {
          "id": "bdc77a9a-9409-4402-8ae0-e4731b31729a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8946d72d-432e-4d69-9caa-e5de39ef1d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ab833c-5198-49e9-95b1-dcbcc38c8963",
        "cursor": {
          "ref": "6ea960d1-3ad3-411d-88cf-e655d6ed68cf",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "77121175-02b2-4fa8-9838-932855a8c49a"
        },
        "item": {
          "id": "99ab833c-5198-49e9-95b1-dcbcc38c8963",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eeee7d16-ec18-4825-9911-aa6226ceba22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df70b61-7204-48a0-87ab-49d93d0a7cb4",
        "cursor": {
          "ref": "09d7b40c-c43e-417d-84fc-98b19361ef1b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "565d03f1-f8aa-4de2-9492-6bcb0e862205"
        },
        "item": {
          "id": "9df70b61-7204-48a0-87ab-49d93d0a7cb4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "36677243-5491-4630-862c-e9bc0bec44b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b84d09-b9b1-44c1-a1a7-39542003c56f",
        "cursor": {
          "ref": "30c299f2-ad88-454d-b175-687ed4bfb88a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cc4fa904-f124-4e67-87fa-a1605f216ff3"
        },
        "item": {
          "id": "94b84d09-b9b1-44c1-a1a7-39542003c56f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "34a2d642-d831-4f46-abf3-238be9116328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90985666-3a93-4eef-8009-df8ef7f80f59",
        "cursor": {
          "ref": "f9636d4c-40f1-466c-ada4-575aa3941c69",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8ea47d5c-b654-43db-8073-6f25b24b4873"
        },
        "item": {
          "id": "90985666-3a93-4eef-8009-df8ef7f80f59",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4b2dd6cd-0e70-4201-aa95-21563ece050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578681f8-6e84-4eea-b9c5-f52af72ff18b",
        "cursor": {
          "ref": "4236e091-3a10-41d7-ba32-64d050afa80b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "acf3abd0-e450-4047-96e3-e9c2a482eab4"
        },
        "item": {
          "id": "578681f8-6e84-4eea-b9c5-f52af72ff18b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a50dc2d-d40a-4ca6-80df-07426ea5d5a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "746651c2-9d05-4bb6-ad19-14fcf0231622",
        "cursor": {
          "ref": "cbaf805c-027f-4fe4-9e36-34de5edcaf09",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "829a2fe6-94c8-47d2-a2c9-652922bc0eef"
        },
        "item": {
          "id": "746651c2-9d05-4bb6-ad19-14fcf0231622",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6a2a986a-d24f-4391-b3e6-cb02c1a1a161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3279893-c329-4ad1-af39-1060371d730e",
        "cursor": {
          "ref": "ee5ad35f-999f-4a01-b19d-32b86431d80d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5138de2a-908a-4557-a8e5-733853761f7a"
        },
        "item": {
          "id": "a3279893-c329-4ad1-af39-1060371d730e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "67814be3-41cc-4418-bb65-3c7d4fe67551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ecd40d-4bc0-4f1b-b3a3-ed28ae507071",
        "cursor": {
          "ref": "6e38f123-a500-4e93-93eb-2bca00a06081",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fe8c6cf3-82a6-4396-ab35-2dfe6cf0c2e4"
        },
        "item": {
          "id": "78ecd40d-4bc0-4f1b-b3a3-ed28ae507071",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "99b1fcd0-35ec-496c-a91c-37139bcb91a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751a5bad-e830-464a-8287-49a67cea3738",
        "cursor": {
          "ref": "09bb2dec-72d1-4d28-9f89-65b886dd9200",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "650d3d6c-52b5-4f7f-acff-3194413b6b36"
        },
        "item": {
          "id": "751a5bad-e830-464a-8287-49a67cea3738",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e18e3784-783f-4e13-88c1-00a1607f01ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f1270-4230-4002-8669-a3b87dc8b2ff",
        "cursor": {
          "ref": "c0334f80-c88b-4c9b-89a1-76ead625be9c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cb29e00f-150a-4274-8d17-3c56dfaa8224"
        },
        "item": {
          "id": "891f1270-4230-4002-8669-a3b87dc8b2ff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "60058c9d-df21-487f-8a91-06b777e763f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a699de-2143-45f6-aae7-b5e64f75e2bc",
        "cursor": {
          "ref": "3929e797-5a88-4a32-b87c-21ad50f1ee59",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "09f5ec4b-204d-44bb-aec1-a508f954638e"
        },
        "item": {
          "id": "e3a699de-2143-45f6-aae7-b5e64f75e2bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b031ebcb-6396-4e84-91ca-495f162e9868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b5b4a2-5210-4216-9853-8048a15cdbc3",
        "cursor": {
          "ref": "8f41962b-7e50-4b37-a6d2-1ac021b4c68f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a97d3930-178d-4dff-9ea8-05e13903f3fe"
        },
        "item": {
          "id": "c0b5b4a2-5210-4216-9853-8048a15cdbc3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b92036fa-dc2e-4e12-afb7-96573582941a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2f940f9a-dcf1-40d0-b59f-13b1f1a4c28d",
        "cursor": {
          "ref": "560f6796-3610-4f44-8ada-e972c44d8b03",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6a5ac09f-0a77-431e-baed-5c0031424936"
        },
        "item": {
          "id": "2f940f9a-dcf1-40d0-b59f-13b1f1a4c28d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fcee9b63-2980-4007-a5a7-98c0dceeff33",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f260f251-6ae2-45d1-bcbc-7f9a1fee42b4",
        "cursor": {
          "ref": "3f9cc5bd-2d83-4d63-b5a3-b2b865a3ebbd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4409d97e-13af-40d4-95d4-be59e895d972"
        },
        "item": {
          "id": "f260f251-6ae2-45d1-bcbc-7f9a1fee42b4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "459197ec-9419-4fd9-9a84-2ac1876a195e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e81d346f-7617-44e5-9b10-e58a61a6eb19",
        "cursor": {
          "ref": "bf2916e4-92fc-4e25-8851-bb30ed917bc7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "baf73785-c539-449e-b826-2ee836b1cf87"
        },
        "item": {
          "id": "e81d346f-7617-44e5-9b10-e58a61a6eb19",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "87717554-8dbb-49e1-857e-15ff3327b7ba",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "5cf844bd-fdfa-4dfe-867e-dac419ab85bd",
        "cursor": {
          "ref": "8bb03a20-0f18-43db-b104-319bfcf58e7d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "466c6568-5866-47fa-a2a4-2c017524ecca"
        },
        "item": {
          "id": "5cf844bd-fdfa-4dfe-867e-dac419ab85bd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4e6a776a-ffa8-4a29-a67b-96645eface31",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2f37c908-3789-4556-af08-969f2ddb9e41",
        "cursor": {
          "ref": "3c5f5865-48df-4f08-ab63-e6e4549586e6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "57bf6731-c82b-4e4a-95ac-b9a355bb95f4"
        },
        "item": {
          "id": "2f37c908-3789-4556-af08-969f2ddb9e41",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "44997ae8-01a9-45a0-b92b-702a97c15df6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "cfbbf9e2-7120-47a4-8165-81958172b742",
        "cursor": {
          "ref": "b3327b6c-77cc-4085-95da-c24bedef4f28",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1ea3b0f6-7ca3-425e-8c61-f9978df1e275"
        },
        "item": {
          "id": "cfbbf9e2-7120-47a4-8165-81958172b742",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5dc13d2d-9aa5-411f-a35e-3b1d7a1cb280",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a471e064-1b7d-41e9-ba7d-2755bdb489a2",
        "cursor": {
          "ref": "88771326-187e-444f-a578-20379d184f01",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3ca7ba95-cc4d-428c-bd35-9c93c95bedae"
        },
        "item": {
          "id": "a471e064-1b7d-41e9-ba7d-2755bdb489a2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e4af2aa2-52f8-4fe2-8027-d9e91f6bccc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f60a02-9421-4119-8194-e00e52024b4d",
        "cursor": {
          "ref": "f72c10ce-7482-4453-84b9-3016af2f4036",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e7bda061-8524-411c-86d5-68a9a511af5b"
        },
        "item": {
          "id": "43f60a02-9421-4119-8194-e00e52024b4d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0c54d527-8f06-4a18-b50b-59079c2c9ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24502ee-85f0-4a73-aa72-b88b015df08d",
        "cursor": {
          "ref": "b618390e-9a48-4f27-a2d8-946b6ee519ee",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1257e01c-6dee-4102-a831-c60db9cb52c6"
        },
        "item": {
          "id": "d24502ee-85f0-4a73-aa72-b88b015df08d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "86b88471-80b7-40e3-8c2a-4103578e0964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bc6742-68c2-4dca-810d-c951cd1d660b",
        "cursor": {
          "ref": "7a6d5c57-a4ab-4d2c-b822-1bb3bdf91de0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cd32bb92-5666-4d85-af08-5080ff1675f0"
        },
        "item": {
          "id": "67bc6742-68c2-4dca-810d-c951cd1d660b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "755e3ce7-5509-42db-8855-294bfb5d67cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbd617d-e49b-4c2b-8f57-4bafe8e92bdf",
        "cursor": {
          "ref": "93818b0c-32bb-46be-a5b2-904959e59b1d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a0a33438-8619-4ec2-acbf-eb0c1c4b0597"
        },
        "item": {
          "id": "ebbd617d-e49b-4c2b-8f57-4bafe8e92bdf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "71544322-e41a-4f1c-82ea-74d12243de01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8956f48-4434-4b8d-860b-55d9adb1dab2",
        "cursor": {
          "ref": "fd3a32cb-b632-4a7b-bb06-3dd3541801a8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fd537e54-c80f-4656-8c51-56a6757ad08c"
        },
        "item": {
          "id": "b8956f48-4434-4b8d-860b-55d9adb1dab2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "14f0c88b-b0da-4e30-9cfe-8dd0c9e64dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d440bf1-8ac9-4aac-8972-df07c1fc159d",
        "cursor": {
          "ref": "83e2232e-4217-49bd-a8f9-59cdbbb5ce61",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7b5d3a69-393f-4c90-871d-b2dacbb221e9"
        },
        "item": {
          "id": "9d440bf1-8ac9-4aac-8972-df07c1fc159d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "281fe074-1073-493a-be98-0ad619d79053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af9e703-89a7-4036-9368-0d170aab1cde",
        "cursor": {
          "ref": "345e7c5a-ae48-4b60-b559-6df9b437f896",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "75e21126-3434-49d7-b777-9dbb0db1cf71"
        },
        "item": {
          "id": "4af9e703-89a7-4036-9368-0d170aab1cde",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "495af2c6-5bfe-41ac-8983-35bbd27e1295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c37f8f-28dc-4a51-abfc-1b00b941e8d8",
        "cursor": {
          "ref": "f37ec261-71c9-4231-bff8-4eb20b222093",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "40dfeb80-9c07-4789-8d0f-4ceac4fa16c7"
        },
        "item": {
          "id": "05c37f8f-28dc-4a51-abfc-1b00b941e8d8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3a90f30f-77cc-4323-beb0-183dd5f0ff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d16938f-985c-41bd-bc89-5074128022b7",
        "cursor": {
          "ref": "e1d1bdaa-07db-447f-bc3c-055e28186634",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "af51d1c8-91d3-4842-8bea-5b831c886337"
        },
        "item": {
          "id": "3d16938f-985c-41bd-bc89-5074128022b7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6a0aecd1-14b4-4caf-af1e-547681f5ebe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a6c99f-e6e1-46af-9fd8-d2e4968929e4",
        "cursor": {
          "ref": "1ad42212-910f-4f11-9db2-b7aa34411d27",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a5be4a5d-da03-4316-ad3c-ac25943135ea"
        },
        "item": {
          "id": "c6a6c99f-e6e1-46af-9fd8-d2e4968929e4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2753f48e-e0e5-49a2-ab49-b180f530d33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2649c636-ef53-4db2-b56d-6e82a5003b16",
        "cursor": {
          "ref": "6076da95-e098-4614-8817-337c3041cec4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "616a0b23-2c21-4812-b30f-a5a434a1d7e6"
        },
        "item": {
          "id": "2649c636-ef53-4db2-b56d-6e82a5003b16",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "60a6d2aa-8616-4f4f-886d-a35c72a90956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8569e3-0c30-4850-8ce4-6a265687d0a6",
        "cursor": {
          "ref": "2c994b28-6df0-44ec-90e6-0118ceaff0f7",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fa03d67c-b27c-4f29-bea0-3d971edfc611"
        },
        "item": {
          "id": "3e8569e3-0c30-4850-8ce4-6a265687d0a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "86c4ca25-8e1e-4454-ad9f-c779ebb362c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89641963-508b-42d0-9adf-975aba7b94e8",
        "cursor": {
          "ref": "b64955f5-bb93-411f-be13-603ebdd3e4c5",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e4e4a6d4-8012-47e7-aeab-950ccde04f17"
        },
        "item": {
          "id": "89641963-508b-42d0-9adf-975aba7b94e8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f5828139-fb7b-44fd-9399-65681314d2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eadb90-67b4-471f-88ab-dccf856f4afc",
        "cursor": {
          "ref": "c43566fd-ddec-4278-84ff-ca28aa413130",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2b03712e-fc2c-4d7a-bbe6-22c0e94f4f4a"
        },
        "item": {
          "id": "e8eadb90-67b4-471f-88ab-dccf856f4afc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f0808fc4-ac4b-4aa6-87c3-a598507f45a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52749b76-d9a6-4198-9e75-2c902232322a",
        "cursor": {
          "ref": "83096422-0232-4751-8fa2-317b346a1cf6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c103dbdf-bb21-436a-b53f-5b62e76563d0"
        },
        "item": {
          "id": "52749b76-d9a6-4198-9e75-2c902232322a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dbd6addc-5f54-4076-8ed7-fc33d68ffec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aea2c2-d3e1-450a-9ca2-8dfa2f3798e6",
        "cursor": {
          "ref": "06ccbcdd-36f4-487a-b3ef-30540a38372f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "12440bc7-05e9-4c99-801c-3570e27fa79b"
        },
        "item": {
          "id": "57aea2c2-d3e1-450a-9ca2-8dfa2f3798e6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e326c87f-5d7b-486d-acef-95fd23b9e6da",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "17d5a23f-6e61-41ae-b9f2-6dec23730568",
        "cursor": {
          "ref": "8e79b5b9-c65c-4587-b062-18da176390fb",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b5b32186-ff07-4a53-b7b6-50f6b9335fd8"
        },
        "item": {
          "id": "17d5a23f-6e61-41ae-b9f2-6dec23730568",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2abd5d33-d924-4617-b6ea-4c64c062778b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5e77ff-5695-44c2-9589-e9171d69c18c",
        "cursor": {
          "ref": "2ff84d00-db4e-451c-8ff8-88ce3206b688",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "155a78ae-d596-4d8b-a296-c0d2c043ea28"
        },
        "item": {
          "id": "8e5e77ff-5695-44c2-9589-e9171d69c18c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bc44824e-9c4f-43b1-8a55-f370b7fb7250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eb10e2-afd1-40ff-9b06-93601c108758",
        "cursor": {
          "ref": "d51158a2-4d41-49ac-ab2d-77fc6cce5d13",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b4b4f82a-4e72-455e-87f4-268fbab704d6"
        },
        "item": {
          "id": "b4eb10e2-afd1-40ff-9b06-93601c108758",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "34ebdc75-369a-4fa9-aac3-08caa058ddd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ef9626-b889-4acb-a8a7-527d6f03a90a",
        "cursor": {
          "ref": "717f00e1-2fac-4173-be8a-2b36a224334d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b9f317e5-0b52-4746-90c0-ebcf6152d95f"
        },
        "item": {
          "id": "68ef9626-b889-4acb-a8a7-527d6f03a90a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "de5f2a73-9ea5-4367-92c2-a626f3a47fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128f5c67-635a-4ba1-bdcc-975455213d5e",
        "cursor": {
          "ref": "82a6b69e-b349-4fc5-923f-bb4d410e7d22",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "40bf2b41-48b1-47b6-ab39-8201c2d43775"
        },
        "item": {
          "id": "128f5c67-635a-4ba1-bdcc-975455213d5e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "23078ee8-49a3-4637-a50e-39809363997e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b2b554-9631-4886-97f1-5101c2db57cf",
        "cursor": {
          "ref": "d8d59b76-dc8c-4474-b3fb-b245da6a1b9b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7eb6d824-eb43-4234-8ba3-31f76bc68d04"
        },
        "item": {
          "id": "c8b2b554-9631-4886-97f1-5101c2db57cf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb0b8f34-c043-48f7-9c7b-954c00a145f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc36daa9-72d5-42ba-be86-66ed1f88e54b",
        "cursor": {
          "ref": "45ff6c60-ad64-4b29-9c20-ca9d656a33e2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d873a25f-bfca-44c4-9faf-e440d9853b3d"
        },
        "item": {
          "id": "bc36daa9-72d5-42ba-be86-66ed1f88e54b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f118e78e-79a6-4060-bd9a-23a45544df6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e9f373-b215-45c2-8041-fcaf701d8373",
        "cursor": {
          "ref": "bfdf76e7-e348-4971-94bb-a9ee44768c4a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fc04a2c9-6bf8-4b9e-9164-d9527c3cca9b"
        },
        "item": {
          "id": "e5e9f373-b215-45c2-8041-fcaf701d8373",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "671d8ada-cfdf-42c6-8015-cb52eba82aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a815711-d323-4957-9502-a9c5d5e1a838",
        "cursor": {
          "ref": "532bd486-fe6e-458d-aa77-5285ed8c952e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ed952d60-670b-4ab6-bd43-9ca79740a440"
        },
        "item": {
          "id": "6a815711-d323-4957-9502-a9c5d5e1a838",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c0c19a2a-b109-4b03-83c0-1510f9ddd69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa15338-8638-464a-9fb9-7a1b0c241f36",
        "cursor": {
          "ref": "5769946d-3788-4c39-a323-e652dbda7b13",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c49cd934-ef39-4bb2-a2e0-77a6e6bc2ec3"
        },
        "item": {
          "id": "caa15338-8638-464a-9fb9-7a1b0c241f36",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "365ce5c0-19bf-4c13-b3b7-9f04a14244fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150603f4-0972-4766-9f22-1faea6013219",
        "cursor": {
          "ref": "577870c5-b4c5-4b3a-b5c3-1960931ad0af",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "64ff64aa-c6a5-4bd1-8284-e68425ae0ebc"
        },
        "item": {
          "id": "150603f4-0972-4766-9f22-1faea6013219",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3d1d47ad-c73d-4334-8d34-fc3453da17a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8ef8b2-c565-498b-8a80-ed545f2a1e3a",
        "cursor": {
          "ref": "a56a1f9a-df08-40e1-a974-26836fec44fd",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c3f4e26c-fbab-4034-bb5f-a379ffd7a2c6"
        },
        "item": {
          "id": "ce8ef8b2-c565-498b-8a80-ed545f2a1e3a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5d92bad6-0358-4171-98c5-7b4e036a20d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2338b2ba-7a90-417e-8f7d-6aa2231497f3",
        "cursor": {
          "ref": "9ad30927-2a96-49e3-b881-d06125681d8f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cf3ea339-9523-426f-8d1c-1e30f6e566dd"
        },
        "item": {
          "id": "2338b2ba-7a90-417e-8f7d-6aa2231497f3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5bb39ce8-c33e-4507-bb98-d2258a149148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6935a7-b097-4d24-8a11-1253e19281ed",
        "cursor": {
          "ref": "04332add-9315-4799-946e-8f87aa7a730d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ff2e45e1-005d-4ee1-aa63-45d0976cb4dd"
        },
        "item": {
          "id": "ea6935a7-b097-4d24-8a11-1253e19281ed",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "235b302b-e428-4416-94ce-41fe4f6b1c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3aea6f-840b-4faa-b0e1-1355a9ea5321",
        "cursor": {
          "ref": "a3b1d79c-3242-47fb-a884-12c24b1de317",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f0b227f6-83cf-49dc-95f3-b9dec697bb35"
        },
        "item": {
          "id": "ef3aea6f-840b-4faa-b0e1-1355a9ea5321",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5b58c450-fdef-4ce6-a101-db75f3436ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becd96bc-d657-4d82-81fa-07e5ff3583f4",
        "cursor": {
          "ref": "77576373-e7c6-471e-8f49-ded576f88975",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fa16b5d0-7dd5-43b8-8862-316a01f11bb6"
        },
        "item": {
          "id": "becd96bc-d657-4d82-81fa-07e5ff3583f4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31dfab3d-5223-4f05-b33d-039f14ac2885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a967221-c0ba-4d0d-bc33-0ec07f79dc08",
        "cursor": {
          "ref": "c1429992-c23a-4364-99fb-47e13484ae89",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ae2d9849-6afd-48eb-ad2d-125f19c37f69"
        },
        "item": {
          "id": "9a967221-c0ba-4d0d-bc33-0ec07f79dc08",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6c79a858-80c6-4b0e-b6f3-64f41128d415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5456a2c-c09e-4fd0-a50c-709dc83997f4",
        "cursor": {
          "ref": "28ccf641-e89b-4a45-ba3b-dfbedba2c87e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1f460738-d253-4733-a34c-9f97889f4482"
        },
        "item": {
          "id": "b5456a2c-c09e-4fd0-a50c-709dc83997f4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ba77889f-b3b4-46cf-a3b9-e31044d6fa38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59656a10-f0a1-41b5-b3f0-42c89afd5f87",
        "cursor": {
          "ref": "2c6d9267-b025-434a-b2bc-600a7553bda8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1912dad0-7a78-4a20-8aac-21ebb84d3bc9"
        },
        "item": {
          "id": "59656a10-f0a1-41b5-b3f0-42c89afd5f87",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a588fa3c-5397-4a57-bcb5-c1d9f18c1365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe040a08-d767-404b-81c1-a8ab7813e74b",
        "cursor": {
          "ref": "7211c636-c954-452c-983e-dab37224470b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "623ce5f4-afec-4382-9c8d-6e9c228911ca"
        },
        "item": {
          "id": "fe040a08-d767-404b-81c1-a8ab7813e74b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a00eeb25-85c1-4c46-ad46-b05b33405b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf746529-3047-459d-9171-899b7c5d576b",
        "cursor": {
          "ref": "633e7217-123e-492d-922c-1da06778ff85",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5456db16-e54d-4d32-97a1-b34da022b4e1"
        },
        "item": {
          "id": "cf746529-3047-459d-9171-899b7c5d576b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e3315c7f-bf1e-422d-afed-0f42cfb3b094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3559e8-5542-4950-8f57-f4025e0ad5f6",
        "cursor": {
          "ref": "6904e31d-b56b-42c0-987e-fce7c5a733c5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ea089ab9-3031-482b-8024-94bfde8e15a5"
        },
        "item": {
          "id": "6a3559e8-5542-4950-8f57-f4025e0ad5f6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d6c34931-2546-4c95-b235-2c77150f245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d26859-847e-4df5-8c42-efa3dc680f79",
        "cursor": {
          "ref": "e97cb420-0294-40f7-9b7b-eb5979ea9e3d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d8e37719-c132-4d36-a262-ed370769beb3"
        },
        "item": {
          "id": "31d26859-847e-4df5-8c42-efa3dc680f79",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ec3e6c1e-942c-4459-85ab-3d9ac7736fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eec4b5-0a33-47d2-a6d5-7490230ac0ce",
        "cursor": {
          "ref": "7994bccf-73e4-4df2-8aec-125e8baa6d61",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1ec2ceb8-fbbe-418f-a069-5bbb5b8527b6"
        },
        "item": {
          "id": "12eec4b5-0a33-47d2-a6d5-7490230ac0ce",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "03ecf314-355b-425d-9c91-10f483d41f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cf1458-d789-4eaa-b996-a3f40b8ffc3b",
        "cursor": {
          "ref": "d1c42ace-3a49-437e-93c7-a8da87b34f74",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2b762659-4abc-4942-b05d-54b306da422a"
        },
        "item": {
          "id": "c3cf1458-d789-4eaa-b996-a3f40b8ffc3b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bcc2e1cd-b550-495f-8f1d-2fff8f833bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df442e1-1ed5-420f-8679-72994c48eb09",
        "cursor": {
          "ref": "cd7f9d69-ff3e-42c0-8a2e-e4846c88c603",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5adf83f3-8b31-4489-9ad4-3a58b9dcce6a"
        },
        "item": {
          "id": "6df442e1-1ed5-420f-8679-72994c48eb09",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "53358615-8e6b-442c-a51b-bb46b9ea4523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22d4127-e259-4f4f-8e13-2a35723ea00d",
        "cursor": {
          "ref": "5f67ad7c-50e2-4249-9624-a8c410eb2ab5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ca6bcadd-12b6-4220-8e72-0d270e24ea16"
        },
        "item": {
          "id": "d22d4127-e259-4f4f-8e13-2a35723ea00d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ef7d7b70-3c2f-49dd-ae56-1fb6bb60fc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea89111b-3a70-43a5-97a7-8c7a993834b2",
        "cursor": {
          "ref": "f05f187c-81ed-457d-95b7-18fccfc99f29",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "30c0738b-573f-499a-8544-7da4fd06f265"
        },
        "item": {
          "id": "ea89111b-3a70-43a5-97a7-8c7a993834b2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ef23f957-afde-4115-abc8-0e88f57dd66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2eb8f0-2693-48a5-b54c-bb38b7818d31",
        "cursor": {
          "ref": "7c2fc79b-9c50-4760-bd21-dbf657839c0c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "09587a74-1338-4b1e-a1b9-4ac35172a424"
        },
        "item": {
          "id": "3b2eb8f0-2693-48a5-b54c-bb38b7818d31",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c043374c-abef-4a88-ac41-fa3d15de7621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bcd27c-fd94-4dbe-8560-197e6cf60983",
        "cursor": {
          "ref": "e69e8a86-08be-41ae-9eb8-64bb0a3b3d0f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c9e23846-606d-45d5-abe6-299c445f6c58"
        },
        "item": {
          "id": "78bcd27c-fd94-4dbe-8560-197e6cf60983",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a260fc1e-289f-458f-a727-e53f76d9c0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36871dc3-df1f-4a2d-ae70-5867013f5136",
        "cursor": {
          "ref": "04a1d0b7-f7c4-46b3-913d-4dcfa21f6c55",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8bd7404f-fcf4-4c03-9117-b5edae801afb"
        },
        "item": {
          "id": "36871dc3-df1f-4a2d-ae70-5867013f5136",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2ea0a66d-50b2-40b0-9e33-70eff8d1bc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa00d25-6a68-4592-bb31-86ae61a0a6de",
        "cursor": {
          "ref": "4577facf-9f3a-468d-ad18-5a54dcc71dbf",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ade7ea3c-4725-4083-9f69-f218010dd3ce"
        },
        "item": {
          "id": "caa00d25-6a68-4592-bb31-86ae61a0a6de",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d299d892-b4e3-4a78-9bd2-c40c3090bc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c180a07f-a271-476f-8d0f-f0889045dd28",
        "cursor": {
          "ref": "5c7905f4-f1f4-4475-a8a1-a87c2a72b68c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "101e302f-4e40-4346-9b86-7539ac01b5e1"
        },
        "item": {
          "id": "c180a07f-a271-476f-8d0f-f0889045dd28",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eb876898-ee79-4a33-9988-1990a404f4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a363b44-af26-4eb2-be8a-8927b6e41290",
        "cursor": {
          "ref": "23c8e6a7-517a-4311-9b9a-ac3c0cca0cf8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "384840d2-8669-4653-8e6a-45ead5d7c886"
        },
        "item": {
          "id": "1a363b44-af26-4eb2-be8a-8927b6e41290",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "137368e8-716e-47b1-b516-eda6d33f53f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708f3c54-8e27-4e76-a5fe-fc309b929260",
        "cursor": {
          "ref": "3ac4e4b3-564e-4fef-9201-5a87bebaeee9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9845d08d-a240-47d3-ae40-ace39260d501"
        },
        "item": {
          "id": "708f3c54-8e27-4e76-a5fe-fc309b929260",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e77ac856-1099-4f2b-bf6d-fe9a1ccd78c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b22fd7-1f57-422a-aa94-f7cc733f7c88",
        "cursor": {
          "ref": "e92ba4fa-6069-4d27-83fb-3de94e1870be",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fed0235a-fa91-4797-8274-deab16240eef"
        },
        "item": {
          "id": "14b22fd7-1f57-422a-aa94-f7cc733f7c88",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d0f1f27f-6eb0-437b-9709-46cf60750807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac35ec9b-d2e0-4029-8ae0-4b68ef9c06ae",
        "cursor": {
          "ref": "69bd5ead-e975-4a36-835a-f8f8ad2bd195",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "476b929d-47db-4981-980a-c82b08b252a4"
        },
        "item": {
          "id": "ac35ec9b-d2e0-4029-8ae0-4b68ef9c06ae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b7812df3-dd3a-4017-a50f-b83270325a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0b640e-a281-43b2-b507-8c4345278d89",
        "cursor": {
          "ref": "fd9eb9e2-05db-41bb-adc8-4bcc6438f07b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f03dffb-c425-46cb-91dd-7c60afb35419"
        },
        "item": {
          "id": "8b0b640e-a281-43b2-b507-8c4345278d89",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "df7b5ad1-20d4-4de4-90f1-d35022ad5c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a17aa17-af49-464b-b988-dc08bd0eab7f",
        "cursor": {
          "ref": "66f5051f-e772-4749-b5ee-d2e58abd1488",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0abdbf22-6a31-436e-b09c-523223694122"
        },
        "item": {
          "id": "8a17aa17-af49-464b-b988-dc08bd0eab7f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "99348ecc-5251-4ba3-b412-ca9f8a047344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb062a88-8b2f-4d86-95c9-e2a7625b7396",
        "cursor": {
          "ref": "d2347ed2-1bb5-40a8-bfa6-dfd964098d0e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cdf6d2b2-4009-4106-8a08-41e4a2134b7e"
        },
        "item": {
          "id": "bb062a88-8b2f-4d86-95c9-e2a7625b7396",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "971e315e-2867-4e9f-bb41-83429dd53a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53628d0e-41b2-4aad-be5f-bbfe4c38d8ce",
        "cursor": {
          "ref": "2f7f68b6-b3f6-4a1e-9eb8-4332400c3bd4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fca43d69-cc28-4cc2-8014-d9ba232bfc02"
        },
        "item": {
          "id": "53628d0e-41b2-4aad-be5f-bbfe4c38d8ce",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "40dd3372-4e8c-4e83-8e1e-e42d7b2e23b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac839d52-80b8-4108-a3e7-a8995523933b",
        "cursor": {
          "ref": "3e7217e2-d890-413a-91f6-0cbe8fe5276d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4508de84-fdff-4975-bd49-07bf0d3dfc94"
        },
        "item": {
          "id": "ac839d52-80b8-4108-a3e7-a8995523933b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "20f4daf4-4aa3-4da0-bd63-1cb8e55b7e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa61c86-da14-41de-b281-10ec214e7109",
        "cursor": {
          "ref": "65aedb82-1582-4449-8ee2-c3c044ffab96",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2409bd6b-9e58-4888-b456-b4b9ad2e1984"
        },
        "item": {
          "id": "5aa61c86-da14-41de-b281-10ec214e7109",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a65f254d-50dd-4945-a059-04ba3176f8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738c09f8-c402-4a7b-81ac-6ffbc87d2e61",
        "cursor": {
          "ref": "3cc470b3-368d-45b2-9322-41db282935d0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "228d7cd2-1889-49ba-8e5c-5d9c36521e62"
        },
        "item": {
          "id": "738c09f8-c402-4a7b-81ac-6ffbc87d2e61",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0b85882b-fb4a-4338-8e68-9b794cdba578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80e1b96-046e-481c-b5a7-922ce34e918a",
        "cursor": {
          "ref": "23b6c7bb-2a6e-452d-a50a-d4289588d917",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c97648f1-ded7-40af-a597-5076211669ed"
        },
        "item": {
          "id": "a80e1b96-046e-481c-b5a7-922ce34e918a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "966e4d75-f703-45a9-8eb1-c5c2cd4c7161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681af3ab-96cb-4ff6-b5aa-003da5668872",
        "cursor": {
          "ref": "2b1456df-e6ac-44e6-80e6-56e8d2bf83f0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d11eb138-af3a-4831-ab53-b794a20ef2a3"
        },
        "item": {
          "id": "681af3ab-96cb-4ff6-b5aa-003da5668872",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6911a422-a17b-4ffe-9d26-37665f4c20b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0205e7df-5f19-472f-b33e-e0803002fa33",
        "cursor": {
          "ref": "9f117392-f211-400e-82ad-63f68bd3b02c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ad69e680-ea1c-483a-bd29-b502be5d0558"
        },
        "item": {
          "id": "0205e7df-5f19-472f-b33e-e0803002fa33",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d38bd427-a549-420c-a626-7370e29f1e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e55ad23-0211-4f6f-b9d1-a252fa42ff7b",
        "cursor": {
          "ref": "27c3b8af-9506-4fc0-b0b0-c873dc0933d7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e3b7271c-f39d-4e4e-9b2c-b08c20dcccd4"
        },
        "item": {
          "id": "0e55ad23-0211-4f6f-b9d1-a252fa42ff7b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "333a867f-4642-4072-acc5-f78b5b64742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a3e7d2-bf21-4589-a528-1743dd5c288b",
        "cursor": {
          "ref": "6c6cf959-c7cb-4f3a-b613-472c717a4468",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7cf83dfd-d498-4e4e-82e0-aef2ad023f55"
        },
        "item": {
          "id": "50a3e7d2-bf21-4589-a528-1743dd5c288b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "57e70d8c-4811-4909-b254-a965ace543e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45a5f1c-8762-46b7-922f-31fc686a380b",
        "cursor": {
          "ref": "f23588a8-f836-4780-adfc-0b06d860994c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0b3ba5da-7eba-45d6-b029-691e9bc43d19"
        },
        "item": {
          "id": "e45a5f1c-8762-46b7-922f-31fc686a380b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "456cddd7-bcdc-4383-943a-6ad1755aa142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03d0e34-20c1-4b4a-bc17-c2075afae868",
        "cursor": {
          "ref": "41bf70a6-1f23-4b71-92ac-eddef5468779",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8a929a77-dfd9-4a1c-ad09-e596695b03a1"
        },
        "item": {
          "id": "d03d0e34-20c1-4b4a-bc17-c2075afae868",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cf03ab50-ccef-41ab-873e-c0cee458a533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abec1ba9-8540-4d00-98b5-a41e00a15c1f",
        "cursor": {
          "ref": "a62fae14-ca61-4b16-a5a0-b9cdd8c793fa",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "84667528-b8ed-4c07-8f50-a7f834374038"
        },
        "item": {
          "id": "abec1ba9-8540-4d00-98b5-a41e00a15c1f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1e3f3f0f-7ba1-4a92-87f3-606d2b6e23bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb4e901-6930-423b-9986-2150dbf660fc",
        "cursor": {
          "ref": "396ff303-09d0-4a44-833c-880d474c9f7f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f6c0befd-a79f-4583-ab28-030fed14709d"
        },
        "item": {
          "id": "afb4e901-6930-423b-9986-2150dbf660fc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b82c8273-efb8-45ba-a6fb-ff17a443fb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b1fdf8-db6d-4cc7-8ca3-2061cdef8623",
        "cursor": {
          "ref": "a5664f84-ff55-4cab-a26a-293f8f4a8e7b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "817603ee-b489-4f81-8906-fb379fc7f051"
        },
        "item": {
          "id": "91b1fdf8-db6d-4cc7-8ca3-2061cdef8623",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0f877e74-86bd-4151-b510-4a76482bd884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8337be-867e-4217-95d3-43cb4713e6a1",
        "cursor": {
          "ref": "f6ae9093-0d2a-4015-8854-b1e5226708fc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7d3b1575-dcb5-4547-85fd-7312e9d5cfc0"
        },
        "item": {
          "id": "9d8337be-867e-4217-95d3-43cb4713e6a1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bc2facd6-2757-4b4f-b254-752c36ab3339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07501e52-5cd0-4998-8532-23e67a20b8ac",
        "cursor": {
          "ref": "a416d805-cc4a-4648-bd98-4291e8ae0236",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e3c70aa3-4924-49f4-b1e7-627a32839ec1"
        },
        "item": {
          "id": "07501e52-5cd0-4998-8532-23e67a20b8ac",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "308f71fb-e84b-41dc-b62f-d50279bc209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73728a9c-47d8-412d-a8d6-f3b44fab9c0e",
        "cursor": {
          "ref": "fd9244d2-3144-4589-8a95-4db79fad0fb7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ea5cc209-2d94-45b3-bce1-56e87983ed38"
        },
        "item": {
          "id": "73728a9c-47d8-412d-a8d6-f3b44fab9c0e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "172a7069-f6e6-46b1-9eda-7cbab75bb65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eff7391-2430-4cad-adff-bd26ae198890",
        "cursor": {
          "ref": "f4134703-2d58-4dea-aadb-72dcc0dbf24b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c6d87573-d82d-4d6d-bed1-c82a7d7c2d54"
        },
        "item": {
          "id": "7eff7391-2430-4cad-adff-bd26ae198890",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e39923cc-151d-4d46-be7c-b03fc25c4f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980bc455-977e-4624-9f99-074a8ac6e37b",
        "cursor": {
          "ref": "6a2a6319-a9a2-421f-b9a2-537d2dd57751",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b904f180-8913-4910-b356-a05993c557fd"
        },
        "item": {
          "id": "980bc455-977e-4624-9f99-074a8ac6e37b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bc4b7b2d-de09-487d-ac2f-36d94579e4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca6ec04-d3b9-4c02-84bd-088395d2b574",
        "cursor": {
          "ref": "53f81358-2f11-4261-b8f6-ed2af0eb7652",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a24dc7a5-5950-483c-b499-33dddf590f66"
        },
        "item": {
          "id": "dca6ec04-d3b9-4c02-84bd-088395d2b574",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "65461de6-7178-4e85-92b7-970bc23f75a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99802ab-2a1b-42df-8fe7-5a6f348189bb",
        "cursor": {
          "ref": "d14dd314-d092-4177-a574-2fb0454e2919",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "27e2f58e-b6d9-432b-a0d9-2373893222e6"
        },
        "item": {
          "id": "f99802ab-2a1b-42df-8fe7-5a6f348189bb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eb772f03-b6a6-474f-9781-08b78d1fe487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd02bd4-aaa3-47a6-b415-b3543b83bea5",
        "cursor": {
          "ref": "38b78d50-f5c7-41e0-b17b-856f0e871b7f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "07b7e1ee-c810-4c24-8a1d-7d3bbbbf6daa"
        },
        "item": {
          "id": "fbd02bd4-aaa3-47a6-b415-b3543b83bea5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "33c9f83c-e5d3-4e73-8e26-30b3e747e0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb50d92-7068-4903-b39e-6d327922e4e1",
        "cursor": {
          "ref": "e7c038b8-1ae9-4e78-ad8c-5471d10e3539",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "398a3d59-403b-40b8-b4d1-47ed416d00a8"
        },
        "item": {
          "id": "cdb50d92-7068-4903-b39e-6d327922e4e1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e103e6ba-5796-4b54-bf3b-ed7ff97c3380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dbcc18-6bfb-44a5-93f8-f9864cd6e2dd",
        "cursor": {
          "ref": "61a7b287-ac7d-4bca-87d1-2fb586a0ae46",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7281f5fc-f9d3-4b2b-8bca-fddeb5ee79c9"
        },
        "item": {
          "id": "b9dbcc18-6bfb-44a5-93f8-f9864cd6e2dd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ff710663-07af-4805-8514-2779b1e8347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f85de58-632c-4d45-a7c0-eb50195fea0d",
        "cursor": {
          "ref": "0e4f6c08-b90b-43b2-ba38-a456acdc09c9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3dfaeb86-19cd-4fc1-bac9-52193a53293b"
        },
        "item": {
          "id": "3f85de58-632c-4d45-a7c0-eb50195fea0d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2a74b161-82ec-4d9b-a04a-baa14f59e0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c3c7ea-bab5-4ef6-80b9-1e93409e5747",
        "cursor": {
          "ref": "47f17168-8ea3-4717-8b2a-d84059e5a52e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1d502bb0-5685-4afa-aad5-5f3f984795c2"
        },
        "item": {
          "id": "91c3c7ea-bab5-4ef6-80b9-1e93409e5747",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b2e49dcd-a421-4726-b551-068a2fe00a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7adf17-608b-44af-9093-2f16e4d24413",
        "cursor": {
          "ref": "72f165b4-7a3e-4a53-937b-7a89cc86454b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4aa5cad1-18a9-4d7e-8ced-5898f8702834"
        },
        "item": {
          "id": "ae7adf17-608b-44af-9093-2f16e4d24413",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "76fa7cbf-b132-49ae-9faa-ddbd4875c256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126bcf39-a8f0-41d2-a9d4-27419a62e600",
        "cursor": {
          "ref": "87991383-8745-42c0-a568-c7731980551b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ab76fcb7-3312-4d34-8bc8-dc2025fc35ac"
        },
        "item": {
          "id": "126bcf39-a8f0-41d2-a9d4-27419a62e600",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c889248d-e487-47b6-ac66-ec82698be2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d54449-fc2d-477f-a33d-884dbcc50d75",
        "cursor": {
          "ref": "174bde39-8a38-428b-a15d-1c85ffe581fa",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3dc4f977-788f-4d17-8ed0-a2977ddd2e16"
        },
        "item": {
          "id": "c3d54449-fc2d-477f-a33d-884dbcc50d75",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6a73bb41-49cf-4dbf-9587-c16c1cf0c69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47838b66-bf88-44bc-b72c-99b4502f3da2",
        "cursor": {
          "ref": "e0480c7b-ca88-4dbe-838a-84aa629d2a81",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5b25cd9a-b9fd-47dd-add1-ed4eb9017a2f"
        },
        "item": {
          "id": "47838b66-bf88-44bc-b72c-99b4502f3da2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7a17bcb3-3e7e-41d2-9b76-a5220b46b72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a981af-aee3-44ea-bc76-fc13fd326d89",
        "cursor": {
          "ref": "f8883f25-1dfb-4c80-b894-1c5f8b91653b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7e399e0d-4497-4f8d-9a93-6069e8b85ddf"
        },
        "item": {
          "id": "f0a981af-aee3-44ea-bc76-fc13fd326d89",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "27aae959-e932-4754-8b1b-e742e48e613c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1867bbdc-2f8c-42dc-8990-88fd1219976b",
        "cursor": {
          "ref": "8050d44a-1e71-41fc-9431-f490563e72f4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "93aa15f2-9c72-4bb4-a37c-cb9b0f2de2e6"
        },
        "item": {
          "id": "1867bbdc-2f8c-42dc-8990-88fd1219976b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "86c2542e-b304-47b3-95cd-29af8bc9a3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18133cb4-bcc8-49cf-84ad-957466b14c2c",
        "cursor": {
          "ref": "628be900-4676-48a2-92f8-7ea2e67608a2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4a6d1f58-a61c-4a76-b55b-3783ec88dd4c"
        },
        "item": {
          "id": "18133cb4-bcc8-49cf-84ad-957466b14c2c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fee25669-c919-4683-81a5-7d901a1b6084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d284705d-3445-4404-9c61-ab12ceedc19b",
        "cursor": {
          "ref": "1ff1ef50-189e-4023-9285-75b072e3c0c1",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3755117d-b69b-4f84-b295-407c4a3282e6"
        },
        "item": {
          "id": "d284705d-3445-4404-9c61-ab12ceedc19b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6d0d0258-583a-4cf4-b5b7-502dd1b92d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec40d85-738f-4f55-983a-707a0587d1b2",
        "cursor": {
          "ref": "c5f37914-3c8c-47da-a8b2-3df1bce2ca6b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "711adfc2-6190-4b11-b622-78314d61a97f"
        },
        "item": {
          "id": "0ec40d85-738f-4f55-983a-707a0587d1b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "86138afa-6eb7-433e-8b84-efc2d828b98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b8ab1e-7dcb-4a7d-aa47-9138e780f21b",
        "cursor": {
          "ref": "df5841b1-129c-4020-89b6-8908e9d8e8d0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9fadd11f-566e-447a-9d65-60263b8b09ff"
        },
        "item": {
          "id": "b7b8ab1e-7dcb-4a7d-aa47-9138e780f21b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "09812451-e29b-4898-bc14-2b03ec765800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2670fc01-d6f9-46aa-bc2c-1f812206ec6c",
        "cursor": {
          "ref": "d84a7283-069a-4174-b051-9377c3de32dc",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "aacf6646-1d2a-4ac1-841e-6ed8f34f83cb"
        },
        "item": {
          "id": "2670fc01-d6f9-46aa-bc2c-1f812206ec6c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2d9a71bf-ebbe-4b52-949f-a2d56e9c007c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319bb159-f822-49f1-95a6-8b097c4afa1c",
        "cursor": {
          "ref": "4180d81e-998b-4263-aaec-ef572572c67b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "96531bba-e1b6-4fd9-a513-2b581c18bbff"
        },
        "item": {
          "id": "319bb159-f822-49f1-95a6-8b097c4afa1c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a977156a-aae6-496f-890c-aa4edc53b91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd37b4f-b046-44e9-b17a-53ebbd2e142c",
        "cursor": {
          "ref": "66d1ae4f-f159-4fac-b979-bc84c7b52741",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8165573b-6b4f-4d59-9ec8-c2f26f79e24b"
        },
        "item": {
          "id": "6dd37b4f-b046-44e9-b17a-53ebbd2e142c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c4545149-024b-45f7-a212-a2a487f62cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0687e85f-76e7-4e12-b442-78a4934d9ef6",
        "cursor": {
          "ref": "fb159fd5-799a-4a0c-9bcc-876e4ee1d4bb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1ba031b0-24a4-49a0-bb90-86ad99002bd1"
        },
        "item": {
          "id": "0687e85f-76e7-4e12-b442-78a4934d9ef6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0ada4980-7ad6-4f9a-a698-22aa01ec5e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7175f78-240e-4f13-b479-4f5c09916b02",
        "cursor": {
          "ref": "5b236fdd-5096-43f0-98be-0772d4f5ed9b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e9484ebe-e8ca-4cb6-93de-1ac1693496cd"
        },
        "item": {
          "id": "b7175f78-240e-4f13-b479-4f5c09916b02",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0ddb283b-13f6-44a9-9fc8-78c5756d2378",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1441f7c1-5d67-4e3c-8456-44eea28e8ef8",
        "cursor": {
          "ref": "0f36addc-8a78-40c6-a300-c0c83d339376",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e9c08fd1-bc6b-40fd-80d2-8830af5e64cf"
        },
        "item": {
          "id": "1441f7c1-5d67-4e3c-8456-44eea28e8ef8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9e4ca8d7-370f-4380-b905-b1ff97557941",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b60632e-6e97-4202-a550-a2482f5de974",
        "cursor": {
          "ref": "1ef909df-43e8-4094-820f-e6f15a7a17a8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "580d6d5c-3926-446c-8578-5a7cc5216031"
        },
        "item": {
          "id": "1b60632e-6e97-4202-a550-a2482f5de974",
          "name": "credentials_verify"
        },
        "response": {
          "id": "02538a53-fcb6-4cef-be61-225e452fffa9",
          "status": "OK",
          "code": 200,
          "responseTime": 2798,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dd21ca-dba5-466d-b27f-ba02fe97e846",
        "cursor": {
          "ref": "c641c489-829f-4505-a879-1db9f8cfd0c9",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4e1338f2-88e6-4b02-8076-77e84dfaef0c"
        },
        "item": {
          "id": "46dd21ca-dba5-466d-b27f-ba02fe97e846",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ac58748c-f0b4-436a-bdee-ab58fb5cf27a",
          "status": "OK",
          "code": 200,
          "responseTime": 4082,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c09d20-03c5-41b7-a828-1b365dc3616e",
        "cursor": {
          "ref": "5c5d9020-e9db-4a29-b299-0f75f1f27ae2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e41e611-0161-4a02-8e5d-ac6ea7fcaebb"
        },
        "item": {
          "id": "42c09d20-03c5-41b7-a828-1b365dc3616e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5df673df-c5dd-4e28-807f-d9ee4d946fb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c09d20-03c5-41b7-a828-1b365dc3616e",
        "cursor": {
          "ref": "5c5d9020-e9db-4a29-b299-0f75f1f27ae2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2e41e611-0161-4a02-8e5d-ac6ea7fcaebb"
        },
        "item": {
          "id": "42c09d20-03c5-41b7-a828-1b365dc3616e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5df673df-c5dd-4e28-807f-d9ee4d946fb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fa840b-1945-41b8-9960-b72166318dc5",
        "cursor": {
          "ref": "6d8b4dcd-6a3a-4d6e-a322-07f8bc4838c7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "82d5341b-63a4-4265-99f9-1687d1f7c9f2"
        },
        "item": {
          "id": "64fa840b-1945-41b8-9960-b72166318dc5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "db49f131-5828-4c32-96d5-81aad75da221",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa631f0-8ce3-4140-b9b4-ccb2a8177f18",
        "cursor": {
          "ref": "25cef9e3-555a-4ff6-9f65-6c2213200add",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e9e206ab-df32-4829-9e58-e1bcb415deea"
        },
        "item": {
          "id": "baa631f0-8ce3-4140-b9b4-ccb2a8177f18",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0e4d4be3-99de-4f91-a91b-2eb4d3d45b1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}