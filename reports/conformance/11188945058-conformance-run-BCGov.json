{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "87759a89-003b-452b-bef9-bc3629977ff7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3fbed95c-443a-406c-b8d8-1db0fde182b7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3621c5ad-066c-4590-abac-9b831af80f7d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "882d6e03-45bb-4f95-a64f-3306990d0ed0"
                }
              }
            ]
          },
          {
            "id": "59bf98be-d241-475f-bdf5-90ebb817bb7d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d7fdd19-44a7-4533-b472-9028cae4cc7e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1209f7f3-7068-4995-9716-9e6896bac09f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3cfa6704-7ad3-40dc-b12c-4716491a5b73",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2f5210de-6948-4d7a-813b-c38a1c087352",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1feab587-52a6-4811-b3da-a62c22d0b914",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d90ccf80-097f-47a0-905f-e97a9011b44f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8b56250-424b-42f1-a299-ed5829602c2b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09370104-b243-4e65-a7c6-72cf6878590b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc37bc76-f104-466f-84a6-9d1f9cf8bf44"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1deec68c-1f32-4584-938d-c61ab6209d34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7d48941-83bd-4d40-ba10-8e8c783d72c4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d72f524-0351-4ab4-a409-62490d536395",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "76ccea8b-3397-421c-9aa3-2b34527bcaaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78fc66a6-72b4-4f94-a74c-9f6abfbc8334",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0525f18a-72b4-481a-9cb6-9247982205b6"
            }
          }
        ]
      },
      {
        "id": "f256b5a8-81a0-46c6-9465-a6db3b58c5ee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b8a8a6e8-c553-4b0e-9413-357c0b14dc7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b769f66e-2672-494e-81c9-798330f24e16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d14ec208-a526-45ab-8a4f-aa40b7a684cd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3702ed-59c3-448b-b77e-a7d4e294c8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2accd8b8-3e2a-4d5f-9623-813cfec62332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaf3f71-d79a-4c3e-add5-39024a913487",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36210960-935e-46dd-9928-8e974e64e6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd750ab4-54fd-4f3e-909c-bc10119e040c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401b0b95-93a4-4591-ba79-11d5413adc23",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7882455-d98a-4304-b5aa-66c80624f0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05395913-3146-4681-8032-e9707c6e1f82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3194e9da-0eae-49ad-9e06-08250eac0b88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49bfd523-2d15-4560-a0c5-141040515a95",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265f3185-0e85-4877-824d-9e4f05b6d181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08dc197a-19fa-449c-877e-1c9f0daaa46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86b5794-ab61-43bb-a995-b463fc90b8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7e1724-7f7d-4afe-aec4-3fcbf18c7502"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b24980f-4a26-4929-9cc4-1157567f3ee2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d6192f1-897b-413b-8cbe-3ec1eb33a8a5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a8aba61-353c-4ad8-9997-e6fe1639183a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5bd91bf2-f771-4e18-b44e-3068961e3ece"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e973278-fb24-4dbe-8bf8-be14164b029a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6f35b82a-76b2-48f5-bcf1-c79a5f82e8ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f780349-3f8b-4030-be07-022a5ea8bc3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9fde7e9-ae5c-46da-9df8-efe0dac42226"
            }
          }
        ]
      },
      {
        "id": "6d6145c8-b884-43bd-b10e-dee794b19a18",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5ee1c7ff-fc9a-4897-8ee0-b2df25cf0d6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d35bd2d-191b-49d1-9699-8db2ca8406c8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3673810e-7b76-44c8-b049-362f82a816c9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7fc804-95e6-47bc-905a-78bdf681f1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec510838-31c2-436d-a1eb-0ff46461659e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddca5593-c7e3-4894-b097-7717739d7e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c804355-0388-4297-988e-6949c2d64858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aaa384-7092-456d-ab5b-56c9510c41e1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3556c82-2c56-4503-8acb-aa496bd8eb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c75319-7887-4441-83da-51eb5ab53a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42889b1-f557-4068-95fd-e0614bbbe710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "146be53c-1478-48e7-b25a-47c9b435306c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b232d28-1500-4023-a76a-4dcdfc738584",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25941f1-078d-4c02-b2b5-0030c433f7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453f32ca-f474-47b7-a05f-8b968c5c0097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c152504-d87b-4786-845e-8dad8731a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffe4f1cf-0587-4130-816c-b1beeb3a71c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93e1d32-2ddc-4196-9517-77337f354135",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb93e85-3ab6-4956-baaf-a580b852c563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf4313e-19df-4f8d-8111-156f3c8f58f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c238a2-1268-4ac8-82db-23577a056034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26a4eddf-3f22-4aeb-b3c0-41814c4f99e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36418549-9e34-4070-b0b3-5780b870e82d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5b7816-481b-4b51-ad33-cb15d81c5bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5c8253-ee5d-4a3a-938d-4434c2e08c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de70149-a6af-40a7-a8a5-9e035b3dcb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fade29ed-5266-46ff-8b8a-098743ee07f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354193fd-8a06-48ce-ab05-c88c17baf73d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4df150-d955-46d1-8f34-f9f0c5cb73f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea3c7d4-dda5-45a4-9e7a-3f9a3bad2397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dea846-de78-4ecc-b935-a577876ab59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1756e6df-0073-4dfc-b801-366973c4beb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8745179-c12b-4dbb-a07f-7ffe0d7e82c7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdabad2f-814c-4007-abc0-9fafd7271519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210a744f-f3af-41f9-b499-283b1bc5ddcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd47a80c-708b-42e2-962f-dc81c213d66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eb2f2ba-bf47-4be0-acd8-0d4814d4f861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1705b591-65c6-45c7-8201-6cbd3af359ec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716ab9c6-8736-46e6-91a9-a1e3db75e9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbd079e-7822-428c-8fd1-ef4fd15b7324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5be40f-948c-41c3-ba7f-4f12a170f458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cf582cd-4b4d-421f-8dd0-8d95082e5cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c897dfa8-81dc-4e37-8c9e-013fcf35f4ed",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca225180-4f20-4fa6-b92a-7d29f6bdffc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3247aab-3468-4265-b310-ad8e655aaaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007a9c22-f052-4102-8198-697497f01a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e5bb91-4f7e-47d5-908b-28c21fe242f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcda719f-e651-4c6f-a0d8-ef268514a963",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cbcba9-dfca-4711-92e7-7d6cd89d9245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4d9fe6-5e9a-4683-8d07-ce64e96c2043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e30483f-8aac-423f-9954-d4080848e1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e4322f5-cb55-4c63-87df-095cecc3c2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6638023e-0197-40ee-b981-2398871c1b23",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293bee23-5c4f-4fa8-8cf8-4667fe337e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20e8d66-5839-45a7-a2a3-41f5a7c5d10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d5411d-6e40-4333-8f9c-26c567244de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5fceea0-a831-4c70-8554-2f7be33ef93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3269cc-1965-4d61-b26e-0c37dc7e58fa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c765f09-c10d-48b0-a918-8e83c5fcc7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6518ab78-2a21-4bfe-97b8-944ebdd03c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6881d6-249e-4333-bb37-16f747927286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2010cca-ffb9-4d64-960b-e354cba8c42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cbd09f-ee86-4b85-8013-157f27190b35",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aedf928-98e4-4c33-9062-88f6d9411ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ddd42d-8069-4e3a-abb3-639b8d15deb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be22e63-ca68-4d2c-8436-34726f64d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d598c6c4-6511-498a-ba61-f313400f66b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8688bc6-1282-40ac-934b-514fd470e173",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c772b418-e4f5-40cf-be86-9103cabe022c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd046493-371b-4171-9f70-602c5e19ce80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa74a77d-c26e-4e69-a03c-b921af332935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1180c02c-c8fb-4613-878a-1f0cbd29e40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4df2e76-954e-4baa-8ea7-fe02ff4f5493",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55916d97-0ebf-45ba-9081-9f4a3825f62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c948bf75-f654-4d4a-85c7-e72ed8077f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aebffed-025f-4266-abd5-01232d94d2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89bc4a08-e65f-48e7-9247-30792b1d0936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6675b9b-fd73-4a5e-9889-2ffbd70a3c4a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acac7d30-8ae9-4b21-9335-1db72dcf2f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5740fc4-57e1-4d65-8efd-ceb7f938c988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5303777d-b70b-4fde-b498-688bebcc23c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eb2af93-56f9-48a6-92ae-0cf6928d64a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340a5c7b-30f3-4dea-9b1a-9f5af0c8bce1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d27bb5-d1ad-4eac-9fab-6cc2be3d1800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d080aa41-7264-447f-89ab-88d082fa2657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c712dbc8-d42a-4b24-91b2-c0b50b5df795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9061307d-f992-432c-bfe5-9a86653f760e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6347190-b812-4de5-b813-5be5f863e4b1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cb960e-4a5c-4e8f-86fb-c09070486920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffdb6dc-6f95-4770-aa3b-b2dd94da9497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24972d5-9ab1-4f8f-9fce-eee0c8fff43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af65cdb-aa3a-4119-bc64-cbbf841cc983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f226af0-feef-46c3-8f69-71753733b8e2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42829c3e-e1a9-44fe-a783-f47a37604ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d7c434-0bf6-45c0-ac28-2dd776c1d38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df761180-2f2e-4706-9ebd-7d5ccfb4366e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba3a5b7-867a-45c8-a7af-06655f0858c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9621edd9-6573-4884-add6-f0a9ff6f6c20",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e586c3c8-5344-4943-8edd-208dbd2bb515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003f0a3f-9e55-4bcb-8038-dd498a7d6b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ca3519-2a1e-43e8-8712-cd04664d8b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a34e1b7-aed2-4285-98bb-df490c86b8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629ba55c-7e69-47ba-b6ba-61b05d926039",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c091568e-35a1-4f28-a91c-590dca222270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21529f6-e5af-4208-9b01-09ed89ae52fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd46e68-505d-4509-afa1-4a3d6fa4dcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "217c2721-60c1-407d-8450-cfadf7de7cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b6528a-8610-4286-ac0a-1188f895b983",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d60ab48-0b2d-41b9-a86a-ed64c01a7a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b912d1cd-814f-4648-9a8d-e8584260c9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a64e35-c786-4885-b7e3-79dbdbc8949d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3331a06-a0dd-491f-8327-c1a46f5cd6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eb562f-faca-4c04-82a2-b61c811a98ac",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f710f3-02bf-4832-a38a-86403a0b16af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ebcd8d-b317-430a-bd51-efd6329bd274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e6c2c9-2e42-4d1b-b07e-7e10f428b840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "207fe2b1-f297-4de3-98b2-c5e384e98def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e38ece-c509-41f8-a426-1df426ce2e57",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f84f02b-b2b1-4c75-93a6-e4d8e2d738dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1cbd5f-b429-44b6-893f-c7994103fab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8d0f54-6fca-4bcb-a49d-ac97cd784bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4025d516-8ff2-4147-b895-aa2817a593bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb1e722-df44-41f6-92b9-e9989f53942b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7f7608-5718-4782-98ad-61a92992024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37708b7c-e914-42f2-bf49-7e1d4519e151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f521a1-ae35-47f9-be4b-683e9afaec0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bbb2f8-c7f1-4535-aeac-5271b6d045c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef09200-0701-4a2e-9875-a14127cab632",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e56a3a-559b-4958-8ddc-e2e899e6d597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48ffc39-348d-444c-81d4-34e323fa75fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597cf4c0-72f2-485e-bd03-d926177abafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24efa97b-9971-490f-88d5-a75ad726e1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe31082-5b69-4cf0-96c2-c032827d3d0a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fea738d-ed12-42c8-944a-31c2826f55df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c187980-fb67-4a28-b65e-7899c4b6c45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883a33d6-84fb-4b46-97de-3825d60b21c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e503ee-f3e0-4436-b835-a38382cb451d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f47777-7376-45ca-b15c-bce57712c4f6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a082f-ef02-423c-89c1-147244199cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d16d084-3b01-4aa6-968a-0452219ceba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87704e2b-ce2c-419e-8ada-442c8091d898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c0a699-e3df-415a-8ca3-4204425424b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a943544b-9539-47d9-ba8f-49ce5193a546",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c883739f-134f-40aa-b079-c3d63c257377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136fcdc2-dc55-4db7-8552-4d359ca76d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636a8ea1-7d8d-4e7b-8ac1-e96aab42b912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69606679-8446-46fc-b8fd-e0bb0964974b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fdbaaf-cff0-4f0f-af48-7778ff882928",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f037537-e851-41e4-ba8c-1524f6bdb9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7fa976-1f6b-44b5-aeb7-acbce3aedf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbeff37-dd99-49b6-a9d2-888b141866a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "04356c04-3a57-4d11-9e5d-8db3515a89a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5480b8-09a9-4a90-babc-09cbb021161e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3521c98b-08ba-4101-ba20-e4bbd3046415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b353c0-f839-43a8-8571-11d0a1f3b442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e340d9a-5942-44d7-aa39-052319a5d8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb8dfc8-57d4-4457-84ee-1a94255e3693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca68330-b0b5-4974-897c-e6dfb7126c77",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668fdc51-0675-4c0e-870c-e00540768647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5220f3-74e4-420e-92b1-80120991af7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a9723c-261b-44df-9a7a-67da47779d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "010ad1de-1405-4045-bc37-ffc277b8742b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad08508b-b986-4e1a-bc8e-14af3ba7d14c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee99e8f-704c-4404-8dcf-b5fc631fb9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1328b06c-9ec6-45b2-b003-c03939221ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbe1259-b3da-47fc-becf-f5521007b9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3619d260-cf4b-4ce5-a936-2638280cc46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099bcfc0-65c4-48c6-a60c-9ae0f0b114cd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f834811-584c-487b-bd89-1e043a9eb590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eceb001c-2513-4a43-b629-f0f4146e71a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce4f9c6-b574-4431-a5e3-23d0f2b4b94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ded510-6355-4886-972a-e6feed0ba79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c5ab67-ab07-42f0-bd5e-900aaf47fa77",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35104364-aa5d-4d32-9167-8d4a6cfd5e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd1b666-dbb8-4e48-958b-0bb58d881e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519c68fc-bbc2-4656-85e9-1eb809502b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8f325c-dc3f-4f0f-bd10-bc9333390995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de213c7-2f18-49e9-a185-fccc9647a215",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfc6e2d-3a94-467f-9838-007ce2a66d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4600bdba-61c5-4f2b-9f5f-57d107afb662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c4c3b4-938f-4409-8e93-4e0b3c80de4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91df2957-b72f-4b69-8135-62ffebca2e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c02a8c-a658-4f90-8492-c23c8b0f5e26",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6d6151-7b03-429d-9e76-5cdab319232f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ce997c-9c64-42cb-b70e-f99d6306115d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2146bd56-fb50-4b87-bfbe-a0c5d85918c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df3edf74-7158-4a54-80a4-9edccb46eefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fb2c2d-c1e4-408f-a1e0-a63d99d7766c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d04761-45f6-462c-8570-a635ef24c7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d8a992-08f4-47f0-bf6d-01a4c45a5ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6985f46-25f4-4544-afae-ca1f3871829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87e3d128-afbd-430a-8bbf-1e3e6d51de5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602e2a7a-565c-45eb-8f99-4764b7f255b4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc5ce72-4809-4296-a1d5-786ad6e88f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c376dc-43b3-42e3-ac1c-2cc8fa9f053a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d8311a-7e0b-49ef-8864-440fa6df8192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f631498-4f60-4245-9d5f-fc5c8d0f86e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dfee1f-8661-41a7-ba51-32db42870a44",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702ab9c4-bf62-4b7f-b1ed-6371e3e10db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04600c92-1664-4061-b210-fa85fb20e292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15140250-f430-43f0-b670-11f6ff9b95a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca9a0d2-83ff-4de3-a042-97b2e1ba6dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f103feb-012c-41f8-987a-4bf0ec569d8d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa591b51-c0df-4239-89dc-f7e81e4dd54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef1bc68-8e18-4054-92ec-7c30f8476462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb4f4c3-5390-49bb-8e11-44a9f009720b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb702435-d53d-4288-9ff3-121ce37605cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2948b677-628e-4d55-aaf6-7edd2204bf26",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bef469-cc07-4ed9-b7f7-3255b123df02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f111c50-6329-4c5e-beb8-ed7fed502af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f2f0ab-8442-44d1-b1ad-750ccf369639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3489855f-c813-43d6-ab9a-e42253a56e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efea46e9-a533-4e53-af07-40b1c8650397",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cdac47-1660-4d03-92a4-2e85f0b869d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac834228-60da-45a2-b6e2-5264c9d5859a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3b684d-8a97-438a-afd5-2b155736ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "52f49cc8-2083-4d8f-b7fe-fef902a03908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c693f6d-6c7d-4734-864b-c9d5cc6eb82b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf4a146-0bfa-478b-af7f-5ef554ca5d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2603a71a-9740-4937-b5b6-43de8f8dc183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb91b82-6db1-466c-ab63-527343993017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6281e99c-a080-4a3b-8e84-eef438fa7264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7fe988-cadf-4962-9186-9887aaef669c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf0d505-f6ad-4f84-8308-e6db4931a356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bd3a9f-ef3a-4c80-92a4-8500e23a4338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1b6b49-865f-4afb-a9ef-f2f832cfd47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f72920f4-16e5-4b86-8734-024c19699685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa55607d-8b74-404c-93d1-8b2865dd224b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1e1eaa-a841-4a36-86c3-fedb41fea63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f59319f-8d03-4259-a3bc-a1fb9a4e0e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717861ff-e4a5-49db-8bec-d4c5d86b008b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f99e21c7-3109-4eb9-b694-7ae2c572c5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025fb593-fc4d-462d-98be-c7e76c57cd43",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe72996-dafb-4c0d-bcc5-cf139a660380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62e6677-0ecb-4408-b102-c783031d4a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251125a4-1fea-4bd2-bbbd-d7cba1d6db2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b76c832d-c0ad-4c7b-88d1-5eee5f838af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8d294c-f9d1-4689-bf15-16e7da16bfaa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e390250-2e34-474a-a317-822b2e538df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c86cbf-9aa0-4967-bfa7-5725631b6ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cab0366-fb79-4398-854d-9a58241d4ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2695cd43-5e53-45ad-b746-85b29e5025fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c08b8cd-c236-42d2-abc8-b4d57c4a4041",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2136208f-c718-4c46-b903-dc33e6466691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f69d5c-83ab-46b1-a0d3-c59c06b97937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef55c552-c24c-4f9c-a8e8-fa84e1acfd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "975637a5-5c73-4168-9a45-95948caeab99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b754df1f-fc5c-4b44-a914-58480b020dc5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bad177-8662-40e1-8b74-8734de3b8eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39a3abe-eb9c-47bf-8d9c-489f0821b85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d789c4-b763-4327-a071-cf42bf57078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38356d2a-f5ae-41e6-b5e1-58f63222dae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82057680-1656-467b-b8ca-854f1f5c6217",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d794353-e49c-47ca-b35f-4c7dbccf97eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e750bc3-8635-491a-a176-6a0c2c7d81e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92594204-f9a2-4fd4-9b64-e0f93e277c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a653e0-6113-43c8-8851-b5e550b60e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd670b7-8ce7-4426-b8bc-446227eed099",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c905bcc9-000c-4e70-84cb-b4f347e36bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c8ef87-57fc-4985-bc50-638984c8036f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb73c2e-b489-4a89-8a9b-5ba8ba039b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec8db9a-5129-41fd-ad2c-2ba0f3cd53d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e999be09-4c84-4a53-878f-f4181a01beef",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a99cc62-58b7-4e72-9ba7-4afbb1846d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de76d441-64ba-4a12-86d3-e4ca44f37fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a2f2d5-0b76-4582-8bba-3eda62273df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99ed34ef-a2be-4bb3-a7b8-8d574b01f630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2fd70a-6d3e-487a-b46f-09bf3bc047cc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1db20a1-db2a-481f-9d34-d56862086c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57770609-8340-47a5-956f-4322ae57e3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e364e83-d75f-4fca-92a7-4bd23517a038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30378fd0-455b-4084-8028-863aef9f6238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c97cb1-19fd-4a6c-b655-79af6b759c45",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336659df-c02e-4079-a091-fc46af2f048b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a975784-42d2-4a7a-997a-f7e1e6aa6678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3662db-f02e-4ad6-ae79-12c6e69494c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d8bc13-14bb-4ad8-849d-8dd6eb91de71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e638616d-922d-46c3-a4a2-09922cd9e521",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ca460f-b65a-44c5-a956-e688473f1318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81471dcb-d2a3-4958-b9c2-9854cb8bb043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52954b78-39eb-42b1-a1f8-1e108091c262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "33fb4ba1-c37b-45bc-9163-56cb6f965e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1980cf01-6ff2-4a4c-bdb2-7d5b04cadefc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312e04c1-8ebb-4a62-8393-2c7ee769eb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc1ff08-a054-4f68-ae18-d99cb257cae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2cf6a7-9313-42ab-976c-f6fb8c76b004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9826ba-62b5-4e91-bad3-98e1587972b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673ee9aa-3db6-4909-a331-26de4b8ee4e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beacc8ab-f6e0-4403-bb67-c63167f6140e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02536c26-caf2-4a0e-95c1-70199a246c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20256842-4350-44fb-a0c9-37eed2b71c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ed392e-5f78-4b74-8575-9f13fa9760c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab14ec82-b125-49e5-8e24-4df9aa0de38f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3b89e6-2385-4d40-b66d-c17dbc60df15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b067e2-dc37-446b-bdcc-e75c596c76ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e691b90-f6f8-4d46-9ee3-a2ea75e06ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e58ca33-6946-47c9-b494-f76bb15c6f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d641f0a2-73d7-4e58-a2ee-983cff14d084",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83949f2b-88b8-4e23-88b3-a7bbfcc4aebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79e38ed-6484-42c0-9e29-40d258fa905c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3d61be-6003-450e-a4b1-fa67e1fd590f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "77989587-a625-4661-b3bc-2403d6e47073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd35e7d1-79f8-4b0c-b5f3-f99ba002597f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536e514f-f59c-4888-9204-0605f73746c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f739dc-bdf3-4dc2-8518-98679527546f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d74edf-a413-4a6b-901e-8d41e1922b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd788e6e-017c-497c-9100-931c612043f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7466c299-5a14-42b0-8796-531efecf84b1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c896a4-d36d-4a18-9a21-b2ed0bda36ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571b8883-e34f-4ecd-913e-a00d50b1a396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb5a18f-a463-45a8-b9bb-741baa952f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a12e485-cd3d-4e7e-9be6-17058cb94eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4bd84f-e4ba-46f7-be02-9f6955e502bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06c0f9d-b9cc-44dc-a4cd-d95aee188697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd4ec57-a516-45c0-9e7e-57131eb34f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4425cf1e-a901-4e8e-8080-c851f48eeef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "efe04461-96df-44fd-862b-bb7ef34e6110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ee39fe-90b6-4d8d-910b-424c174b0e50",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9e51be-d552-40a2-a9a1-d1b38d50f3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a89219-4314-4bc6-921c-d8861c340597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45159bba-23d3-421b-b705-8a553a6d6ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cfc905-51b3-4941-aa9a-d0d2a15efc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a26d4e-8076-4c3e-bb46-8b440c20b4f1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d8ff1b-183f-4be1-9428-bd8ba3eb0b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa1d1d5-ea66-4e7a-b87d-4c623be8fdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700932a7-b58e-4021-8624-285db05f1ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb6ee0f-e1fd-4c97-892c-825a4bf5f7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb7ced0-fea3-4c07-82ac-04d8e9c9e104",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e256ab1c-ecf4-4d5d-9cd5-738250ad43fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5f8079-8f94-41b1-a099-b2f80f41ad17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941cd994-c6fb-4e20-8d3a-d5a3b9ec030e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38609f84-29a9-43b2-80a4-22ffca43a7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f680ac-01dc-4fd2-b1d1-7de1fcc192c8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f939c21-0f58-46ce-8b35-1cf6bb7d8ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c176d9f-c7d3-4c2b-8f52-72ed76da2454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11caa5d8-0f7d-4161-a27d-9c427099a972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de70c617-ca4d-45cd-99f2-84f782d9be8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bd7a1c-f791-40f3-ae8a-47f4893b8708",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6431c949-3c9d-4d44-9cb9-8630f8bda490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11649d2c-7027-48dc-b53a-85a41587f432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c497683c-30b2-40b9-a47d-dd6afe10b6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6465a8b-1d32-401c-b47a-c87efd0aa4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b70013-cedf-418f-86a4-5c59f1787005",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d6c607-ce72-487b-95db-4d36c47a1c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1addae3e-ecc5-4d26-a5eb-a6bf9584a8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a64a99-146b-419b-8343-a29d8185e396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "841a8552-39d7-4cf1-83c2-3071744d4fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debd1c78-5ce6-4b38-ad04-3d04813461a4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce894e1d-d880-41fa-9725-f73579f8314a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f58a44-0ee5-4140-9e74-334b71bd7c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cabbbb1-0be1-4fbe-803d-e1bff570d00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39925b22-e06a-413f-8f15-400f5eb85798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0374fc5e-41c9-4b9f-a4c0-baefb4fd017c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0249ed08-7673-4194-a843-8328a3899caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7b0ee3-e77b-4aa3-aae6-8dae46525da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d91c54-6f38-4e7f-acea-91bdb63adcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fa8b19-167b-40d0-b6b7-04aeb8a7982a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb42ab8c-614e-4990-9709-b449b6544b60",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe50233f-5271-4eb4-9ab8-4a58b4975e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f35f14-bcf2-4469-bd85-017765673a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458c827d-3688-4f22-a97c-eab4b350b4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "170a6a55-ffb3-4f9f-9944-df4d4061cf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cedf220-a8a5-4424-824d-b11c6aa49d73",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56bd0aa-30c9-4357-908d-2bd1bb431deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ada0e54-41f2-471a-860a-a64d5c3b71e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e339180-f124-4c75-8b21-87a9af91d27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46eb881c-d592-4357-bf56-568c46169438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583864c0-f3dc-4589-ae4b-a4c2a5fa179c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f398d344-a16f-4164-a993-8f8807b53614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491f222b-d4b9-48f1-b743-f73309d86442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b78e0d6-d302-4708-9809-18d3e2a8f19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b63080-7cba-488e-8927-887fa476b8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d63fbf-a0e5-4e3f-9827-75edc6caf7b8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4c9d39-8d35-42a3-8693-65ece11d138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9515fe-a0bd-465b-a967-faeadadcf540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba14f8c4-d0a3-479c-9043-431077e1d1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d20e28-cc9c-47bc-a5d2-20bf8a0c33da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44589f66-f82b-47df-9149-f5e5cb9abd2f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abef4a7f-a4f9-4d1e-aa39-f83f5835a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48711fe3-205f-4028-8b25-c32d9087943a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a317e245-537e-4d81-89d2-c5e6cd6820ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c53ff8a0-a1d2-4042-bd6b-c756bc0b0ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52b3c54-7b56-40a0-961d-f33295b76529",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b25af9-445b-49ae-bbe0-79f790cc3bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1045c3f-c9ce-4fef-9345-afd637a24796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e00ac3c-442d-45af-bdaa-c1b25651983d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d9024a-1252-4533-8a56-4df3fb7e9869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb652ea9-0103-44aa-9609-777a0f1d4b71",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17282f0-8882-4197-9e3e-9770df42d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90351a6d-c077-4bd9-8964-a6fa79f5fd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4045f323-7c0c-493b-b437-49b2f6a37ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b95ab3-dde7-4da4-b34e-d2c00e9588fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed3db6c-477e-4d5b-9402-adadf4bcb919",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bece0513-5263-484a-91ab-42a7835ea708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdefcd82-4352-4e1e-879f-dd3f2283e8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392d51f5-372e-4b0f-a5e3-e82534912e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd0ca90-f901-4001-a1fc-e061e2d40494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee362cf-f286-4c17-8de4-e73d1df9f3b5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b6083a-686a-4f39-97c3-83088bec0a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5c311a-a24f-4b49-b95d-906ed8c6f190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717a0b07-4012-4dd2-bffd-df1dd9f7d18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d54b449-328b-4e18-af8f-386bd03d1e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6202c25e-8e45-4150-9244-da69a16e22f6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2eac5e-9228-4adb-8eac-e9da00373e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639f6a85-541a-4682-90df-f05325973bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d67f010-2a83-4d0f-9dcc-8074fdab35fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff3b3b1-43ef-4dc3-be35-1e6a3246fb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f248b6e-b7b1-4c7e-a6b3-6b52695c8c08",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2440e7d-c730-4f0a-8b54-aaf94e3daed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25df4d61-eee5-450a-b290-e02845961ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7c73dc-3b61-4306-90e9-184faa7ecb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20061b0a-c843-4813-a9f7-fba14ccd35ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d517ea-7930-4e4a-8ae7-4874a09845ac",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90ac81f-68f2-46a1-a363-1151423f0c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c329ab1-160b-4508-a679-820f9cc2cb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb10b29-aa42-4e61-aea2-9cc00fb6fa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef132254-ed7d-4bdb-8328-bb992ddd0610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723d0b4e-c213-4b97-8a9b-f830169d6629",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea1dd5a-248f-41b4-b14f-1f7b6ec4db69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2053f2-2ea5-4315-9712-41357cc97094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4970559a-5f19-47a6-94c5-ffe13628c120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e4ce14-dae6-46b6-afd9-dc0e1133db0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3579ef-0931-4c58-8e31-10bd2e8c907e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34d74de-2986-407a-a3cf-9b93d74696a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba06068-0c16-4a35-9f7e-94fa215a1ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a70713-8a83-4547-921e-1584487f5193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfc5597-7c00-47fc-bf38-696d7656fbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45512227-b6f0-4772-b53a-38258e1e4349",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63df2c9c-32fe-4b2e-8fee-ddaa2a12d6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c8af62-0c06-4add-ae82-bacc535fdf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5a5663-7c3b-46b0-9ec9-405e93cb6577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d48a8c48-4053-4b91-a6c6-abc5b03d2b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf2aa6c-8971-4d4d-ada6-c80b82681486",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84ba3f0-a361-452a-bc76-5bddfcd7c67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0249c5a-d136-46bb-b352-aaf33acbcff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799fa46c-d6ff-4516-b118-5740743dfb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe981b0-9609-4904-bc4e-5abc58e80783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962fbe36-af92-477f-91ed-6784171af7a1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d67da-5f64-4fc1-b5c4-5badb8dea410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa03d4a1-4aad-4db7-a95b-04a3ce9a04e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ef9f7c-9ef3-4147-a125-29b3b0adf466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c10377a-0195-46fb-a5ab-d30db1873077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf3caa3-9420-434b-9fee-6a209da21963",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c1dec4-4d7a-4d11-a970-1f45864480e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c6d326-362e-421f-bfed-96b982b9f651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f13fd22-8f89-4c9b-b83e-ccafe695d448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8beca28a-316c-4982-bd4c-0eab1eb5c79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056548da-0b57-4840-8785-84881a0fd90a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8ea544-c588-4e51-94fc-422afd69c567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2c84cc-9892-4ada-9a3e-5f7e27370a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac757c49-ec11-480a-ad78-753ff2dee27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6708576-720b-4d20-81cb-97b4d3ff84a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4edf878-10d1-4590-890d-7cdeb9c6dadd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c761fdd7-1e63-4ab9-8a86-84c04d5d4881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a54fb01-1c00-469e-985f-6ee841e8681e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33de8ce6-9c24-4124-bc58-d07521427f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e076d08e-9568-416c-a304-0983ddc16897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9d5e18-cdf0-4eee-88bf-5a94e3ca5895",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c506fa1-23d6-498a-9f3c-ba9b4bce2448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8408b854-70f7-45cd-bfef-a1c5b65c9503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb781c4-cd6f-41fe-96e2-39ec0483b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50b3eccf-35e0-4a41-927b-da46ab1d78e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "848b552a-3d48-4218-bf58-9fcad92c8ee1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "038b9112-deac-447a-9a71-ec5a27015343",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e91f3b-fc4d-40c0-af69-2c26bb05ccad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ba0a2c8-388c-4061-86c5-08ac032f4831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42a19ac-27ba-4644-9069-e2a83926701a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bbcca16-5519-4185-bff6-e80e17e56a8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79fa9711-e467-4b99-a63c-6c3fd14cce9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ab09044-24de-4170-a6f8-407d5b71c873"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b67fde4-43f6-4368-a05e-eb3cdd3e8341",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a83193b0-147d-4a01-9819-64fc99296bad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d8be539-c4c8-4b26-9a6c-5730718d63b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33bbc918-1081-42f8-9b1b-15a6ab1b422a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8799d2b1-7772-43f8-a28b-548f2c024fec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc33c9f3-c0ae-475a-9345-8c404ff6d344"
                }
              }
            ]
          },
          {
            "id": "88fb1c1e-e28a-434f-9ebc-468ff1efb634",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f668d88-70ec-428a-8c02-c1a80cb07420",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "093f9d57-842b-442f-b344-4dd43fe36a9e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de30775a-5419-452f-91dd-b7e30d19898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b1b74f2c-28bc-4c90-8761-ffac85f18a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eae7a8-5da9-463e-9d85-7759783791a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953edac0-b51d-40c2-95cd-304961929c5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c6849e3-1b9f-4c99-bea6-9b2203064054",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bdd6571-98a8-410d-815a-c90b503dce22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd74b792-ef36-450b-b86d-77150e9e2085"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a88c78fc-ae18-4324-885d-bad37ec5b05d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51c83607-6da3-46fb-9999-ffd85008f5f4"
                    }
                  }
                ]
              },
              {
                "id": "7b52c008-bfc6-4be3-94e6-95f045b0524b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5004c68e-1d83-4a27-90bb-a80ddcc795e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29e94316-a5e4-4009-930b-18832a3329bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bd6d7ea-749e-4c9c-831d-9bf2fc389667",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41814832-af29-47ea-9055-576e7e001214"
                    }
                  }
                ]
              },
              {
                "id": "e7b34b49-a3b2-416f-8c7a-c99502c42648",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "454e608e-f9aa-475a-a823-56f47b1165b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1278eb24-a7dd-458a-b8da-7e2500928ca3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37536ae2-0c0d-4a0a-be95-e50c2eb4c7d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4292c23c-3eac-44e3-be3f-db5de717316a"
                    }
                  }
                ]
              },
              {
                "id": "b1c5aa7a-7bb1-44b6-9399-98767c55a585",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d5c6784-349d-4023-bb69-3c5f6083fc8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98961c6b-a507-4b7a-abdf-63da87efd0c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff48664a-30f2-4d22-84a4-7dc957c5258b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9fcf7cfd-10ae-411f-97c6-72d8a5a6b13a"
                    }
                  }
                ]
              },
              {
                "id": "8be9325c-69f6-4b7f-99ba-dc9a37babf99",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7168d289-51fe-441b-8d62-43dcf682f739",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bde30fae-f4e6-476f-89cc-87c1d21a53ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2965a65d-7066-4fc5-bd13-89e9032db7ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9dd3bb5d-f13a-492a-b517-9bbde63e585f"
                    }
                  }
                ]
              },
              {
                "id": "87cdedd9-70fb-479e-9d9b-9fb7731329de",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8661a21a-9393-4e44-8acd-7f1bdd38cb62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21b70de6-15f2-46d3-972b-57deb145b4a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "400958f6-4eed-4b21-a8f7-9afe420b25e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3a9ae2b9-9574-4a26-8b62-0409dc145bef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cf82537-e5b5-48c5-9a01-ee8e24c0a0c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78de30f9-9b7f-472e-a552-381f07545e96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b6c517a7-1e36-40e4-9940-e0cccdba1ffd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6027ccfa-d919-4e3a-bc9b-acbb1c756517"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2abcdd34-fbe0-41fb-91e2-76a14b177a0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "25aaced5-9b8e-4abe-9d81-61623a6130be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e5e7ce2-effa-43d9-a55b-16f40a4e79b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "160a1524-dfd7-4af5-88d9-7962bdf7304c"
            }
          }
        ]
      },
      {
        "id": "edeb92c0-3f8f-46a4-80f8-1d113346842e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d9d2a4d4-d4ea-4c34-9ac5-32966fef38b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00d0e571-d4de-4089-94a9-107203a20726",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59cdb053-1a78-4a3c-ae64-6330f5190001",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dbf743-a70d-4a0d-ab53-420c647a4084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91699976-3efe-4a43-873a-be56b3fd9e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513eae52-3cc8-4a80-91af-b9516a6825d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "798386a7-65c7-407a-b717-daf5aa4b4d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934ed789-92d9-4c38-977a-21fedcf48c8d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bfa15e-0d3b-415e-9c97-25ba0a14a59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e05f4e1-5a00-4fc6-a5e9-2967801e9040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d109d9-5241-4331-bd7c-dec9559e114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14cc7a5a-3cb1-4b43-ad70-5bed1b65cd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c63cd6-8e7b-4ee4-89af-6af247e68ce3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f0fdbb-e249-42b6-b856-4c1f047e932e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec91973-211f-41d8-a538-ae0437468ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b533038-c3ae-4530-b04c-2b5bdaf78858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdb3c16-4b09-4228-8b18-314356adfca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cce3ff1-4cb7-4079-8bfe-f3597af7d039",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe509f48-2fc2-4242-a4f9-d62dc964facc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6a710e-456c-45ca-b9bd-949d796abe88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468323f1-8335-4f34-94ff-11d553ab9a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2504a1-e3b0-4bf6-b4fd-56b8a885a34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2804f45-0e86-4a2e-aa69-f4aa7833f250",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647ec2bb-f825-4791-86b7-083f907a4f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3b8121-a3bb-49b8-b4d9-7721ef6f6763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2436a0da-5c82-47af-a504-f47075170046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ea8f6f-4a5d-41b2-8bbd-432fa6ef3321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7cd92a-450c-435f-bfec-99ae2b416d7b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ac4302-d507-4031-8027-ec9e1fe1aa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64602f67-d41b-401c-b274-caff4ca06898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d1ef62-321a-4c60-94f8-570f121a370a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a13fd064-d14e-47e2-bf4c-376fa65d66dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9b677f-7e06-4526-b6f8-6776b18c1c34",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cb1c55-6d80-4fd4-beb0-6f44df3fa558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff670f51-5a80-449c-b983-f67ad975d52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3ac198-095f-497a-af71-a6d546e6c675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "00455c6f-8b87-4888-bbfd-6cbbfac5eee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0defc81-9712-44cc-a321-bf855ad448a8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc71f482-08c3-4f46-83ea-e0c0d9fe00b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c552b857-74ee-4f63-a9db-18acbd6c8d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c771eae-9b95-4c82-a040-ed55c196e6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c34d7af-6da4-4595-8cd7-2e76ddce387e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8e468e-e14a-4ed5-a4c6-bdcd7dd3d8e6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aa760d-a6c6-49dc-a183-d78521f8849d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264d0faf-96f8-4b5a-8e19-41b056664e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d8a6c7-b97c-4bea-8383-4f477618ddcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85eaa388-b786-4804-ab06-5cff3e9ec606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddd3527-7fcc-4d24-9a1d-b0fea3ab47c5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44553a1a-b52f-4e8f-a221-127b74eb24b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cd27d1-dbd7-46a6-9f58-53809bd2532f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cf2d71-2652-48a7-b883-ac874b6b7cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f4a6b6-aceb-49fe-84c9-e3249b365729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafc2cc2-da82-4a95-b04b-2adcf8ed36c7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3269413f-4195-4f79-8500-4a29041d1cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83ffc5a-a076-4d67-8f46-32b7a99b2a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00283855-a687-42cd-8af8-b6127121bebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "10726c56-53ac-4592-8379-5666eafafedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cea0a8-1255-4e9b-954f-1a0ca5c66ec7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9b1481-17b0-4a0f-a028-a8e20b818fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cc2f37-6def-453c-8e0d-164bb5797073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824d390a-70a0-4545-b720-c92bb0c587c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd398b6a-a085-4d5e-86ca-6eae5a2d224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959853c4-83ca-4672-abe1-aa47a509d109",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e513da-e156-436e-bae6-aa4e384dd96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe3af0f-76ec-4ca2-848c-b11d99655063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db06ac8-52be-4289-b857-80534808b04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "276f16c3-99fe-4873-b0ac-b9aeaec72d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bea20a-fde3-4f79-9d1b-08111808424d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d7c6bf-6028-4bc8-892a-73f26f3c6ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1390bc-a3ca-401a-bffe-4bed730b26ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cbf7ef-87c5-4d45-a531-622b00db8bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ee5fb2-e49d-43cc-ba55-96bf26c73630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf31e806-db50-4a85-a463-a1124465cdd2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d318357a-131a-4309-b879-db3f6d9870d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681f1555-1e46-44f4-9da7-f2b30f4ad688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716d95c9-0e44-4704-bd59-3409e06aa0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6084e86-e283-4b3e-8052-926d800c3a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760e4ab4-7f3e-4170-99de-726dc5d82ddd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb887f66-6371-4358-953a-edae14f41eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dbea47-48b3-42ea-89b7-8635021fdc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc8fbd9-50d9-475d-afa1-936b51ed0ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1150944f-0c61-4db8-aaef-70b997c4eeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d364b07-d559-4f5f-9a31-ebfc278bc416",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281c932c-d728-4772-8f2a-95e59eec0fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636a4ce6-1c58-4db8-aaee-4ea6b3693a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc2cf65-a039-46a3-b548-bfd0227c0305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "549b4246-bab4-4868-88d6-856a8b8a4ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89b8f9c-7123-4e2e-a3e6-5bd5ac7539c9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3251c3e-5895-4148-a198-6f4128e553b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1329782-4c0c-4018-ae83-68a60488431a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928915f0-8ada-4ed3-86da-9a532d2d9629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "812de3a8-bf43-4100-a289-2f77018b8974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6afdf8-beea-4e91-878c-f51ee6b6e9eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead45249-d3af-4941-b36b-0101458c7cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee17f880-b444-481d-ab59-d18e9e607f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a16c0b4-7e3e-4dbf-af1f-8924fb7c08fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c81d3c5-11cf-45e1-b9b6-a2e5f76cfc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ad3f5c-b3ed-4fcb-9dc8-b045d1b4e1a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efc6701-c290-4c3a-9f5c-3ec374d1e1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507c9f1e-3026-49e0-8c5c-0f63a1823077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f21c958-d6a9-47ba-9d99-2a7eb0e777f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "540a226d-0449-46ae-ad55-03d785da34e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5f5a93-c161-43e6-a9b1-03ac5920d7e9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69bc91d-c593-4a57-873f-ef0b695fd7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ad7d45-2a62-4699-8d2f-111987b119aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad72826b-d868-4704-94b3-f717fa389c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b99d282-6fe6-4f33-b9e2-cd4e8266b639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcc92c4-8edf-419f-b258-e1210e2e4373",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b4399a-94e6-4087-8fcc-22e4c601446c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df00dc6e-809a-4ba0-9954-b4e3d2f474b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6be4cb2-b3db-4bbf-a47a-b87264eeb607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74ae6d45-9c56-44d7-bff6-152a785f4f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d30c4d-e731-450e-8482-35b2d7adbae2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87990cf-fb80-45ff-9a01-1ae0daa0896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e3ce13-5591-45ca-b2af-19a581c1546c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c1ff89-371f-4d13-bca2-4518b9e27a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ce9cd9-d9a2-42ad-bca3-b34a353951f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1ee930-7b9f-4ff0-9c6b-48db4e602ab3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dccedb-be3c-49a2-921e-2f2a46c2d7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6beaec7f-a9b6-40bd-8876-40e97ecd9d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1718093a-859c-403b-8c06-8a78889f2120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9272ce30-7918-4185-bbf1-ba814a3d2fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbf141f-9214-42fb-a8c0-868e19b01489",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e132b60-c6d2-4372-9b60-24a11904e3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a702eadf-835c-479d-8f02-6abf1dbe0ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4944e8dd-d689-47a3-a8cf-5a69d9a2e569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7816f0-4ec8-40f3-be62-7643f7ccb392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716e198a-147d-4b60-9797-d5c17dfdcd10",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d73315-2c6e-4b1b-9e27-47a2b38dc750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e5fdc3-7e67-413d-8405-aa4412bd1129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b6215-f300-47b1-9470-d4974cb916f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a1d339-6ecd-433e-9049-eb99257ae539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbec08c-35be-4aa5-ba84-28f7eb320c5f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d113b1b-c4c7-49f6-80c0-1041f4c3f7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15e23f5-35fa-4171-b71b-9d3d17268add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e26bd0c-89c8-4f20-a4e8-460034ae08ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde5d0b3-8487-4c72-bf0f-f2281b68e5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c14afcc-b3d8-418b-939d-a1d12670f869",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e536d402-a0be-44f3-a7c7-12134a517590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48a756a-c255-4c0b-8370-ce080fa3270a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b736d483-c553-4708-a4dd-07f2ce1a10f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff79df2f-0c78-462d-a3da-5ab4505b1f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de93f13-379e-4d13-8150-b7403a74ad8f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc58f05-369f-4de9-b136-993a7e1d92cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb04138-1095-4f4f-a32f-c8280af8a554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6aab73-6622-4055-8a20-86e908d91285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c13e3aa-fc72-4804-9856-eb3f1a98877f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13855390-16a8-4243-9371-b498d4cc0205",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e3b5a1-1210-4249-a16a-4f25c14be530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c51a1c-5cd0-4108-8a46-7fe2761c51a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea19a69-5695-4d57-8d7c-00c89b7087d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d3c8ec-e341-4e05-b25b-6a736510ae24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2640a8-14e7-47c6-9e29-1da37027e3cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f34709-0e70-469b-ad3e-d9ccddbd04be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f26674-b8db-485a-807c-1ec3a208b9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbe463c-f526-44cb-84e0-fcba2c1bb337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "754ed6e7-43e4-44bd-8de3-72abe8a099f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ff2fc4-42b8-456c-a583-4d35da4f2422",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095fa6aa-3c55-4773-8d4a-00061b65999b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9f47fb-b14d-4eb5-baed-80263f2a0c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ea5aa2-3ef0-43dc-acb4-8ecfcdfffe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bab5e44-65ec-45ee-b422-e0ac7ba176bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441de479-8723-411a-974a-ee0b0a37be20",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ad373-19c7-4fe0-b9cb-ea49ddd62617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41105ca3-5f9d-4667-babb-4021c281d169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31355a23-26ef-4123-9039-63d0242a9fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "454c55d7-0f7b-4013-8fc4-ffbe40db9a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8234cfd-d5c1-46cc-99aa-00b9982854fd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b3ef02-d106-4843-a5c0-3b58bbda8a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baba7036-6989-43da-8941-8c2094647406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aa41f6-3713-4440-ba70-3a17daa6c402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5708c6ee-eddf-4621-bb11-4e1e22cee021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88dea65-116b-4664-9269-8c2fbbfb8424",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aa3702-e292-4999-9e44-0015949b57ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16422acd-e5c9-4860-85fd-35bcafd8ff35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be108549-b68e-4392-ab15-8cecac5264be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79fd64d4-f6fa-40e4-ad1f-58e78326b676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91c78e2-6e5f-469e-9931-8f0326688be7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02692f07-36e0-43c6-b701-d21ac686b48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd20db95-4ce6-46c1-96f8-eb657eba1d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bef2d0-fd8a-48c9-9298-434fb514284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "451ea7c4-f175-4253-8adf-3c7ad8d4a30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17de920-ec73-4281-abbc-5319c1aaa598",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb9656f-fca7-4379-b8f6-5957f268eb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828b119f-820a-42da-9626-8d66bc2d84de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af03ed6-2bb4-49d6-8ed4-d843a952113d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a586ee-6e33-4618-8591-59a8c5d23dfd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65d2e914-8517-4ba2-9259-c2c811c30415",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b38c0a5-ae36-47fd-a58f-a92781729a0b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8cd269-1c75-41fa-97da-71542e4d1f64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2abbbbe1-6839-401d-afb1-764dcf7276a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7e8438-7c15-4c02-9808-93345e5888d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27d7d5cb-c524-47ca-a7d5-75f326b3fa93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0705fb3-7de6-402a-beea-b5101656b6ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2446cad-f10e-4770-901b-f9c0cd6d7415"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb41c18f-4f0e-42b3-8bbd-37e4247c6b17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db7e1a3f-e04a-4c33-997f-68b84ffee23b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dca12f4-9d56-4dbf-a23b-042172cd1114",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a7b2d3d-ed04-4a62-8664-b08bd5f1df3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1141201e-74f0-41ea-87ef-650a631ddd63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca4dcab1-f8d8-4e4a-89be-6b097a657bae"
            }
          }
        ]
      },
      {
        "id": "86a9a737-c591-4e4e-b56c-16b481187b03",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "84dffb3c-8a4c-4e7f-80fe-139c335a8256",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc761da3-abb9-4a52-811d-28b4abdf065c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0bfe6d1-a28b-462a-be22-989afd273e66",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dd6241-bb72-4f48-aeb9-939892d6ed91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b01db1-0831-4d5d-849a-c4f2ab1725ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268d4c4e-3fca-4874-8f7f-e794f98c4665",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fcd4de-cd05-4332-b301-6b8af3aeb0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05d214e-f524-4205-9a30-fef165786be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb49e59-d7ad-4746-a1d4-f4eeabe6e7f0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac03f9d-d3f5-4af6-86b9-5ce877d0a268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc458b6-68fd-4fbd-b63b-88410ee6b093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346b63df-af69-4599-9650-a1a8da559761",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb208d56-31e4-4882-b63a-71dd605c4aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c410fe3-b388-4095-87c3-c9d4828340ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42230386-15b1-4379-a355-8bc7cc038b85",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7653e5-4ece-4134-b31c-14ef52a22572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72616f45-c7ea-48e0-ae54-845a1f72ea51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183a04b3-78ea-4775-a806-5de3699d87b2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9437d73a-c3e5-4f43-b35f-1506e2c21d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05d66b0-d9e9-4ae3-8a46-5ed749eb2f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f295f3fd-9559-4724-baf3-3f83624599f0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e783d5-6388-44aa-a085-98e7e907a90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfedc77b-16b7-4284-add1-8ca0c19a9106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315da641-fcab-4dde-8a5a-227938d5ac19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78310bca-c018-43ca-a248-d5c373fc94c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9da5cba-0d5c-4a1d-a5de-cab29ec320e6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15da3d0-5942-4f2d-a7aa-d15ee405ffab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2058609f-c07e-40e1-9636-17335583206d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5c1f52-4f83-4a7a-979a-3450f6cae251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a9426a-852c-40a6-92d6-008ecec448a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769705c7-2edb-4642-9b4d-bb063fa03d9d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311b7fb9-2181-4a46-b155-349a5e3a80e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9e6548a-03d0-44bb-9d81-29937115c3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ac3722-d789-4e69-ab4c-39f99fd143ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c708b68e-d688-4601-b139-0593ccfd5f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272c41d5-5e33-4238-8a0c-76fda4f4d4ea",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7f195f-6d99-4724-a28c-57bfaef3b420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce53884-964f-4a2a-aa0d-15a5c062e486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da0e3bf-c4ea-49cc-8ed5-e0047b0556c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1631a35-3c21-4717-879b-c1c7a73d051b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a309c00b-19c3-4f26-ac3b-14a1d50074c5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c9a284-7616-463e-b489-06b057c25b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f73317a-a69a-4e53-93b2-2eeb6de20539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47190fdc-3fb3-4f90-8880-43b3aa06f2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69422844-8699-4a94-bc2f-b001912a21ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41be43b7-21b1-4002-be7d-6a0c82b9db7c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46918771-49e5-49c3-af75-7a33faa7a770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e70898-a1fb-4c19-9af5-caa79ef312cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9377d59-07d6-48e1-9ec2-a2b2353d1cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f73982b-ad4a-49cc-83c1-cc1b5bf33387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d414928-a146-40a6-bf3d-6634ab98f93a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c99ed7-c6e1-46ed-bfed-76e2dbcbc81e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203fb431-732f-4b67-91d7-ad77acd70bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa5c6ec-959f-4ea4-a823-d40ede0bab34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b3b009-5fcc-4ebd-b6a1-5523e8e0134c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67181ffa-1c17-4801-a8c1-8c4766e24440",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e4465a-7062-4000-b9cf-aaabe795a4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c0a6d4-49f8-4165-a36a-8465aac5de83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66488a39-e484-4cc8-93e6-7fffba88a544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceed7366-0c07-4f6c-b96a-c6442db42ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a73d923-1f29-4e8e-975f-a3d19b2d39f0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d5bf92-c238-4457-932f-da414900fcce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7298e12d-7d76-4f53-b3d0-7d80e2432eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631a5f0a-e283-4361-a953-c491033cb8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c48eba-ee7a-4d9b-8c9e-f9be4f466313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171b9494-5f39-49be-8e1b-0178d1bfc34b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16edfe89-917e-46d4-a3f6-1db8ef2bf228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c66f63-4c17-47ea-beb5-7e3e11bf7f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd26eaa-a8a6-4ebd-81ba-8ae3d711b4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ce85ab-85ed-4856-b79e-1f32c6edbf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3003bc65-f45c-4242-8d8b-6a5b207cd827",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8896c3-8e45-48b9-9cb9-efd22f24f876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b832165-c818-404d-875a-6ef2ddcf9062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce3f744-341d-4220-b886-92ce1301ee40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464a2e57-198f-4094-8d2f-a2f40b535beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ce1d4a-b768-4bc5-a4b5-3111d34353cf",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73744f5d-3665-4feb-b169-05dbaa3913a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fb1d13-f2fa-49ec-a68e-224b596895b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc4effd-28fc-4524-965e-d00e245107b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5592331-6c17-47d3-8399-f4951ed887e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b3e926-d1b4-4972-93a8-3d50274052b4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2552b3a1-6d15-40ee-835d-0032227ea80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c814b0-795f-407a-a31e-2e91868d4498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5060df-b26a-436b-bdac-6a710be2bded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5ffd7d-ce0d-47b2-8366-9e213a047d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55917ca9-6236-4dc1-beea-adba97e16aa1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a18c8-cbb9-4a79-b0ef-296015dbfe50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eedebe9-8e92-4d1a-b256-51a875d2153b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d205779-9934-450d-a5ae-f296b845041d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eaf30ac-9d3e-45f6-8201-e483c25de80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c37744e-7af5-45b5-b600-682398a524e6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b9af60-906f-4836-bc80-9818199ee96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deef2975-9198-49eb-a142-4f48acfa6818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd0f625-7de9-4b50-ab3e-6bcbe2812db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f986bca5-b710-47d8-8cac-103246993acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e94245-0987-4ab4-a089-b5ff50a21ca0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85449ed-5114-4509-997b-9ca0572c9881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf1c16e-dc32-4256-91f7-2b48acfc0226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6435cddc-bca5-4f24-990a-791d0dac6ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e01c47-f74a-44b1-bd2b-ebf89db12f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c434e4bb-7575-4bdf-8c92-c0f6ded9ebe1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c38305-7f65-4ee5-8f59-f3b2aa8fd349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8345170a-f20f-40d8-aa80-04531cbd4285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bea4b33-4d76-4bfd-8e4c-1565fc3d50bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea09ca3-a1b9-4b72-bfad-cae7d4416582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a079e6-41bd-432d-92ae-95b434f7f42e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a26672-fce8-42b4-b45f-942e0302c02b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a92ab68-2af8-4fb4-a878-024d11353d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2144fe-9694-4709-8568-10b6262a9340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e79eb2-98ec-45b4-be6c-ff85d9eb6811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265a351-561d-4ed3-9a7b-6893a3bed31e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027f1223-6955-44fd-b12b-d4ccd449aa73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27139e61-0216-40bc-a11d-e7b5670c16ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d962db-7e43-453c-8035-86b17634aa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b09fd33-14a1-41d3-8062-d8248cede3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d4637b-193f-495a-8362-d72022acb309",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80226d-d86d-468d-aa8f-aac1852f21eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731e46fe-1afe-4c6c-a5b1-c64c42aadfd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719fee34-ef17-4c10-ac53-c3fde4ba3985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613d1547-beac-40d1-89fa-cbe017fbc73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa33915-7dc2-4955-885f-54f75e349822",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223bb1af-8776-4846-a01c-b30c17cf015c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2e0564-183e-446e-b4a6-8419bd66f9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05064e6-654c-4294-810b-4ebae598b226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406884a0-5987-4075-b95c-521fb8f87007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc61a4e-3689-4268-ac29-01cf9d18e179",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f5c254-f979-4721-88db-b6a915fbf33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2302f29e-c50d-42e7-b15a-51a07e5d9748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cebbd0-78e6-4c8f-bf2a-e51e1650994e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867cd815-17c4-4a3e-beee-58586d03ba29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc4b649-2424-47d7-8b46-06e330053203",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5137e9c-1da3-42f3-a000-8ed79a6cdb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba55711-5c06-474f-8407-dc69ce31a279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d432804-bf40-4dae-991f-21ecb20afce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a4ac1d-5559-458a-9a1f-4cb65ff54e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e084631-8901-4938-a3d7-ba1f6679b4e5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdacb68-b472-4516-9b8b-600e895c9816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05fce118-40a9-4181-b40c-4e8156d7dffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64926f8-4886-406c-ad10-24a2763ee25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55dfd28-bb0f-457d-be75-8b58ff44a87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf895cc-9487-4718-a9dd-39a2b2752789",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ffb46a-2d3e-4cf0-8ec4-26ceaa456673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb4f180-3888-4a76-9cca-f49f87b5b9ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005f9d94-b3ff-4562-a17e-306df115c8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ec5bed-a1eb-464c-be10-322335b0256a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd44659-ed89-4a98-8bf8-e83faf270ef7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434b62a7-9bc1-47d1-943b-6c932745235c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1148ddd-83f8-470c-917e-f494c2409759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736f6061-623c-48b3-8317-5daec9a81624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a396e838-520d-462d-a0b5-85542f439534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4feb48d-4646-421e-9bd3-625c17a62ff1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224dc463-11c8-4809-866a-cc1f0a8a6e5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2144138-e39c-49af-bd3e-d49f41bdc1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9514cece-ad35-4748-905d-552011818ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59d71c1-c02f-44e2-aabd-6b0555ed7cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a690db-99ed-4fc7-8033-935e22d1c02c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3179b890-2fd6-4a71-8e9c-72e9cc84c83c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee98535-98d6-4f51-afe0-3997ae4888d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500d6441-d0b1-46f7-906b-6de08ed149c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196d16e3-f45b-44e4-b21a-25fd47d569e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cd4892-49aa-45cc-a352-b09e0d2af417",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa93656-6fba-4213-ae63-6d25a5e8d032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572eb203-7b2f-43a1-bcd1-a6531ba0fc22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec140344-e99e-4ef4-a7d7-c8c7b146c938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806bb2fd-88fb-4075-9f82-457c7ffe686d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a2be67-caaa-423a-a672-9ee25acd5362",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e697e86e-3cfd-4bef-adec-a5c17389ebd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbc5f59-67e5-4394-9fc0-ee9f4af55501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a0dd83-1980-49a0-b264-0cd07f86ec68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d4544e-cf96-4b4d-8182-4edec090970a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e61d393-0eac-4ba3-ba23-f67636302d5f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e84289-6f3e-45af-9f9c-e232137fc743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed03a47b-462b-418e-8805-ed7e0f572ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37dc7d0-662c-4be4-939a-cfb96e86c634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f8db97-c2cb-43dd-99be-ae01d91a3d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f54c2e-2a8b-4010-aacb-533101decc2c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5988d6fb-81a2-4a9c-961c-2bb3f5890678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db7e9cb-b805-4dcb-a03b-94354592ad17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65600d64-492a-4460-a483-7f91ab77447e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83bfa1e-cd5d-46fb-b933-288fa78a9391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490f736a-dac4-4b82-949b-26950d719ae9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e38f61-c334-4027-9ac4-8e3dbf3b058c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7189669-fa9a-4d71-abc8-0e9b150a9fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfcd45c-e84d-4aef-a37a-45723b8ea477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d649b70-7004-403d-8014-5ef5f88147bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1dc49e-5658-4731-bad0-3aa841c59293",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e3c03f-2297-44d4-83ec-c8cf0a62a6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bcd430-933a-43f7-a32a-f8c4e559db0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e120e68-3f60-42fe-822e-4199f9c6874b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f609d412-cf10-4248-a688-d424c1b29a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a40a2e-1862-4475-969a-1daa83feb39a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb495a32-581c-4f79-b6f9-d4db374966a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb6f34d-2833-439f-a086-0a1d9accad1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28e8d40-9f49-419f-9977-3a7d0b4e6d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0804689b-ba8e-4f0b-97f1-3cb022e98cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6458165-b287-4fe0-b5da-3b500d109711",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b181501-bbfa-4540-9857-09fd85244e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb1ce62-8ea2-48e7-a0bc-2d7ab551906d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c794237-a688-49dd-bf83-c5b9fd097381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf34faed-7ea0-4b90-abf4-48d4d701a176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f31b00-7c14-4b19-8cc3-bdb7d997ada2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5207c327-e60b-443d-9e0a-29031da8c4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7deaebd8-4f89-43d8-b6e4-32297101906e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f9f23c-261f-4618-9e1c-be7f732f4ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d175167-a74d-42e2-afbc-8011034cec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427a63fd-58c0-41f1-9086-09e124b5e6ff",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62f9d64-d0f3-4b20-9536-a44fe57b628f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9214113-4fac-4be0-a0d7-b60040edf693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707f394b-5f25-4903-be34-7f508c04f690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5864d85d-1e94-4777-b64c-ebb278aa21ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4ee2d5-c0e7-4d8b-b068-d0b2ddbfe38c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec8144f-bea3-4ed8-95e2-b6d6f142dedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28f3ff0-54fb-4cdf-bff7-492b010cce2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d98974-4ea8-482c-81ae-0ee5fd50f77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6762dd3a-e4a4-4a7c-9e6e-b349c8f84c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e634ee8-ffaa-4a2c-a302-b278b6c5893f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc07025f-f355-4359-8f4c-0548222815f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fa163c-ea43-403b-ac7c-8df9df31f31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d8688e-78f5-4ec2-be39-da2b8761f464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1540c5-d0e5-4b1d-9eb9-0f5993404f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa4a5c7-8e8f-47c0-9cd0-ade19e54bca1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf756d5a-b44c-4e4d-80ec-a2f101bb927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24068d70-ec76-477c-b5ce-f85f3a725784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3656162-45a8-4e2b-86ad-a3ab6e61f853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94f53bf-fabd-4eb9-a954-43ffcefa8153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aba4627-8337-4e71-9871-d743a0b70f74",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f562a3-a944-4183-9ae7-1fe53484b213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ec4290-04c2-4283-9bc6-598749224ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c96e0b6-f638-45e2-8dff-363fa6986acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebbf9ce-6088-40b4-b34a-ad20ad83acb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274ef857-6eef-41c3-825a-7fb1422a2f07",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453ce366-5439-408f-af6a-2656dac3b1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ea2e5d-ecfe-48eb-9376-7c4d390e1e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773ea4ed-36e5-4772-8af2-8bf4b15014d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334c768c-2b36-46e7-ad60-17288cbff794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b0d557-45e7-4e12-b841-bd5dd9afb3e3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bed3e2f-029f-4a37-bfda-be7f6530fe94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84a5049-80e1-4f46-b24a-90ab9b0c9fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaae30e-d304-4e41-8d2c-c186d5c9a93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7f25ab-b59c-4fe0-a697-c03b086ca012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8e2bef-f504-48b2-a825-b416cfd5d28c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d59901d-6110-4b7c-b258-d51296a02936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306d8f16-1e52-4d13-b27d-cfe865c7a80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b4b0ea-b5a4-4ade-84ac-4dbb66a97b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52468efd-aadb-4ff1-bbda-3491d4b0afd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3411f07-a4d7-4ddd-8fde-3042a18afb5a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42197b94-c292-47e5-b78d-4614ea6105c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b39b2c-a374-4ec3-bec4-1dad43b41e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55747a4-39ae-44ce-824a-244c22046f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45907f8a-79e7-4ab2-b277-f538b820e1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55f59ff-fe0a-4e0e-a404-f28ce939e485",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4f26d8-c26d-4f2f-aff2-916ffccac2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6396242-cd60-4c3e-90d0-2e771b24b8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd45013b-3e1f-4b21-b690-ae66480e5196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8810bccc-880f-430d-8356-ef3672f9cdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0305e6ad-0c16-4d19-a0c8-1f1dde5366f6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71f3391-740f-40ac-abfe-a9a7d45e6bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d205c7c5-f2b4-43ca-af6a-fbeb8c7d7941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f85a96e-514b-46c0-a080-1d0fe674ca79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3037962-0482-40f5-840d-f53fac454bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b922331a-15c8-47b7-8a68-6ffe1d2d3b94",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ac91e8-6700-4964-b5f1-a2888abcdace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1f8f52-e603-49f6-95b6-e528543fcfc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb64c89-60c9-49e2-8bf6-5e15690c2865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2123cf66-eedc-4eda-876d-82e162b126a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309aebdc-0c03-4e6d-b63a-1f39c85679c1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d82931-f3ef-4559-8b98-bd385314eb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558f18cf-d12b-41f1-9b05-58625a5ff3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d06ec4-f3ba-4b8d-95fe-2710c5379630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7cf35b-80e4-4106-8566-62e483e92f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5617c8-318e-440a-afca-2e3ed0b541c9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a9338a-6017-4f80-a7cd-cd8bcdbc3f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d324cf3-e587-4ed4-ad7b-4b13361b4437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415b9f72-b285-4e73-89e5-c766198220a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710acb23-ead4-4cbb-8799-dfb0589bbe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b298ad5-ebe9-489a-a990-9e2718d15e02",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8ba7cb-7380-4b62-922d-00904bbba6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77e3afe-0409-480a-a15a-5a54e93e633f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81050a4a-4452-4ca9-81b5-0371ed4466d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5811fe-3d1a-4f1f-8700-6078cf9d5fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3924b44a-bdbb-43bb-aaa3-0976342fade1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e67ffa-ef9d-4f4a-9774-f8e96d2e1be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec150f0e-9b2c-4f87-aeff-241d9c8d348f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849e7933-7b49-44ca-aff1-0c9e32cc9fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259cda21-2b10-41ab-8988-227400aca0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49be6e4a-08fd-46b8-b07c-678f6ed12a6a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0d6d52-5f29-41ee-a386-561c24d319fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e424e64-d973-441f-9183-a39275477b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0949e479-3e94-4134-bed3-3d91c504d9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1108ba72-513f-4446-9b42-f226aefe6585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41c686a-c02c-447d-9c3b-5c4f63aebee1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76422b70-477b-425a-b9c6-b77985837b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa10cdda-da57-47b4-924c-a9a95a8fa9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcadc8a2-27e2-4e72-ad90-e640790fd740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5dbbe7-9731-47fc-be52-9cd471798162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4c3644-dfc6-4bf3-803d-e20c7cc5b7c8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f4a45a-6561-40d4-91fa-3efd1d806e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ae1304-d333-4188-ab92-d999801621ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4244b7ed-aea9-4315-9f05-f00ddd931368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1f30b7-e529-470f-911b-f3908a5dcacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4e08e3-073d-47a5-9577-240a43df7ff1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c0f837-8085-4010-8dab-43a5f733782b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6a2b77-5f16-42b5-9c86-a6cb644d9ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a402bdf6-5941-41b2-abc5-64abf6f77c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18146841-47aa-4549-82ea-7a1da42f0224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac55ec9-0ff8-4815-b802-c69baffeaf67",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50749b24-2ab6-45a2-8d22-5ffd6bc2f24c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0388653-8d3c-4af5-8414-d6314b5235eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa2af58-b310-480b-90dc-bbfb084d278e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f1ab77-c2c8-43ca-9531-b6800e21faaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822f7c8a-d63d-4929-818b-6dc4d5b90724",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64425954-5120-45e0-b072-4a1aab6c5bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf7df274-aafa-4d25-b80f-afbf1e615eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a87915e-c5dd-4a7f-aed4-0854118e80db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844ec71d-4459-4ca7-80f9-9c3cdc6687ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b342695f-8c59-4282-88ba-bdf8ed70e5d6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fe6652-d0a4-43c9-9240-341476fd9c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d84fa25-aeb5-4683-a19d-4f614c1c7e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63850ead-7a77-452b-8224-ff0fac40cd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d811487-233f-4390-a448-d216d7dee2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a169d0-3b3d-4f6b-8228-4f593e2d72a5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b276817-2cf6-4cfb-8b55-e0d087d7593b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8283872f-18b9-4e6f-873e-9e521a87533e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c7354e-2989-4834-a702-68658a9e0cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133fcd2b-6497-431f-a1d4-086ea6c98754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e90df32-da57-47c1-9eb7-f4a4b28e9c08",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff210124-3a78-47b2-800a-3ce25c568160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e1f5a5-3928-48a2-83b2-82fff11d1eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2bed6a-51bf-4018-8ea9-81a0e2c561b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822c90ed-a4b5-4ad6-97ce-606ca7543471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aa079c-e9f0-4ece-bacf-a33404a93310",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dad43d-2a5f-4350-8e90-fb33a0479716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a9228ec-80e5-4019-be2d-8a5ffb7d7f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be85b45d-2ebb-4102-8ca2-e7455b24880a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4f5cb7-aa83-4782-9fdb-f74cf4f644ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717a2187-5a28-40e5-9080-16a3b5bee1ef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011635d2-f467-4e1f-9e7e-a9597eeae29c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a2ace20-3d1a-4e5e-9ad0-51243ed4b567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcbbd44-4f32-42c9-8309-ea72e6fa116e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17a95d0-ffcc-420f-b99c-c288230c4c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575ad6d7-7724-4f0b-aa8f-7b1c31199758",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e2a04c-5282-4491-8cba-f65cf109088b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9c932e1-f926-40f7-a004-386649bbba90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09569ce2-fc99-4984-9d67-8072aa9ee713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a1241b-e331-47bb-bacd-8ce14839904f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1644428-49bb-47bf-a120-13ec9c4977cb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e4d893-cdd8-4114-a12c-b62ec3fd494f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29005230-e778-48db-b775-c31e4151e8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6910303d-6de8-4f12-8b93-4f03d26b604a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dec69f-44ff-4238-bfdb-dcdfe998fad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35f7f72-903a-442a-b5d7-5cd940c1a5ec",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3707fb31-9bce-4eab-8380-2ec721527e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd6002a7-ceb0-4505-a652-47964310aeb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4d19f8-afc8-442a-b191-d8550ff03615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a08d910-9dea-4c4e-96e3-525f20e47f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71e226e-c539-4b5d-9d88-c5808b788105",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f01aa4-273f-46c5-86f5-9706ac3c2877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9165eb5-f5ff-4073-9e8d-bf180d90b600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5152e38e-9517-4ce7-876c-3c526c4389f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500bc477-7b73-46f5-9df9-ff7c84a4faeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ed908a-4d92-40b8-b781-1f0158b940c0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b920fc-8fb6-4397-b0ac-8b9d06da7512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ecedd0a-ae5f-4911-bcb3-8ef1fb544b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccc4066-efcf-4dfa-83d8-f6eb65f9a1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecaf3e1d-fec4-4b4f-8ba8-c56893275cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1744b1-4416-49db-84cf-e17128714ca6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a49fcf-d556-4f67-8ed9-59f728d6ca42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225ef693-8f1e-4256-b1e4-3046d42431c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5226ce-4a9c-4a9b-8734-b44201bda9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3891d49-cf20-44d9-9225-d642c03a9558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123ab31e-388c-48c9-a761-f35f9467aac2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9312a03f-3b01-4d6d-84b8-6b9279edd04b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec00f221-cf4c-437a-9ea3-058c82b22385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfce9a0-b2ba-4bea-86d8-3d0fbec05ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffad092-e421-474c-95ef-39afbdcc1db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3425b551-fb27-4db9-b375-6b6d6d96b1a7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f6275b-5fe2-4198-b2b1-c59e05736911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c23e7e-b02a-4fb0-b683-23e25709735a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8889cf7-ba97-4e87-bbf5-8c6d9d0dcdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a8bf15-d686-4468-87ca-84da4ffbd385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf91e11-6488-4582-acb8-a910cd01614c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e14f57f-2ab6-4dfd-8710-50ff3e3f64be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac585744-d57c-4acf-964a-1c310d07aa88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f50b1a-99d3-4d3b-ae38-5e09f4745030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51b26bd-83ca-4006-9480-b4e4f6b3aeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3626ab2e-e92d-40ee-ad15-7f221b83df0b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a0a23b-2cd6-4b9d-8daa-fa5d704acb3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c1ceb7-aeb0-48ce-a933-54b61d9a42af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863e2681-b7fd-476b-ac5a-0b2fc405b143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5a9abd-36fd-403a-938a-9e1856446809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31355bd-7441-4fac-b7bc-8e846ef16787",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edf3fd9-5e2b-41c2-bfbc-59c7afebe520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5201090-2a45-44d6-8942-999e96f03b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dca801-90c5-4202-a8e2-f1cc7335284d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a82a92-3e57-4558-9e23-f7b2fb15a9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7607beea-0bcd-4545-8dff-5d85b7c842b2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b350ad-6bd7-4b6e-8b33-225569bdf65e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8448f8f7-1ffd-4c00-9086-a0a9b80e7a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2dd61e-68da-4b3d-b0fa-2ce65e9e31db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d0c1e7-ce9c-44a0-9176-044c4df8da68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cac7075-0d36-49bf-baaf-eb13a15209c4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7518dec2-349a-4264-837b-ad567902e4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19ca1fc-96bc-4a6e-a070-49ffa9c7222e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e9f3b9-1cb7-4d23-adc1-a211b9799d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b5ef7d-a276-45dc-972b-ec67433709cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05edbb39-e55a-4dd2-8304-01834a089cf3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fff2fe-5a8f-47ca-9088-5dfcb4ecfbbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c04baf7-0115-4e84-88c7-c4f3f20d5111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbb1fe3-5b7c-48f8-9b3a-8ba70aaec563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff976677-2cdc-4a75-be55-fa79523b69cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83a457c-b731-4bb6-9477-66b14c09ccc4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981f3483-5c08-4850-9d01-e71515be5c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e3c255-0aa3-4611-b1df-fddde33f07e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a7dbf3-4ae0-4df8-9cf9-38af7e9a8bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad775231-f301-4a6b-823e-e80d5d2b6101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d9116b-3cc6-48b9-9ed3-45f2354f59d9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f66553-78a3-4177-b60b-25c7b5e7506e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c01b341-bb4a-4cad-8448-10a9b4c7c137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c940b13-008c-4b3d-b2b0-d4759061b0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61104a6f-9aa0-4f1e-b227-4d6fba56278c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb35793-8446-4f3b-b878-69d803116637",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821f472e-8baa-4a87-929a-cbe5b457e6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f916e4-1775-462d-b71c-9811f40b0526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda90ea2-a223-458d-9c35-7472c89977dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7bdfa0-787f-4442-8565-634ef347e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d0934b-757e-43d0-8ba9-ccf01a701609",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600729df-8cf2-4a45-9379-57cadeb09ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef9cb90-7f44-45be-b6d8-092c0c98bc05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42613aaa-3ee4-4daa-91b5-94a2c6b95c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316907a7-c5ec-4160-bb92-adcd134bfc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5147c82-f03b-4a29-9047-2e373ef57112",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de2af5a-c485-4168-8353-6ee489015957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42420d7-a572-471b-9329-85e065dd2e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad16ae18-756f-4f8b-bffb-950006aea9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa04c58-97b0-4d13-adb1-7ec550417d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68867523-21a2-4e39-a5e8-8eed4cf28b52",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c487f31b-5c1b-4a80-90c7-113809e5af93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f0fe673-d776-47b8-b066-c5be75c46263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edf7fae-9e78-4164-8f82-aa38c2ccd691",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7482d0bc-c58d-4f4b-bfb4-e126676e7e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15766ecc-89ad-440b-b590-25fe5fa2ea92",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525cd95e-50f4-497b-bd6c-e3b4f03f6d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "029a4ae2-84c6-4f7b-a86c-2c09b4123961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3f728b-6aa7-4b6a-813a-454024053ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcf43f1-05ee-4dee-b9d0-677a1b013dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aebdf7-4a5c-441c-8cc2-8af9e763fc59",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4349796a-f187-4ff8-be37-e597c138049e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f558ac2-00eb-48ee-adf9-903d82ab3d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42b9d80-a271-430e-9bf9-62eb8ef8113c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce15a31c-dc1b-420b-a331-a4503ca4f83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12168e48-d6ad-4555-ac18-ee3629ebd859",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89fc6ae-4952-438a-9ff8-4e1a8cf3d493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "040081cc-542d-4527-88a2-2a3811cce81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe869df-889e-4315-a93b-deeff373bfda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389864a7-8702-4534-8b6b-50c879f58ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b5f656-e80e-4dad-8a80-04cdfc78d7e1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7cd0b7-53fb-4681-8ff4-179171f7d75a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175223aa-d615-43a2-8f72-54971b138458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0dec6a-876c-46b1-812f-98590b95c529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a397b0aa-810a-4ece-8b97-0f9a2cdce641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e64308-53f2-43f0-9fc3-ddce8fd53351",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd936f5-2296-4d1c-aa2e-e1e0c51fb5cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d8e3b47-db3c-4df4-a837-550290550c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277fdb75-be6f-4de8-b28c-dbcdfb2863f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef32db66-b78b-4e89-b216-5db3e8daed8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c989de-0ce3-4a9c-9336-5f3f37c19cc9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb91dde-e74a-48e3-9862-74455a5091b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad58086-883b-42f9-8182-97bb11f05db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6461b002-afd7-42c7-b721-f9705b6edfcb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69007991-3924-4af6-a6df-427ad40968b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d3380d-28bb-43b3-9118-45f342998e0a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0b7e9a-b9c2-4b42-8f18-390443b79def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e938a4fe-2769-483c-8188-d9beacbbbbed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e668909-5527-4abb-9047-e0de20abe865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5304f514-ad84-47da-82d4-ad8236c8f55a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "957d650e-ce71-4cac-9067-549f4fe15317",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee96c672-828c-4387-b902-7f7c3cbfe675"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d0af942-f551-45f3-b5dd-8c7620942ff0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "784180b6-e0fa-46f9-a70f-b5e6d3866cfb"
                    }
                  }
                ]
              },
              {
                "id": "7bdb3233-ba0b-4759-8d30-b5a9f1268d65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9bef70c0-5fcc-4d17-9c79-71308f7438db",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2603ee16-639a-43cb-bef6-391cc1051d4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "97179c4c-ed55-4dcf-bce8-9b9955b8cd1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b9a8b6-2e50-4cb0-9a27-bf47b9712215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dadd7199-1f54-4b35-9de3-036331d3f8b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78d863d4-efd1-4d34-bb31-ddb364cbad78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d4d1b66-e95f-4ce9-b755-9a6b730bc87d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24b3f68e-f3e3-4925-bc65-62ee06212408",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "573916c0-5c2b-4a4d-a0dd-150fba558498"
                    }
                  }
                ]
              },
              {
                "id": "025f7f8f-3cd6-4c4d-a7f6-5be3a7bd89a4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "36fc8984-32ac-4125-85c7-c3609c049213",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ef146-5fe7-4773-a62f-22c2f2e0f951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ebc1ca8d-5d0b-4805-8e46-cfcba5280078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae87ce8-e33c-4dfa-bbeb-910d8c8434b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a88fc83-5c2e-4861-adb0-c00b828d0224"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46790e02-4a03-47ed-9884-2b716111e197",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32e1520a-73a1-465c-a405-ede6b9600f54",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8ed9462-8ca2-4e30-b96b-489bf3fc3df7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bee65410-cc03-4e6d-8e30-8d3faab1e264"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cce7f364-1ed0-473b-a3e8-2615f0cfb000",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "410636ab-ff3a-4ab3-b03e-d6a87ee27bea"
                    }
                  }
                ]
              },
              {
                "id": "21f7cee5-9436-41e6-a452-a6b74bd5b9aa",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1d55f22-8788-472f-afdc-babeb0816baa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d6ee0bda-f761-4aac-8b54-f6e85ac832c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45cfd425-8f5f-4f50-9eab-d0f97350ba96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edab432f-ad23-42f5-8bcb-809677fe9bde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a8c3711-afde-4ce6-8955-d1d28438d1e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ae380b02-8f31-4291-a3c3-b2a40bad48c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ce0dc80-8def-4637-a049-d5311ee283ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bf6439f-b3bb-497d-acb4-cd71341a933e"
            }
          }
        ]
      },
      {
        "id": "a714f983-9a70-4649-b744-231284607301",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6522a672-a76a-46c5-9878-f93b556c09a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d88bd7e-7c0d-40c5-bf60-63041ba12416",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c9f5070-11ea-4c2c-bfbd-a91bfc94b479",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c476143d-3f55-4f5c-bb19-7ff9ef338d1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d3b7feb4-2bb6-4fe5-9462-5b79840ec405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37dc934-ef4b-4a5d-8101-c386d71a08cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6af3622c-8c37-421a-bb99-088747538716"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "690d3c5d-28e8-41e4-a911-2db350fcb64e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3906c6f1-aa7e-4b18-99d0-18e6fc7b1394"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25376e7d-f775-4d23-a600-96e446342612",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48188681-c690-4ad3-8c0c-ae669ffb74f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "617f5c62-b0d1-48bc-9eff-1cb4144957f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fd57e539-5a24-4b80-869b-6e0a01f486b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fd55ffc-f1a1-4ec1-a439-4c2a4df17d33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abb292a3-14fa-4714-b0c2-97bbf69a9a25"
            }
          }
        ]
      },
      {
        "id": "998f598a-d819-4a2f-a06d-f860c97baab9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e571ada0-66d5-4faf-8580-b586775a7245",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b15654b5-a6fa-4d56-b228-92be5c908880",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "584f4896-074a-483e-b8b7-8c6faee17619",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2196ac3c-1f9a-450e-ae0c-20bf2f33b997",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48514af2-2fad-4698-ad1e-26ede9646306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751545c2-7161-4df1-a6a1-e2828bb6afbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eeec97a7-b77b-42e0-8e68-ed0f497a46f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "754f7e1e-7db5-4101-90f4-5ce92f5eabeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c76ad30-986d-4e32-aba3-289d2fb2090e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "196b5cad-9a3e-4437-b6a7-96ff1e182f1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d0d9895-251f-4270-9b8f-0d68ca263323"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71307e45-7f74-45f8-9bc3-1f11afd05642",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65bf39a1-11a1-4250-a2e9-30c8875802e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd668c31-a8dd-426f-b3f9-c188b67a468a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7cc9e8d-c2c3-4135-95a0-df112d2e9cb9"
            }
          }
        ]
      },
      {
        "id": "668540f3-22b7-420d-bd91-f1df610aaabb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a27674d0-fa93-4814-8638-9e2e0c3dd6e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "889322f7-6754-475e-9df4-9dbbd84b6169",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7e42809-f031-40a9-a61c-4699ec7a42df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f194869-b188-4544-8d85-3659c0acd771",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "630dae45-f8f0-4ca8-8aac-d01843bfa3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c04b6e-063b-4989-bf69-7992ba731453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "599afcf8-849f-4e24-93ef-c48221fa034c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb441101-4efe-4d4d-97f7-edf87b055907",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cb59d46-56bd-43c8-90b5-e26341d20947"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2457457c-5512-4418-aadc-74515f64dec7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af773491-48f3-4e2a-97e1-55d86f3982e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa68bed6-d2e1-4f41-9d5c-1e70ccc6f512",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4941976a-88de-48fa-9077-8068d7699ab0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b342205-cbe8-4ef0-9e55-fdf25c097ef8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d662293a-3969-485f-86ed-95567670a56b"
            }
          }
        ]
      },
      {
        "id": "94914523-3e84-4643-b896-eb7b8c51e8e2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "192724ef-b0f0-45a8-94f3-cf6104349b22",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b616b538-56ca-403b-91ee-1e80b3279fe8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0c610512-b20a-478b-915a-b9c0aaf7c97d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fc51b85-b38c-4f99-a8ed-9bca6f13cfce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0c95008-3412-45b7-8d2d-3b6f05e0f683",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 681.7380952380955,
      "responseMin": 9,
      "responseMax": 22992,
      "responseSd": 3437.9663508851586,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728089088589,
      "completed": 1728089269086
    },
    "executions": [
      {
        "id": "3fbed95c-443a-406c-b8d8-1db0fde182b7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8592374f-dba5-45e0-a0c0-9018733f8202",
          "httpRequestId": "d4b0526c-c926-418a-bc22-07f605a52002"
        },
        "item": {
          "id": "3fbed95c-443a-406c-b8d8-1db0fde182b7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3288ac55-70e9-40e3-875e-b4f773fb50ed",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "59bf98be-d241-475f-bdf5-90ebb817bb7d",
        "cursor": {
          "ref": "d2edba70-a498-45b8-8e1c-aca10e16ef00",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d3f833b-639c-4489-b490-93e17b7af2f6"
        },
        "item": {
          "id": "59bf98be-d241-475f-bdf5-90ebb817bb7d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "78bccb47-84af-49b4-a401-c1e2a5e7f2dc",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "1feab587-52a6-4811-b3da-a62c22d0b914",
        "cursor": {
          "ref": "58d2ff52-640c-406d-8194-65343362b566",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "72623fd0-d9d8-43ca-96da-b25e5619d539"
        },
        "item": {
          "id": "1feab587-52a6-4811-b3da-a62c22d0b914",
          "name": "did_json"
        },
        "response": {
          "id": "93e27c2d-28e2-4f7f-ae43-dc9f705dd757",
          "status": "OK",
          "code": 200,
          "responseTime": 306,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14ec208-a526-45ab-8a4f-aa40b7a684cd",
        "cursor": {
          "ref": "1f1d0022-1aed-446c-a4d6-d7f36041327a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a06f35b-5318-4da5-8197-c14033f4c24b"
        },
        "item": {
          "id": "d14ec208-a526-45ab-8a4f-aa40b7a684cd",
          "name": "did:invalid"
        },
        "response": {
          "id": "60c3436b-b357-4189-8d24-3ee6f44faab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2204,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14ec208-a526-45ab-8a4f-aa40b7a684cd",
        "cursor": {
          "ref": "1f1d0022-1aed-446c-a4d6-d7f36041327a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a06f35b-5318-4da5-8197-c14033f4c24b"
        },
        "item": {
          "id": "d14ec208-a526-45ab-8a4f-aa40b7a684cd",
          "name": "did:invalid"
        },
        "response": {
          "id": "60c3436b-b357-4189-8d24-3ee6f44faab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2204,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaf3f71-d79a-4c3e-add5-39024a913487",
        "cursor": {
          "ref": "a1e37f6e-45ed-47f9-9433-86f3ddc41cc2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "579c58fe-8833-4b80-84fc-f18b92f200ee"
        },
        "item": {
          "id": "cdaf3f71-d79a-4c3e-add5-39024a913487",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cd10143d-c968-4e6a-9c52-6b9585d6dac2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2543,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401b0b95-93a4-4591-ba79-11d5413adc23",
        "cursor": {
          "ref": "3f2ed59b-c4f8-4007-b275-a8128c4cdab7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "022708bc-b5a9-4bb7-80a2-095e9fa58571"
        },
        "item": {
          "id": "401b0b95-93a4-4591-ba79-11d5413adc23",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9a860b6c-8c4d-4cb8-83ab-9cb6c86ef0cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2055,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bfd523-2d15-4560-a0c5-141040515a95",
        "cursor": {
          "ref": "da9b11f0-dccf-45ea-a817-9a667159c51e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5d6aa5f2-f441-4224-97f8-57cc0db8af78"
        },
        "item": {
          "id": "49bfd523-2d15-4560-a0c5-141040515a95",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c41821dc-ceed-4ba6-9329-8f8748cbae09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6192f1-897b-413b-8cbe-3ec1eb33a8a5",
        "cursor": {
          "ref": "596e7d3d-7e2e-4179-90ad-59557d5cb686",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "79db96ab-061b-4afd-8eca-6e4f8857fc2f"
        },
        "item": {
          "id": "7d6192f1-897b-413b-8cbe-3ec1eb33a8a5",
          "name": "identifiers"
        },
        "response": {
          "id": "9444671a-b972-4076-9524-d88c93b3234d",
          "status": "OK",
          "code": 200,
          "responseTime": 2289,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3673810e-7b76-44c8-b049-362f82a816c9",
        "cursor": {
          "ref": "1b652fbf-c61e-4876-a9fb-0386166af82f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c0319acd-ff0b-40e7-9dcb-eec7a88c2978"
        },
        "item": {
          "id": "3673810e-7b76-44c8-b049-362f82a816c9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9766c889-c3c7-4c54-a026-fecbd8293126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aaa384-7092-456d-ab5b-56c9510c41e1",
        "cursor": {
          "ref": "97874bd3-a1e6-4a37-b532-ce57b420ecd2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "561bb7f8-68f5-4513-8807-848486840fa8"
        },
        "item": {
          "id": "c9aaa384-7092-456d-ab5b-56c9510c41e1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e96b5cfe-25c7-463b-b359-9a7529eeec8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b232d28-1500-4023-a76a-4dcdfc738584",
        "cursor": {
          "ref": "437c314c-0da5-47e7-91d1-8d550c1709d2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "40d5afad-3548-4963-9e30-96f48814ac62"
        },
        "item": {
          "id": "5b232d28-1500-4023-a76a-4dcdfc738584",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ac8e96a3-e0be-47d7-922a-3eb8c0bec05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93e1d32-2ddc-4196-9517-77337f354135",
        "cursor": {
          "ref": "de73716c-dfc8-417b-8c9a-938180e9b3c6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9ec07ec3-ca99-4f23-98bf-b29559cbf68f"
        },
        "item": {
          "id": "f93e1d32-2ddc-4196-9517-77337f354135",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d5e3aef5-1780-4e4b-b9b5-8fd3961e7e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36418549-9e34-4070-b0b3-5780b870e82d",
        "cursor": {
          "ref": "dc72f50d-5621-4c43-8851-18cbb9890bf7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5bf3397c-4422-4e2c-83ea-f9b29ea77a95"
        },
        "item": {
          "id": "36418549-9e34-4070-b0b3-5780b870e82d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1ccbc959-a555-42c2-8a24-fc99f5410567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354193fd-8a06-48ce-ab05-c88c17baf73d",
        "cursor": {
          "ref": "8f7e37cf-f5e9-4338-a23d-9f90daf1c1fe",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "29b94ea9-a884-4b0b-9c45-7b48d3fb9427"
        },
        "item": {
          "id": "354193fd-8a06-48ce-ab05-c88c17baf73d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "157a31ba-89f5-4410-9826-85a9a0dc98b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8745179-c12b-4dbb-a07f-7ffe0d7e82c7",
        "cursor": {
          "ref": "e4b32767-ff97-4204-a57a-f3233cd5dad2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6aa73018-e850-4d59-9d42-ce35f433d6ee"
        },
        "item": {
          "id": "c8745179-c12b-4dbb-a07f-7ffe0d7e82c7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b64b4f8d-d05c-4bb6-a46e-ffc808e6b120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1705b591-65c6-45c7-8201-6cbd3af359ec",
        "cursor": {
          "ref": "8ce95b82-a613-4fef-bd7f-1314428972ef",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aa529a90-fb1c-4405-b629-1a1a7e443dce"
        },
        "item": {
          "id": "1705b591-65c6-45c7-8201-6cbd3af359ec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "210a9e17-c67a-4b1d-a0d9-788fbb32a594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c897dfa8-81dc-4e37-8c9e-013fcf35f4ed",
        "cursor": {
          "ref": "46b5ec9d-fab5-42b1-9db8-23f3b235da43",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "35e19d52-c8f5-42d9-b4c3-b5212ef55346"
        },
        "item": {
          "id": "c897dfa8-81dc-4e37-8c9e-013fcf35f4ed",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "651b0e27-1b03-4857-8438-e9d6f216c230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcda719f-e651-4c6f-a0d8-ef268514a963",
        "cursor": {
          "ref": "904c8da7-e6e9-4e5b-a704-c1aa1b3c0919",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "35560333-e5ac-4256-82c7-17a050050a33"
        },
        "item": {
          "id": "bcda719f-e651-4c6f-a0d8-ef268514a963",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fee41c61-420b-4f3b-8744-63bdbd95fcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6638023e-0197-40ee-b981-2398871c1b23",
        "cursor": {
          "ref": "352337d9-f983-45f0-9bad-184560aad9ee",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "788af4e0-2798-44bb-a904-c46b7af70302"
        },
        "item": {
          "id": "6638023e-0197-40ee-b981-2398871c1b23",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "956808d9-5f54-4f9e-b3f0-ca977a547fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3269cc-1965-4d61-b26e-0c37dc7e58fa",
        "cursor": {
          "ref": "425c052d-baf0-45b4-b0db-64f0c755760c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "14388334-9919-4b32-98f5-f0409d12c151"
        },
        "item": {
          "id": "4e3269cc-1965-4d61-b26e-0c37dc7e58fa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e990caa8-08a2-4a33-8a98-b4d47f088cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cbd09f-ee86-4b85-8013-157f27190b35",
        "cursor": {
          "ref": "c65cd943-a918-49e4-9b52-e71ce8822743",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f7efa0e3-19ae-4599-be61-a6378a8aa362"
        },
        "item": {
          "id": "d3cbd09f-ee86-4b85-8013-157f27190b35",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "78169251-e349-4ce1-a969-30265323a4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8688bc6-1282-40ac-934b-514fd470e173",
        "cursor": {
          "ref": "13ef76d1-6d4b-4a88-8753-6f4e5789c48a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fcbd5dbc-ba9c-4d38-bcab-1db68fd6d601"
        },
        "item": {
          "id": "e8688bc6-1282-40ac-934b-514fd470e173",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3d1e8c8e-b6fd-404d-ad64-7f4f87f9f638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4df2e76-954e-4baa-8ea7-fe02ff4f5493",
        "cursor": {
          "ref": "f34bf55e-e18b-4300-a817-dc1f8a8e8978",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "edc9bbb7-c0a1-4b10-ae54-6836f4167365"
        },
        "item": {
          "id": "f4df2e76-954e-4baa-8ea7-fe02ff4f5493",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5951b6a1-794e-4305-92d4-c9056ceea995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6675b9b-fd73-4a5e-9889-2ffbd70a3c4a",
        "cursor": {
          "ref": "406a967a-b4a1-4dcb-bd51-f3c22a16afb6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "96ee2af3-20f3-4a49-bde8-b73256bfa161"
        },
        "item": {
          "id": "b6675b9b-fd73-4a5e-9889-2ffbd70a3c4a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1c561c4f-488f-448a-9416-6067bc0e229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340a5c7b-30f3-4dea-9b1a-9f5af0c8bce1",
        "cursor": {
          "ref": "de4ba027-9cdd-461d-912e-e0494a2e3504",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cdd98bb4-7a51-42b2-92ae-b6ac43ac8287"
        },
        "item": {
          "id": "340a5c7b-30f3-4dea-9b1a-9f5af0c8bce1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "df9d1204-d810-48db-a15d-8b010fa19e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6347190-b812-4de5-b813-5be5f863e4b1",
        "cursor": {
          "ref": "846f1d40-f862-4cf2-bc90-5ae2caf4c7a8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3161343f-78ac-4f03-8c36-b9503086529a"
        },
        "item": {
          "id": "b6347190-b812-4de5-b813-5be5f863e4b1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bdc3e3a2-e9d5-4242-98eb-720664c01b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f226af0-feef-46c3-8f69-71753733b8e2",
        "cursor": {
          "ref": "f8db9e5a-e547-4851-8c84-308ee1c3e53e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4056558b-1e21-4690-8a45-09533ded5323"
        },
        "item": {
          "id": "9f226af0-feef-46c3-8f69-71753733b8e2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ba44ded5-22b5-4961-ac28-dedcbb490927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9621edd9-6573-4884-add6-f0a9ff6f6c20",
        "cursor": {
          "ref": "685cf05b-7d62-41d8-826c-a1f03e93a609",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b3b39514-9fc8-4c3e-a100-17b92589efae"
        },
        "item": {
          "id": "9621edd9-6573-4884-add6-f0a9ff6f6c20",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "57e724b3-5284-40a7-81fc-3fd3b3df1133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629ba55c-7e69-47ba-b6ba-61b05d926039",
        "cursor": {
          "ref": "8bc2f976-6233-4564-ab2c-44efff4ae63c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb73800c-6cf7-42e4-a73e-3e580a2d4abb"
        },
        "item": {
          "id": "629ba55c-7e69-47ba-b6ba-61b05d926039",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "846b6d18-1541-4c54-ba6a-8960689275a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b6528a-8610-4286-ac0a-1188f895b983",
        "cursor": {
          "ref": "40920ac8-b4d6-45d3-aaba-fe3fd8b24085",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2514f728-cad2-4aa4-99ed-5f65a1bbfd89"
        },
        "item": {
          "id": "34b6528a-8610-4286-ac0a-1188f895b983",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "35c60833-645e-4f60-b3c4-c1eeee09484e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eb562f-faca-4c04-82a2-b61c811a98ac",
        "cursor": {
          "ref": "a254fadd-3c81-4ab0-88f4-892d0fb77233",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e8bee1eb-f19f-4104-9710-480eac033ca2"
        },
        "item": {
          "id": "08eb562f-faca-4c04-82a2-b61c811a98ac",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6c01c4ca-4a16-44d8-893c-cdc91bf26e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e38ece-c509-41f8-a426-1df426ce2e57",
        "cursor": {
          "ref": "11a11ed4-814d-4d08-bed3-a1f361c64355",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dc047774-48cc-487a-9c3d-fde40c55741a"
        },
        "item": {
          "id": "d2e38ece-c509-41f8-a426-1df426ce2e57",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2c7d052a-652f-4670-bf77-3dbffd8ba229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb1e722-df44-41f6-92b9-e9989f53942b",
        "cursor": {
          "ref": "17d1f630-1ebc-4184-bd16-bac99070649f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "811dcd86-5af6-4c31-9b97-7148f0eb04fc"
        },
        "item": {
          "id": "cbb1e722-df44-41f6-92b9-e9989f53942b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "57429193-38eb-4771-b1f2-1aa90dae64cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef09200-0701-4a2e-9875-a14127cab632",
        "cursor": {
          "ref": "45d31211-99b3-4cd3-b98f-5b3165050825",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c129e604-0c49-482f-a1c4-e74df6e6db36"
        },
        "item": {
          "id": "bef09200-0701-4a2e-9875-a14127cab632",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "58d955b7-0228-4133-8e41-8ca2da9bfdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe31082-5b69-4cf0-96c2-c032827d3d0a",
        "cursor": {
          "ref": "4e2feb33-1fb8-4527-ae31-b5df4d175f62",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7a84d8cd-8dc1-4717-a4ef-e1182b48ae6c"
        },
        "item": {
          "id": "fbe31082-5b69-4cf0-96c2-c032827d3d0a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "17a8042b-ba84-4fe7-b10a-68003d461599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f47777-7376-45ca-b15c-bce57712c4f6",
        "cursor": {
          "ref": "64e8b5e8-4f50-405b-abc1-c8000a29eb16",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0eeff6ac-99e7-4af1-adff-24c513ceab1f"
        },
        "item": {
          "id": "c2f47777-7376-45ca-b15c-bce57712c4f6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a357c1d2-1574-4020-86b9-078e576530eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a943544b-9539-47d9-ba8f-49ce5193a546",
        "cursor": {
          "ref": "71f68eab-52fb-40e9-acfa-9f0164283634",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "76afeafc-67ac-48b6-a6fe-511fc76af585"
        },
        "item": {
          "id": "a943544b-9539-47d9-ba8f-49ce5193a546",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d5d374bd-a20e-4447-b64b-0cecf7cf6118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fdbaaf-cff0-4f0f-af48-7778ff882928",
        "cursor": {
          "ref": "19f74a10-bee6-4603-901c-f7ef3f32257e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a7ddb375-449f-4c36-a64b-970d38ecc658"
        },
        "item": {
          "id": "41fdbaaf-cff0-4f0f-af48-7778ff882928",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f54c0b92-f8ea-4c0e-936d-88a04694cb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5480b8-09a9-4a90-babc-09cbb021161e",
        "cursor": {
          "ref": "8024e304-1f3b-4b12-80c4-5bd844ff655e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6becff5c-00ea-4427-b6cc-eb561353ffd7"
        },
        "item": {
          "id": "fb5480b8-09a9-4a90-babc-09cbb021161e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c8c22fcd-e549-4874-9531-f8e12cbbf2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca68330-b0b5-4974-897c-e6dfb7126c77",
        "cursor": {
          "ref": "986368c5-9f83-4024-a752-8ed62e661bdc",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b195fc48-9405-40e2-95be-fe7b12a48e2e"
        },
        "item": {
          "id": "9ca68330-b0b5-4974-897c-e6dfb7126c77",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1ffda068-7599-43cb-b215-a8669a172997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad08508b-b986-4e1a-bc8e-14af3ba7d14c",
        "cursor": {
          "ref": "d2c5dee9-bb30-4697-a406-8ae7c2e30f3b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "902b0295-0fda-4ede-aea5-884aead57619"
        },
        "item": {
          "id": "ad08508b-b986-4e1a-bc8e-14af3ba7d14c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ef9de1cf-36aa-49c7-805d-622e16d99186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099bcfc0-65c4-48c6-a60c-9ae0f0b114cd",
        "cursor": {
          "ref": "a7495148-4e11-4bf5-95e2-1d8e4b032c6c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "776d0ba2-3d93-459d-a2df-1ffcab5f2a90"
        },
        "item": {
          "id": "099bcfc0-65c4-48c6-a60c-9ae0f0b114cd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2b19e1dc-66a7-4291-b865-8aa7ff1c087a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c5ab67-ab07-42f0-bd5e-900aaf47fa77",
        "cursor": {
          "ref": "8b8e3e50-01b5-4ea9-af3a-1f95cff47896",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b5229f83-54ab-4eb3-ab06-301800d2e27b"
        },
        "item": {
          "id": "f1c5ab67-ab07-42f0-bd5e-900aaf47fa77",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "33e49f03-8b39-4801-ad2e-374ae149d46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de213c7-2f18-49e9-a185-fccc9647a215",
        "cursor": {
          "ref": "b13b5bbe-4a81-46b0-b3a2-0f661d27fcc7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c52c5d60-bddc-4631-914d-9ec8595f8c89"
        },
        "item": {
          "id": "2de213c7-2f18-49e9-a185-fccc9647a215",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a28ffed4-b24c-4768-9540-a900c60df642",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c02a8c-a658-4f90-8492-c23c8b0f5e26",
        "cursor": {
          "ref": "3624cd3e-4cdb-4558-92fa-3b3456893575",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f33f068b-68bc-4d1a-9060-0fbc7f991999"
        },
        "item": {
          "id": "50c02a8c-a658-4f90-8492-c23c8b0f5e26",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "379dc2bf-8c3e-4148-a066-bd6afd01f2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fb2c2d-c1e4-408f-a1e0-a63d99d7766c",
        "cursor": {
          "ref": "da67ae6e-2ceb-46fd-a8d2-ec72670ff79d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a7e05070-1d6b-48ca-8d2f-64e9b0aac8c1"
        },
        "item": {
          "id": "75fb2c2d-c1e4-408f-a1e0-a63d99d7766c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "de8d5255-8da5-481f-8854-be00c04ceaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602e2a7a-565c-45eb-8f99-4764b7f255b4",
        "cursor": {
          "ref": "e6743dba-13c4-4cb9-a653-563e0e7ec49a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "93c023f7-7b5c-4eee-b485-92d13dfc1673"
        },
        "item": {
          "id": "602e2a7a-565c-45eb-8f99-4764b7f255b4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d19b3e5c-4ada-43e9-81ad-a411a363078f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dfee1f-8661-41a7-ba51-32db42870a44",
        "cursor": {
          "ref": "eb8923c2-0f20-478c-a892-dd2c8c6005b4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3c7d31fb-8627-4cf1-9bd5-f1b3a7eb8a54"
        },
        "item": {
          "id": "a9dfee1f-8661-41a7-ba51-32db42870a44",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d92b95b9-576d-46f5-93c6-9f289e692b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f103feb-012c-41f8-987a-4bf0ec569d8d",
        "cursor": {
          "ref": "df1e685a-f1f7-48f1-8997-390cc9bc0482",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3c2d996f-92cd-4927-84b9-5427ab60e0af"
        },
        "item": {
          "id": "5f103feb-012c-41f8-987a-4bf0ec569d8d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1167a029-f37a-466e-8b58-b951c7a0a137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2948b677-628e-4d55-aaf6-7edd2204bf26",
        "cursor": {
          "ref": "51b328a3-7bd8-4974-bc62-65c0abfb19d5",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "24085322-23ac-47b1-9dd5-0f0481ae13cf"
        },
        "item": {
          "id": "2948b677-628e-4d55-aaf6-7edd2204bf26",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8856a1fe-2828-4622-93d0-8b7cfbc22baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efea46e9-a533-4e53-af07-40b1c8650397",
        "cursor": {
          "ref": "860b90c4-7b3a-429c-b2d5-84c506206a0d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "64c4bd52-dd2f-49b9-8aed-ff07efd4e8da"
        },
        "item": {
          "id": "efea46e9-a533-4e53-af07-40b1c8650397",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "985e2f8f-f740-4591-b909-33d417460f1c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 82,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c693f6d-6c7d-4734-864b-c9d5cc6eb82b",
        "cursor": {
          "ref": "194fdb39-43a5-4819-8fc7-c04427b9c7af",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "635f40d4-c62f-4594-8766-fd58413df88e"
        },
        "item": {
          "id": "1c693f6d-6c7d-4734-864b-c9d5cc6eb82b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0e86d04d-0f19-4e2a-b3a2-1be929189459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7fe988-cadf-4962-9186-9887aaef669c",
        "cursor": {
          "ref": "4fc50648-4b09-4328-8485-d7b5a7382780",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "547928cc-0e19-4472-9385-1995d1230ff5"
        },
        "item": {
          "id": "6f7fe988-cadf-4962-9186-9887aaef669c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "45eaab60-7540-4fea-aa64-d1adbc352657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa55607d-8b74-404c-93d1-8b2865dd224b",
        "cursor": {
          "ref": "b135d5ce-97d5-4660-893d-16b19255ec36",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "23a43164-ff2a-4d2e-b64f-6159fefcade9"
        },
        "item": {
          "id": "fa55607d-8b74-404c-93d1-8b2865dd224b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "da73fec9-b301-4f58-bd4e-e26d5e90baf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025fb593-fc4d-462d-98be-c7e76c57cd43",
        "cursor": {
          "ref": "690a58e4-23e9-413f-943d-f610b82a8d89",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "03ac19ec-26a4-46be-aed4-250a36d43219"
        },
        "item": {
          "id": "025fb593-fc4d-462d-98be-c7e76c57cd43",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "86615d56-e3ae-4559-9422-0914aa0eab8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8d294c-f9d1-4689-bf15-16e7da16bfaa",
        "cursor": {
          "ref": "f05a5a70-4297-4f7c-a192-ae49dd3821e6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6e09c9cf-bd7f-41b0-916d-6215793752ce"
        },
        "item": {
          "id": "0f8d294c-f9d1-4689-bf15-16e7da16bfaa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "62105f18-0a4d-446b-8980-eb4d75da72d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c08b8cd-c236-42d2-abc8-b4d57c4a4041",
        "cursor": {
          "ref": "0ef7c044-2c1e-4f7f-a2a6-eb91453f94b1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "72d6e2cb-494e-497e-a435-ed04ddae8041"
        },
        "item": {
          "id": "0c08b8cd-c236-42d2-abc8-b4d57c4a4041",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0172377e-51a7-4f14-abfe-401048fdbdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b754df1f-fc5c-4b44-a914-58480b020dc5",
        "cursor": {
          "ref": "d075bfa5-33dc-4a90-81d5-04e8d9298f5f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "be06957c-5433-4e6d-8dee-ecbf494c76de"
        },
        "item": {
          "id": "b754df1f-fc5c-4b44-a914-58480b020dc5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d1778024-19e5-4251-a703-c3dab0c0a23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82057680-1656-467b-b8ca-854f1f5c6217",
        "cursor": {
          "ref": "2b6fa89a-d93d-4931-bbcf-7309c1113e7d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "38a60b7f-83db-4005-8461-6e3dcfa9f1b5"
        },
        "item": {
          "id": "82057680-1656-467b-b8ca-854f1f5c6217",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "197e0964-4e7f-4887-8b8e-ba52fbaba1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd670b7-8ce7-4426-b8bc-446227eed099",
        "cursor": {
          "ref": "0a8f5119-3ca1-4aab-bf83-c98290eec585",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "11d89176-61e0-41e5-b639-df94fbf742b4"
        },
        "item": {
          "id": "ecd670b7-8ce7-4426-b8bc-446227eed099",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9e95d9a5-d240-4a72-b403-b5b3c4802400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e999be09-4c84-4a53-878f-f4181a01beef",
        "cursor": {
          "ref": "b229e0a1-e5a7-477b-ae36-4ce8cd1877b5",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "49d9098d-9139-40d5-a661-dec235fc2622"
        },
        "item": {
          "id": "e999be09-4c84-4a53-878f-f4181a01beef",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4cbb4ee3-e16f-498c-8d66-8c3ccfd5464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2fd70a-6d3e-487a-b46f-09bf3bc047cc",
        "cursor": {
          "ref": "24e963c8-6558-4feb-ad98-a013f355fd9b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f74c8a71-c2f4-416a-ba62-1823872ff1fd"
        },
        "item": {
          "id": "8e2fd70a-6d3e-487a-b46f-09bf3bc047cc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6694689a-2ba7-45c5-8c7f-24aec0ca02dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c97cb1-19fd-4a6c-b655-79af6b759c45",
        "cursor": {
          "ref": "e66ae764-4fc9-437b-8a07-36addb124825",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2eca5e2a-c5a4-4390-ba89-6ee6b204bee9"
        },
        "item": {
          "id": "b7c97cb1-19fd-4a6c-b655-79af6b759c45",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d0c93eff-3185-4edf-9d70-f4195e5359bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e638616d-922d-46c3-a4a2-09922cd9e521",
        "cursor": {
          "ref": "4eefd122-840f-4c6a-ac87-02ade94451a7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "35e019f5-ab63-4698-a5ec-66a0e7be97d5"
        },
        "item": {
          "id": "e638616d-922d-46c3-a4a2-09922cd9e521",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "19edf9e4-a42e-41d0-a17a-a7904509a8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1980cf01-6ff2-4a4c-bdb2-7d5b04cadefc",
        "cursor": {
          "ref": "2d278d52-49fd-437c-b907-71524b7f4dab",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2484d962-8b15-4d3c-969e-38f1c8557297"
        },
        "item": {
          "id": "1980cf01-6ff2-4a4c-bdb2-7d5b04cadefc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "487c09c4-96a9-4ec5-8225-1ebe8ff8b158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673ee9aa-3db6-4909-a331-26de4b8ee4e2",
        "cursor": {
          "ref": "da7913f2-3a13-48d2-a3f6-531cd1882e75",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "10acf988-66ab-46f8-bcd7-880283a13e3d"
        },
        "item": {
          "id": "673ee9aa-3db6-4909-a331-26de4b8ee4e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d42a7c2a-fb7a-427e-b05c-062f3075f9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab14ec82-b125-49e5-8e24-4df9aa0de38f",
        "cursor": {
          "ref": "c9d15e57-83cd-4ee7-b0fb-3d4935b40659",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cf056e5d-2f81-4b34-a5a2-8a4c8f76ee5f"
        },
        "item": {
          "id": "ab14ec82-b125-49e5-8e24-4df9aa0de38f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "545531fc-7403-4271-8ed9-ac096c45e23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d641f0a2-73d7-4e58-a2ee-983cff14d084",
        "cursor": {
          "ref": "e544cfe7-2941-41d8-8a49-bfe7e7ee798e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "be283e95-542d-4773-be12-b968560763f5"
        },
        "item": {
          "id": "d641f0a2-73d7-4e58-a2ee-983cff14d084",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "42a3e699-5f38-43b5-b98e-2f697eab7b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd35e7d1-79f8-4b0c-b5f3-f99ba002597f",
        "cursor": {
          "ref": "327b65bd-d71b-4475-8fb2-cda0db4922b0",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "211b8868-cd45-4897-abd7-21d050fff098"
        },
        "item": {
          "id": "cd35e7d1-79f8-4b0c-b5f3-f99ba002597f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "29c98a88-c793-4727-ab10-f4e55df1e9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7466c299-5a14-42b0-8796-531efecf84b1",
        "cursor": {
          "ref": "d4c398e6-aafe-4f26-b1a3-3cdf399da532",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3df3e162-ef1a-453f-b4f7-9acd7fa42f0d"
        },
        "item": {
          "id": "7466c299-5a14-42b0-8796-531efecf84b1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4cdba81f-962e-46da-8bf4-379b3aa59338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4bd84f-e4ba-46f7-be02-9f6955e502bb",
        "cursor": {
          "ref": "6a33ada7-f9f3-4001-885b-f581062a8c00",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7df65210-eb3f-4872-9226-841f58d2db4d"
        },
        "item": {
          "id": "ab4bd84f-e4ba-46f7-be02-9f6955e502bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "08ed22ac-9f5d-4659-bb9c-3c2d82de1438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ee39fe-90b6-4d8d-910b-424c174b0e50",
        "cursor": {
          "ref": "b92590be-bebf-4044-ab7d-e3238cae5e82",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a4f6898a-9860-402d-96dc-58264787c424"
        },
        "item": {
          "id": "86ee39fe-90b6-4d8d-910b-424c174b0e50",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0f6bea35-568c-4aea-86a6-9fc84340bb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a26d4e-8076-4c3e-bb46-8b440c20b4f1",
        "cursor": {
          "ref": "8e387f73-b3b7-4a57-a639-5cf020f54f16",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6c4f3689-e234-42b4-a928-d445df85be1e"
        },
        "item": {
          "id": "40a26d4e-8076-4c3e-bb46-8b440c20b4f1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6a52c50b-9dbe-4a45-bd78-e70937a3a92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb7ced0-fea3-4c07-82ac-04d8e9c9e104",
        "cursor": {
          "ref": "4fc69b38-5d7c-4aa6-96c3-7a22b23d0483",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "240e7ab5-0a96-4581-ba04-c4f819bf0bb8"
        },
        "item": {
          "id": "ecb7ced0-fea3-4c07-82ac-04d8e9c9e104",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8055d8d5-82e2-476d-a751-c324c3e4fe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f680ac-01dc-4fd2-b1d1-7de1fcc192c8",
        "cursor": {
          "ref": "f6bce7a4-c812-4d49-b7c8-9d1f45956560",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ddcc1f2f-030b-4522-9571-79021c390632"
        },
        "item": {
          "id": "d7f680ac-01dc-4fd2-b1d1-7de1fcc192c8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f0f59463-c978-41df-aed6-af7cb3960db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bd7a1c-f791-40f3-ae8a-47f4893b8708",
        "cursor": {
          "ref": "2b251870-656f-44d3-a5cd-0cfa79fb27d2",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "89d8effb-1fcc-4836-8896-b11356f607c8"
        },
        "item": {
          "id": "56bd7a1c-f791-40f3-ae8a-47f4893b8708",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8a20c7aa-6945-4d15-af22-8c4aa66cf46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b70013-cedf-418f-86a4-5c59f1787005",
        "cursor": {
          "ref": "19402ec9-ad90-44d3-9a47-82e19629c423",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6060de3c-01c3-4e68-a897-39e8f570b191"
        },
        "item": {
          "id": "d1b70013-cedf-418f-86a4-5c59f1787005",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c9bad7d0-5dc6-4770-9f9b-6311142afc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debd1c78-5ce6-4b38-ad04-3d04813461a4",
        "cursor": {
          "ref": "cf7d2f5c-d096-4251-aa5d-eee8cdbacb2d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d50448ae-2a40-4eb8-a863-060bd9c8e2c3"
        },
        "item": {
          "id": "debd1c78-5ce6-4b38-ad04-3d04813461a4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "139fd03e-eba5-4c99-9b59-eaa6b75dac86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0374fc5e-41c9-4b9f-a4c0-baefb4fd017c",
        "cursor": {
          "ref": "f0528537-6d5f-416c-bbb9-14e4611e67a3",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "387f1a73-2229-4836-8352-05606be09109"
        },
        "item": {
          "id": "0374fc5e-41c9-4b9f-a4c0-baefb4fd017c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3883c6c0-293f-481f-85bc-27d37de9b64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb42ab8c-614e-4990-9709-b449b6544b60",
        "cursor": {
          "ref": "2756d88a-4624-4d90-aba6-3c166c6382fb",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f11a868c-f967-4aba-b7d8-ba58479ac2ef"
        },
        "item": {
          "id": "bb42ab8c-614e-4990-9709-b449b6544b60",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "110ceebb-2730-4ace-a831-e02d02bae247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cedf220-a8a5-4424-824d-b11c6aa49d73",
        "cursor": {
          "ref": "12fb3f9c-919f-4073-b479-0e08983a91cd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bcbac315-6548-4cb6-918b-6acc062b239e"
        },
        "item": {
          "id": "7cedf220-a8a5-4424-824d-b11c6aa49d73",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1a5a44db-32a5-4f86-af39-e3b561b16c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583864c0-f3dc-4589-ae4b-a4c2a5fa179c",
        "cursor": {
          "ref": "dd2915f7-bce5-454a-83d6-b5dcef09de6c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3533e1b3-180b-49ef-9b28-2256d06c6e70"
        },
        "item": {
          "id": "583864c0-f3dc-4589-ae4b-a4c2a5fa179c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "db6897e4-0d74-4b01-9454-7e1a10315c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d63fbf-a0e5-4e3f-9827-75edc6caf7b8",
        "cursor": {
          "ref": "8d359117-d28e-450f-8100-82cb53a9a46f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "54a247ef-c66f-4e98-9bb9-37a20f09b4b1"
        },
        "item": {
          "id": "d5d63fbf-a0e5-4e3f-9827-75edc6caf7b8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e7620082-87a1-4d77-89c0-db2bbcebc6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44589f66-f82b-47df-9149-f5e5cb9abd2f",
        "cursor": {
          "ref": "f5e9466a-ae30-440e-ae4c-90ab10ad55a9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "033d69e4-6886-4544-b217-a12417f260a6"
        },
        "item": {
          "id": "44589f66-f82b-47df-9149-f5e5cb9abd2f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cd4835f1-d27d-4dd6-ac6a-2686a725d17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52b3c54-7b56-40a0-961d-f33295b76529",
        "cursor": {
          "ref": "b2148aca-8fc4-4a4a-8d06-c60700eb0b0a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a348180a-b5a7-4e4f-b742-a523a3e34a73"
        },
        "item": {
          "id": "a52b3c54-7b56-40a0-961d-f33295b76529",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f3cef8ed-92d1-425f-ae62-a14128c7235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb652ea9-0103-44aa-9609-777a0f1d4b71",
        "cursor": {
          "ref": "75c257af-3ddc-408a-876a-60f7122ce07d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0bf1f9d8-41ac-4bfd-a6ba-e9e121b5cf47"
        },
        "item": {
          "id": "eb652ea9-0103-44aa-9609-777a0f1d4b71",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f1e4adf4-ed6e-4a17-9e13-5aaba36cde7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed3db6c-477e-4d5b-9402-adadf4bcb919",
        "cursor": {
          "ref": "890f8d98-694e-4dfe-93d5-f14b7b840b87",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2c1a353f-3e98-4874-98ad-f3e8dba934d7"
        },
        "item": {
          "id": "2ed3db6c-477e-4d5b-9402-adadf4bcb919",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9024d66f-9840-483b-a05a-07e5053bd246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee362cf-f286-4c17-8de4-e73d1df9f3b5",
        "cursor": {
          "ref": "b470cc1c-b10d-4103-8dee-cea17eaf04a8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a518034d-2af0-4cd0-bdd0-98af2a3da418"
        },
        "item": {
          "id": "1ee362cf-f286-4c17-8de4-e73d1df9f3b5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "587a9e21-0e8d-46ad-be1c-49fd85745e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6202c25e-8e45-4150-9244-da69a16e22f6",
        "cursor": {
          "ref": "efd2c0ab-0817-424c-87eb-312afff43ab1",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d3eabe3a-b859-4fe0-b2ec-d79b6b50dc0e"
        },
        "item": {
          "id": "6202c25e-8e45-4150-9244-da69a16e22f6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bf2cb07f-cb02-49e6-aa2b-71b6e149fc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f248b6e-b7b1-4c7e-a6b3-6b52695c8c08",
        "cursor": {
          "ref": "211eb116-26fb-4436-a11b-3c55ebc8a2c1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "14daecc6-9326-493c-b161-a4846ea123ef"
        },
        "item": {
          "id": "2f248b6e-b7b1-4c7e-a6b3-6b52695c8c08",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0d2d7f2a-07b1-4d69-a70e-f0274ddee677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d517ea-7930-4e4a-8ae7-4874a09845ac",
        "cursor": {
          "ref": "22076708-96a6-416c-9fff-7fe1cb621f79",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "778c97d4-b84f-43a1-b8c3-77fec563eadc"
        },
        "item": {
          "id": "90d517ea-7930-4e4a-8ae7-4874a09845ac",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "69e48cb8-8d52-4705-84e8-4c3c2e2c67d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723d0b4e-c213-4b97-8a9b-f830169d6629",
        "cursor": {
          "ref": "39c7f3c1-a3db-4fae-acf7-efaf632c6bee",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1ef83b67-f7e1-4f17-85a6-b4e138812140"
        },
        "item": {
          "id": "723d0b4e-c213-4b97-8a9b-f830169d6629",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c0aa1590-9f21-49aa-b482-65ad98c6f12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3579ef-0931-4c58-8e31-10bd2e8c907e",
        "cursor": {
          "ref": "d1f43298-f36b-4a99-a271-1c1f91d18be7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c8c7c901-2e73-40b8-8179-bc0e7b851911"
        },
        "item": {
          "id": "dd3579ef-0931-4c58-8e31-10bd2e8c907e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0910f639-f41e-40b3-b50c-eb0efb51b155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45512227-b6f0-4772-b53a-38258e1e4349",
        "cursor": {
          "ref": "45f3eac7-f109-478d-bdf2-7315a60ab41f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e7c18c3f-6bc4-4b18-bd39-7087795ddbd8"
        },
        "item": {
          "id": "45512227-b6f0-4772-b53a-38258e1e4349",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "46e6ae05-c99b-4a14-825b-dcd72de8bf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf2aa6c-8971-4d4d-ada6-c80b82681486",
        "cursor": {
          "ref": "718117c0-2b5e-4565-9d70-6489e2e90600",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fbba6c93-e3f4-40a1-885b-e045d2953dbd"
        },
        "item": {
          "id": "4bf2aa6c-8971-4d4d-ada6-c80b82681486",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "45524a45-4937-4fb0-9bdf-a52a78f3d9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962fbe36-af92-477f-91ed-6784171af7a1",
        "cursor": {
          "ref": "2730cf0f-674d-4cf8-b53c-dd93810fd775",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "991146ab-4dac-49c6-8cd7-8fa7a56bdcf2"
        },
        "item": {
          "id": "962fbe36-af92-477f-91ed-6784171af7a1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "acc16ccc-87a5-4a0d-a1e8-14420d2f4927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf3caa3-9420-434b-9fee-6a209da21963",
        "cursor": {
          "ref": "fb32210f-e6f2-463e-b0db-79f1c3c49f35",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4258923c-bf8d-4c17-9aad-d48a94db97b5"
        },
        "item": {
          "id": "acf3caa3-9420-434b-9fee-6a209da21963",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ed860c92-d994-4738-bcbc-76487c8c2ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056548da-0b57-4840-8785-84881a0fd90a",
        "cursor": {
          "ref": "5f833598-0b03-42cd-bbb7-0b551bc5a60b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "89025a12-daf7-4eae-9e06-0f943fd28be5"
        },
        "item": {
          "id": "056548da-0b57-4840-8785-84881a0fd90a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9bf57123-2105-496c-97a3-6deae9a1c8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4edf878-10d1-4590-890d-7cdeb9c6dadd",
        "cursor": {
          "ref": "87afb2a2-e0ba-4cf4-a38e-5ff871d4db9c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4110ab21-4fbb-4c63-906c-528398f92fa7"
        },
        "item": {
          "id": "a4edf878-10d1-4590-890d-7cdeb9c6dadd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c9a24252-7460-4f57-9fdc-9762f2a1b1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9d5e18-cdf0-4eee-88bf-5a94e3ca5895",
        "cursor": {
          "ref": "709a2f3d-5d09-4dee-b018-27add3a4cbb0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "effc6c5c-512d-48bc-b160-bdceed567609"
        },
        "item": {
          "id": "9f9d5e18-cdf0-4eee-88bf-5a94e3ca5895",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5db51a89-e7b6-4ddf-87f0-5ebb5903a065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038b9112-deac-447a-9a71-ec5a27015343",
        "cursor": {
          "ref": "d8a31374-c228-4e5b-ad28-663f7ccfd5b8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "219ac6a7-7b2e-4069-9c1a-7141ae5f9b75"
        },
        "item": {
          "id": "038b9112-deac-447a-9a71-ec5a27015343",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2795123b-bbf5-47c1-86dd-a36343f87456",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093f9d57-842b-442f-b344-4dd43fe36a9e",
        "cursor": {
          "ref": "bf3390e5-b7a8-4f17-aad4-0bc4809906f8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c7dd6dae-9748-4711-98ff-4e57131bdf6c"
        },
        "item": {
          "id": "093f9d57-842b-442f-b344-4dd43fe36a9e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7f321d4e-3715-495a-b56a-469b7084a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6c6849e3-1b9f-4c99-bea6-9b2203064054",
        "cursor": {
          "ref": "a8fe1317-8071-4c99-94ba-ae99a1493760",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e2cfa5d4-ebe7-41d6-86fa-19645536a61c"
        },
        "item": {
          "id": "6c6849e3-1b9f-4c99-bea6-9b2203064054",
          "name": "credentials_issue"
        },
        "response": {
          "id": "80e40f7a-b4d4-45a5-9117-d45ae5f0d5c8",
          "status": "Created",
          "code": 201,
          "responseTime": 22992,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b52c008-bfc6-4be3-94e6-95f045b0524b",
        "cursor": {
          "ref": "c8edd53b-5f9d-4687-b798-768692a74a7c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0edb39dc-109d-4b16-81de-7b4587de948a"
        },
        "item": {
          "id": "7b52c008-bfc6-4be3-94e6-95f045b0524b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "afa3760a-3ba8-4c8b-91d5-6f265310ae4c",
          "status": "Created",
          "code": 201,
          "responseTime": 22217,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b34b49-a3b2-416f-8c7a-c99502c42648",
        "cursor": {
          "ref": "65078b2a-8194-4bd9-bba4-71d82517f375",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c6556f91-ea3e-47c5-976b-fa6eab3cef44"
        },
        "item": {
          "id": "e7b34b49-a3b2-416f-8c7a-c99502c42648",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "56f936e0-d08a-4f70-8fff-88b23e4e34a3",
          "status": "Created",
          "code": 201,
          "responseTime": 22750,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c5aa7a-7bb1-44b6-9399-98767c55a585",
        "cursor": {
          "ref": "ba75bb99-ed3e-4576-a652-30aefeef52e3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "979d7d69-71d2-4f37-a8dc-c92c1bd3cfad"
        },
        "item": {
          "id": "b1c5aa7a-7bb1-44b6-9399-98767c55a585",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9d601b84-3005-4cfe-90de-0d4a51543c9a",
          "status": "Created",
          "code": 201,
          "responseTime": 22024,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be9325c-69f6-4b7f-99ba-dc9a37babf99",
        "cursor": {
          "ref": "ec387749-80eb-4d1d-a6f5-72a908f5991a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e469634d-8f8f-47e6-b50a-c15fc6b2bf32"
        },
        "item": {
          "id": "8be9325c-69f6-4b7f-99ba-dc9a37babf99",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3690cea8-cebb-4764-8da5-bcc5c41ab900",
          "status": "Created",
          "code": 201,
          "responseTime": 22466,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-05T00:47:01Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-05T00:47:01Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "87cdedd9-70fb-479e-9d9b-9fb7731329de",
        "cursor": {
          "ref": "3862d6cc-9817-419f-b3bb-47fcd65441de",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "975728a1-1659-4642-99d3-aadb2b4ff7e9"
        },
        "item": {
          "id": "87cdedd9-70fb-479e-9d9b-9fb7731329de",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "669282e0-169c-47de-b531-a60038a169d8",
          "status": "Created",
          "code": 201,
          "responseTime": 22623,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cdb053-1a78-4a3c-ae64-6330f5190001",
        "cursor": {
          "ref": "d73b0ad1-6f0d-46fd-ae63-b3e07d58661a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "abb9bfca-cbae-4d07-b518-9956510e3908"
        },
        "item": {
          "id": "59cdb053-1a78-4a3c-ae64-6330f5190001",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "abfe49d0-09a4-4daf-82bf-da1e6bd18256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ed789-92d9-4c38-977a-21fedcf48c8d",
        "cursor": {
          "ref": "bb13ef37-63db-4087-89bf-6e07d095a233",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3325fbe3-8cde-46bf-961f-25138c102091"
        },
        "item": {
          "id": "934ed789-92d9-4c38-977a-21fedcf48c8d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0e6a2fc1-7ea0-44be-a533-a39e54e6e165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c63cd6-8e7b-4ee4-89af-6af247e68ce3",
        "cursor": {
          "ref": "8007f133-8475-474e-8639-615fc91d01ae",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "07af0337-c387-4e3d-9254-576c84c8af21"
        },
        "item": {
          "id": "84c63cd6-8e7b-4ee4-89af-6af247e68ce3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c01b577-39a7-4848-bf47-a3f3e87e6deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cce3ff1-4cb7-4079-8bfe-f3597af7d039",
        "cursor": {
          "ref": "80cd7ecb-c63f-4ba4-af85-b98d0bacb9b5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "674aba35-54b1-4e81-a8bf-f53490e801c2"
        },
        "item": {
          "id": "1cce3ff1-4cb7-4079-8bfe-f3597af7d039",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4ad32dfb-eda1-4b33-a2b5-d74da55b79fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2804f45-0e86-4a2e-aa69-f4aa7833f250",
        "cursor": {
          "ref": "3940045a-5229-4fb5-9da7-2d0a45ff41fa",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4d1a6ec9-5e87-4b5c-98ac-638e6b8977fe"
        },
        "item": {
          "id": "e2804f45-0e86-4a2e-aa69-f4aa7833f250",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aaa1d8ed-b120-4bd6-adca-281624d6d411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7cd92a-450c-435f-bfec-99ae2b416d7b",
        "cursor": {
          "ref": "51de6e39-9c84-4eb4-9d3d-ec094d18d68e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "63d8b7b7-b17a-4c5e-98ae-df2cfe53c2a9"
        },
        "item": {
          "id": "9a7cd92a-450c-435f-bfec-99ae2b416d7b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b15bd7cf-cf8d-45cb-a468-56854f45f982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9b677f-7e06-4526-b6f8-6776b18c1c34",
        "cursor": {
          "ref": "fe643d87-ce46-477f-acac-757039f7aef6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d9da1a68-fa85-401c-95b3-792b843b81e9"
        },
        "item": {
          "id": "fb9b677f-7e06-4526-b6f8-6776b18c1c34",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e35351ec-6d1e-4137-b4a4-c485abbdf2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0defc81-9712-44cc-a321-bf855ad448a8",
        "cursor": {
          "ref": "7658cea0-e4ee-47d8-9031-f835565d30b4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "67aa9103-4fc1-4693-82ae-dd966ab88083"
        },
        "item": {
          "id": "e0defc81-9712-44cc-a321-bf855ad448a8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ad0ce361-886d-4883-9830-abcfd5910678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8e468e-e14a-4ed5-a4c6-bdcd7dd3d8e6",
        "cursor": {
          "ref": "97889be0-524b-4eeb-a242-83130fd75844",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3b6f09c9-5638-40a1-9e7d-ec18e7212cb0"
        },
        "item": {
          "id": "4c8e468e-e14a-4ed5-a4c6-bdcd7dd3d8e6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d51cc1f8-d8df-4589-8593-3ce74c5560b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddd3527-7fcc-4d24-9a1d-b0fea3ab47c5",
        "cursor": {
          "ref": "8ca10adb-3839-46eb-9198-ed7a473d2629",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5b6959af-66bd-4250-878f-741c9ede51cb"
        },
        "item": {
          "id": "8ddd3527-7fcc-4d24-9a1d-b0fea3ab47c5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7cbb85ff-c4ef-4b25-85ac-8dd98ee5111e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafc2cc2-da82-4a95-b04b-2adcf8ed36c7",
        "cursor": {
          "ref": "9d16313e-8068-4e68-9ebe-0f428701a5f0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0a1dd07a-8bcc-4acd-b2e2-db16e80497c8"
        },
        "item": {
          "id": "bafc2cc2-da82-4a95-b04b-2adcf8ed36c7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "899e379b-99d9-420e-bd0c-e438de340ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cea0a8-1255-4e9b-954f-1a0ca5c66ec7",
        "cursor": {
          "ref": "dd04f5d4-0a3b-4a7d-ad31-6dd3444a0cfb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "66036a89-a4b2-4179-a5ba-6a22ca1cd344"
        },
        "item": {
          "id": "b7cea0a8-1255-4e9b-954f-1a0ca5c66ec7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "889d730e-8bbf-436d-83b0-595b946c4a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959853c4-83ca-4672-abe1-aa47a509d109",
        "cursor": {
          "ref": "6161ee43-de5d-4ece-a399-ebc18a702d2f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "26f087f7-12df-40c5-9f9f-7758435475f4"
        },
        "item": {
          "id": "959853c4-83ca-4672-abe1-aa47a509d109",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2060eb15-e48b-446f-8bf1-e28a58050869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bea20a-fde3-4f79-9d1b-08111808424d",
        "cursor": {
          "ref": "9fd9ad1a-b647-429e-8fdb-fe517ff1db17",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5dc69e2e-dbfe-490a-ba08-904c67a19f1a"
        },
        "item": {
          "id": "61bea20a-fde3-4f79-9d1b-08111808424d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f821036a-4d19-473e-814b-b642bf0df591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf31e806-db50-4a85-a463-a1124465cdd2",
        "cursor": {
          "ref": "a94850b4-1395-4fa4-a216-39e39070fc31",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3dfe7fe6-45da-4d94-afdf-f8c79b6c05a9"
        },
        "item": {
          "id": "bf31e806-db50-4a85-a463-a1124465cdd2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2a9a9f74-44f7-4d94-bb36-5d074ae950ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760e4ab4-7f3e-4170-99de-726dc5d82ddd",
        "cursor": {
          "ref": "a94e9acf-fc03-4022-9c77-ab33b1159194",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bf78b09d-d6d6-429c-a9cb-987d09c9b10f"
        },
        "item": {
          "id": "760e4ab4-7f3e-4170-99de-726dc5d82ddd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4220bbb4-07a2-445e-91b8-49b86c5a78e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d364b07-d559-4f5f-9a31-ebfc278bc416",
        "cursor": {
          "ref": "f4c486eb-5fc5-40d2-9447-e8714c853bfe",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8c323558-c4e6-4874-b989-eb0521504ab5"
        },
        "item": {
          "id": "0d364b07-d559-4f5f-9a31-ebfc278bc416",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4ba2532a-fe0c-4c33-b71e-b24ed8e3c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89b8f9c-7123-4e2e-a3e6-5bd5ac7539c9",
        "cursor": {
          "ref": "0328acab-abcf-4f8c-b6da-1486afacfbc2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d758653d-ded3-4fe1-a378-32b0da156680"
        },
        "item": {
          "id": "e89b8f9c-7123-4e2e-a3e6-5bd5ac7539c9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "36edeca4-5f73-4216-bf48-93c270c4ab8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6afdf8-beea-4e91-878c-f51ee6b6e9eb",
        "cursor": {
          "ref": "b2b68129-e1dd-44f1-97cd-84cf3538ceee",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c64bdb73-25f6-4f03-aade-89d3b5640560"
        },
        "item": {
          "id": "3b6afdf8-beea-4e91-878c-f51ee6b6e9eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9eb369fb-99e7-42f9-9199-9ca90c4e4cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ad3f5c-b3ed-4fcb-9dc8-b045d1b4e1a9",
        "cursor": {
          "ref": "1d34b7c1-4200-462a-8f09-b5cd7f30c527",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "41176f32-ea37-45d9-bf45-a22bb88d2c99"
        },
        "item": {
          "id": "16ad3f5c-b3ed-4fcb-9dc8-b045d1b4e1a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c5f64a01-00f9-48a4-bb27-75a2968e2214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5f5a93-c161-43e6-a9b1-03ac5920d7e9",
        "cursor": {
          "ref": "b38b8b19-6169-4b24-a1f5-b4d3e9c6dedd",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "97058d09-9671-4fa4-9eaf-e755cdcf3dff"
        },
        "item": {
          "id": "8e5f5a93-c161-43e6-a9b1-03ac5920d7e9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "98035e0d-5944-4ea3-b871-337c736d0a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcc92c4-8edf-419f-b258-e1210e2e4373",
        "cursor": {
          "ref": "a0f86b3c-9b4f-40e0-9333-3fd07284e2bd",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2151fa5a-1642-457a-ad68-6c4ed1cbb1d4"
        },
        "item": {
          "id": "cdcc92c4-8edf-419f-b258-e1210e2e4373",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0d670f55-f6bf-40ca-8759-e0c561449568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d30c4d-e731-450e-8482-35b2d7adbae2",
        "cursor": {
          "ref": "94130449-5539-46f3-bfc0-d25d0221a367",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fb7cdbaa-2bf6-4bd1-900b-74c6de14857b"
        },
        "item": {
          "id": "32d30c4d-e731-450e-8482-35b2d7adbae2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "50fe945a-fbf3-48de-b339-284e1732ebcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1ee930-7b9f-4ff0-9c6b-48db4e602ab3",
        "cursor": {
          "ref": "aedc48b7-218d-4a38-ba36-14aae1b3f4b0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a9c086f7-d880-4c46-95f2-dc6afa386148"
        },
        "item": {
          "id": "4e1ee930-7b9f-4ff0-9c6b-48db4e602ab3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7de6a809-b884-492f-aee1-e553c56560d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbf141f-9214-42fb-a8c0-868e19b01489",
        "cursor": {
          "ref": "25602a24-430d-4202-9b01-1ab072db0114",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "823da412-f949-4e4d-8c90-d85c1346c612"
        },
        "item": {
          "id": "ffbf141f-9214-42fb-a8c0-868e19b01489",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "be2b1b58-b181-42f1-a039-cfd561ac177c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716e198a-147d-4b60-9797-d5c17dfdcd10",
        "cursor": {
          "ref": "a4429b54-bf0e-43ed-a4c0-86421e89298e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bf70c29d-8e92-46e3-9206-05e4cd393718"
        },
        "item": {
          "id": "716e198a-147d-4b60-9797-d5c17dfdcd10",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "86834963-0f60-406e-941b-195fc417bdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbec08c-35be-4aa5-ba84-28f7eb320c5f",
        "cursor": {
          "ref": "e91d0a7d-5351-4b53-8166-189e6c529daf",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "58769d3e-1db2-465d-8aaf-13c01e0c8a8b"
        },
        "item": {
          "id": "4fbec08c-35be-4aa5-ba84-28f7eb320c5f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "68327960-df27-425d-a9a0-b456ae46215d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c14afcc-b3d8-418b-939d-a1d12670f869",
        "cursor": {
          "ref": "c716c5e7-dc80-4ddf-8495-9ae5bec7ba07",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1ffaefb2-381c-4ff7-b6d5-dd1d7334c359"
        },
        "item": {
          "id": "4c14afcc-b3d8-418b-939d-a1d12670f869",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "64b6613e-8ee3-43df-aad3-d18c862c863d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de93f13-379e-4d13-8150-b7403a74ad8f",
        "cursor": {
          "ref": "3dc5ec17-325d-4f43-9852-53f824e41f05",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "33c789d5-caf2-4be6-82b2-63901ce754ae"
        },
        "item": {
          "id": "7de93f13-379e-4d13-8150-b7403a74ad8f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7cfe2f19-edff-44c6-a930-e64fa3ae1a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13855390-16a8-4243-9371-b498d4cc0205",
        "cursor": {
          "ref": "4491ccb1-c312-4f7c-830a-fa859d47e34e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f5976916-b27f-4326-b2d8-93556a2c0caf"
        },
        "item": {
          "id": "13855390-16a8-4243-9371-b498d4cc0205",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d401f8b7-dd00-40e0-bddd-ad8f90918b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2640a8-14e7-47c6-9e29-1da37027e3cd",
        "cursor": {
          "ref": "772bd77a-6adb-4fe5-81ed-25f0c48df56e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9fef5a1e-363c-46f7-8f38-f99f0b0986b7"
        },
        "item": {
          "id": "3e2640a8-14e7-47c6-9e29-1da37027e3cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "18f9c614-0ff2-48c4-81dd-541c13fe8e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ff2fc4-42b8-456c-a583-4d35da4f2422",
        "cursor": {
          "ref": "fb61ddb6-6614-49f1-8848-dedbfbac1286",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b3343f1d-ac8e-4afe-94ac-2ceadcd7430c"
        },
        "item": {
          "id": "d3ff2fc4-42b8-456c-a583-4d35da4f2422",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9fe5790d-fa38-4d57-86f0-61da13e75325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441de479-8723-411a-974a-ee0b0a37be20",
        "cursor": {
          "ref": "06e0024f-e1db-4151-b39a-489f676fe114",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8c924e89-5f11-41ef-9f69-4a1afc52f375"
        },
        "item": {
          "id": "441de479-8723-411a-974a-ee0b0a37be20",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "92854ca5-46da-47f6-930c-8fde746d2c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8234cfd-d5c1-46cc-99aa-00b9982854fd",
        "cursor": {
          "ref": "ee312516-7ee1-4ce2-8957-479450fa0084",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f3c41880-212e-4ca6-a8b3-57e361ec9264"
        },
        "item": {
          "id": "e8234cfd-d5c1-46cc-99aa-00b9982854fd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b83b0a14-4705-48b9-b96a-0a761cebcc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88dea65-116b-4664-9269-8c2fbbfb8424",
        "cursor": {
          "ref": "5e5d1ce1-c2ef-4393-b76d-80a65ffce78e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dc621e0c-d6df-4e38-8226-1e5a64eba97f"
        },
        "item": {
          "id": "f88dea65-116b-4664-9269-8c2fbbfb8424",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "73c903b7-78ff-4e5c-b00a-82762af77bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91c78e2-6e5f-469e-9931-8f0326688be7",
        "cursor": {
          "ref": "cf4de428-1bd6-4a80-aa06-6aab05acbefd",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a1020fd7-b923-4e8b-869d-9ffd82ffa027"
        },
        "item": {
          "id": "a91c78e2-6e5f-469e-9931-8f0326688be7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cec6e26d-d6d9-4041-8a66-6fff72240946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17de920-ec73-4281-abbc-5319c1aaa598",
        "cursor": {
          "ref": "93abd919-a19d-4ac1-bbdb-bb33f687d92d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9a327c04-562a-431d-b625-c4372524f8f8"
        },
        "item": {
          "id": "b17de920-ec73-4281-abbc-5319c1aaa598",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "693b80f0-f2f4-4767-bf1c-6986ac4f0b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b38c0a5-ae36-47fd-a58f-a92781729a0b",
        "cursor": {
          "ref": "e72db98b-0fa2-46d6-9e7c-be738bd1e0e9",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "62f91408-43f3-4b59-af9d-c56585ed2fdb"
        },
        "item": {
          "id": "0b38c0a5-ae36-47fd-a58f-a92781729a0b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "47cea85b-27f9-482f-8654-687800c314b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bfe6d1-a28b-462a-be22-989afd273e66",
        "cursor": {
          "ref": "c6e958ce-175d-4e81-ad0c-9e1981d8a48f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "110b01aa-4655-402a-af8f-7a4c3a451de5"
        },
        "item": {
          "id": "c0bfe6d1-a28b-462a-be22-989afd273e66",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ae587ad2-ed2e-43c7-8385-2e36e43bc1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268d4c4e-3fca-4874-8f7f-e794f98c4665",
        "cursor": {
          "ref": "de3c707f-e785-452f-9599-5346c5ece1aa",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0074ed6f-0b75-482f-a724-bdd8c6f39d4e"
        },
        "item": {
          "id": "268d4c4e-3fca-4874-8f7f-e794f98c4665",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aa9038b7-ee43-4ad2-8087-c673ff29b685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb49e59-d7ad-4746-a1d4-f4eeabe6e7f0",
        "cursor": {
          "ref": "9dd968de-b780-40c1-9604-30f21d9106e3",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "168b4d59-0d7a-42f7-85b3-4a8fe0c6a67f"
        },
        "item": {
          "id": "dcb49e59-d7ad-4746-a1d4-f4eeabe6e7f0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a6612f1a-6c8a-4dda-986a-f420c1ba5eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346b63df-af69-4599-9650-a1a8da559761",
        "cursor": {
          "ref": "b7376ef8-f840-43b1-94bb-cf25544aa2c1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fed513cc-b528-4d12-a555-1050a3dc84a2"
        },
        "item": {
          "id": "346b63df-af69-4599-9650-a1a8da559761",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a83799a8-4c43-4f74-a5f1-a171065c4d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42230386-15b1-4379-a355-8bc7cc038b85",
        "cursor": {
          "ref": "213ba943-66b4-43ba-a329-4373b24a4bd2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ff83ff34-c6e7-4fe6-9983-b55ce7e9237a"
        },
        "item": {
          "id": "42230386-15b1-4379-a355-8bc7cc038b85",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4d7de34a-9a51-4ce0-ade7-d05b862479d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183a04b3-78ea-4775-a806-5de3699d87b2",
        "cursor": {
          "ref": "8b915e40-c915-4e31-a43a-f77eb2295504",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "235baba8-65c4-4f4f-bd66-8069c8d5cbc1"
        },
        "item": {
          "id": "183a04b3-78ea-4775-a806-5de3699d87b2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7eb75d64-6304-4be4-ac80-92af5417661a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f295f3fd-9559-4724-baf3-3f83624599f0",
        "cursor": {
          "ref": "37d74ba8-30d0-47b9-9d4e-790f1b91874b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "131fe82c-a571-496b-a5c3-cf8da0c91311"
        },
        "item": {
          "id": "f295f3fd-9559-4724-baf3-3f83624599f0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "206bea8b-9e51-42ed-a543-0abad345ec87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9da5cba-0d5c-4a1d-a5de-cab29ec320e6",
        "cursor": {
          "ref": "b69e97f5-7d87-43d0-9d64-441af1d59ab9",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "617538fa-ba71-477a-8eb9-c6d0e375ffbd"
        },
        "item": {
          "id": "f9da5cba-0d5c-4a1d-a5de-cab29ec320e6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "39eee753-fb37-4e73-ac85-49aa02399da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769705c7-2edb-4642-9b4d-bb063fa03d9d",
        "cursor": {
          "ref": "3f4ac705-42f2-4135-ae93-ea3db669d8f0",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "77e2c95b-5bd2-49a2-9ac7-60f037252aa5"
        },
        "item": {
          "id": "769705c7-2edb-4642-9b4d-bb063fa03d9d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c47fc904-709d-462e-83ee-21df65df0f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272c41d5-5e33-4238-8a0c-76fda4f4d4ea",
        "cursor": {
          "ref": "2aef2856-f8b3-4b9f-85d3-801bf17ea88e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4f5aaea2-fead-44c4-a9ee-5f428a944f07"
        },
        "item": {
          "id": "272c41d5-5e33-4238-8a0c-76fda4f4d4ea",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "80b034cb-7ba7-415d-b247-512fbff2e748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a309c00b-19c3-4f26-ac3b-14a1d50074c5",
        "cursor": {
          "ref": "49769ddf-2d7d-40e8-b4dc-eb6cc7497ac6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ee81a472-e34f-491f-8434-a88d59dd41f9"
        },
        "item": {
          "id": "a309c00b-19c3-4f26-ac3b-14a1d50074c5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1876c953-d513-45d5-b097-4faa7c4affeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41be43b7-21b1-4002-be7d-6a0c82b9db7c",
        "cursor": {
          "ref": "aa27c9f8-c7c4-4702-8a34-d79889e288e3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5e28d79c-c5c4-4715-a2df-29d4f180d8e4"
        },
        "item": {
          "id": "41be43b7-21b1-4002-be7d-6a0c82b9db7c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6524e064-029d-44cf-b5d6-22dfdfd885bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d414928-a146-40a6-bf3d-6634ab98f93a",
        "cursor": {
          "ref": "84873c64-eebb-40c2-85da-f43e49db6f3a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "20311157-1ec6-40b2-80a6-fb795278fb07"
        },
        "item": {
          "id": "8d414928-a146-40a6-bf3d-6634ab98f93a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d81b40cc-d585-48cb-9d18-da79564972ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67181ffa-1c17-4801-a8c1-8c4766e24440",
        "cursor": {
          "ref": "96072b25-28fa-4b6c-8fa6-d6aa3daa8ae1",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "94db48ba-c5d0-45eb-bcaa-52bcaef40770"
        },
        "item": {
          "id": "67181ffa-1c17-4801-a8c1-8c4766e24440",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a88ab49b-2137-4684-adb7-ba9494f51849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a73d923-1f29-4e8e-975f-a3d19b2d39f0",
        "cursor": {
          "ref": "6ea8c8f7-bc62-499d-b05d-ec7f4c7537bb",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a77c12f0-047f-4032-bf35-fc36064cef62"
        },
        "item": {
          "id": "8a73d923-1f29-4e8e-975f-a3d19b2d39f0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "39e765ca-801b-4e1f-9d64-3e467d843af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171b9494-5f39-49be-8e1b-0178d1bfc34b",
        "cursor": {
          "ref": "eedf776f-c2a7-4ab9-96a0-4cf897e5e987",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bab4dffb-db4b-4c9f-9a6a-8fb577ddc7a6"
        },
        "item": {
          "id": "171b9494-5f39-49be-8e1b-0178d1bfc34b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ffb34423-b4bd-45bb-b565-587e3b8cc1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3003bc65-f45c-4242-8d8b-6a5b207cd827",
        "cursor": {
          "ref": "87132729-9518-4ce1-bbb7-0bd58e10eca3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7a9b6969-b3e2-4146-a065-6ca4b175c498"
        },
        "item": {
          "id": "3003bc65-f45c-4242-8d8b-6a5b207cd827",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e91a1290-a68d-4bd9-8f22-1eea8e153a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ce1d4a-b768-4bc5-a4b5-3111d34353cf",
        "cursor": {
          "ref": "a4ba45ba-cf03-4f31-80f8-8a0df4cba0ac",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "55a19d8f-f938-4a4e-87aa-d6a40e05476d"
        },
        "item": {
          "id": "63ce1d4a-b768-4bc5-a4b5-3111d34353cf",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7941caaf-05d5-4b34-a2c9-6c9dac4a6a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b3e926-d1b4-4972-93a8-3d50274052b4",
        "cursor": {
          "ref": "d5a3947d-e0ad-40fe-923b-5ad1129eacd0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "12bcde87-84f8-4df9-a294-83187b41e802"
        },
        "item": {
          "id": "55b3e926-d1b4-4972-93a8-3d50274052b4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "11e82fd6-d625-4f15-9e1f-22bd30ae1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55917ca9-6236-4dc1-beea-adba97e16aa1",
        "cursor": {
          "ref": "ee6bb454-d8bd-4dd1-ab54-fdc3103659f8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0a1b5272-3ad4-4adb-a76f-eccbe9790d60"
        },
        "item": {
          "id": "55917ca9-6236-4dc1-beea-adba97e16aa1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "009bfcc8-d15a-4859-827a-8d6d70960299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c37744e-7af5-45b5-b600-682398a524e6",
        "cursor": {
          "ref": "eeb9e727-f73b-4b69-b249-3684c48a3bf5",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a4457064-8f2f-4b33-8f0e-61caeb4957dc"
        },
        "item": {
          "id": "3c37744e-7af5-45b5-b600-682398a524e6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "845493c3-58ab-48ec-8593-2e9814b89082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e94245-0987-4ab4-a089-b5ff50a21ca0",
        "cursor": {
          "ref": "6592ee3e-3f73-4843-9ac0-2f6a0a4a4725",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3d62285d-ad78-4caa-b9ed-64465c5ee8dc"
        },
        "item": {
          "id": "b3e94245-0987-4ab4-a089-b5ff50a21ca0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d03bfb5c-975e-486a-8232-fea8bc9f55b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c434e4bb-7575-4bdf-8c92-c0f6ded9ebe1",
        "cursor": {
          "ref": "3504c9f9-cca7-43a5-8e45-d08c6dcc824b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "934e567d-e300-41d9-a679-e7a163b0188b"
        },
        "item": {
          "id": "c434e4bb-7575-4bdf-8c92-c0f6ded9ebe1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f817b7e7-262a-440d-aafc-55fecb11d0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a079e6-41bd-432d-92ae-95b434f7f42e",
        "cursor": {
          "ref": "ec1f9a0f-a7c1-4618-b66a-5b579c7cba71",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "67f8920f-aae4-44f4-b7c6-93db299461c6"
        },
        "item": {
          "id": "d6a079e6-41bd-432d-92ae-95b434f7f42e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bf817269-88f0-4ed2-bace-a3f26948140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265a351-561d-4ed3-9a7b-6893a3bed31e",
        "cursor": {
          "ref": "008a1f07-ad4a-4dee-b9b6-96366e6193db",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aa218642-d6e9-459d-b653-c39ec5746dc8"
        },
        "item": {
          "id": "7265a351-561d-4ed3-9a7b-6893a3bed31e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "db654539-2c1c-42a7-8447-70eaa72f61b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d4637b-193f-495a-8362-d72022acb309",
        "cursor": {
          "ref": "8b415ebe-15ba-4afe-87db-80dfa1c65a13",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7f5ce55f-2d21-4e15-bf76-b633e1980392"
        },
        "item": {
          "id": "16d4637b-193f-495a-8362-d72022acb309",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5398d308-aed8-4d26-8d47-b74c9885ca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa33915-7dc2-4955-885f-54f75e349822",
        "cursor": {
          "ref": "79639dbe-43e4-406b-a515-c60f241f5a1c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aea8cd4c-653a-4faf-bee0-7adc0c4e4c96"
        },
        "item": {
          "id": "2fa33915-7dc2-4955-885f-54f75e349822",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "306af2c9-f38a-4b21-adf2-52ccfbda83ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc61a4e-3689-4268-ac29-01cf9d18e179",
        "cursor": {
          "ref": "c5c1b078-f360-4f4f-9df9-c1ad515f54aa",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7d4af1c7-d4db-4263-9658-30a3ff833db3"
        },
        "item": {
          "id": "0dc61a4e-3689-4268-ac29-01cf9d18e179",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3bc55797-33c5-471c-931d-e18e2d75afad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc4b649-2424-47d7-8b46-06e330053203",
        "cursor": {
          "ref": "7a343480-5c9f-4895-9d14-7a743cf6568a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a28711aa-b157-45ea-99e9-bd9338fbb5c9"
        },
        "item": {
          "id": "fdc4b649-2424-47d7-8b46-06e330053203",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8546b474-e17c-471a-9b46-efb78f0f5510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e084631-8901-4938-a3d7-ba1f6679b4e5",
        "cursor": {
          "ref": "952e329a-4d5c-4e41-b08c-ff2abbb0fe5c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "11f49ac0-3c0e-4ba6-87f9-dda1a9e101ec"
        },
        "item": {
          "id": "3e084631-8901-4938-a3d7-ba1f6679b4e5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e967a996-35f4-412a-b06d-c7902b63279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf895cc-9487-4718-a9dd-39a2b2752789",
        "cursor": {
          "ref": "3104f731-e278-4e3e-9930-c686de4654ca",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4929e268-0fbe-4ade-8407-021a5f319513"
        },
        "item": {
          "id": "abf895cc-9487-4718-a9dd-39a2b2752789",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5002c693-a476-4c80-a7b1-b8b21f1b1d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd44659-ed89-4a98-8bf8-e83faf270ef7",
        "cursor": {
          "ref": "c156c495-9a56-4a51-a069-4ac0ec43f59f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8bacd40f-a5f5-4554-b596-a4b1ef8bd08e"
        },
        "item": {
          "id": "0fd44659-ed89-4a98-8bf8-e83faf270ef7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "31bcea17-1be6-4244-865f-8448d46c47a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4feb48d-4646-421e-9bd3-625c17a62ff1",
        "cursor": {
          "ref": "dcdd4659-1659-4fa2-9369-f315feb5d0fc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4a2d9450-1750-44c4-b12e-28258bb526e7"
        },
        "item": {
          "id": "a4feb48d-4646-421e-9bd3-625c17a62ff1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c0fa56c9-92f6-453c-b04d-4aeb0a681bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a690db-99ed-4fc7-8033-935e22d1c02c",
        "cursor": {
          "ref": "db8b44fe-4d1c-40c2-8bf7-732544c20e16",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1cd4f89a-acb1-4f4a-8aa7-5febc5f399f4"
        },
        "item": {
          "id": "b3a690db-99ed-4fc7-8033-935e22d1c02c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "152a342d-5379-4b12-be6f-918abbca9ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cd4892-49aa-45cc-a352-b09e0d2af417",
        "cursor": {
          "ref": "e32b2080-8073-4f85-b926-a3e18e59550e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ebc93e4f-12ef-4259-ae24-c19e1e4200c5"
        },
        "item": {
          "id": "25cd4892-49aa-45cc-a352-b09e0d2af417",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cb60b1e6-cdd0-42f4-89c1-8717d35aa3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a2be67-caaa-423a-a672-9ee25acd5362",
        "cursor": {
          "ref": "5a08243e-fbf8-4b7c-8904-2e482b07a652",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c1314c18-c43c-48b4-9e05-f891b36af643"
        },
        "item": {
          "id": "b2a2be67-caaa-423a-a672-9ee25acd5362",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "52a010b5-aa1f-4e4a-aa39-a811c476390b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e61d393-0eac-4ba3-ba23-f67636302d5f",
        "cursor": {
          "ref": "0504c34f-b342-412a-a928-2decb7a745a7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1b554ad6-d4a4-42a2-8a59-05df2a784d85"
        },
        "item": {
          "id": "3e61d393-0eac-4ba3-ba23-f67636302d5f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e7942f9a-37f4-4f34-9a9e-012ab20efb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f54c2e-2a8b-4010-aacb-533101decc2c",
        "cursor": {
          "ref": "efa3d0ad-bb8f-4ae9-b71a-d620830bb52a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3709350c-cbc4-4883-ad02-95e2f6f8ccac"
        },
        "item": {
          "id": "d8f54c2e-2a8b-4010-aacb-533101decc2c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "645fbd73-2247-4f9b-8ec2-70828dacac70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490f736a-dac4-4b82-949b-26950d719ae9",
        "cursor": {
          "ref": "d71f8833-d7c9-4c61-8634-9b78b8466656",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "baa3002b-4751-4c7c-a394-fbf938a0d7e9"
        },
        "item": {
          "id": "490f736a-dac4-4b82-949b-26950d719ae9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b440282b-fbd1-4bf5-8e67-c8f6fe7b5d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1dc49e-5658-4731-bad0-3aa841c59293",
        "cursor": {
          "ref": "2ceca3b5-5487-4a18-97b2-af9135549800",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2b81fa7d-6484-4439-8e42-7213d1c7de05"
        },
        "item": {
          "id": "0c1dc49e-5658-4731-bad0-3aa841c59293",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "47e3636a-6a1b-49f0-9eb5-b01c24b140de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a40a2e-1862-4475-969a-1daa83feb39a",
        "cursor": {
          "ref": "564b19f6-5ba6-419a-98d2-cc4b5c0c0cfd",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0a9571f6-3632-4eef-a709-8ba272b0b082"
        },
        "item": {
          "id": "f3a40a2e-1862-4475-969a-1daa83feb39a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7bf1f100-a58c-41d1-be89-4d29f85603ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6458165-b287-4fe0-b5da-3b500d109711",
        "cursor": {
          "ref": "1378710c-597c-44b5-8cd2-b3556eb87b5c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8ff81bae-8e37-42ac-9808-087c3a5f937c"
        },
        "item": {
          "id": "e6458165-b287-4fe0-b5da-3b500d109711",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3c4d6845-ca6e-4212-9f42-32363f4c56db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f31b00-7c14-4b19-8cc3-bdb7d997ada2",
        "cursor": {
          "ref": "797d74fd-a1a4-4e36-bd91-0ff8850a5caf",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e5b93a95-c05b-4f6b-8021-237cf312d239"
        },
        "item": {
          "id": "c5f31b00-7c14-4b19-8cc3-bdb7d997ada2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ba5b6572-ef21-4e99-bd43-9ff2f7d58292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427a63fd-58c0-41f1-9086-09e124b5e6ff",
        "cursor": {
          "ref": "fd7cccda-f787-43dd-8102-50863a3f69ca",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e5e17a5f-c548-4f26-8f22-eb9ca0dca906"
        },
        "item": {
          "id": "427a63fd-58c0-41f1-9086-09e124b5e6ff",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "774a5cbc-5426-47b8-af8b-63dc4bb55c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4ee2d5-c0e7-4d8b-b068-d0b2ddbfe38c",
        "cursor": {
          "ref": "57448a53-6f6b-468c-b383-6c1dcd1bf305",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f6da11a3-e53c-47f6-94d3-a1d06d55c79c"
        },
        "item": {
          "id": "2b4ee2d5-c0e7-4d8b-b068-d0b2ddbfe38c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e92cf5a8-4390-4524-939d-ce44c89de8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e634ee8-ffaa-4a2c-a302-b278b6c5893f",
        "cursor": {
          "ref": "5c152d8b-3226-46e5-81cc-a082655ade71",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2a114e8a-6aa7-4b96-b7df-511fbb70439e"
        },
        "item": {
          "id": "3e634ee8-ffaa-4a2c-a302-b278b6c5893f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aa7c9709-3215-41bf-9fca-50a6fb7c163f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa4a5c7-8e8f-47c0-9cd0-ade19e54bca1",
        "cursor": {
          "ref": "e9d09c0e-c41d-4d16-8284-57c03f1ed46a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6eb414ff-630d-4391-a4e6-c4a197cd15c5"
        },
        "item": {
          "id": "5aa4a5c7-8e8f-47c0-9cd0-ade19e54bca1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6eaea342-97f9-4add-b976-28d7fe1353ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aba4627-8337-4e71-9871-d743a0b70f74",
        "cursor": {
          "ref": "6623a649-ef0a-42cf-9e36-29c65f2ed06d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0c6e6a8c-3dda-437e-b4c2-ca4dc58fdef6"
        },
        "item": {
          "id": "9aba4627-8337-4e71-9871-d743a0b70f74",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d62d3dcf-6000-4932-89a7-7a5d20cd4527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274ef857-6eef-41c3-825a-7fb1422a2f07",
        "cursor": {
          "ref": "871d1b9d-1fa4-481e-b0ea-bfbad04a21ee",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "83b2b612-e90e-46a7-bda7-40c95c011f2c"
        },
        "item": {
          "id": "274ef857-6eef-41c3-825a-7fb1422a2f07",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cb21ed93-9140-4b9a-865c-ee7a1a5fe4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b0d557-45e7-4e12-b841-bd5dd9afb3e3",
        "cursor": {
          "ref": "b2652df1-9268-4807-aa45-f9dca44af8ce",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "53c8bf9a-8d0c-44dd-b994-28eabe1a7e33"
        },
        "item": {
          "id": "76b0d557-45e7-4e12-b841-bd5dd9afb3e3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f8df2f89-736b-482f-924b-849046bcbffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8e2bef-f504-48b2-a825-b416cfd5d28c",
        "cursor": {
          "ref": "bccbbdca-a135-499b-ba66-a8fb5c73cdc8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "de608c4c-0757-40d4-8039-2541e0138365"
        },
        "item": {
          "id": "0d8e2bef-f504-48b2-a825-b416cfd5d28c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "faaceba2-295e-4631-8328-f6e5c02b3f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3411f07-a4d7-4ddd-8fde-3042a18afb5a",
        "cursor": {
          "ref": "b0e8a1f0-2727-4438-a3e0-d616ec439839",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bd700f55-d33a-4c5a-9503-78d65919c92f"
        },
        "item": {
          "id": "d3411f07-a4d7-4ddd-8fde-3042a18afb5a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "926a6196-4a8e-48e9-9753-185fe6ac6ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55f59ff-fe0a-4e0e-a404-f28ce939e485",
        "cursor": {
          "ref": "142c90e7-eb49-48b4-85e0-7d7e34e34ca2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "421cc83e-a77e-4383-aa16-fc859fc21a6d"
        },
        "item": {
          "id": "b55f59ff-fe0a-4e0e-a404-f28ce939e485",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4d4a770e-a7d6-45a0-9251-cc1c20656fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0305e6ad-0c16-4d19-a0c8-1f1dde5366f6",
        "cursor": {
          "ref": "8c82613f-2a35-4f64-80ba-b7ad97210b16",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "341ffabd-b8d4-4418-9160-3640c7f60ce6"
        },
        "item": {
          "id": "0305e6ad-0c16-4d19-a0c8-1f1dde5366f6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4ffb25c3-1375-4194-b21b-6b85fb515441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b922331a-15c8-47b7-8a68-6ffe1d2d3b94",
        "cursor": {
          "ref": "4ce2c779-044a-48b5-828c-489b4442e69c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0595f475-88f0-4798-9fb8-27fb5561d431"
        },
        "item": {
          "id": "b922331a-15c8-47b7-8a68-6ffe1d2d3b94",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fdca86d2-1c28-4244-91a7-2181dec897c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309aebdc-0c03-4e6d-b63a-1f39c85679c1",
        "cursor": {
          "ref": "3c18e88b-ed14-46b0-b892-122290e9fb78",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7ceb679f-852f-45df-b668-6ab90a9f1d9f"
        },
        "item": {
          "id": "309aebdc-0c03-4e6d-b63a-1f39c85679c1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e2917521-6116-4ebd-a28c-68bd0df4d472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5617c8-318e-440a-afca-2e3ed0b541c9",
        "cursor": {
          "ref": "1e200bad-aafe-48b6-a02b-2511e6256283",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "05394763-8cbe-4a53-95f1-ac07f6a46c96"
        },
        "item": {
          "id": "4e5617c8-318e-440a-afca-2e3ed0b541c9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9c9dcf1d-7481-43ee-84ce-461acefc8cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b298ad5-ebe9-489a-a990-9e2718d15e02",
        "cursor": {
          "ref": "bfeb0f85-6e8b-4004-9aa0-d0d490c7b027",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7bc1f694-e430-4974-a9c0-ed26132734f0"
        },
        "item": {
          "id": "9b298ad5-ebe9-489a-a990-9e2718d15e02",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3d9916e9-1067-4651-88a8-8f05b00a0d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3924b44a-bdbb-43bb-aaa3-0976342fade1",
        "cursor": {
          "ref": "4f780f1a-607d-48ef-8f25-75feeb01f279",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ebeb7a2c-7690-4fdd-8615-0ae20ffb8bbc"
        },
        "item": {
          "id": "3924b44a-bdbb-43bb-aaa3-0976342fade1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "553db5ec-62fa-4211-aad5-6225625beb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49be6e4a-08fd-46b8-b07c-678f6ed12a6a",
        "cursor": {
          "ref": "d08750bc-03b3-45dc-8c6a-bfa8750e1455",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c049a7b0-d88a-49c0-b822-4cbf4816db3c"
        },
        "item": {
          "id": "49be6e4a-08fd-46b8-b07c-678f6ed12a6a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4be4abe0-ec45-43cc-9f2c-dc35f53f2270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41c686a-c02c-447d-9c3b-5c4f63aebee1",
        "cursor": {
          "ref": "1ad42b3b-8767-486d-bbe5-ef4d1aa1c891",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3de7d221-69c0-44c0-b843-2ae2f7218fad"
        },
        "item": {
          "id": "a41c686a-c02c-447d-9c3b-5c4f63aebee1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "32f0ce6c-ad08-45f3-9500-8ae9153272a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4c3644-dfc6-4bf3-803d-e20c7cc5b7c8",
        "cursor": {
          "ref": "8952c415-6228-4ced-9f87-08d4124a6861",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "19fbe7cf-a4ca-4058-a5e5-7762a35ad01e"
        },
        "item": {
          "id": "9f4c3644-dfc6-4bf3-803d-e20c7cc5b7c8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0e0b1411-183a-47f3-8431-4c681339e203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4e08e3-073d-47a5-9577-240a43df7ff1",
        "cursor": {
          "ref": "813befbe-9e92-4855-8c8d-7751a3295c4b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f43c95ee-5d33-4cdb-8b1c-bb9865393222"
        },
        "item": {
          "id": "8c4e08e3-073d-47a5-9577-240a43df7ff1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "66c7256e-aa71-4a88-8f78-b36e59110d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac55ec9-0ff8-4815-b802-c69baffeaf67",
        "cursor": {
          "ref": "390bd116-f925-4a04-a881-7f896d9a3fe1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ed3249b9-abac-4229-a1d7-3ed8cf152f10"
        },
        "item": {
          "id": "cac55ec9-0ff8-4815-b802-c69baffeaf67",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "68074ffe-a8be-4c8a-98a5-d6eb797b3c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822f7c8a-d63d-4929-818b-6dc4d5b90724",
        "cursor": {
          "ref": "ad7788d1-822f-4265-beaa-7a84f62b4901",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1a1618dc-af97-4f32-83d7-124d2b2648db"
        },
        "item": {
          "id": "822f7c8a-d63d-4929-818b-6dc4d5b90724",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e2def0a6-037a-4146-825c-01ce3cfcec47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b342695f-8c59-4282-88ba-bdf8ed70e5d6",
        "cursor": {
          "ref": "c14271d3-cc52-419d-a8a4-851192627095",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "00779e6c-819b-406c-bd20-ad379f9ab569"
        },
        "item": {
          "id": "b342695f-8c59-4282-88ba-bdf8ed70e5d6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c54e6fc9-ae34-4ad9-bf27-7fb873610d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a169d0-3b3d-4f6b-8228-4f593e2d72a5",
        "cursor": {
          "ref": "76e15f66-d9c5-4975-afad-258daacb8489",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "88c8533e-1afd-4003-8fc4-b294591201db"
        },
        "item": {
          "id": "50a169d0-3b3d-4f6b-8228-4f593e2d72a5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7996afb6-ad37-48f8-a0d6-bad0020d313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e90df32-da57-47c1-9eb7-f4a4b28e9c08",
        "cursor": {
          "ref": "75e2f60d-7f30-407e-9709-62cd33c78cdc",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4687446f-2661-4cb2-b317-6d1d1a51b42b"
        },
        "item": {
          "id": "5e90df32-da57-47c1-9eb7-f4a4b28e9c08",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1ac59223-da46-46f6-9c67-df06d2b5746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aa079c-e9f0-4ece-bacf-a33404a93310",
        "cursor": {
          "ref": "91585447-4fff-424e-a12f-42c82adbc1f3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6f70ca0d-5e34-41ca-9bc0-99f67b41f612"
        },
        "item": {
          "id": "64aa079c-e9f0-4ece-bacf-a33404a93310",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3573c297-7b30-4c17-bb61-1407dcc29745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717a2187-5a28-40e5-9080-16a3b5bee1ef",
        "cursor": {
          "ref": "b9d93d58-f4a8-420a-88ee-6ecf0e328dca",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cfe78d7c-1ace-4851-9488-6c70c067c845"
        },
        "item": {
          "id": "717a2187-5a28-40e5-9080-16a3b5bee1ef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "66950511-47a3-4eff-9c25-0e0f51400459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575ad6d7-7724-4f0b-aa8f-7b1c31199758",
        "cursor": {
          "ref": "0793e08e-3bd1-4ddd-81ac-5984be12b7b0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f53157c7-1873-47bb-b485-4c4b075da964"
        },
        "item": {
          "id": "575ad6d7-7724-4f0b-aa8f-7b1c31199758",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "845dfd3d-f4c2-4ba1-8438-d6ffbf927776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1644428-49bb-47bf-a120-13ec9c4977cb",
        "cursor": {
          "ref": "2ad2ee3b-ca66-463a-823c-1374cb65fd0c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c1000493-1d11-4fbb-b282-15cfd157e027"
        },
        "item": {
          "id": "d1644428-49bb-47bf-a120-13ec9c4977cb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f7716998-c773-4f11-ade1-aa4b88093efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35f7f72-903a-442a-b5d7-5cd940c1a5ec",
        "cursor": {
          "ref": "9c4fa996-392d-419e-b36e-99e141463d6f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dbe25e12-8919-423a-a6a9-6a9cff808440"
        },
        "item": {
          "id": "d35f7f72-903a-442a-b5d7-5cd940c1a5ec",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "659f75eb-cebb-40cc-a291-aa5af4eaeb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e226e-c539-4b5d-9d88-c5808b788105",
        "cursor": {
          "ref": "d5450bee-bd81-4094-809d-b7ba43c0c260",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5bf622fa-b451-46d1-be86-83632b1cf3cb"
        },
        "item": {
          "id": "c71e226e-c539-4b5d-9d88-c5808b788105",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "22633a96-c316-4022-a474-49dfcf6d028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ed908a-4d92-40b8-b781-1f0158b940c0",
        "cursor": {
          "ref": "887d2281-0d0f-4d3d-abea-3fa97d2e232c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d0e400c0-a5a1-48b4-a922-bec1b15ad383"
        },
        "item": {
          "id": "38ed908a-4d92-40b8-b781-1f0158b940c0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "518ae221-2990-4348-a959-37b48ce12104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1744b1-4416-49db-84cf-e17128714ca6",
        "cursor": {
          "ref": "64ba8144-17a5-4b10-84ce-93b3561b8901",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d9f90668-99d2-420e-b3b2-ce5256aa1a8b"
        },
        "item": {
          "id": "bd1744b1-4416-49db-84cf-e17128714ca6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dd92d901-32df-4280-8115-a006b5eb11d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123ab31e-388c-48c9-a761-f35f9467aac2",
        "cursor": {
          "ref": "7d57d099-d97b-47ef-8edf-85c727d3e64d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9cbc9117-1bb3-45b1-9fdb-9dba2e36471f"
        },
        "item": {
          "id": "123ab31e-388c-48c9-a761-f35f9467aac2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "51326bf8-e056-4ccd-aa50-6fdd933bf512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3425b551-fb27-4db9-b375-6b6d6d96b1a7",
        "cursor": {
          "ref": "c2d373c1-02af-4b10-aa8e-1e2464a38d7b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b50ce4bc-3abc-4b31-b9a3-062b59ffbc2f"
        },
        "item": {
          "id": "3425b551-fb27-4db9-b375-6b6d6d96b1a7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "881c872c-87bf-4693-82d4-99d463b75604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf91e11-6488-4582-acb8-a910cd01614c",
        "cursor": {
          "ref": "5d71bfd4-d8bf-41a2-9929-6b892142b44a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bad3a5f5-304e-4c10-a1ed-d54ffb9d210f"
        },
        "item": {
          "id": "1cf91e11-6488-4582-acb8-a910cd01614c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "54eaf905-621d-44ba-84d0-70320dfe841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3626ab2e-e92d-40ee-ad15-7f221b83df0b",
        "cursor": {
          "ref": "f529b63e-684a-4d09-bd24-ce3f3e2b95d5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "720fc38d-d358-41d9-8a86-041ea27b93a6"
        },
        "item": {
          "id": "3626ab2e-e92d-40ee-ad15-7f221b83df0b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dcc632f7-cbaa-4ca2-81b2-a2046be92388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31355bd-7441-4fac-b7bc-8e846ef16787",
        "cursor": {
          "ref": "884ffe33-8b6e-4397-b476-67bc24da1bde",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "97382b56-b46f-4847-a9e0-bb5d06f124a3"
        },
        "item": {
          "id": "d31355bd-7441-4fac-b7bc-8e846ef16787",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "38d4940a-93ed-4860-8aa4-434ad3727398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7607beea-0bcd-4545-8dff-5d85b7c842b2",
        "cursor": {
          "ref": "feb049b7-8857-4bcd-8320-62cda9e29087",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ed1b0945-cdc1-4402-b548-47f803654199"
        },
        "item": {
          "id": "7607beea-0bcd-4545-8dff-5d85b7c842b2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "405895e9-1a19-4d25-90ec-1d8fab60ff54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cac7075-0d36-49bf-baaf-eb13a15209c4",
        "cursor": {
          "ref": "f170b00b-8f5b-43ea-ac6b-16f93fd8f8ba",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bb85084e-a5f2-45ab-acc3-b175d3c43fb2"
        },
        "item": {
          "id": "9cac7075-0d36-49bf-baaf-eb13a15209c4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a772a2a3-ba53-4259-a8e3-3a4ae65a55e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05edbb39-e55a-4dd2-8304-01834a089cf3",
        "cursor": {
          "ref": "445f7542-6224-4179-b562-a62b68fd78e6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1e2a46c2-076c-4aa9-8ccd-d7decae89cf3"
        },
        "item": {
          "id": "05edbb39-e55a-4dd2-8304-01834a089cf3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0979d28a-044e-4c65-8d87-446977914d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83a457c-b731-4bb6-9477-66b14c09ccc4",
        "cursor": {
          "ref": "87364812-5440-42c1-ad3c-528692d08fe2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "033af975-3ec4-4bcf-9838-0167db68d970"
        },
        "item": {
          "id": "f83a457c-b731-4bb6-9477-66b14c09ccc4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d9315fbd-92fd-4b62-9b7c-64435c1f5226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d9116b-3cc6-48b9-9ed3-45f2354f59d9",
        "cursor": {
          "ref": "86f2e521-9d48-401a-a0c9-074686b2d457",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8f8ccbe7-e708-428f-985b-4ca0c920f106"
        },
        "item": {
          "id": "d1d9116b-3cc6-48b9-9ed3-45f2354f59d9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c1d0c1e9-2f98-4e33-ad32-8b2171b75231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb35793-8446-4f3b-b878-69d803116637",
        "cursor": {
          "ref": "a2f10c7d-3bc5-42e8-93cc-ece072cd7f8e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3e28968a-9552-4c0c-a0e3-3872783216b4"
        },
        "item": {
          "id": "1cb35793-8446-4f3b-b878-69d803116637",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f77201da-ece2-4f8a-89d6-a84e7eeeae5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d0934b-757e-43d0-8ba9-ccf01a701609",
        "cursor": {
          "ref": "59658200-9abf-4ed8-8ae2-e98a202217ac",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2478e144-2f21-49f7-8f47-11c64747b678"
        },
        "item": {
          "id": "01d0934b-757e-43d0-8ba9-ccf01a701609",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "97a8165f-95c1-451d-8a71-23aba4370b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5147c82-f03b-4a29-9047-2e373ef57112",
        "cursor": {
          "ref": "95ac8d09-b241-4a89-ba73-77b59b7bfaa6",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7a6bd862-858d-4d5a-9b80-9924e651ea8d"
        },
        "item": {
          "id": "a5147c82-f03b-4a29-9047-2e373ef57112",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4ebb512c-7049-41ec-b303-633bd360d6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68867523-21a2-4e39-a5e8-8eed4cf28b52",
        "cursor": {
          "ref": "59f971a1-2150-46b0-a312-bf2a849b0c9b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "48d39af1-231a-46cb-84bd-2192c299ea26"
        },
        "item": {
          "id": "68867523-21a2-4e39-a5e8-8eed4cf28b52",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d091177a-fdf7-4794-b20a-7640111dd81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15766ecc-89ad-440b-b590-25fe5fa2ea92",
        "cursor": {
          "ref": "5a59b5b0-5b1d-4f82-ab8d-884d6e6855a4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "64d53626-c489-4e11-904d-477c6716bf22"
        },
        "item": {
          "id": "15766ecc-89ad-440b-b590-25fe5fa2ea92",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a193b940-33d3-43b3-af81-fbcae6dec627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aebdf7-4a5c-441c-8cc2-8af9e763fc59",
        "cursor": {
          "ref": "aecbc7c5-7d0a-4160-ae0f-f58ab5f8572f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6efe1ef4-e846-4ac5-adbc-026a9d536ba6"
        },
        "item": {
          "id": "80aebdf7-4a5c-441c-8cc2-8af9e763fc59",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d36958c0-caf7-4aa9-b2db-20cedd6ad0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12168e48-d6ad-4555-ac18-ee3629ebd859",
        "cursor": {
          "ref": "5d21cc2b-77af-473d-8c4f-77b8e8cde6b9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f141cfce-5305-4524-bd06-6c735be0e1ff"
        },
        "item": {
          "id": "12168e48-d6ad-4555-ac18-ee3629ebd859",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9af3cd55-162f-423e-b08d-ca64589894b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b5f656-e80e-4dad-8a80-04cdfc78d7e1",
        "cursor": {
          "ref": "5ce3cdda-0cb1-4885-9ae9-18cc9310bd2b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9578d547-e5b4-41a2-9269-db0cdc26081c"
        },
        "item": {
          "id": "49b5f656-e80e-4dad-8a80-04cdfc78d7e1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "97668246-4e2b-4094-a48e-76e8dd769737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e64308-53f2-43f0-9fc3-ddce8fd53351",
        "cursor": {
          "ref": "0ecaaee4-cbd8-4065-9cea-640e6fc20951",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "010d910f-0a82-4be6-b041-b267ff047096"
        },
        "item": {
          "id": "52e64308-53f2-43f0-9fc3-ddce8fd53351",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "196846c1-8542-491c-86c1-3caed30f76ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c989de-0ce3-4a9c-9336-5f3f37c19cc9",
        "cursor": {
          "ref": "68b293a4-3d20-41ad-b835-0cceb9e7f37d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ee0c9a3a-0e15-4457-b17a-8799e0f46ed0"
        },
        "item": {
          "id": "00c989de-0ce3-4a9c-9336-5f3f37c19cc9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af369bc3-f387-4e8b-924d-ce8c07342268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d3380d-28bb-43b3-9118-45f342998e0a",
        "cursor": {
          "ref": "b02e1c18-d8a3-4f38-877a-7b2197497725",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "afb7a36e-25ee-487e-b729-73403c7f8519"
        },
        "item": {
          "id": "c5d3380d-28bb-43b3-9118-45f342998e0a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a0745ab6-0038-4157-a361-ca1368348815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bef70c0-5fcc-4d17-9c79-71308f7438db",
        "cursor": {
          "ref": "c3a9e301-3f64-4d1f-b32d-38ea2643528c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3665d26e-785c-49a0-9f65-50ba4d42f3be"
        },
        "item": {
          "id": "9bef70c0-5fcc-4d17-9c79-71308f7438db",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9a6085a9-5d7f-49f3-aab5-1ebae2a7213d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fc8984-32ac-4125-85c7-c3609c049213",
        "cursor": {
          "ref": "9cf8df3a-af27-41d2-ae2c-2d2a6da8b63f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a3beffc7-ddf7-4ff6-9125-4bbbd39f5be8"
        },
        "item": {
          "id": "36fc8984-32ac-4125-85c7-c3609c049213",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7ba562e1-39f4-43e0-8438-113664593908",
          "status": "OK",
          "code": 200,
          "responseTime": 2116,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e1520a-73a1-465c-a405-ede6b9600f54",
        "cursor": {
          "ref": "17dae60e-8158-4693-9f99-fc2261b4b042",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "95b013b2-7927-4e5a-9609-242b4cdba244"
        },
        "item": {
          "id": "32e1520a-73a1-465c-a405-ede6b9600f54",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2746f129-3531-455b-a544-741e8ff5f57f",
          "status": "OK",
          "code": 200,
          "responseTime": 3929,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f7cee5-9436-41e6-a452-a6b74bd5b9aa",
        "cursor": {
          "ref": "8b6d70b5-379a-4c53-b360-b0b8ba23f7c4",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e4870982-0313-4520-9efa-7dc8af9922a4"
        },
        "item": {
          "id": "21f7cee5-9436-41e6-a452-a6b74bd5b9aa",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "847d93cd-5015-461d-9ccd-43a9d7e7245f",
          "status": "OK",
          "code": 200,
          "responseTime": 3469,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9f5070-11ea-4c2c-bfbd-a91bfc94b479",
        "cursor": {
          "ref": "251ab4c3-e6a8-4748-8aa1-f85d0fe966ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "147183bc-ad14-4cd8-90d2-9ff520e7633b"
        },
        "item": {
          "id": "1c9f5070-11ea-4c2c-bfbd-a91bfc94b479",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d64680c8-d621-40bc-a27e-ed18cadc97f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9f5070-11ea-4c2c-bfbd-a91bfc94b479",
        "cursor": {
          "ref": "251ab4c3-e6a8-4748-8aa1-f85d0fe966ae",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "147183bc-ad14-4cd8-90d2-9ff520e7633b"
        },
        "item": {
          "id": "1c9f5070-11ea-4c2c-bfbd-a91bfc94b479",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d64680c8-d621-40bc-a27e-ed18cadc97f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584f4896-074a-483e-b8b7-8c6faee17619",
        "cursor": {
          "ref": "6d3d17b7-c64c-4bfe-824f-e9f8a044d09c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c955d7e6-73ba-40b7-910f-7785e50a8ac9"
        },
        "item": {
          "id": "584f4896-074a-483e-b8b7-8c6faee17619",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4d1ab4a1-4c09-466a-b8a3-cf1045029397",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e42809-f031-40a9-a61c-4699ec7a42df",
        "cursor": {
          "ref": "3275144c-5996-4fc0-b08d-3523c457c1aa",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6eab6903-7cd5-42dc-9a26-8f2206d2db11"
        },
        "item": {
          "id": "a7e42809-f031-40a9-a61c-4699ec7a42df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0d69c0bc-3275-4671-a77c-d59bde54ebc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}