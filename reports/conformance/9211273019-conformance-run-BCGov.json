{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cb14c1f3-f495-43b8-b126-483f26f9c095",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ae8f45c4-5054-41a2-92d3-33d88e98718a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfb89039-dfca-499b-aeaa-f9828f27d88c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11f2984a-3f77-4d4a-8476-52c7f7fe7090"
                }
              }
            ]
          },
          {
            "id": "dcc818fe-e37d-4f60-bda3-5006d4941b3f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d4dcc6b-0d97-4384-b7ca-4390f4e624c5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4bd0bf69-9799-47ad-82ac-c514172b97da"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f4d347fc-eb73-4b4b-b955-7e542f6ff6e0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ea4bcb83-9ecb-47aa-8bab-80796eafb927",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7aa19614-7299-4dbc-8177-140da59c69ad",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee89a8f0-02ed-4fc3-a14f-403c03e0f69b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "392bf851-cb3f-40f4-848c-0e80a435635b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30425c57-ae5b-4ad9-b527-287591eaf4ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87e50e9e-67dc-4ff1-b3d4-639e823cff6f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e000315-bc5b-46f4-bee5-7a6e84967c3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d92003b0-e86f-4c73-b748-5fc07835e1ec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8ffe58d-c7fb-4972-a6fa-17d638dce11c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "66b5f4a5-f34c-4377-8fd0-b4dd166cb9b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "357d186a-4dc5-4962-ac5b-86c4bd332ad6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1aea200-c265-4e87-888b-afe1b2b70aae"
            }
          }
        ]
      },
      {
        "id": "242279a1-fd0d-472f-ae53-eaf2b032a6b5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "488113df-9016-45d1-b659-a97b588edc72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "186b44c5-5aee-403d-bc95-eabebe0bdba0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54e312ec-2abe-4d23-92fc-239695f1b0ba",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36215507-adfd-4200-bdfd-31ee948db70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9c4b24e-035a-49dc-97b5-7e881c936d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd304f6-adf0-457f-9803-2a3695bd7c18",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23e0b1e-0f66-4ac3-983d-f87d016c7750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db1183ce-a2eb-444f-8031-9a5ddb86cff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a4e2d4-8958-4336-b960-973d50760a15",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4624e3-7a0d-4463-9d66-151234713f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4be769a9-6406-4716-9a8f-c6a85008b4ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9dadd93f-c582-4a8f-ae69-40c8c080d562",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1c393a4-1223-443d-be16-8b7f439d499d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b26edb9-5c73-4996-b520-60396eb260a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39349645-5622-47f5-8c8f-47bca173f519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad3d898-bdc3-4893-b719-1d6a9ee29d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41db838f-011d-4cd0-a4aa-249c6438228c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83f73792-2fb5-42db-9e27-04a84b08b5a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "469646fc-8dcc-4a90-8c6e-530ca5ab5121",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ff6cbb3-caba-4bed-8e0a-ee7f858e7a01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "855158e1-4b41-41a1-b088-293fd8aee2d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42e5f5a2-0ffa-4819-9ee9-8381735a5c7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cf0eefa5-b51a-4a3a-8613-9ef5c0cfb886"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae8f25a7-5b44-4ee9-8323-8bb712a13357",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7109f05-f589-42df-93e1-73814a7fa7e2"
            }
          }
        ]
      },
      {
        "id": "5d7b1277-099e-4efc-b7a4-faaed7945178",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f2b99008-8e23-452e-a544-cd0f765a95d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6664c9fa-0188-46a1-9930-1f28e3cc19dc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3526e02a-fad4-4c1f-b685-cd4cb8b48496",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adef1ecd-97ce-484b-bae0-da3fa8d844cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1b0b23-9d52-446a-8cf7-6f15d0f19cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03eed1e5-7c4f-4ecc-bef5-4d074faf4b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "835fe585-48f4-47cf-9f53-8f54ab2ac4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764c11b9-08e8-4d19-ae94-cf76df641287",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3abe54-1e87-48bd-a098-77caa4d85deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dc8cea-47b2-47d8-9bc3-5153beeeab45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fb1008-2189-4b57-b485-3f054a755e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bb2338b-f237-49cb-b204-336b07e96beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b4015d-ef98-4940-a18e-03d3564df8f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d56d83-5053-4290-9692-6422cea7368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba2eb45-fb56-41c0-89f5-58489f3148eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3cb5d2-429e-4d0b-9d76-aaa713c26593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1890fc75-58de-490e-b46b-9373d8857079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b868ecc-653e-47dc-a5b7-9c008fafb09a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4bf2e7-48ec-4989-93ac-6c11b960bc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7ebbb6-5ac5-4ac4-8178-8f40daab9425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ebe333-31c5-4585-b17d-1ba276866c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "225ed088-54b5-46ed-a88d-9023c2ed5562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12528630-3eb2-49c8-9ebd-415df9601a1e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5173e9d6-8a4e-412b-8680-bb7d72dd8de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac271c46-4ab4-4f80-9aba-93889d3ae67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c047a33b-6ae4-47e6-bc35-b3e01ef7e581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeeb5a91-e569-4287-bfc3-e5bbe6882719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a83d619-68d4-4dd6-aa0f-3386ce3099ff",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1ac631-b68c-46cd-b580-def2b5f2e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98d1f32-61ea-4f3e-803c-5cbc9c9a0fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0513a3f-681d-4559-9d3e-98ca8a8265d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1694f79-4fd7-4610-ab47-290fb5c1defb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a35b45-5eb9-4dd9-9926-1301a68d4d6b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bbe492-387b-4557-b2c5-2b3f5f32bf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c56100-0a6a-4026-b97d-432a7abdc27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc3cb16-5b0e-403e-8b90-4a29d70b9537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "761126d5-64ee-4675-b4e8-4f4519ccfb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bb1448-5a9c-430c-8a77-017044daa677",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75ed1ac-980a-4746-a498-404cbea8d58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941e561a-4a45-42c5-b2d8-50612881eb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be56a900-77ab-4222-928a-706161781d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5defd243-485c-46da-a50e-2863f4b3eaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611ab43-ceda-40c0-b3c2-6a4b181bd63a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa72a7e0-bffd-4b62-97cf-e067106a0394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bf4b08-2cb1-4325-a1c1-a34d595c00f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be012d65-b83b-4b70-ae6a-8b52017bd595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ca08b4-bc4c-4bba-af36-6f44d7b01c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b36805-b135-4135-89df-88069b1542fe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cf77e6-6d1a-40b2-b241-601123f67934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a62adaa-69ca-4b0e-a103-1107294f26cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b4c3c7-ad0b-45f2-b877-3d652b590914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e261e7d0-016f-4166-a84d-b1763d310dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392f7367-ba90-4e42-891e-842139d84245",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e320cf-5655-4cd5-b633-6d0e935c257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c223dd0c-d4a2-423b-8dd7-ce9fd8723b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca2453e-9424-4536-99b8-c0fdc1296e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da114938-0d50-411e-b604-8fea0b2dd986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d87ba0b-3888-48f8-9673-0be438516111",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfe705e-7427-4533-a749-98a567c7b5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4924d5-aca8-462b-9300-92731855819e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e993c9ac-31fe-4197-8d67-8c4c3b0d0261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dda97cfd-f70a-4f4c-a38a-46febb6a7390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa870f0a-23de-497d-9c6d-38c994400842",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732c46fd-f927-457a-a4aa-4699bb7466ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6cff67-805f-42d6-a049-64832fbeaa12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63ecff4-904f-4ce0-9e1e-fc78cf90eb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef3be95a-1038-4d04-b190-3c7822eb7cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164ae928-db29-41ef-ae5a-fd85fc9d143a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a3cf4a-5314-408b-bd93-2c94094f61e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d78efd4-85bc-4f74-a338-8f253405a8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcad27b-985d-481c-9bc2-c13f5de59664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb06f14f-7b18-4bff-a0db-d59d834fd2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e38e7ba-a269-4b8e-8449-a1d8f2d08fa1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6abe324-7d7a-4b2e-b4f7-b8efa54301cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cc28f5-f744-46da-ad7f-7ab8cc5a375c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e18540-b0f3-40ce-add6-90cbf5952764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eae91cf2-3132-4378-8643-28f661d1a8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a83802-7c5a-44b3-908c-2ef22544e62f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9847f6fb-f370-4f43-8944-d45daf2e3cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb2553e-48a2-49ef-9caa-40887f20db40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7a53af-4202-4ba3-a201-bcbcc091b524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19dfa382-6433-48ec-bc64-2cedf75aace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2760c4d5-88d5-4348-aa6e-fceccb400527",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ae62f7-d69a-43fc-a889-41502ee08684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b59bb90-2fb2-4daf-aa90-5e14bc664a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bfded4-b84b-497b-a796-69c64e31b284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e234f6c-d3b4-400f-b39e-cda83c49be26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b28e577-1456-4e28-b753-112cf312cdb0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221a4042-204b-42e8-99f2-ff6ed876139e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e1b8c7-822f-4e6a-8f62-dfd3481d5c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd2643a-23eb-459a-b852-5640d88d7914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e443f61-b9e2-4a57-a166-e02bf8a90520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5193d537-bfbd-47a2-a161-09b2b2151521",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03bc5dc-fe5e-4b34-b388-adbd0c7d307f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38131c9-db62-48bf-9942-b0fe0247d407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7063cbbe-06f9-47bc-a690-367f7ac6fa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f455180e-7dfd-49d5-911b-d61d19bf0c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2618c7-89fd-45e9-9c1e-63aa47a12f26",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8536be-5295-4bc0-a326-6c973bfc5b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875e52fc-7bfb-4f6c-be39-0c9200cd9491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470a8f31-e37f-46fe-aa61-d780580a5bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "210f2c01-b192-4d68-8072-e330d02e7147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df3cc04-906e-4743-92a9-88732ddf86fb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8d5b10-7132-46a1-939f-cb712bed3670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540bcea2-e67b-44d2-9588-32668d3bd9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0be47ac-ee26-4b87-b7f1-2e60a402fb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c7b7a0-7d70-4d70-9fad-f5e90feb6d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01d53e3-fead-4bc6-a813-2e013c654665",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b250a0-3e48-4d9f-baa3-1cbdf68901e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069488c0-81c6-49fb-a80b-bd78e52622da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f12e85-2510-4e07-a7a0-9bac02b68026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2105aed4-eb1c-433b-b293-05cf53b9ff1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11714ac-eb13-4e42-84ab-909f070905c8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2271b33c-2473-4329-bf13-6b5e6ae59958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d801a3db-1675-408c-8db8-4a27f90160e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114afcc3-11a4-4d4b-aa53-929999924ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e73e47-c761-4ae2-ae02-5dbeadaa0f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6424a35-5e11-4287-af9e-a9b7890bb75b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7317588c-2023-413e-a50d-d65b14fed842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf74118-05bc-4580-baa7-058dd7192d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b855f3-75f5-452c-9b0d-f40fc6dd8c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdec07cc-5bf1-44f3-af9a-303232878391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e4abd5-3f77-4cc4-bdcf-06f99611e91e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc6835c-aed6-431a-8065-785dd239f3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22c076b-fb37-4f13-a0b4-1b0882f3754b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1571a4e-a6cc-4c1a-834b-b615de7de4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78a2a3c9-5f23-4bd3-b9cf-6d43b76ed671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a50c46e-f9e8-4b92-9dba-e7b14a7f1896",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14757b6f-2eee-4e3d-804b-8dea81367506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621baf80-3c7e-41d1-8dc3-4f94fde04de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8fb0f4-b518-40d6-b69f-da156c3c8473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af536681-e89b-4cfc-8476-48d8f72b6810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14d0e16-dece-44f7-bb9a-abb4a9de474c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd316ade-9bd6-4d24-97dd-62acda1a8818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ff3ddd-6bee-4dea-a389-1f98e62c761e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837854c9-5be8-4f50-b3da-d322f0146167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6457e8e9-cee3-493b-98da-161341923c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d8cd8d-6c25-43dd-9693-efcb61cd857a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752bfded-6716-4c95-b0f3-ce0780fca3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a50bfd0-6c1c-4498-8095-f84ae5eafcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554f03fd-d377-42c4-bae3-8d528e30e18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0cd389-0c35-4565-8bde-758634bb88d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b98ebc-8aad-4962-b2fc-b6d0b376a67a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75541446-ecf9-4f44-9494-3c70e45ed289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ae1a33-5232-45f5-b776-563af6566bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dbdef5-d213-4774-9c0f-e3449d629649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c567be43-54de-4011-9fe5-aef4921e6f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db90f6b7-7f3b-4d41-9d83-0eccaaf84895",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337456e4-d469-443b-8df0-811aa0a1bca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febae24f-888f-4bc3-853c-77f9b77ed40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da7a2a1-df66-4254-a446-3b513571d696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "87ccba57-bbe7-4be3-a84d-f4e2ddab6edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ebdc67-c934-4496-8d88-0ed1654ea6ba",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e66344f-dba2-4847-a546-72d08d05b150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3576507-8046-42ff-9db3-ec60a1c79815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d2e6c9-3702-4ba0-bfab-293c89c284aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa81d5a-ab25-4186-a708-a360018ce972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfd5bf1-615f-4cd6-b9e3-6f946c5e4221",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52140055-a1ce-42b8-96f3-b0709c81aa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1994a173-d3fe-476d-822f-d30632279dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e8d57d-7c8d-4869-8d76-9fd550f677db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3633ea9a-58a6-4c0d-be31-b94f8aeb5ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3223f3-638c-4bc3-8df4-915f27f608ab",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841a8b1c-15b3-47fd-974a-6d2531646524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05f5bf7-35a1-472f-a87d-c39de0d664d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46db7697-7341-488a-8b6e-ce57a16abab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae7d52f-0033-4e11-965b-df971b9003c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a327d8-3cdd-424d-ac05-f4552340d941",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd76995-b09c-4219-a5e5-fbe3dc3be8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5857ad-5811-4fc5-b7ce-b3c3ebb75c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c829cf51-c93e-46c3-a3fb-6debc5cf2b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f1d966-af4e-4394-be03-947efce4a9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f41de3-f92a-483c-acc5-85533c5a7332",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65fe520-926d-4e36-8cdf-e3e01894c2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07775ebd-c941-4e0c-a0ab-ed5b373e49d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b26bd3-2a37-4188-a400-d3d6c30f3d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7956050c-e60c-4586-b416-a502d25db3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65846166-7099-4d02-83c5-e2d428a768c4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f740291-1c07-4bd0-ac0c-b33ae5f1a250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "199f4b49-4832-4aa9-9c7d-2b395a1c3452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b598c18-8fd9-4599-95d5-17f6dbcbc8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f71c11f-04e7-4ea7-b3b9-96288489a806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2653d0-a301-44fd-b492-d385c36f2d77",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9251cee8-6272-4117-a8b6-07eada0e33e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc3107b-ae5c-41d0-aefb-41b397100766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124f2281-d4b8-40f9-bc47-ab932d980b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8b0616-7025-4785-af5a-77a54dd08c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1c42b-ded8-448b-ba80-36efb58f8ce3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0732f481-e76b-4f4d-bd73-9419477e84c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e40d2f5-d58f-4058-ad61-5a56d1a2bc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b839ec13-de03-4a60-9464-cf575335b3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef92a50f-0cb7-4963-ab5c-c4d730cf9c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460ea3fc-5a58-4a30-b188-edc42794607e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c644bf44-4631-491c-9396-60d7fb1308ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bed62b-6b0c-4ea2-a61d-15d3711b96eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bd992a-a136-48d3-9582-29370e980f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "661b028a-23b2-4efb-86f7-f776e9df9b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5386e2ba-8d2f-45c2-b633-2f3b670da62b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfb0a05-7487-4ca6-ba1c-1ac1b1945fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9ab630-c789-42d5-9acb-bf687bc587df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232a9a66-0987-4256-9a8d-b08ea1097fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68e1cab8-bc5d-46ee-ba6f-57b1fe95fdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cf6ceb-47c0-42f1-af9f-739f9b33a2a3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d3abcf-71de-40b6-b43c-839aef91bed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60890ae0-e7c8-4ee8-bf8e-a67273c7f7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a820a9-bbef-4860-b6c4-2fff1885aab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef27f4e0-cca4-45a6-a098-e8df9a06cf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ee7e1b-2a80-45ad-b6cb-e1be0d2d55c5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b8416b-e396-4477-84b3-2cc1a0cd09da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fbfa5e-1b38-44fd-97c1-03107d6464ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efb0e9a-97a7-48dd-80a5-c0d3dede2c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08f11358-05d0-435b-8e8b-45fa09b0633f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31c70b2-0cab-4532-a8f4-7a4affc30cbd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57006d67-9956-441e-a252-6629f3d6c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facb6205-efa0-4bc0-bd10-2b378eb982e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eed56a8-7bb5-40ac-aaad-62a50d133edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01b0a62-84c6-44f6-9ad4-c8b5b6d6051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5732148c-da03-4300-845b-afce581aca48",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70224fa2-ea79-4a36-84b3-d2bbc7f6c80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccb818f-80b6-4ada-bd3e-f541a577e7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ceafbc-8d02-4a9c-a0d6-199c47265df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b003dd9-a6a2-40f4-b694-d4a134202c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab306af3-8aee-4e75-8e50-babb57995d91",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1296fdda-c774-4d48-804e-ffda71433c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bfda14-3b83-45d5-88e4-caca5ef3d91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5790ff26-0ac9-4246-b4c9-f012e56ceb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da763694-4787-4d14-938f-d25140781b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1391f996-6c8a-4cec-8964-1471943944f9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94207f81-ebca-4984-a58e-6091c9f9b19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219b1282-b61e-44fa-9832-5080676592d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e3ba47-b803-47ca-b436-ca4067c6ff5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9506c459-13bf-4ff5-a803-6a7cbcbbd613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a3aaa0-daf5-4e32-9577-a753162fe771",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abf4c6c-1f26-412b-bc18-9208960bbe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3bf163-c2e2-41b3-a83b-06d3ffef1e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f415442d-2dba-4b95-a2b5-e0083493f3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a755c0ec-49e7-4066-a91d-a1bebd9311f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3664aca-e2d9-42dc-93df-ef3aa8cfd998",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d1f8fa-d136-405f-a732-d98975eb785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aa0b70-e1ff-4f16-9be2-9daf7c7e49d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7d982d-8602-47ef-873c-dd03b9e2e50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec47bc7-4653-47ca-8e1c-a62b61d2296f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c42416-7e19-4be0-8622-843f517c9c54",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5ef0b1-e839-48d8-b70c-4dab0b5503cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24386137-6231-434a-af7b-0c3fc989157c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ac0e8e-d77f-47b6-950a-0721d22baeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb511d07-85bb-4b2f-88c8-c7ae7e7dae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d22cbc-b512-497d-8ba6-684fe24f6acf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f544ff8a-2682-438e-a221-48e11ebdb6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b45f31b-c6fa-47ea-9fe7-8fe253ccff71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c018de2-e999-4b32-a2e0-f9bb6cf9f17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b71e7604-810d-4893-814c-9b9cda3ae610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c009b1-60ee-46d8-be85-6be5a9474090",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6279cb13-7c65-4fb6-a596-6d5f97d595ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863ceac8-fcd7-459a-a620-be3b733a258e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f204bd8c-093f-4c3c-a588-ec9653a8cf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f06eb2-0e01-4e9f-8e57-8cbcd24836d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22ebdc7-c0e0-4cb8-ae21-88d563c26419",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e3c691-e692-48c1-ac98-e457c5f1d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb767183-52f9-4121-a3fc-3d9cdd3f5beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa87cb6d-3f00-44ab-a22d-692ac71fa035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa00fec2-aeda-4c3f-ab77-c63ea21f2906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06579595-26d0-44a1-8275-f6c63772739b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0daf94-f1ac-40e2-a36e-a3fce13fb6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de962c71-183a-4427-9719-150fbe1e7a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553f1263-96f4-461b-ba2a-721b53ac70c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bc53e0-4029-4729-8570-c22723918979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95c20b5-7e44-4390-b9b2-654590f7abd5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d08257-8652-4d61-a1da-01ef08533716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab83dcab-4105-44cf-a2ab-93c0eb1bf6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9810593f-d3ee-4b62-9efb-76604e0f50cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0bfc41-aabb-4c66-9433-8a1e2f461fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdea805-eb05-4a35-8b23-951926d01df1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93030c8e-e8c7-4fea-8d93-28dcedfdd00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bfc821-382e-4a6f-98aa-4b57fde32960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ced86a7-c80a-4180-94ea-2f0cf0c9bbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9961e4-1d70-46e3-98ba-9aa410d2dd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad93830d-b7f5-4e19-b904-369c1c5303fd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84636903-93ef-4a72-807c-b8379157ab67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08992a9-3253-4ec3-a3bd-299c5250bdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649974cc-f9c3-4fcc-b0b6-1e6b9d725f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4ced0c4a-5d91-436d-b73c-5aab70bf456c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254d060d-3cdf-453f-9b5f-c97cec91d5da",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952b49d3-038e-427a-baf7-4e2653bc6072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335f9fc8-bbd0-4268-bbd6-c8a28dafd91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a369b925-c7bc-4792-bc56-4ac5b1b75806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "140a1745-dcb0-4399-bcb2-cee54d8ceae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec81f1a0-1dd4-44e8-96ee-ff15869c118f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f57ad6c-10ac-4bb3-a614-af7be762a011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544449b3-8233-446f-a5f6-472dabb95c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fdb01a-9c9b-48d5-bd19-78d4409da537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c53a77fc-1348-460e-960c-394b3532a4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c23ccb-ff54-47cb-a078-78edf03f0079",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed606ce2-fcea-42e8-97e8-3753ed816466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eeb178f-40ec-49c4-bc45-25c528035ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436dc459-dba7-4463-a0ee-9e5196bd4eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0e8f61-c74a-4295-826f-302aaf7358a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532d68e2-b441-486f-b1f2-99ff1cbeb554",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9365290-9bde-4b17-8bbb-6eeddf468f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2c8997-4b33-4093-ae38-4b975fa36aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051c5438-2f5a-46ef-95f7-b5b1d6cae6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "37ef1b39-ed7d-412f-ba6a-d3ed7564cc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6fd5a6-8582-4457-a24c-f7b7b8ced806",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca01c4be-7f1e-4dad-8a57-83d5e8696e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470b247d-03da-4134-9780-2ccb538612b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c30917b-5340-4b1f-80ce-b46c775499e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a527341-c9e8-49b0-bc0d-302cee5a9cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1660d7f-652a-4f48-a1b1-f521888eaf4d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be52bbce-071b-465e-97ec-a19c60a510aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf55c061-006e-4e7a-80fb-057a7df9889c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101da22e-88bc-4cb0-b136-d52afa1e9c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ebfc86-255a-4cbd-93f6-4c4c8172e600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26a1ab6-98b5-411f-a160-4beecd818211",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a14923-671d-4838-b0cd-27dcfd1703be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c51fa91-d2be-4aeb-960f-7a4a789eb5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee109c7-f3c0-4600-aef2-2e471e566a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd42b382-1d78-4a21-91a0-0f3fafc843cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327ccb85-8684-453a-aae6-c397c0780fff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec2784b-6383-4d47-b161-4eaaf0295d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c133b24-b020-4972-9877-2a78d71ae87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522b054c-7691-4a9c-a29e-e23ba6335270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7baf178-5039-4af3-aca6-f2a63f67d018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ddccbc-d82b-4929-874a-d9ecf3f85570",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02216f0-7fb3-42bc-abd2-07377de4d73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deef51b8-9936-4d6a-8967-989069e1d9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcd7520-d2a8-46c4-98b9-e02d7a91a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ef5efe-0531-4415-b418-24646eab69c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231fe828-69aa-40a6-b697-f29538041baf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1547864-dd1b-4ec6-a158-1e5a86308b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72eca86-6df0-4c8a-acf5-8205bd12e286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e32d86-c409-4a8e-ae39-ce1521e7dbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c092363-17fa-4d55-bf28-161e628331d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c18c90-a9d3-4eed-9bc4-0a82860cba63",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2079b37a-5291-440f-954a-35c0f13dc85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a494a519-e63b-48ef-9efa-930921f2338a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d948dc4-6aea-42cc-9eaa-a17b1e5548a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7dbc04f-4f79-4f7c-b8a9-4f03fd9e32de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b5b306-3fb0-4d78-8dba-baebc2b96ee6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8c37c4-ed09-4bda-a135-9ab2839494e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b26fcd-30f9-4e7a-a933-9bb66a45994a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc90615-2ffc-4cbd-a2c0-ba3cd2b7acb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b595f7c-7e4a-4122-8b1d-aaf7579c745f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7ceb70-714b-4914-99aa-c90a178732bb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc4f74d-799a-4ccc-860b-f0e16043a80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54146c3-a9b5-4dd4-8a68-4013b6320008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cb71bd-cb16-4e30-84f4-f7154b858872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "052b82c8-1b5e-4b4a-acb5-7340f967885e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cf554f-6e50-463f-b970-70b761d07a17",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f912b959-72fd-4d68-8476-4d3fb7d568b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6647c409-e6ec-4cb2-9fc6-d37b6b91dadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef249494-1ede-4742-b74d-efa24a696f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a932026-eb0f-43dc-9937-d6685b021e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c252a9-7030-4963-b11b-12567deb8fb8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5dc666-555d-4ac8-a3e9-162d660133e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0074ff-4170-469d-84fb-6ab9954dc7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da9b4c5-6773-4512-b2d0-b259271f73d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2396b748-107b-4fbe-a715-62ea896b3972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d91141-18ab-4622-8ebe-11dc3c32d50c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cd3ddd-41fb-4146-82a1-e0d6ea0b691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b66116-6e56-4de0-9025-ff1b7aeab7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b510168c-9381-461d-8a75-d93ab4567e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14928cd1-2e80-494c-823d-2e048046610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133f1393-7199-4aa2-9e46-28737b17c20a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88da11cd-361d-4901-a01c-f580f96d14e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9898e95-369e-4b08-a23d-1ff6198fbe38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0de87b-c52f-4258-a786-adffa7c205cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35f7e65c-4c57-472b-9582-b21f8c4f0cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8334e269-dc36-4863-9a8a-ba4671bdd55e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c5bfdd-e593-4e8e-97d4-b8f024d9334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0615d2c-5bb7-428d-b56b-a3df62e09fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1530775b-fd1c-4821-887d-9952a7878532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40ffea92-57a1-4be7-a61a-a8c6812d410f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34092ef6-d277-4200-b18e-05756f72a79b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b83756e-7c7b-4f1f-a5ea-67f9144e54b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a443be-9cb1-4f76-9b31-34495f3428e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8bef2d-2317-4ee6-b9f2-f0e88ea6e663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2034308-8455-4911-b491-940a04b9ee9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e515ae-79a5-45e2-b0d9-4fa2e77f8f17",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f428da4-a308-4b3a-a922-6e73b2dfff0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82bb588-7f17-4389-bf19-c29bd6699915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b369f1-e5f4-402b-95f2-73849d897d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c073e156-7cd8-4c5d-b843-be65e1d8e04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ff5466-deac-4bd4-ab5c-416a9f28c097",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10319bc0-1ddd-45ad-963e-0b9a8ee3e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae663356-e138-4196-b900-ac75d8f12c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd2cb80-f302-4386-864b-77c9739b75ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed582ea-3737-4df9-96e8-dd07eb0bd252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b9bf20-3b7f-4577-bc9c-c231fcd4ba8b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7182607-74fc-4834-9adc-2fdfa027d12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53baf021-2593-40ce-abbf-46681eb72698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528d8e1c-74ba-475d-b498-5b060d57f0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9827ab3a-aa6e-4095-afcb-39a47f9e11a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8d470c-4005-42a1-b205-3b1cebe5bb9d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad39d43f-2601-4010-b159-3098f908b5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36890fd-beb0-4b78-bcdd-b30b2578f4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9aade1-ec60-4fd6-9ec9-dbcd826369e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09389cbf-87b8-42cc-bf07-fb56b3bd7c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3802c17e-e7ce-4ac0-85e8-550b0627983a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e690f9f0-1de8-44df-9fe0-6a20894f5777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b434af28-8c87-4f85-a671-98e7b111958a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2c18ad-23f5-4876-92e4-b8e3816d5202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "031684a4-efcc-4efe-8692-dbe53a960051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a75259-99dd-4de8-a166-1c05aab3e8d2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385606a4-73df-45a7-b0b9-1169905c6b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e7cce5-b068-4e64-9083-13c01a14dc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec576a9-3242-46e7-a440-a8c2df86815d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f8b6b8-740e-42c6-b0da-8fb13eadc960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9537b2-e881-4470-88cf-bca6c493b34e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086fd2da-146d-449a-9d93-415e9de3ebdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3631d38f-1c53-4f74-9e21-afd66346d1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657ca3ab-e6b3-4768-aab3-53f115e62cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb787f5-0d59-4210-97f9-290943c7df26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c54590-c221-4592-9f26-0854d225050d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74484a7f-7f33-495f-831f-878e31b02069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9cca10c-5f83-4300-80c6-a95a1b8a8fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539fcad8-1efd-43cf-965e-71c26680d737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1369c64c-22c7-4b57-aa31-6a4cdfbc3968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfe5a41-4f4f-4aaa-a34c-205c0b8d5362",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d22980-7ef7-4d65-ad5e-676272d34fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e948b5-8ec5-49fe-8096-d54f0d4291d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa07e61-a943-4adc-8f90-1d5e3581af3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9725d54-b62c-4366-b598-cce9c11d6652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d81a465-a566-4014-bc04-b67b8fb443d0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df05fbd1-57b5-4a3d-a820-8f0d6a89946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff16fb68-ba2e-4fcb-8782-d03fca87be8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a53e4ed-0d74-4e9a-a545-498cfe806870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ead93882-2a0a-4410-9e0c-ecf42d519001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e6aa86-4872-4e9b-9eb7-5a590f2f9996",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3313e28-d64c-467f-a23a-a63103978ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0271ea-6c93-48da-a623-6919a55a0437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9abacab-1b5d-4cce-a518-af1bd993933e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35b0da4b-e6a3-4247-a4e4-31dfd2803792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66856f12-2b61-4fb5-8660-d6188169a301",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a4d244-5986-411f-9f1e-118ca8ed57df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87d888c-5e7d-4cce-9c17-1cf8f24113cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c5d34-2f8c-459b-b580-eb99a9399bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a78bd3ad-f60d-4dad-9578-efa271f58b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a577bb6b-aafe-4662-ac96-62e0ee9e470b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f2d203-9bc4-40ff-b02c-8074e5413f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974b1989-19ca-442e-8051-cd39b6ba06ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695ce556-9a62-4913-88a5-2849c8e76177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "949c0664-ed5d-4cb9-9415-af8016bf31a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bd5f6f-1062-4ff8-96a9-4504b34d6da2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab719fe-a45d-4807-8a7e-1e2938b38876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9186b8a7-2bec-4459-8591-1d11791e340f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27489cf0-c1dc-4ec3-8b9c-13d9c4402a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6c3c78-86ba-4576-b98c-52075715f06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744d69dc-ff40-444b-80d9-2acf922d9df7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17ee53a-1dc0-4ba6-b757-cf43a071f78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5e619c-06aa-437b-89fb-41d2608ab666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa7e44b-48b7-4884-a7b0-5b414354c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a71914ff-cfc4-46c5-b7df-bb133ff83c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebd35fc-233a-4137-8a73-4bfed6362eea",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9adf71-60c1-46a1-a619-e46b5bcdbeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ebda6d-87a2-4ad9-b029-f6d50a8715e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cbd214-9a21-4112-9303-d3e0b133a26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "522dea34-7ca3-4cb2-be60-29948933eca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60768612-7812-44c2-bd0b-3e51443aea6a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964ed511-6154-4d37-8eef-09ef63c625d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a9c80a6f-d7b3-4b86-92a3-fb36b1eae343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c2c826-cc33-452a-8df1-c920642b7e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "516984cb-7c50-44a8-afc4-8b47ec304784"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aca078f4-dc09-40f8-a04d-24259b6a057f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c48f1c6c-32a7-4955-aee0-aa489e47ae3a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e660c927-9762-4590-899b-ff65a1c387eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8b0c264-f23e-4f78-9585-e5b60961c0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190446d4-663a-46cd-8d26-cc9813e980d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10a8828b-8c7a-4e73-b8e7-68eada173afe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eb47e79-0905-4d34-935d-338631089442",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9739384f-1c5a-443a-a4bb-5f442fd1a51f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d416ea17-d0a2-4402-b367-7ae2840c52d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe5ad728-2f6a-40aa-b3be-c192bcf04526"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20f9b4f1-b52f-45b6-bd27-d7eadfaef85d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9440c019-d2a9-4835-a4e9-9c1449745395"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "be9976b7-bd2e-4f7b-8992-379d76a5581f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30842428-fe31-4c5b-9266-33ebdec23271"
                }
              }
            ]
          },
          {
            "id": "0c4c8747-1f7b-4e13-aefc-3b709f32a2cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e0940d6-fdd1-4d0e-8e1c-156e92613eb4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d73ba90d-06d4-46fe-a5f7-8625cc91a66a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aae18c-e7c0-446d-9db4-7a9cfc6cc6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c8361fc6-0e4c-429e-ab21-fed49fa56178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a815cf0-4d6c-4de9-b578-6ddfcb05ab4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290aa635-8ee1-4ccb-b90e-37c48740da1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e39c4f98-014a-4dee-bbfd-ae1cfca362ee",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50789ee0-5ade-4927-9206-ad666c4e8dac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "190f6b87-879f-4f6a-8a98-6083dde0df5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d10208a5-1c1d-4626-a9d5-da53abf3beb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3013aaf4-e3d0-4578-b2c7-e7970b717b88"
                    }
                  }
                ]
              },
              {
                "id": "e102d3da-bfff-4578-a6dd-287bb8f6394f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4acb0514-ccdd-4e03-a1d4-032f8b41b466",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f15b3b1-e589-49a2-8b0b-9989a2f7452e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24c581c2-f733-46c7-b8fc-adff944c7309",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a76dd6c-29b5-4bd8-9b89-71aca924249f"
                    }
                  }
                ]
              },
              {
                "id": "18cf0a6f-9a3d-49d0-aada-2ec6e6464b9c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f26e9f66-b00d-491f-b330-7f66ee41869e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "813bd8b1-d408-4725-b921-e815977a9c23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ac4703f-baa8-4d8d-85af-24794849bfe1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32f21882-9c2f-4dcc-978c-987fd27875e4"
                    }
                  }
                ]
              },
              {
                "id": "df063676-c724-4e27-950b-6b3a386fafe8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10fd121c-4cd1-410b-9745-3e2f06628ab4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66b51da9-8491-4a49-8d11-d444d8938d35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea934e50-3a82-484a-b80a-ae13aac9202a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3bc88900-f063-480c-ac98-cf60bc3fe9ed"
                    }
                  }
                ]
              },
              {
                "id": "78f2620a-2a47-41aa-afae-77995fe76966",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "645da404-d2d2-4ecf-b899-6126701ac3bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c15a204-4079-480c-b74d-6885fa3b05f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "731e8c7a-1d16-47fd-b4dc-e87f28068a99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c1240790-12f7-4e72-b8f0-0d6ed4ce0d0b"
                    }
                  }
                ]
              },
              {
                "id": "5463c64f-c4fd-4ef5-b594-97099b30f909",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b05fd93e-94b3-47cf-81bd-abbf302ac8ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80cd00ce-a955-4683-a89d-d5503b10be82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "871ed897-e4b3-4638-a438-0b76693dc3f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d847353-2de8-493a-befc-28b1c48a16cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c09a91ea-9f50-4ed6-97ec-7622cc4dd3a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00d06f6d-741d-4f54-94e8-f5fe75700ef4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92236da7-ba08-4c46-8a40-c3d80faf1383",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7e176c7-8b99-4b8a-8f4e-e2bd2e34a11d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81cf34ed-ddd5-4d4c-9c3d-6e1b4fc0c3a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "46edd45f-128c-4b8a-ae91-675457c0a74b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cb41c39-54ae-4d58-8e0e-3b023a595ae7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d5130d5-4a22-4183-b6f2-58d206de123c"
            }
          }
        ]
      },
      {
        "id": "5c74bf90-3ce1-4c88-a81e-f937b8dc2cda",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7ec62216-806a-469b-9255-a8dd31ec48f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e78a1be-9674-45dc-88cd-2f86b19de9d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06fe4673-f33b-443e-9313-5a9f3b933e93",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83029b8f-f2fe-4cd6-8f8f-b785aff02c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815cd765-830b-43cc-900f-d40a441a04b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9132f6e-7a19-468f-84af-624029f00b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de0b0de-e46e-44aa-9e05-d5318a5a98d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c80868a-2e24-4748-b18d-328f5acef32c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e80af6-5824-4641-a4c3-b1eaed9f6494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1708685e-b83e-413e-bcb8-adbed8fc3174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c51a354-12d4-4bb6-af4c-d3f4b31bb1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09bc89ce-f3dc-433b-aaf7-09ad66d8784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74dc67f-d24b-4d31-9271-6840d24175c9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6939a3-4b93-4ce4-ba93-5e9db6ada27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78736f0e-9f0d-4bec-a6cb-40982ddb2611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8375c94-441f-4982-bbff-6c1267e68eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f58b1b-9c7c-4bbf-9a16-4d08969ba5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd88c135-10bc-4b25-a807-07eaf002e88b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56496774-f37a-4cf5-b1ac-66c989796bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0201c32b-6751-46f7-a8b0-05d3595ba929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62024ba4-3ba2-4784-b790-d0f560c7f4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3974a1e2-6e8f-49e4-b1fb-383a57a19104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adb0e0a-b5ec-4088-94d5-5eafb99b6e49",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026d49c6-0f7b-4d6d-81aa-a1357241e9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b579f845-2d6f-48c1-b5a2-23e1f6d3d227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13ae302-6542-409e-b9b4-62bf8a8363c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad559a73-e2c5-4c94-badb-0628c4895b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eedf1e7-a776-4cfe-98e8-c78395388db5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23747c08-6ef3-4da4-b6bf-fc15db8a1245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a54625-b121-4a08-9880-e5ee172c3fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4f046a-c01b-42f1-91c5-4f9b318b3059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea50b34-897b-47ab-86ee-4a0cbc4ffa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63359ab1-073b-4505-99e8-ea1854ff3709",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8c94ab-1287-4a68-858c-7f59c6b47a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a9d10f-2031-4fa6-aa2b-ed92deec6719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a40604-fd2f-45ac-8de0-d330e261315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5da461be-42c5-4478-a22d-f10eedb8d7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c49078-4e29-47e0-a1aa-9a2baf80cc20",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677a5a46-6d57-4670-b525-627ef0e068c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408a355f-81d1-42bb-a972-013ae27a881d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475bf074-ef54-4a2c-ac9e-e461289faa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01526a41-d321-41d1-9145-ed6321038ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad83e493-9537-44bf-b092-987326981d13",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc39caa-ca85-44ee-9dfb-f3495dd00cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67178f3c-f07f-4603-b360-50772a845595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d3972d-7a96-48ba-a599-96789bab1219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d22a021-c24e-4c28-af44-d93dbc9ee783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465fbbe1-2979-4950-8477-dab341fc14cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2153e7a5-e292-44aa-bd30-96dd3214d072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934f8ef2-42a0-481e-909b-5e0597f70086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05832111-a195-4145-85e6-6b0f320066b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14559d0e-8ad3-4ddc-8b12-81ab0d14db59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a424106-47ef-4c7b-a14c-70bc1f6183d0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aafbbc1-6c87-4352-8b4c-211351277e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3dc402-68b8-495d-bd2c-475bb7fb6e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e607d3-ba98-45db-a527-2cdf9108e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "98185a4c-d3e0-460f-81b0-e28d22101235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53d6d0e-9fbc-46da-b2ad-62f31abeb4a4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c50441-20c2-4900-af69-d59f8e959835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8cc4c9-c777-43ee-8963-9cb3fed8415c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836af012-7e44-4beb-b22e-90dc95155038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9596c2-c198-4a46-9547-321492bec688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b46601-9335-46f5-bee3-a5ae870c3469",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7338d-b6a2-4864-988e-ce92813539ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989639dd-c35a-44fb-ac9c-069a6aeb961d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767eb121-8447-4c0f-a46a-c8765bfc2ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe0a653-ea26-46c1-a2df-4c4b6693effb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26266a9-3c24-402e-9829-75f9fc12e5dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfef30c-8752-46ce-825c-eb32e72a1a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6423d0-2ea1-4a6f-a7ad-f4a603194b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6090eff6-0eed-4155-b77c-4db762d40f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b041b89c-972a-475d-9e41-768b0569496c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe0e4b2-93ae-46ac-b672-01917871aeb2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7deb6b-7811-404c-8616-207bda5365d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e2985a-ca16-4033-82fb-8a8e6025b9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f713c48-b869-45df-8ac1-f5388d94c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8605cbb-6194-4024-b592-1e1b7a3caa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b2a0b8-033d-4836-ad02-ea1dc82b7f7b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f72339-2f14-47f2-a7eb-96b969e5543b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555d867c-c127-4914-b4ac-6ced7a4d6cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f3ff25-dced-42a0-a25c-4f9043135010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d36773c8-349e-4e7a-bc04-1ec6d13fa4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cdbdc8-791f-4722-bfc7-3e4d5a976e8b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ffb69f-8441-4330-9434-c8bddf4cfd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b035fd-b47f-47e1-90e3-c6cac4a815ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b969ff78-4225-4fee-9ad8-770e74eb8510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3eece2-4180-4f88-a5e8-42de23719847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d897b752-ca1c-42c3-a2eb-ece1a898f4a5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532ef98f-0ae2-46de-9aa8-8572a3a174db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de8b290-387d-49c7-9251-c1ca377267eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c24ec12-1e43-468a-8a72-f40de4adfbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7f03d4-abab-41a6-bb4b-17b0196f0ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81f64ff-ebab-4f17-bdac-d1066101ed28",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc76bb-46fd-45cc-9b04-f573e268cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4850086c-3f55-4c53-864e-c5ff771cf204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c61f92-2129-4948-9d84-77ae36be6009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44577704-1543-4d81-8e78-407f0070397f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dbcfe1-7530-4d43-83f2-06f4eef7dbb7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f155ea-2b50-4904-8f8a-6d9e8f673604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db61040d-b6c3-4b39-b375-f2132e0efd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703251db-4cd1-4ea9-a950-8c159f2e2aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d70bd0-90fe-413c-8d5b-29535c331c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9b1c91-f078-47d4-910a-1cc8a6ec86db",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e3ac12-5c0c-483b-8f9f-891f94faa10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1894033d-3d18-47c5-80d5-a77f02cc24f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdfb7e1-a81d-45ac-8dc0-6e5c16f1f89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11736db6-f278-4b27-a730-05db91accdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9004bcc3-b413-4668-b7a1-e5ee32f5c890",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629fe83c-10d4-4832-856f-a1f625c8f298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f57db7-4cbd-4018-8bad-b3121c5a8033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc397d79-8664-4adb-947d-048c27a1460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fec1c2f-043a-40ee-8194-91ceffa114ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75d6fae-e431-4b7b-8cbf-64a773631152",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661b73d3-3127-4ac1-a33b-4a63e4ee5764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4cd6f0-409d-4660-a877-723a031f119d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dc8338-8528-4a01-9c57-038c7f97637a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d89f25d9-d494-44af-a255-20fc49691670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9978eb70-0b73-4e95-8e98-063a156b9286",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69aa2373-7e13-410d-9c28-2676b41af5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478df7af-3908-4338-ab7f-0f8c7e0bd631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cb7f38-6889-4d8b-8491-3bfae06e69ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d79246-d20d-45e8-ada1-627205249630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b454a51b-89b9-4dce-b42f-d492b4b3a5d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba030de5-d7fe-4ff2-b13c-f9d9a397099c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea7a5cb-74a3-40e2-9cbb-3f56442ca109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766b0569-07cf-4aac-9e51-e5a035fc740c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d900bd24-5bfd-4a70-8d42-ffe5cc5ab820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0168c35-20ea-402a-bb62-2d5eef3688db",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3594b3-190d-4dbe-8744-ec5f7e946754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a72fb11-0642-43de-8852-3c6480fabe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9271424c-0491-4699-b2d6-350f444d1f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd9fc1f-c128-4c52-ac6e-897961b54a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a472f22a-e5a4-4dd7-94c0-624a975cc6d1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff3ef94-98af-4306-a654-979e75b754fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e6dbad-993c-4135-ad9e-e1ea9eb0d071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aed779d-db8d-48cc-bcf4-2f03dd549f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b514df10-b7cf-47f0-800c-4a2499922c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d747ac49-0e08-42cf-b6dd-f8e970e7921e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec7c77c-d761-43e2-9516-44b7f349e7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb12376a-e68a-4f46-9f45-fe08728b66ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183d3f22-f06c-4c20-b627-7c5d0101df47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84870efc-da4e-4915-ab77-9622a01572ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a7fbc6-bcdb-42d7-a969-7eb471c4f522",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba125eee-2a9a-4272-85cc-594f9f2cae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2abd769-aeaf-4c1d-85be-5b13dc775487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8abf450-4a5e-4118-b608-b36420fcac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5979aa5d-bdf2-47f3-8232-4c8bdc9b50ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd7df18-b5e9-4d2e-8055-4c10f05ded42",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df056422-0bca-4dab-a5d2-a9e857727d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a205b0-2649-4c7c-aebb-0a487497b69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82aa34d-6454-4182-b827-76e0d9c56b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8a3cc5-0728-4798-a950-729634dae01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381f3b88-2818-4ef5-8b97-a12f0e4ac532",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e266a-c78e-454e-ae9c-87f0d3bb72d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc9b830-4040-44db-9bc6-23a25197692e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef1ddb9-8644-44fd-a35d-afcaca0a6cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b072e59c-454b-4d0f-838c-190f24546449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7992e5c1-eb1a-4158-8520-d8d2ec3a6066",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7b4e69-ffce-4b93-834f-e1d28773ec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3658b8a7-81e0-4baf-99cf-247db30b230b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0515f64-33c5-4f62-80e8-e12e8a406033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd34579-c159-4864-8ad4-e718768e0564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bdc365-ef10-401c-b7d1-ef61b8d1ed48",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8188887-f17a-4714-af00-643d1cd26239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59090afe-a0d3-433d-b0db-80b26195eeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890100a7-5280-48ac-8232-38e7831b33af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e10b287-55ff-416e-81c0-0a646e6a61d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e47759-a553-4d2e-be9c-351a37a2720d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd8acac-44c2-4df6-8901-ced3d0d5accb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb91a3fc-3994-45d6-98e0-373b93e950f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddbea25-73ce-4577-b20e-f1bf85a76aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "645ad871-933c-4da1-9b9d-7f5263e4575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05da205e-a05f-4582-9a75-7afc22f8fd77",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d905854b-06ca-4b6e-bdc7-f813fdf6dc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b18810-a876-46aa-a656-8a07d4d09cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667988bd-15ad-408e-ba8d-d7e3a61cf3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5357e4a-a37d-49a4-9f80-62b39a329473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96955efa-f987-49fb-a97c-c1eb7e46fef1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702ce2e8-ff0f-485b-beb9-dfcbf02e3a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9771490f-57ba-4cc2-b5c4-fd237a4a3d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea18a568-a22c-4081-a413-e5d19393e6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64684442-9dc0-4b25-97ab-687c30bccb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fef971f-5351-4637-81f1-ed1e1a3794e5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ec7c35-f71b-4db2-9e02-2925fbc884a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a92dca8-9052-4005-8882-8ae0272ab76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dbb8b8-17d7-4135-ae6c-a010c1ab5df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "954afc03-e8c3-4c74-9612-e8da0890f847"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e763b92-4640-4b3f-86a2-f035ccbe68f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cce5c05-3392-4c0f-bf37-2e2ae0dd8b25",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f6227b-61eb-48ab-a0a9-c3ccaeff0373",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "53c0ae58-ffed-4751-b096-f3f058b509e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5b5f70-5842-45f8-9779-f08f3c6869f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb423215-7b88-4148-abb1-9b57ad95a738"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83b5dc1c-ffa1-45d3-8cdf-0e86cdb23693",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d692db7-0949-44c1-9cbf-0e4188d94424"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc283de6-ff68-4f3a-a3bd-f6ec78e9683c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecceea4a-69b3-4039-97f9-a41440b70ab5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1453503f-dc94-4676-b840-06ce1deb7a4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92544de9-7af7-45f1-8739-5944139fd53a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11bfd973-efb4-42a0-b0a7-f9319d1ef908",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84a87fbf-7dbb-4780-88b6-cb15b748e974"
            }
          }
        ]
      },
      {
        "id": "b1f67f4c-004f-46b6-9857-f5bc866766a5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bfcdf329-ad32-41a4-8817-d5a455b77b09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f35b686d-6bd8-4e3d-abbf-dd41038661c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d5d5f964-5ca3-4a40-8aaa-a1a577bb51d2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdcf234-ac01-4c26-a07b-c5389c28588a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4a697a-9237-49cc-9e26-c110d658460a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465d21bc-7575-4e2b-a7c8-dad47461e2ce",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba165a2c-a56a-48f4-8e98-680b06d57a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bb0305-fb4d-460e-9e48-e5248b8b955e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df182a5-8d56-46e2-9ae7-6ad2215fa8bb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e041c9-ea6a-46fc-bb4e-e2d8413c36a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9fe2d9-3fc3-4b77-9e57-f41613eba877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecac67bb-76a5-4597-9603-934e65b64a51",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276e4d91-172e-42da-ab5a-c2ebb0462ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea4b7e2-ef3f-419e-9c8f-6f2d3c144800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2f3d9d-4cb3-476a-bd2b-c868f7c68cb4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e9c0e3-0cf4-4ce5-b17d-4a14671e11d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025c32d4-b4b1-4920-8c30-3c2f1b6d6ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb3ec04-db4a-4b6b-b327-d3c07f4faaa2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b824ff7-163e-4767-ad11-a3fc47bbe6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c376d0-88b9-48c1-95b0-967cfbc1c44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2b42bb-e336-4e45-b38f-1553014a9f7f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a09e26-511f-405b-aae7-9a6df945b20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b524c22e-0daa-4e38-8f2c-3192e159d9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fb2eb0-4d80-4dac-8398-f831914188b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5af7025-69e0-4307-af26-193a824fe039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67503bf0-c9c9-463e-94b1-3d797a2204b6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214ae0cb-45c8-4e03-83f5-a0b94a2e90f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407a69bc-3c75-4f47-aa95-ffee6d50d430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc57b9b3-94b0-46da-807d-8ec2f2c434d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3887e8-f387-412c-8147-a12203dafada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbaefc0-538d-4e84-b3cc-994b76217c6c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07514d3-0da2-4c38-8757-8a73b952804b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f947814-1e62-482b-855a-ce1fa13f14f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fbd204-ee32-4fa4-a9b7-380ce872d8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5001a211-69b3-45ce-8cab-9c26723c95d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615112e6-23fc-419a-8b09-e9d471ada4b5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9987416d-f427-4bf9-80ff-ffcd06d9cdea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f1509c-009a-4423-8c02-c14c11713453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df63642-bdbb-4db9-967d-329ef85784ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea24dde-a741-4fa5-9d40-963400b39e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585e2240-e96e-48ba-9188-65bc891b768d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696e2a66-de19-47b5-812f-64e2c5a888be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52742686-6a0d-46a0-a6d6-7256dcab70bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c5b6b-2a87-4258-ba35-dcffc3411501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d678a76f-61b5-4d9c-9602-2967f44e4114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e0df08-3128-40c8-90ab-adc35c1d61aa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d76b91-fbd7-4210-aaba-78de4b3c54e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7fee10-6e94-447c-9ae6-417f57a656b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb801938-84f0-467a-8fc1-dddc27b73104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c231d3e-3202-482c-aaef-1348f2473947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c86b68d-ddde-468c-a9bc-42776993fc7b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0005b7a-68e2-4294-8acc-f5dcb30d4ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc672fd9-b627-4b99-8102-f3bd9e5c2232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39463762-cb6b-4828-af7a-daa81ef4fda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac7c7a2-a7ed-40c6-804c-aa3d095ec42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c3e503-0aab-42fe-b634-6e145b42b57e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f6bced-e808-424e-ae3b-29da64b45460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e62532-1fc2-41b7-aca8-db568765aeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c45ac9-873f-4bfb-a6e8-719b73badc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847507e9-0b5d-4101-b015-08b8ce704cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7bbff4-6d09-46dc-a9d4-cf55419fda2f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0c46c1-6a87-4935-a2e7-9c2b31c2fc36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0acfac-8e96-4a06-a7d9-726f07298ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c06183c-8cd8-4a77-a14b-212623477c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec0b70c-ad49-4a21-9398-750debd8c12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e3ef94-ff68-47af-a3bf-1bc586502da2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e89a1ae-d782-409a-800b-752887565514",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e60305f-0f0e-4bc1-8a0d-eee505b8709c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef803de6-da51-42bc-a6c5-6e862bb05f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0139d714-a15c-4adb-9f43-abf2f21fea9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076963d5-9e24-4a2c-bda2-e780ce72b74c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7849653d-4ccb-4924-9cb4-66b4ead0fc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f54632-b0c0-4726-9993-3384e1db5919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf863a1-faf6-4f3b-b146-8b00eed31198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22611459-f648-458d-8b44-21b9f4254f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0df174-34fd-43e8-bb8a-1a7b7e370e59",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5911508-5005-477c-a6e4-052610f4ba6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8a45a8-1790-433e-b73d-8a48c357cc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b834797c-1e2f-4559-926b-03b89ac07c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96423a26-2369-4efb-8f8e-2c927d172f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81ed1a7-8f8e-498a-b5a6-00c0929219cd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddeeb9b-9076-46c1-8d4f-a1743410e37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f50b33-6b3e-4293-99ed-a2ec1ef31380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6faa45f-20b8-49e5-a444-e9b3cf6698ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1c216a-69a4-42c7-8acb-4b15c86cc747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0256e65-b2f8-4f49-8f7c-a0ca1679595f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cd1703-812e-404c-8a33-38ceedb3f049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93657c2c-e51e-4f76-9399-11eefdabc447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09fcbd0-363a-4cc6-a9e7-bb4026d861cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8505f143-12b5-468b-b23a-ffa42ab18f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701fe192-9ff0-423d-b6b6-66153a72a43f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4247cc-2053-4d7e-ad7b-85a42cbb01a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb0770f-481c-4168-8d0b-0343faff684c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace36a19-fbab-4d56-8681-9bf3c53276c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e34818-bc75-43fa-9fd1-e46d97871d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f853c4-1996-4036-b450-013624d6708c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acb623a-daf6-4d17-9efd-7536c2d4fd63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bccdfa9-b1d1-4fd3-9b66-6fddcb444f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ac449d-00a6-4f8f-b9f4-235f2397c6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2836c0a6-8f71-4651-bc74-a9a55d58536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cc38ff-ccc0-4856-84d7-401b1d336f09",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed22e22-b61e-42a6-bea3-70a884f1cf31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e05047b-f0ce-4f67-8842-abb4b87b9884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f041b490-d322-4ee9-87ad-42b209b50117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b41103b-aac7-4389-9ab6-f961985a345a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bd005a-34bf-46a1-be6c-4c76028cf545",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517925c8-a677-46ab-8931-975dad732efd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0256646b-cea5-424e-953b-1e19f12df06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7056b5f9-02ab-4c90-b100-a86a99679d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2745fa5-644a-4dab-9149-03814c4355bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640c66d7-3229-4779-9dc7-c3f7d2e72813",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b851c0-c158-4d38-8933-5efbcad99122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b356bc27-4600-4708-a36a-d51e7608bc5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb37ab8-8544-4053-8571-f19252786196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabcd166-d242-4ce3-8277-6f72d70f5e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f42ee8-f431-4076-b4d0-5f9b4fd8de43",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fd2b58-b1bc-463a-95b7-17c2d00096cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550c945c-d328-4ae0-8377-b11e8a891e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915d61bb-8bf5-49d2-bc54-fbee366ba9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320089fa-a94b-4b93-a6dd-dabf03319b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8f8120-14d2-46de-bb8d-51a634ffea5a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1203298d-f875-4485-9137-18fadd8e5bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e615e5b-7427-404a-a86c-e65c08dec313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b701a75-c478-4d32-9400-742169628311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f0fcda-92a9-413b-a230-dbbb8b1f6a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fa23fb-3955-4178-9293-5130206c1ad0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec3b479-6ab9-4b1b-8771-4e83af671cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de45f7de-d84b-465b-86b5-dc3430df59ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3763f1d-6b98-419f-bf60-e93737dcfdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fe920e-c905-406a-be48-712afc4e0d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ee5f59-7f33-405b-9f72-34b2c3eecd1f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6345b6f6-2c84-4e24-a39d-0e471f26d41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe630e73-ed3f-4749-bc56-3ba05dd629b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e202141-794e-46bc-981d-6be4bc5408b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d77b4d5-db1c-4974-a468-808f2b263e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9f4a49-1ae8-413b-a718-97012ea91ddd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e589f6-21c1-4667-b736-bda62213fc44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818cdc2b-01b3-486b-8301-e545e32bd411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a342c1-3f85-4713-abfc-10aacd3e7251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1722d6a-53a7-42ca-b693-08fdf8d07a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fe5f71-90ba-45ff-9a02-076346a7dac0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6c9308-d16f-4536-871b-817d78c4bdcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a79e551-16d1-4d5e-8e40-42ddbdcd46ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a476b3f4-a5de-48bd-8a6f-414a377df160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec452c9f-24b5-4ef5-8933-991eed69eac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3367d2-4bbf-4011-b567-7e5df89f958c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc35d476-c6a2-4c91-a810-7317c9436793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00465f30-2c14-46fb-acad-c4a5be65a8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b245b23f-c383-4b60-b9c0-42a70372d891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5672cca-8805-4724-8d31-6f3aefd7e111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5c45dc-b664-4ca6-bd29-73120546054e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14c8f93-a9ae-4252-b12c-a09f1636fa81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72cb8740-52e5-4eca-adee-3c9b88f04a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644681d5-e8d1-4b77-8127-259e86025fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823eb0b3-3bc0-48df-90d8-57f9346886e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0962d97-227d-4098-9f48-367fa1cab72f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eafbfd-ea46-4f87-baad-abf4ff7bc046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd70def-7185-4d88-abe5-4af508941355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2af3731-cf0b-435f-ad36-57e9c7575079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7b801f-7137-4025-8aea-2feb083856b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a2ad2e-569a-4491-bfbc-dc482f2b7b29",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21986d7-3d44-4552-a288-03dfa9d283df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681c58ca-4a88-44bd-b7e6-0d53f1194d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6ceaa2-7545-475d-9c59-a4e1118d08ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab6db89-3c4c-4bfd-b209-b34eafe11939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2818ad2-74b3-41f2-8fb3-402937300923",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31e81a1-a2ea-4fd4-816d-19764af2f326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e023a32d-a636-46ea-8e46-326e27a2dace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6400bf4a-9190-41fa-8e2b-09a179c628a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29743ee2-a9c9-4c11-8a8e-7dcb2c35cffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c623e547-dc53-470a-9147-fede4d3549c7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63df7f30-351b-487d-bf74-f02c31dd1968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed37ef31-cdb4-4531-9374-671d5d30a55b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea523d5e-8117-40fc-b84b-7579e4da81b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4fb933-06cf-4ac2-a0b7-f86fb9744d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8219107-8b1e-4203-9613-2f757e6fc699",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93fd7c0-552b-466c-9e6a-25af7790116c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c7eeda-f3df-4ff4-926d-ccea7054271c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456dafab-e3ba-4961-801c-969b245c406b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16710725-e1b5-4772-a605-57cb3486151f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99672e21-e3e2-4b47-a279-c9837e55f5bb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c80216b-dda3-4c14-8d46-ecddd51d744d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431bf9fb-8860-4e90-8818-becf8250e37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2aaa50-6714-453c-bc51-059311c9bb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d92c1eb-9f90-4433-8548-e69dafd802e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2ac238-4dff-4ea1-93c5-10bf488b63d9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbc6a09-fa7e-45dd-88b8-5e26778bc04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcb0d7e-00f3-4eed-9e75-3e66a3a45872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a0f7ca-d6d2-4ad9-8cfa-2c86d847c7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd89fd4b-fe87-4543-9210-b362d5c35454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def7b6e2-6d9f-45de-a8db-a5bbaa7fdc66",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd454d1d-7770-48c3-8d46-7f22b37e112a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4b38e4-ffd4-430a-a557-937eab316941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e21b22-7b2d-48b5-aa24-9d501730ef44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c224a51e-3e06-4c69-9607-2ce22bc6d8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985bd312-de71-4af7-a76c-1923e12b9469",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802a4bc4-924a-40a2-b2e5-11b7e8ad9aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41e4501-1d71-4f39-8a57-7a741d1389f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27f6103-ffc4-4f73-9ad7-ab2186efdc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33e8b86-cd73-40d2-ad1f-9affb2173487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d011d640-f085-4cb4-a04d-8e1f75cd78be",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773b5aca-c082-4c19-ba1f-6e1c3f318a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c480cd33-e699-449f-8f78-6e5de8235ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86edfcc1-3c0f-412d-8c5c-9ee5c312d700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8770a4d4-3d19-4d43-af6a-dc521d0dd049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c043672e-3317-4722-add8-d8a0c6e549b8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672a3cf8-7d59-4171-85ee-68ea84f299e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc6946d-a064-45ec-bbd0-070ac051c27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f52e4c-6a55-4967-8310-36b574ccb674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1eab8b-1398-43b5-a05d-238578d224ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df5e0bc-37b3-40f7-9346-7de5b4fb38f3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54886a5-9bdb-4747-bd19-fc5f28c7747d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6446d06d-c3cd-453e-8ee2-a06add48bcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c3f136-7dc4-4732-a95b-d2a8c3a7d1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff505689-885a-445b-94c9-a705f234667b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706acbf8-8f4c-4168-a079-5a6e9da6ed7a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc88cb0-a91d-452c-8fac-92e7a1f91120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483d72fd-7461-46c5-9b6f-fefaa58cd128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e964362f-0647-487d-a776-478f5ef3c14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e7351c-9452-49a0-a8fd-53ef694502f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64a83e7-bc6b-4e60-a35c-08ac669d8fb8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd977c52-bc05-4c93-bf36-9e696cfb3d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61326aa2-847f-44be-abaa-84f7229858b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2b65b2-adac-4ca1-955d-d163417ec401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee623c9-697c-4519-b388-c34c07e755d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f00d51-f133-43f4-b798-fbf59476422d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed536a4e-0d49-4fc0-8afc-e7dd2af6b64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176230b6-acaf-4695-9192-2d814a8da73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35427b78-fea4-4a7d-942c-9a2a78a6c569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614cf1b1-145c-4874-b26f-3984edaf42c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57b358a-2de5-4610-8fed-f2c0a616e28a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee743ef9-d544-4d6f-9824-c3534c2b1dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f436d9b5-0655-4061-a5fa-0ba5c3352e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5afbaf-70a4-4ef9-81ad-ffe7afcd1274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3335fdfa-e606-492a-aae1-a7273b380896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ea23fb-d9ee-46f6-94ba-4871209dfe7e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424e6e81-a5e9-4fc7-a934-4376b6dbe810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434a9908-72ef-4868-83f7-26ff90634967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4890ca-1e0b-4dd9-9b3b-9ba655ca7b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcdb10b-0cc6-4b41-967c-2ad2caf8b2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacd9550-a5f5-4dcf-a113-55a26ea8d5ae",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6235e3da-f6e0-41ea-8bbb-eec4c99175aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64417a5-c693-4945-969f-a948714747b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266e36a0-8d27-4ef2-a15e-d171e1d6f585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54baf27-1322-46ab-bdf3-12a36c998d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87ddd42-53de-4de9-b064-62b2d19d28ac",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c11d1dc-6695-4894-8910-c45097b2bf30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82db6c65-31b0-4d97-b3dc-ddaca51f1142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada9387e-1307-46d6-8d4c-faaf5d2a936d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a004a4-b6e3-4ff4-9429-473b8b30896c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdedf34c-579d-4377-a5d7-6fbbd7702647",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd54b238-d242-429f-80db-0a67b7c1e23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de29c1af-4a1a-4eb0-89a0-a26f6fcb0115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b722d5-0759-45e3-9984-1a57cc80dd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3802d1db-943a-4ed0-8b5d-35ae8e7ae83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa0c9fa-d490-4fe6-868f-442556044884",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dc6468-dca0-4821-8451-ba60af71bcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df4b260-6a27-4b00-b1e8-1bb5e5a5b30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ad0fc2-9092-479f-8e62-186803c39616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c4a863-be6d-401c-b131-ac09344159fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0364f5c-ae43-48d4-be6a-532c14a1f7b6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1207cdc3-4518-45fb-b943-021ff81c647c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72303eb2-cfab-4349-9628-8dd92279047d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa2a99b-d24d-4b6f-9a05-f0380b775ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27642fe4-781f-4479-9f4c-84b534ecd7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505c4b0d-9f7c-4ccc-808d-c44e96a91659",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d478aeb5-7124-4d90-bdef-ec39502cc721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44e6f8a-cf40-4fd5-a95a-880b035b4e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db916a2d-32a9-41d6-858e-823cd61b39ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3eb309-fec8-4de5-9f00-c70cf63ddc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9126018b-5b1e-4808-ab94-536d5fff75f4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa30e794-8b42-42c6-be88-d5f5578ec735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6194e58-144b-44e8-8043-ebcc293e4f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aca0bb-6d11-4692-beff-b1e6019eb8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d42947-a7a7-4942-896f-43494c720c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ff2ce-5a5f-4860-8727-693c4e2a7c1f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee91b53c-ffcf-4c33-aa96-cf51694b3ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5782bb-898f-4424-ac0e-a1b077c8cfd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5482c4a1-7c8f-49ff-802e-4204c11c407b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8038fa3f-e391-4d47-958b-5dd1236bea58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7a9137-869f-46e4-afb1-6300a073afef",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffa6141-c8c4-4868-8936-dc6381199bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34cdb3e3-0feb-4fdb-9629-d5bca5f6505a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1b7759-24d4-4b2c-ae4e-f547124e0fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b244ff-7d69-44cf-8522-61695397625d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237d426e-5937-49a6-958d-5ebe17b3808e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da5006f-d7f7-4974-b549-7515faaeb29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b5004e-cea4-415e-b9d4-288d69a58b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4cc822-3c0c-4c06-98a8-e02630fc5fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629a56a4-ba9f-4314-a6d5-a4f93bd47749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1be9298-b2a0-4725-a4ee-b7bb922fe69d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966f9a59-350f-461d-b019-d52a6592e59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6315b14-2ccc-4f62-bb19-7dc160587a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97923883-3de9-4ff3-b3b1-3900ec47f135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29acfd6-1c72-4cee-b5c3-c8119a63d6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16e9dba-b31b-4860-98e1-f3d5fcff5922",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7000cf-c956-41c9-bb77-97d42440acdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a436af-1b7e-418d-9b47-fc70e0ca6b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ceb00ea-324d-48a5-b152-a5350a2a5fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4597caa7-3651-42bc-9b68-28e3c9d73155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9254177e-8fe3-42d8-9ab7-4d2795732d9c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf3a70d-4f07-4532-965a-7a482fd22b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88005320-a909-4a02-9d86-bbadf183f8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be06e56a-a515-4ffc-bbef-dd088a7e3e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5723fba9-772a-4df4-857d-01a89b76842a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d51cbf1-6236-4234-bec5-548fd0c291e1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234df2dc-fe67-4076-aeb5-2ed10242e343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ea58ef-311f-40ea-896c-a4014e0726a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a87395-5deb-49f8-a2aa-4997fe1b508f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0954e4-1b3b-48e3-b728-8005b9c066fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341f2674-3e0c-4b67-950d-e15a542e8f59",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403fc279-c17c-48a9-a710-41bdfbeb1525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58aaf9fb-68bd-46da-8cda-304402bc4012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8ef0a3-465e-443c-a15b-5e8ccb2f9cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dd7d7b-43c1-410f-85cd-5333eb4a094a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fabbd30-f2cf-491e-a4f9-2750987d1ec0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfff979f-d882-488b-9a05-fa3bc7598331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab66f05-fc7f-4362-9325-8a58a560f675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafe0423-2204-4866-bda6-ff97e469cb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fc222e-e2d5-46a6-a5dd-d6024ba9e0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be1d5bf-ab22-48ce-ba99-0a0dd0888ab4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0050db3-a846-4de4-bff0-b0469539f43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037fbda2-f367-4f2f-b871-2799bea7e4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a470c9c-7af8-4b57-bcde-02271c938444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7eb9900-05bf-4393-b732-9d338570eb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3b474a-d9fc-448b-8791-ac3dd3410a65",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edde647-e462-42eb-a5fe-5c77795edeb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57aa2f26-590d-4073-9c99-6000e1eeb25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a23b2d-86da-4e0c-a64f-391f36dbc8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9a3d2e-7070-4cc7-9720-ed48995b7ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfad9389-9ed4-4af8-896e-75946111e6c2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f06828c-8a0f-44b2-a7ce-b1d4ebd0c6f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec3889d1-d7c5-482a-8f33-15d6d623f282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595134da-1bcf-4897-8700-c3e10d1b6eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c104685d-c0b0-44a3-8c0b-d285cdcfb3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2678a425-2b18-407c-bcb8-943fd4f49025",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833e9a90-683d-4fcd-a091-60575f3fdee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc10ec4-46c1-4221-8b11-49ad51fb1168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6143a7-ad5d-42b2-8f09-44d0820a99cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f4fd3c-59bb-4d7a-90e9-ed8a1a2c030a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451ed6c6-77d7-4fb0-ba8f-0992d9bd647e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c3435e-c8b2-4081-9dba-1cd8a910224b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c719f837-2695-4654-97c4-69385023cfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbe9cd5-0b9b-4f7f-8fd8-1d33934b2293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d43c80-2f9b-46fd-b523-ee0a258d261b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccba7024-c22b-46a2-8595-52e8f26805de",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c27662-90d6-4642-b194-cb8216af7c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d48bd2-2a36-4d1f-b76b-fdf8a2461635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836929a3-7ca1-4a3e-9fa0-19e7a101e86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e5e653-e58a-456b-9036-11b3d5473eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45787033-157f-464c-b9ec-294218c61d5a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de353fbf-e4ee-4b69-ae4a-c39ebfa7a3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d5da1b9-55cb-4b78-9bb2-4157beff53b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a496592e-66e4-472f-b886-695c8ec6c787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0573d0-2e4b-412e-8c3e-7c5f36624232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44862d37-eee3-44e9-8de9-489d161ea232",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e07fbc-592e-4088-9206-57405408bbf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67b4b7bc-0f96-4f73-bea9-7bbbe1489a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e5979f-737e-4d60-a8b6-9b9da4964d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77964455-cb5e-44e7-ac38-7c0f25627d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de22f3f-16c6-479b-a0ee-4418b64f04be",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffb2b54-8727-4ac3-8f04-a7533b66a805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e99222-e5e5-4906-b650-696f3f4b84d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56a2b8c-cd0f-489a-94d1-e65140df775a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c7d5f9-f20b-40c4-a588-d04c83fead8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6d1c4e-8922-4da7-84d1-c40beb33d9ac",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d95f068-69f1-4792-9bc8-574f0e511bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b797e07d-758b-4fdf-ae0a-ec7209524a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e098a494-1122-406e-99d0-6e7b9b1c445d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e436961c-b6ce-4d09-acff-34a45b6eedea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293684fa-148b-4c52-8394-e09fa1980ca6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b2b17e-72c9-4a67-b9ec-febe88deb002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c93d54-765d-4259-a68f-2b1344e604d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114aa628-d3d2-4748-bc7b-2df59d22637a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fdbfe1-321e-4be7-ba05-3ae6e4779f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce06e4f-a4d2-4a3a-9d8f-4ddfae41047a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68202622-a490-4132-94b7-d25b6da3bdd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a3c2ce-927e-46b1-9501-9ca474c049f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81bb854-fb11-4464-b4ff-825c6540d277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950271af-6d2d-40e2-8336-c0236779372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f9c084-2341-4b4a-8a80-402e762b5456",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f690328-6f62-40d3-9119-a6f47e82b5d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c59c8a0-dbd8-4da0-8d20-49ea5a6e1168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679afb68-8f07-47de-a8af-24a6b1ad6a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9d3db9-5d0b-4e05-a0d0-6cb2c6c7f1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee98e51f-ac20-4981-83f0-bffe719a5729",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ede52a7-bdfe-4cb7-81ec-f16a231c3621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82346f3-763b-4e9f-bde1-d7c3b855b245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5b3497-c0fc-442a-a4a6-f16d0d8bd28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3828172-cab4-48a6-8fe8-59731bc03593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52db6040-d16b-44a7-ab57-835de4a7a195",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504f5c53-586b-48fe-bb2b-e6a5d44a2b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3fe3ea-bdf2-4211-9d3e-b84f203b594a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39001b7-3f47-48f6-ba2e-307358345e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e06702-1c5d-45cd-b914-8d2f01b9da63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022f1acc-5641-4829-b305-881c03b85ceb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c470f0-d888-44cd-ab46-8186e4064f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ec4049-0e4e-4569-b951-ad2dc4ea8bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2314c77d-4ff0-470d-aa42-3ff122f7f2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496de411-aa86-4dfa-af28-e611d8f71e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbe489a-35d1-484f-ae8b-48197979e9ab",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc427c11-3a68-4546-a7a0-0d9f50e28caa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebee06b-6bf6-4463-8fed-65bb46600eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f611fd-e056-4b1e-9f84-bbf10779f719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66718818-9c0d-4200-9ebf-496ca28334bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372fe198-b916-4080-abc4-a5f60e644a09",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc869b2f-9bda-4c3d-a903-0c82b948ec1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2a82d4-ab7d-4d75-a192-dc512e3dde45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2579b0-f479-4f46-b041-473ecc4e5098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5241209f-054e-403d-81ce-be247d5bcfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ad3a71-6823-4b7a-99e1-2645ae68cdef",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5bd678-5e2a-4684-bc19-b68090c44e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dbdc261-4c53-41e9-b4aa-e6d64b3ddf9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a8483c-330e-484f-96d7-bac3e18abe16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b002a5dd-7b13-4bfc-9e71-fd101756f16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b8e744-e4bc-46ed-a4b0-56a108cd4226",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a0ad6b-9e82-4526-8c3a-e74ae093804b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b2dd8fd-2ccf-4f3d-9912-1a7a3e395abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4da2aaf-b799-4a2f-926e-092390b55a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3670636-12d8-47ee-9fa3-c83c3da051d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3402939-37c7-4258-968b-c73a492f406f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a540c522-a8a3-4cfe-aa05-be791a8d91b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec800d27-896b-467d-827c-1c5db55f8fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84315ee-85f8-4edd-a709-20cfee3e25fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72d5cbd-033d-4b25-ae6e-2155a00f1c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc873a4-143c-4565-b167-7d151c04393b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b1efc8-c8a2-4ed9-ab41-bbd5deefce2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21889bf-b152-4ba2-b194-6ecf3f3a1ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c07b7e-23e4-4dac-992c-d2e376e4dfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38839485-19c7-4af2-bbfe-10570e240dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427da57d-5902-4566-aac3-3bae814294c8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b566d-706a-4111-9f94-4d76b549d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0654c3de-94fd-453a-9110-0eaf4f102e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd02e60a-c6c5-4cd4-989f-649aad2d20ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4022f68-aa6d-40a1-871e-fc29e6aad68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beb8698-b363-4155-8f02-128d6353970f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd66dd53-464e-488e-ad60-b9c5cf5161a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f39195-de17-4fdf-987d-f0e34ce62cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9646a05-dbee-41cc-88c4-0d850dbebd5f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9b2bcc-43a4-4826-ab4b-725e5291986b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0283faeb-520d-404d-93fe-e53125ed93a7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b123c452-0c8c-4749-bdeb-a0bbb856b831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c798cc1d-590e-4e87-97c7-9a7af5b55735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983f5f57-6d1f-440d-a254-db83aa3e7ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0562275f-00ec-48fb-8a83-a01e0971e97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e4ecce-6722-483d-b557-252cfe18976a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b61e78-61fa-47d8-87e8-adeabcc40817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d55a19d-d3e3-47b0-8c2c-dd9317b83220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d728892-4f9d-42b7-8705-1f25f0b9aa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096ffcf9-adb3-4f20-9943-39925c99e73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5d2cf6-6399-4798-b4c5-bcf5bbac9124",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3896559-1125-4a1f-bac5-716fddd23d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246d4fbd-9a14-495a-a336-0c5bec4362d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bd044a-887f-4353-b592-71dc1dc5f35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce133b1-6c6a-4445-ac1e-154fa68152f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c45eb0-b8a9-4f01-9c4b-3aec4ad78abd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22f0010-e52e-4d80-9a01-326ae05f94be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b8c7ce0-82d2-4542-8763-6cc1c49acdc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39fe7cb-530e-4f75-96a5-417fb3ea27d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec91dfa-4248-488b-88d5-3b7ff597a252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5614f69-e3a7-4dac-a013-9f20f49ff911",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d52719-823d-47d0-9997-e4c9f01667b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718a6997-2485-4644-8c6a-7fb9b59ebc33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dce87d-89ed-4cb3-9f4e-ade0428aac2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6c92e3-c952-427e-8b5c-d1f0f5d43cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fab8df2-5a11-45b9-b31c-f8281984677c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12671f41-7dd4-4f8f-a3b0-35bffcae8699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7d898d-4df4-41a4-8b5c-1101a478f78d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ab09ad-4432-4c78-af60-90b482d983ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7052ce-763d-4f79-b99d-c659437903f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd18d82-9dba-4394-95dc-2b2eed793aed",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17065a4d-6642-4170-bcd2-55f016e989cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59396186-8808-4dff-a6eb-414aef86f5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77c5425-2bad-4f5a-8486-872d40910fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1f052a-55a2-450d-8e26-618fb5d20f9e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85fb34ac-7a53-4351-9be5-9bc895743f41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "768f4c87-2c6d-4b6c-88a4-d1ef8dd93047"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8e77e37-c279-4602-805c-0175fc1a8c16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f7bee63-3147-46b9-834f-b281af557228"
                    }
                  }
                ]
              },
              {
                "id": "11cbd348-0ceb-483f-9da1-721a3ab51b66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b57f74e-0444-4fc1-a2b5-6c15854d221d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104432e2-7d80-4fda-820b-cb58655f8645",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2e73c29c-3005-4b38-b338-ea494d8d360d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbad1d94-eeeb-4934-8d36-1d156012b1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd8fb577-8d82-4e64-8f52-ace785d81745"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ffb45fa-58b8-4062-a7da-bbcd37ff54e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99503b78-d763-41a8-bc0e-330b2d3c0196"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5c5724b-70a0-43ac-8032-67cf4d891f7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51eb3b7f-abc0-4472-884e-d0695ef44a3e"
                    }
                  }
                ]
              },
              {
                "id": "7231d60d-4157-4ca2-b3e5-233660eacddb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6400ad21-9ba5-4709-b9a9-9f27f38c4fd8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c104cdd0-8ac0-4e9b-8055-9007a9a7f0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "75802404-58e3-4fdc-8bed-cc1bdc328883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76fb68e-3464-4981-a28d-f07cad7005d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0870a10-6da3-42b8-9b2e-4c76e83a7ea1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d48d2b78-018e-4bf5-8640-3acf6869da26",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08154665-d037-46b8-8ce7-a72033a69cd6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d90226d3-e788-40a5-a192-615c337449fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "933e7bff-8d7b-40e6-be3c-39793175ab8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ae8bc8e-f950-4a7e-9165-47cd15f51d19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8de9121c-318f-4e85-8476-6f024ca562da"
                    }
                  }
                ]
              },
              {
                "id": "1f2f77bc-65ef-447c-9b23-ad278912b00d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02754e89-51c1-43df-948b-739e233cbfbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "80edadf3-4bfd-4136-9ef3-6bb04f56c04d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe978c5a-fc52-4516-8fdc-121a44f9c5f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc5bc244-16b3-40b1-b107-9da164207c25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "823f2822-d79d-487f-81aa-6e71b39ae7bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "04e36383-f0b8-4643-978d-980b0cf8d2b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a8b04ed-7e94-411d-9aed-1fedfbe88423",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0acb6518-8d10-402c-8602-109f0cece0f1"
            }
          }
        ]
      },
      {
        "id": "84bf7c3c-ed8c-4adf-bf24-064f1d338d74",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8eebc35e-969e-4882-b15f-5b04c00a1c59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f4b7920-fc8c-4bf3-8424-14c50b7b4b3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22f28f92-d3e1-4f02-8f40-5b7fab090efb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d085148d-420c-41a4-82a1-af6f151b7e32",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "743feb98-cf18-41ca-8b3c-4a1be0bba7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6823d79f-de7b-480e-835d-db8bc572f8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68561108-01d9-42b9-85e2-79827cc94816"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fb47547-1dd2-42ba-a817-02a86d3fc2db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a48b4645-b403-4de2-b714-2d8a4bfac1a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0911822d-0398-46e2-860e-22d70a06e3bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55132b6b-28c6-40e5-bf2f-5f726af8c774"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba3e3583-4201-44b4-a23a-2c2cc38aeb9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d0b55555-7938-4cf9-8bd9-60d04b976ce9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f358961-d773-441b-8ad8-901577ebbace",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c213a6c-a586-46b0-9104-f84e5160de07"
            }
          }
        ]
      },
      {
        "id": "a1640c23-b7b9-490a-a7b2-b454ab423004",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c911c5da-c4e7-4fae-b8c5-9582e2d12288",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b6ffedf-c312-4d39-8b95-8d70ac4d16ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c28dd00e-e136-42cd-8838-65892ea15e8b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e39a97d-29d0-42db-9354-a7944cc5d3f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "930af6a6-8e81-4b1a-89bf-3dc723874d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d115ba-d896-4a6a-a38b-8fecced658bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0589d644-6a92-4dc6-b895-f5e8532ff83e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db2a50dd-c935-4212-a510-f1bc59a6b8fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b71e6829-8a69-4132-b171-e5992fcc1bbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13503f8b-4795-40b2-96be-91b6ffadb03f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f060fc16-957f-4e6c-938e-4d41111c41fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82d1f2a9-653c-49bc-8b9a-a0ccffed5da3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2255d7a-e4f7-4528-92e0-46a353b502c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d50cdaf-090a-455a-aa46-d5219f914c66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bfea231-e843-4497-b859-f997fbd6e3b7"
            }
          }
        ]
      },
      {
        "id": "f1be05d5-44ff-4391-a7b1-003633e57eff",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1502f67b-e3d5-41e9-be2b-e5d99d9381ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "738adc09-c341-4513-b35a-f5ce3df378b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23c621a6-19d9-4cfb-b41b-8fa9b4f3934a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e565d84b-2c4a-4cac-84e6-8b021e0df36e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a02e5212-e0b9-421b-8ff0-58c4d72ae781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c35a158-9c89-4c6e-9f5d-a2599cfd0266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3bfbf38-a2bf-46f5-bc47-610da41a1cca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57ab31f6-9b65-4938-a521-9c576b0afb30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c3341e6-70c1-4bf3-a53a-e76babb348a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a6daf63-5ba6-47f8-a824-afeaae29d201",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59052417-a580-461b-a3ec-1103565420dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dbbb963-7f53-4eea-b016-99b1a61bd24a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd149c61-12b8-4b66-a774-32af94a5b070"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31eab6dc-5d56-4174-a825-87a577237b60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b419b31-eb5c-4c3b-bffe-d3cea8bf7f36"
            }
          }
        ]
      },
      {
        "id": "fb8fa3b4-906e-4728-a9a8-65cf1f18083e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10b45781-b79e-48e4-ad3d-225925f66293",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b50d458a-02eb-407d-8cde-6091c838517d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a610c666-c958-4486-a01d-541bc1fce7c6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b982020-a7e3-4bcb-af7e-6eaad1e125e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cd70bea-80bb-4feb-b89c-c73243c02a54",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 235.07936507936506,
      "responseMin": 10,
      "responseMax": 4331,
      "responseSd": 679.809148090969,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716480320305,
      "completed": 1716480388031
    },
    "executions": [
      {
        "id": "ae8f45c4-5054-41a2-92d3-33d88e98718a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "90a50202-c53a-41d4-9953-09c4bdf17bc5",
          "httpRequestId": "46b3bfee-9cf8-41fd-9f53-0a242097d318"
        },
        "item": {
          "id": "ae8f45c4-5054-41a2-92d3-33d88e98718a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f4a68e9a-e74a-4e76-82b9-d3b0e108f041",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "dcc818fe-e37d-4f60-bda3-5006d4941b3f",
        "cursor": {
          "ref": "b1226c9c-034b-43ed-9669-7bb3cbc68635",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f199283b-a043-4909-85cd-cabe6a289c57"
        },
        "item": {
          "id": "dcc818fe-e37d-4f60-bda3-5006d4941b3f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "998cfde0-b18f-4a6e-9afc-cdc9646164fc",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "7aa19614-7299-4dbc-8177-140da59c69ad",
        "cursor": {
          "ref": "aeeeab98-3c76-406d-b67d-edf710924da4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "262da6db-22b6-4a44-b66b-2d43baec1e4d"
        },
        "item": {
          "id": "7aa19614-7299-4dbc-8177-140da59c69ad",
          "name": "did_json"
        },
        "response": {
          "id": "8ea1d483-9894-4903-b216-81978db5fb72",
          "status": "OK",
          "code": 200,
          "responseTime": 518,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e312ec-2abe-4d23-92fc-239695f1b0ba",
        "cursor": {
          "ref": "6007a397-f083-4ef2-b8ed-9fffc6bfc8aa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63eab2e7-6905-4a64-adf9-3536eb2c8843"
        },
        "item": {
          "id": "54e312ec-2abe-4d23-92fc-239695f1b0ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d3eae2d-160c-4829-a489-286d85a56c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2411,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e312ec-2abe-4d23-92fc-239695f1b0ba",
        "cursor": {
          "ref": "6007a397-f083-4ef2-b8ed-9fffc6bfc8aa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63eab2e7-6905-4a64-adf9-3536eb2c8843"
        },
        "item": {
          "id": "54e312ec-2abe-4d23-92fc-239695f1b0ba",
          "name": "did:invalid"
        },
        "response": {
          "id": "1d3eae2d-160c-4829-a489-286d85a56c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2411,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd304f6-adf0-457f-9803-2a3695bd7c18",
        "cursor": {
          "ref": "67331c17-ab45-4f07-9db0-50d0dedb8076",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3a01e1ba-7359-40be-98cf-76e8b0a00fa5"
        },
        "item": {
          "id": "1fd304f6-adf0-457f-9803-2a3695bd7c18",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "94db54e4-8098-4512-9620-3c535626bdb8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2584,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a4e2d4-8958-4336-b960-973d50760a15",
        "cursor": {
          "ref": "c140df4c-8bef-47a2-b103-42869093a643",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "281c811b-55a3-4902-af01-5887d7f17ead"
        },
        "item": {
          "id": "c0a4e2d4-8958-4336-b960-973d50760a15",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "25ba9354-46b2-4344-8570-395101ba47d3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2540,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c393a4-1223-443d-be16-8b7f439d499d",
        "cursor": {
          "ref": "54aeb399-97c8-4891-851e-53300160365c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7fe3748d-07d7-4160-92e6-6e862387bd09"
        },
        "item": {
          "id": "c1c393a4-1223-443d-be16-8b7f439d499d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c5790403-8393-4d17-b19b-4771b7369655",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469646fc-8dcc-4a90-8c6e-530ca5ab5121",
        "cursor": {
          "ref": "28c1a36c-50b5-4c00-8063-850c2d7b5473",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6fecc148-b6c9-49f0-a179-26119cd9a616"
        },
        "item": {
          "id": "469646fc-8dcc-4a90-8c6e-530ca5ab5121",
          "name": "identifiers"
        },
        "response": {
          "id": "0d815133-af37-4b78-aa49-9896f3eaad18",
          "status": "OK",
          "code": 200,
          "responseTime": 2167,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3526e02a-fad4-4c1f-b685-cd4cb8b48496",
        "cursor": {
          "ref": "912e9141-4682-46b2-b5a0-5272bd099b78",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1d684b34-95f6-4f4b-bb1b-984f82afc41c"
        },
        "item": {
          "id": "3526e02a-fad4-4c1f-b685-cd4cb8b48496",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c4fd6cf0-afcb-4443-9ba8-99c7136a6e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764c11b9-08e8-4d19-ae94-cf76df641287",
        "cursor": {
          "ref": "382e6c71-a0b0-4d0b-98df-cf4e2771da10",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "000f5981-6f12-4aa6-a6ec-db9e95aded80"
        },
        "item": {
          "id": "764c11b9-08e8-4d19-ae94-cf76df641287",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ae4f34ce-13cd-498a-88ea-e02968dce8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b4015d-ef98-4940-a18e-03d3564df8f8",
        "cursor": {
          "ref": "2b8d6d27-871c-4c54-9000-429a4cd5c8d5",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1fd5d3d9-cb5b-4503-90c6-4eec806a5638"
        },
        "item": {
          "id": "f8b4015d-ef98-4940-a18e-03d3564df8f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6a5f8780-ea86-4620-aa3c-3877f321fda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b868ecc-653e-47dc-a5b7-9c008fafb09a",
        "cursor": {
          "ref": "3286bd47-e72d-4836-b4f6-61a32c5a8421",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a7010d5a-a308-47fd-9d2f-2852389c41d0"
        },
        "item": {
          "id": "4b868ecc-653e-47dc-a5b7-9c008fafb09a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "746a867a-00b4-4747-9846-ee05510f2ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12528630-3eb2-49c8-9ebd-415df9601a1e",
        "cursor": {
          "ref": "90dbacbf-062a-4ae1-8fce-37c4fb1834e9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5fbc5fef-eb60-41be-a014-abef3c2d15cd"
        },
        "item": {
          "id": "12528630-3eb2-49c8-9ebd-415df9601a1e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5eb0b521-ecb1-454c-bdcc-96dd2f739964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a83d619-68d4-4dd6-aa0f-3386ce3099ff",
        "cursor": {
          "ref": "96da4315-9f1c-4e64-914a-74dee6d6d7ae",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4c4f221e-ca75-480a-b2cc-8ce8ec9b5a26"
        },
        "item": {
          "id": "8a83d619-68d4-4dd6-aa0f-3386ce3099ff",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8c61ee2e-1946-4522-9850-fedd4941c81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a35b45-5eb9-4dd9-9926-1301a68d4d6b",
        "cursor": {
          "ref": "f168f96a-5dbc-4c29-843f-81acd9c5f1eb",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "36a19645-63ac-44bd-906f-d8f6d98404e3"
        },
        "item": {
          "id": "23a35b45-5eb9-4dd9-9926-1301a68d4d6b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "58566e7b-9c4b-4614-9500-9c39bdbe625c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bb1448-5a9c-430c-8a77-017044daa677",
        "cursor": {
          "ref": "86648bd1-3ed0-4935-9701-511ef64350ab",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e914a5f1-b512-433a-b4b9-d3415c0c4884"
        },
        "item": {
          "id": "d3bb1448-5a9c-430c-8a77-017044daa677",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "296a26b1-edc0-4b6c-b409-14e072f35be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611ab43-ceda-40c0-b3c2-6a4b181bd63a",
        "cursor": {
          "ref": "18550387-18a7-44fb-8533-87402775772f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "76baeea2-3320-4c8a-846f-349b92d0992c"
        },
        "item": {
          "id": "7611ab43-ceda-40c0-b3c2-6a4b181bd63a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2fb04ca9-d4cc-4e78-9656-dd48a5a18b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b36805-b135-4135-89df-88069b1542fe",
        "cursor": {
          "ref": "58f67daa-d513-4742-8a2b-be77ea9ac23e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2cc157fb-9315-459f-80cc-658e20d7129c"
        },
        "item": {
          "id": "c7b36805-b135-4135-89df-88069b1542fe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f1745e4c-649b-4814-95f1-6b1e5ff6913a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392f7367-ba90-4e42-891e-842139d84245",
        "cursor": {
          "ref": "d7c4849e-2ca9-4fa4-8602-80392dc46940",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "da4377be-fe02-41e1-9e4e-e9090fc14c2a"
        },
        "item": {
          "id": "392f7367-ba90-4e42-891e-842139d84245",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "71f0dfc2-6c6e-40d4-802c-2109fc16a8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d87ba0b-3888-48f8-9673-0be438516111",
        "cursor": {
          "ref": "58b84a7b-180b-4d1e-a322-c45d43182e28",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ee5708ec-63ed-436c-8abc-bc02859ce401"
        },
        "item": {
          "id": "5d87ba0b-3888-48f8-9673-0be438516111",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "40995f31-9118-4bb7-9758-bd789f137767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa870f0a-23de-497d-9c6d-38c994400842",
        "cursor": {
          "ref": "8e39ad0e-5358-41d8-87f5-72d932557ec1",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cf45272d-d800-4923-93f8-adb8535155c2"
        },
        "item": {
          "id": "aa870f0a-23de-497d-9c6d-38c994400842",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "02c7294d-29a0-4385-a520-3157e52ca3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164ae928-db29-41ef-ae5a-fd85fc9d143a",
        "cursor": {
          "ref": "7debd8d2-2152-494e-8e29-7ff921b9c6d3",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be0d2dc0-6261-4099-b3da-a2520a1ebfcb"
        },
        "item": {
          "id": "164ae928-db29-41ef-ae5a-fd85fc9d143a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8646f77c-b5be-4bfa-81bb-1e34e311c50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e38e7ba-a269-4b8e-8449-a1d8f2d08fa1",
        "cursor": {
          "ref": "f2648678-503e-414b-bb99-fd99d346553f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "36d7b69e-9dcc-47a5-aedf-ba8daf6ba3b0"
        },
        "item": {
          "id": "9e38e7ba-a269-4b8e-8449-a1d8f2d08fa1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "60da6cd0-db29-4b5b-8408-f37cc1eb7690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a83802-7c5a-44b3-908c-2ef22544e62f",
        "cursor": {
          "ref": "c1504d7f-130e-486a-8f15-da2b10567950",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2dcdbbbd-b3ad-4059-955d-476f793937c7"
        },
        "item": {
          "id": "f9a83802-7c5a-44b3-908c-2ef22544e62f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4f546472-78b2-4f63-805d-2ee84071c6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2760c4d5-88d5-4348-aa6e-fceccb400527",
        "cursor": {
          "ref": "d0fc2b41-35f6-47a7-a392-1d07dd144f78",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7ba8b9bd-44b5-4c81-ac3c-729669b29c31"
        },
        "item": {
          "id": "2760c4d5-88d5-4348-aa6e-fceccb400527",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "72aad419-839b-4d6f-af16-09fb8f60c4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b28e577-1456-4e28-b753-112cf312cdb0",
        "cursor": {
          "ref": "4a5bd765-f701-4ab0-8536-1440b1934f2c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bfb72499-8936-4116-ab14-8ff58bdb2897"
        },
        "item": {
          "id": "5b28e577-1456-4e28-b753-112cf312cdb0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9652140c-1072-4fac-b2e3-74fc124211db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5193d537-bfbd-47a2-a161-09b2b2151521",
        "cursor": {
          "ref": "0580aefa-ef7a-4ec5-a887-337c5c347181",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3c2d9f27-7c59-4268-9556-27f778e60104"
        },
        "item": {
          "id": "5193d537-bfbd-47a2-a161-09b2b2151521",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1fea0bab-bd3e-4428-8289-9c08fce579bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2618c7-89fd-45e9-9c1e-63aa47a12f26",
        "cursor": {
          "ref": "c4826bdf-4e4a-4b83-9281-f73a508b2bf8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1e962c4a-83ef-4d33-ae3c-f8beba2f61ac"
        },
        "item": {
          "id": "3c2618c7-89fd-45e9-9c1e-63aa47a12f26",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0d67e942-e46e-49dc-b8c2-3c69aa991aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df3cc04-906e-4743-92a9-88732ddf86fb",
        "cursor": {
          "ref": "5aed84f7-5ed3-4951-9581-c86e71474a3b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a3f3529a-809d-476f-8410-56eaab0447d8"
        },
        "item": {
          "id": "5df3cc04-906e-4743-92a9-88732ddf86fb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2c66bea3-ee90-42c9-8fc7-b08d034ba547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01d53e3-fead-4bc6-a813-2e013c654665",
        "cursor": {
          "ref": "701e70de-63f8-4559-8dcf-a4c8904f6bbc",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d247d6c4-59d0-4186-81d5-5302f0e7715f"
        },
        "item": {
          "id": "c01d53e3-fead-4bc6-a813-2e013c654665",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "df514027-0b39-46e7-8119-b42966470d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11714ac-eb13-4e42-84ab-909f070905c8",
        "cursor": {
          "ref": "85fb78d5-ef3e-459a-bb73-56772d898d43",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "937c7b64-92ad-4f4b-bc4d-57df4308493f"
        },
        "item": {
          "id": "e11714ac-eb13-4e42-84ab-909f070905c8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1c11237e-29ae-43df-84a1-a87e3a0fb9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6424a35-5e11-4287-af9e-a9b7890bb75b",
        "cursor": {
          "ref": "ae1be177-0474-40c6-a497-ae756a2f533b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f2b6415a-5683-4ff8-bbfb-5370d3c59bca"
        },
        "item": {
          "id": "c6424a35-5e11-4287-af9e-a9b7890bb75b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "600fe955-f262-4381-b542-54e6b97fb345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e4abd5-3f77-4cc4-bdcf-06f99611e91e",
        "cursor": {
          "ref": "f3063307-6d03-47ee-a10e-c63bf8dc68e7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7df06889-3609-468f-aeb3-6858ae3038ef"
        },
        "item": {
          "id": "73e4abd5-3f77-4cc4-bdcf-06f99611e91e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "07398e17-6fd9-4958-b5a4-af5bbf165ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a50c46e-f9e8-4b92-9dba-e7b14a7f1896",
        "cursor": {
          "ref": "3b40a0dd-4663-4d16-bdf2-4cf0e086edfd",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "42b7ed79-d29f-455a-b77b-781430f2cb67"
        },
        "item": {
          "id": "1a50c46e-f9e8-4b92-9dba-e7b14a7f1896",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cd7b5d13-f228-4295-b7db-af4f6dede7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14d0e16-dece-44f7-bb9a-abb4a9de474c",
        "cursor": {
          "ref": "e5ff7387-3c95-4bf2-992c-eaf9f451074b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "33187372-fdfe-46d9-9084-e24202a9b924"
        },
        "item": {
          "id": "f14d0e16-dece-44f7-bb9a-abb4a9de474c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f79cbe1d-1be5-4884-bd6d-6c533b2a2881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d8cd8d-6c25-43dd-9693-efcb61cd857a",
        "cursor": {
          "ref": "361c7b6c-0335-4838-9690-5764a5873015",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "845b3aa7-42c2-49dc-aac5-79b8bab31085"
        },
        "item": {
          "id": "21d8cd8d-6c25-43dd-9693-efcb61cd857a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fb2ba3fc-93f7-4b67-b01a-b8ff27b9a9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b98ebc-8aad-4962-b2fc-b6d0b376a67a",
        "cursor": {
          "ref": "c364ed54-e80c-4381-b3cf-6a3a684058ac",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1b38a695-c68b-49dc-99ab-b2a10ac78763"
        },
        "item": {
          "id": "09b98ebc-8aad-4962-b2fc-b6d0b376a67a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b35102c8-eaba-4c4e-a333-f63880b17a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db90f6b7-7f3b-4d41-9d83-0eccaaf84895",
        "cursor": {
          "ref": "172c77ac-62ea-413e-92fc-3fbb5a521e39",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "09acd83c-3a7b-4966-8c70-9262c122c271"
        },
        "item": {
          "id": "db90f6b7-7f3b-4d41-9d83-0eccaaf84895",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cf60dacd-555f-4c4a-a849-afda38146de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ebdc67-c934-4496-8d88-0ed1654ea6ba",
        "cursor": {
          "ref": "3347dc88-fea7-4bbb-908d-3305ad9b5064",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ffca2aac-165c-4f73-bb4c-31b31bbcb51c"
        },
        "item": {
          "id": "b2ebdc67-c934-4496-8d88-0ed1654ea6ba",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d42ec381-7809-4a2d-becf-f84fafdae2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfd5bf1-615f-4cd6-b9e3-6f946c5e4221",
        "cursor": {
          "ref": "48e1b04d-0bd4-4284-875c-1f4710395ae9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6966508b-3a56-4e70-a4c2-f1f92d57a868"
        },
        "item": {
          "id": "dcfd5bf1-615f-4cd6-b9e3-6f946c5e4221",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "38d3a824-b831-460b-b3f4-c2ac0c8cc0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3223f3-638c-4bc3-8df4-915f27f608ab",
        "cursor": {
          "ref": "ea3700b9-ff10-48d7-aeea-0af2d7087013",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "268f4eec-a933-4381-806b-35ed43589c1c"
        },
        "item": {
          "id": "2a3223f3-638c-4bc3-8df4-915f27f608ab",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4d5c4e39-075a-4b9a-aa34-577c298892d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a327d8-3cdd-424d-ac05-f4552340d941",
        "cursor": {
          "ref": "3917cb48-7eac-48df-b944-3d39abadd8af",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c626ac5c-96e1-45ba-bc52-fbb22ea2fc91"
        },
        "item": {
          "id": "41a327d8-3cdd-424d-ac05-f4552340d941",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e096541f-1e09-48ee-893e-65ba535bfb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f41de3-f92a-483c-acc5-85533c5a7332",
        "cursor": {
          "ref": "f144d956-e2e5-4968-b7d6-10c800a7e155",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1cec524d-a026-4896-a2d3-b6418322492c"
        },
        "item": {
          "id": "75f41de3-f92a-483c-acc5-85533c5a7332",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "170437f1-370e-46de-8409-3f7b93219f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65846166-7099-4d02-83c5-e2d428a768c4",
        "cursor": {
          "ref": "1f7c0e79-70fd-4bb0-953a-d4d062dca5ac",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d90a8fae-128a-40fe-a3e0-f1c96fa0a286"
        },
        "item": {
          "id": "65846166-7099-4d02-83c5-e2d428a768c4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "90bd716f-d53b-4a2a-a4f2-cd04d50ca694",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2653d0-a301-44fd-b492-d385c36f2d77",
        "cursor": {
          "ref": "289799d3-acf7-4011-a50f-d4a8c98d1d0c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "879f29d4-6ffb-42d3-8d9a-6c0bc32e9eb9"
        },
        "item": {
          "id": "7a2653d0-a301-44fd-b492-d385c36f2d77",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e7487c18-5364-4418-b7f3-31a99b932b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1c42b-ded8-448b-ba80-36efb58f8ce3",
        "cursor": {
          "ref": "4cdfb09f-b972-4b46-a8fe-5455118d1d66",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "28c9962d-5971-46e3-aaab-fad4a2d362d9"
        },
        "item": {
          "id": "baa1c42b-ded8-448b-ba80-36efb58f8ce3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "00342a43-fccc-4161-b54a-932f86684766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460ea3fc-5a58-4a30-b188-edc42794607e",
        "cursor": {
          "ref": "00aff241-4169-4f46-a2c1-69c1b95f1332",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4a59f01c-d15c-4c92-8c85-da6c835a8b1f"
        },
        "item": {
          "id": "460ea3fc-5a58-4a30-b188-edc42794607e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5f863a10-6295-49aa-929e-9fd57419333f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5386e2ba-8d2f-45c2-b633-2f3b670da62b",
        "cursor": {
          "ref": "8deaec96-9dc6-4478-9b50-2e8977b774f5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3fdd8696-bbad-422f-be1b-8724b191532d"
        },
        "item": {
          "id": "5386e2ba-8d2f-45c2-b633-2f3b670da62b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "baeb8320-406e-4d9a-a06b-d87388d39e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cf6ceb-47c0-42f1-af9f-739f9b33a2a3",
        "cursor": {
          "ref": "70049c58-56fc-4620-973f-0ad7fccb6d1f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b71e12d3-aa43-4640-b4ee-d0f0f9895e31"
        },
        "item": {
          "id": "d5cf6ceb-47c0-42f1-af9f-739f9b33a2a3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c5576746-89e1-4a0c-8db9-4371731eeb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ee7e1b-2a80-45ad-b6cb-e1be0d2d55c5",
        "cursor": {
          "ref": "b28248c2-246a-42b5-829e-862a131b08be",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2771a2dd-dbd7-4951-9209-598ec921a593"
        },
        "item": {
          "id": "f1ee7e1b-2a80-45ad-b6cb-e1be0d2d55c5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d6908f21-9794-42a5-b2db-d1c11607f1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31c70b2-0cab-4532-a8f4-7a4affc30cbd",
        "cursor": {
          "ref": "cbe89706-1a8f-4f9a-9bae-80d94c07857b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2ab07c62-1505-4e89-81ad-46ae9d5409f4"
        },
        "item": {
          "id": "e31c70b2-0cab-4532-a8f4-7a4affc30cbd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d8933aa1-f669-4782-adff-ae0522326bfe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5732148c-da03-4300-845b-afce581aca48",
        "cursor": {
          "ref": "1fb235ae-8bb4-41a6-8515-f2eae9d1ff6c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4e9a80e0-71cb-4441-bf12-bd615ed927dd"
        },
        "item": {
          "id": "5732148c-da03-4300-845b-afce581aca48",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "69c8807c-d08c-4201-9272-d193fe7acb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab306af3-8aee-4e75-8e50-babb57995d91",
        "cursor": {
          "ref": "34e9645b-51c5-44a6-949e-17eef0182961",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "df6d6408-f97d-421b-82ec-a4db49c55f7d"
        },
        "item": {
          "id": "ab306af3-8aee-4e75-8e50-babb57995d91",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "53e8e9dd-139b-4f2d-b1fa-513e97847b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1391f996-6c8a-4cec-8964-1471943944f9",
        "cursor": {
          "ref": "1d9af605-9735-49de-a898-5a1b05021f0f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "97015380-4d2d-4891-9c9c-0a21ffd55d35"
        },
        "item": {
          "id": "1391f996-6c8a-4cec-8964-1471943944f9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "045168e2-e145-491d-ae25-825c62b7e664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a3aaa0-daf5-4e32-9577-a753162fe771",
        "cursor": {
          "ref": "0a526419-e0af-49ef-8a09-702438a497c7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "31295afa-e31f-4551-a4c9-7ddb6306c1be"
        },
        "item": {
          "id": "97a3aaa0-daf5-4e32-9577-a753162fe771",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c918e460-3b69-4eb0-94cd-fac809624060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3664aca-e2d9-42dc-93df-ef3aa8cfd998",
        "cursor": {
          "ref": "677750d2-821f-49ab-983b-2d0183e90e13",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c22e7584-0e5b-4bc0-b128-17f1c2a2165e"
        },
        "item": {
          "id": "b3664aca-e2d9-42dc-93df-ef3aa8cfd998",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05c366be-301d-4d37-bf43-795926c8003b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c42416-7e19-4be0-8622-843f517c9c54",
        "cursor": {
          "ref": "efc38104-4ac3-464a-9f1f-88a0818cc4b1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "81b7e5d1-cb7a-4662-a830-f5bde3d66083"
        },
        "item": {
          "id": "63c42416-7e19-4be0-8622-843f517c9c54",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d7c79973-5521-4c33-b4f8-1997317e9c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d22cbc-b512-497d-8ba6-684fe24f6acf",
        "cursor": {
          "ref": "62a117f5-5765-4e67-af1c-9faf8df911b5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fe165d57-926a-480f-a4eb-2378fa7091be"
        },
        "item": {
          "id": "d4d22cbc-b512-497d-8ba6-684fe24f6acf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b903e878-1a58-4047-be60-65d97053a778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c009b1-60ee-46d8-be85-6be5a9474090",
        "cursor": {
          "ref": "ad2eb24d-f5da-4652-a666-0ca436ba346f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5fa451ec-f3f2-4ae3-8079-a915bd91927a"
        },
        "item": {
          "id": "92c009b1-60ee-46d8-be85-6be5a9474090",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cb9dfe58-293e-495c-b6c8-89ebf72399d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22ebdc7-c0e0-4cb8-ae21-88d563c26419",
        "cursor": {
          "ref": "5539181d-7f9b-4c6e-b867-23cb12cee44d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bdf4c1e2-b345-42d0-9e0b-09d2da9aedea"
        },
        "item": {
          "id": "b22ebdc7-c0e0-4cb8-ae21-88d563c26419",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8a3c2984-4493-4e1f-a0c6-bcfaa291779f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06579595-26d0-44a1-8275-f6c63772739b",
        "cursor": {
          "ref": "3cbd00b8-8858-465b-9d50-b3e2419fb43b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aade9043-28e5-4ca6-b1ef-091a2acbf16b"
        },
        "item": {
          "id": "06579595-26d0-44a1-8275-f6c63772739b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f8bab090-fdd2-441c-82c7-eb79ebdbb0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95c20b5-7e44-4390-b9b2-654590f7abd5",
        "cursor": {
          "ref": "bd39fe75-9f54-4535-9a6c-1e294eeada40",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "972522f5-16a3-4c02-9d5c-a0e773337fcf"
        },
        "item": {
          "id": "b95c20b5-7e44-4390-b9b2-654590f7abd5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bd685d12-7d38-448c-9e90-7b9415e39b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdea805-eb05-4a35-8b23-951926d01df1",
        "cursor": {
          "ref": "c7bea30f-a322-4475-b16f-5a660d22d665",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8c989ceb-c727-4a72-917e-532de855f216"
        },
        "item": {
          "id": "ecdea805-eb05-4a35-8b23-951926d01df1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6cd51bc8-0975-486a-acfe-5528c70ef858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad93830d-b7f5-4e19-b904-369c1c5303fd",
        "cursor": {
          "ref": "8ce1cfce-d463-45c9-b5e5-3208053293f0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2c9a7786-0512-4951-8b6c-e6d67d564827"
        },
        "item": {
          "id": "ad93830d-b7f5-4e19-b904-369c1c5303fd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f974dffb-df24-4657-9495-3d6a92e286f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254d060d-3cdf-453f-9b5f-c97cec91d5da",
        "cursor": {
          "ref": "f6eb20e6-331a-4e8e-a639-618da75c32b8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "475fc67e-9ee1-49a1-891b-01866dd53d5b"
        },
        "item": {
          "id": "254d060d-3cdf-453f-9b5f-c97cec91d5da",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "11b5ecb8-5602-4077-877c-1db1204d44a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec81f1a0-1dd4-44e8-96ee-ff15869c118f",
        "cursor": {
          "ref": "e0d7063e-71ad-4d14-9b54-00ec48e9a9a0",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c06c3b8c-20ba-4280-b8a8-9b479d5612a2"
        },
        "item": {
          "id": "ec81f1a0-1dd4-44e8-96ee-ff15869c118f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3a22521a-84a6-4dfa-8031-908b978fe020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c23ccb-ff54-47cb-a078-78edf03f0079",
        "cursor": {
          "ref": "454130e5-290f-46ba-8035-f28dce29f920",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90c441fb-3455-449c-bc4f-47d69fec1d2c"
        },
        "item": {
          "id": "65c23ccb-ff54-47cb-a078-78edf03f0079",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bbacbda5-7e83-4721-bcb5-a2ef37ba4cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532d68e2-b441-486f-b1f2-99ff1cbeb554",
        "cursor": {
          "ref": "bc46df56-60b4-4745-ba4f-98b8edddbae9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2406a3dd-1ab2-4267-a03d-9c63b0bea84a"
        },
        "item": {
          "id": "532d68e2-b441-486f-b1f2-99ff1cbeb554",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "96d70b94-9dc7-4378-952a-22d8b37ebcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6fd5a6-8582-4457-a24c-f7b7b8ced806",
        "cursor": {
          "ref": "89bc6598-1bfb-42ed-b878-67887d4001f0",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b4b101f2-17cb-4651-ab72-6b36b219e6de"
        },
        "item": {
          "id": "db6fd5a6-8582-4457-a24c-f7b7b8ced806",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ec57c413-179e-4518-8a36-fd1047028879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1660d7f-652a-4f48-a1b1-f521888eaf4d",
        "cursor": {
          "ref": "b68c15d6-37fd-4a3f-9e24-5987888e404e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d65148d8-46f6-4b35-be20-e47053ab61d3"
        },
        "item": {
          "id": "c1660d7f-652a-4f48-a1b1-f521888eaf4d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b78d419f-6901-433e-bcc5-874db6f24936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26a1ab6-98b5-411f-a160-4beecd818211",
        "cursor": {
          "ref": "d5a99c4b-910b-4cba-ba9d-c3693d88a346",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "32038794-6876-4423-8736-6e1b996d3503"
        },
        "item": {
          "id": "a26a1ab6-98b5-411f-a160-4beecd818211",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d9a066f1-ca3a-4cae-9427-72915c3b31e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327ccb85-8684-453a-aae6-c397c0780fff",
        "cursor": {
          "ref": "2a2362c4-b983-4e8f-9197-393fb7e04cf0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "35d5ae07-81b9-4e79-9210-c01ccb2be4df"
        },
        "item": {
          "id": "327ccb85-8684-453a-aae6-c397c0780fff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b92610a3-34c7-4710-a6dc-689d30bacf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ddccbc-d82b-4929-874a-d9ecf3f85570",
        "cursor": {
          "ref": "53940cfd-ad87-44cd-9839-8060be5c2ddc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e0ce599c-fc92-4f26-8d05-2d1f2e2c1bde"
        },
        "item": {
          "id": "13ddccbc-d82b-4929-874a-d9ecf3f85570",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d605634e-65e5-40db-8235-15debeff4bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231fe828-69aa-40a6-b697-f29538041baf",
        "cursor": {
          "ref": "9c9c7c43-fa21-45d1-8f91-3f5cfb2faf62",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c9eeef92-89f9-4be4-8dc6-ae94bac07caf"
        },
        "item": {
          "id": "231fe828-69aa-40a6-b697-f29538041baf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7b88add9-a05f-4e05-8cd1-4e8d6ad19b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c18c90-a9d3-4eed-9bc4-0a82860cba63",
        "cursor": {
          "ref": "08ef0dfc-a48c-4715-88b2-600bdf0598e6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "10fe102b-5219-4693-b567-ea12eecacd3c"
        },
        "item": {
          "id": "b5c18c90-a9d3-4eed-9bc4-0a82860cba63",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8f5cb700-6a63-40e0-ac5b-c0a2bbcceab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b5b306-3fb0-4d78-8dba-baebc2b96ee6",
        "cursor": {
          "ref": "70e5a9ca-d055-49bc-b767-d327a6056057",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "be977cd6-b955-4e95-b11c-8faaff348090"
        },
        "item": {
          "id": "06b5b306-3fb0-4d78-8dba-baebc2b96ee6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "471b0227-ba04-4311-a25e-aab0d9df3012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7ceb70-714b-4914-99aa-c90a178732bb",
        "cursor": {
          "ref": "2072675d-43b8-4b94-af73-8f2d2d589f68",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1c7ab86c-2c4d-4693-a840-a24a63bbc9f4"
        },
        "item": {
          "id": "ab7ceb70-714b-4914-99aa-c90a178732bb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9cfceac4-d010-48ed-9a68-83f8d6ec0e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cf554f-6e50-463f-b970-70b761d07a17",
        "cursor": {
          "ref": "2d0d6eed-bece-42bd-8639-0f945b8da6a4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "71205cb5-5aa3-434e-830c-f6a13f5dbb79"
        },
        "item": {
          "id": "28cf554f-6e50-463f-b970-70b761d07a17",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5d1c51c7-0105-49f3-a212-8c797fb465db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c252a9-7030-4963-b11b-12567deb8fb8",
        "cursor": {
          "ref": "f8987ec7-e9d8-49f1-9ac5-a428ea6a2781",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "edc528b2-6821-4ede-9a19-ae052e2b9f6c"
        },
        "item": {
          "id": "59c252a9-7030-4963-b11b-12567deb8fb8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c5864650-0aff-4104-bcab-cd19491a9454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d91141-18ab-4622-8ebe-11dc3c32d50c",
        "cursor": {
          "ref": "f599f0f0-8c7f-450f-80a5-7c3f7382b2ab",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5784100b-655f-4cb5-9843-8f09f28fa066"
        },
        "item": {
          "id": "56d91141-18ab-4622-8ebe-11dc3c32d50c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b54f8e5f-a3a4-4507-bd4b-68f939d9b865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133f1393-7199-4aa2-9e46-28737b17c20a",
        "cursor": {
          "ref": "305d23db-417e-48d1-a2fd-a2b737225446",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3247e246-470e-4ae5-b113-03c22156235f"
        },
        "item": {
          "id": "133f1393-7199-4aa2-9e46-28737b17c20a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0dc9ffde-fab4-4438-9809-8857da5f2010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8334e269-dc36-4863-9a8a-ba4671bdd55e",
        "cursor": {
          "ref": "fea253c5-32e0-4fb8-9fc1-77112170c49d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8f8503c4-ba00-429c-b823-354698c082ca"
        },
        "item": {
          "id": "8334e269-dc36-4863-9a8a-ba4671bdd55e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d643b6ee-eec8-4431-85fa-07e69b234908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34092ef6-d277-4200-b18e-05756f72a79b",
        "cursor": {
          "ref": "f52a90ff-76e2-4979-88a7-91c19b5e6a65",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "eb3fb555-3016-491b-a828-a5baa7c53a05"
        },
        "item": {
          "id": "34092ef6-d277-4200-b18e-05756f72a79b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c30a9b2e-ecc6-4a79-b584-e15f3137c127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e515ae-79a5-45e2-b0d9-4fa2e77f8f17",
        "cursor": {
          "ref": "03d1278b-222f-4ba2-b0f5-b0355489b4a9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "56121776-f757-4384-ac32-0f4e43f57609"
        },
        "item": {
          "id": "92e515ae-79a5-45e2-b0d9-4fa2e77f8f17",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "16eed621-8968-4328-9d2c-9849994841c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ff5466-deac-4bd4-ab5c-416a9f28c097",
        "cursor": {
          "ref": "ed453cba-e47d-424a-8ab7-b5025d868c12",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "705e3fb3-6321-4490-825b-8611b99f75e7"
        },
        "item": {
          "id": "69ff5466-deac-4bd4-ab5c-416a9f28c097",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4d456aa4-8b46-4704-8b76-ff30307c5d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b9bf20-3b7f-4577-bc9c-c231fcd4ba8b",
        "cursor": {
          "ref": "e9625ae6-f3aa-469d-b29f-3011c56242fe",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "64e07ef7-cd40-426d-87ba-ac781fa8da51"
        },
        "item": {
          "id": "02b9bf20-3b7f-4577-bc9c-c231fcd4ba8b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d2ac53e2-e67b-42ed-885c-8902f6cc4123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8d470c-4005-42a1-b205-3b1cebe5bb9d",
        "cursor": {
          "ref": "80b8ee41-fbe8-4c3f-9d7f-b6e133382a3c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f69ef552-3a89-4db7-83d1-ee02f778f9c6"
        },
        "item": {
          "id": "6a8d470c-4005-42a1-b205-3b1cebe5bb9d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c9d7332e-a72d-4367-8de0-0c45fce7aab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3802c17e-e7ce-4ac0-85e8-550b0627983a",
        "cursor": {
          "ref": "fe998be3-a42b-474b-9a75-d4f0c1d1c6bc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cdeb273e-d7a2-4a2a-9088-9034349a73ea"
        },
        "item": {
          "id": "3802c17e-e7ce-4ac0-85e8-550b0627983a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e9a1604c-02a4-4657-a67f-d3b1cb69081a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a75259-99dd-4de8-a166-1c05aab3e8d2",
        "cursor": {
          "ref": "81b8864a-83c7-4db5-8743-c4ef9ee30a0b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1d8d5ccf-2409-4093-898e-3c9d0a2d0569"
        },
        "item": {
          "id": "a3a75259-99dd-4de8-a166-1c05aab3e8d2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5b298b90-ee9e-4058-8fdd-f0d02d99b088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9537b2-e881-4470-88cf-bca6c493b34e",
        "cursor": {
          "ref": "cff8418e-8889-457c-b20b-8ad1fbdf9cbc",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d57112eb-1625-4279-a434-b3f4d9304986"
        },
        "item": {
          "id": "8a9537b2-e881-4470-88cf-bca6c493b34e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a5fee7ac-ebeb-4fd5-8d12-794de75ef0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c54590-c221-4592-9f26-0854d225050d",
        "cursor": {
          "ref": "95951946-cfe5-4f05-aad4-91800759db31",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fe23e6a4-caab-4509-9812-ef89e3ad6197"
        },
        "item": {
          "id": "f6c54590-c221-4592-9f26-0854d225050d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0873682a-860b-4362-8a89-4d05bd6ed6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfe5a41-4f4f-4aaa-a34c-205c0b8d5362",
        "cursor": {
          "ref": "f216472a-9b39-4f75-b2b3-ecfda8ceff84",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "974ab241-40cc-40f2-9167-f8e58301771b"
        },
        "item": {
          "id": "1bfe5a41-4f4f-4aaa-a34c-205c0b8d5362",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d94a03a8-05c6-4177-a927-619f2462a774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d81a465-a566-4014-bc04-b67b8fb443d0",
        "cursor": {
          "ref": "dbad26cb-bc27-4f6c-b3c5-d817a8367be2",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "468d4b22-ee2b-48fa-bfd7-050f80f6bb30"
        },
        "item": {
          "id": "6d81a465-a566-4014-bc04-b67b8fb443d0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a5fbd59d-a3af-4f0f-9fc2-ec2f7471913c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e6aa86-4872-4e9b-9eb7-5a590f2f9996",
        "cursor": {
          "ref": "9b9bfab6-9ab5-4005-8e4d-1e64167479ed",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2a6e9f84-b5fc-4bb4-9dc3-7ab161dc3268"
        },
        "item": {
          "id": "82e6aa86-4872-4e9b-9eb7-5a590f2f9996",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8bf2ee8d-0e11-4913-99fb-f4026088cd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66856f12-2b61-4fb5-8660-d6188169a301",
        "cursor": {
          "ref": "38acf18f-2a1d-494b-a360-943b3159133a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d6142d77-f63f-4815-88ad-4d2b4021a52d"
        },
        "item": {
          "id": "66856f12-2b61-4fb5-8660-d6188169a301",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "600bc58b-5893-4289-9f59-2226fc22cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a577bb6b-aafe-4662-ac96-62e0ee9e470b",
        "cursor": {
          "ref": "9da58ebc-5f4c-4257-8283-17ff687afb3c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "104b1748-9c1c-46d7-ba97-ba3d195c41c3"
        },
        "item": {
          "id": "a577bb6b-aafe-4662-ac96-62e0ee9e470b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c32e2058-8e54-4d87-9388-58afeb96f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bd5f6f-1062-4ff8-96a9-4504b34d6da2",
        "cursor": {
          "ref": "d610534b-86c2-4a25-902a-67621b18b147",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4c07e50d-4f3e-43a1-a8fd-630eafa37d6f"
        },
        "item": {
          "id": "b1bd5f6f-1062-4ff8-96a9-4504b34d6da2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6a078613-7864-4dfb-9d5b-9119b2f9d5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744d69dc-ff40-444b-80d9-2acf922d9df7",
        "cursor": {
          "ref": "366dc6c7-cfa4-4fad-bdca-174d3ee8dbce",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "31664ccb-ea0a-4b33-83f5-45596df1d951"
        },
        "item": {
          "id": "744d69dc-ff40-444b-80d9-2acf922d9df7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8741508b-e158-4531-a7a5-36f6775e04a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebd35fc-233a-4137-8a73-4bfed6362eea",
        "cursor": {
          "ref": "45c38af8-b440-4d44-9762-38a85185d7e9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dd4cafd1-294f-4b5a-84aa-7540b5317b86"
        },
        "item": {
          "id": "5ebd35fc-233a-4137-8a73-4bfed6362eea",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9fbeff0b-d9c7-476e-8b7f-57bc071e7ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60768612-7812-44c2-bd0b-3e51443aea6a",
        "cursor": {
          "ref": "c7e834bb-9b9b-470f-b3b3-57399b8e0310",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ea855126-bba0-426d-8381-4c7eb89589d6"
        },
        "item": {
          "id": "60768612-7812-44c2-bd0b-3e51443aea6a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a5f6649a-ca4c-4817-9de2-0acde452b686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48f1c6c-32a7-4955-aee0-aa489e47ae3a",
        "cursor": {
          "ref": "4efd756a-71e7-4862-8b3a-1a00335fb1d0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a92bf458-0b70-495e-a725-6a023fd9965f"
        },
        "item": {
          "id": "c48f1c6c-32a7-4955-aee0-aa489e47ae3a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6e7fa690-ea7a-4678-ada0-986ca1bb8ba8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73ba90d-06d4-46fe-a5f7-8625cc91a66a",
        "cursor": {
          "ref": "374567d1-3e7e-43aa-a5b3-f514403360f8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ab7e7527-36f9-4fdd-ad7a-9893a2380584"
        },
        "item": {
          "id": "d73ba90d-06d4-46fe-a5f7-8625cc91a66a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bf90e285-f7d4-43b8-a399-57a082b7443e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e39c4f98-014a-4dee-bbfd-ae1cfca362ee",
        "cursor": {
          "ref": "2bdf04ce-16a2-4e40-a494-e1737ca9adf9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "12eb39de-bcea-4f42-9d80-efa36087a3b9"
        },
        "item": {
          "id": "e39c4f98-014a-4dee-bbfd-ae1cfca362ee",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8331e4db-93ed-4c43-af0c-c871c69cce68",
          "status": "Created",
          "code": 201,
          "responseTime": 4331,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e102d3da-bfff-4578-a6dd-287bb8f6394f",
        "cursor": {
          "ref": "7ca67998-89ff-491c-bf94-aff8dadddaaf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d794b2b6-f995-429c-a46a-f53cb4ddafe7"
        },
        "item": {
          "id": "e102d3da-bfff-4578-a6dd-287bb8f6394f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c389ccc2-5ec8-4fb3-94f0-0ad7ae5a4842",
          "status": "Created",
          "code": 201,
          "responseTime": 3583,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cf0a6f-9a3d-49d0-aada-2ec6e6464b9c",
        "cursor": {
          "ref": "a337eecd-257c-4df1-8df2-245cf71a540c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "576e5d0d-58fa-46b7-9299-0dc699804681"
        },
        "item": {
          "id": "18cf0a6f-9a3d-49d0-aada-2ec6e6464b9c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "81671e39-c4b2-4a29-909b-866bd5fa5c55",
          "status": "Created",
          "code": 201,
          "responseTime": 3656,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "df063676-c724-4e27-950b-6b3a386fafe8",
        "cursor": {
          "ref": "7217fca3-61de-453a-94d9-ab016995e89d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c2308d4a-67ec-4822-853c-77e6a791d190"
        },
        "item": {
          "id": "df063676-c724-4e27-950b-6b3a386fafe8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8187cac9-9358-4c45-aa15-7081f666cf4d",
          "status": "Created",
          "code": 201,
          "responseTime": 3563,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f2620a-2a47-41aa-afae-77995fe76966",
        "cursor": {
          "ref": "b50b7653-2420-4bfc-b6fd-f277066ab83b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "442d2559-b2ef-4a2f-abf7-18b3104443ea"
        },
        "item": {
          "id": "78f2620a-2a47-41aa-afae-77995fe76966",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0d0b7548-ac62-41a1-bfe9-85ffeb0a6e10",
          "status": "Created",
          "code": 201,
          "responseTime": 3642,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-23T16:06:00Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-23T16:06:00Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5463c64f-c4fd-4ef5-b594-97099b30f909",
        "cursor": {
          "ref": "a446d00c-9475-40a8-a8e5-46c8335ced3d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "01e0d345-a422-49a3-a3e3-1efc9b82f6ac"
        },
        "item": {
          "id": "5463c64f-c4fd-4ef5-b594-97099b30f909",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b544a241-6888-4f70-ba5b-a183699a3f4d",
          "status": "Created",
          "code": 201,
          "responseTime": 3684,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fe4673-f33b-443e-9313-5a9f3b933e93",
        "cursor": {
          "ref": "76bab310-5157-42a9-9c76-01c3bc763a84",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ab3d8256-8596-4a03-9f0b-068ae021d2e7"
        },
        "item": {
          "id": "06fe4673-f33b-443e-9313-5a9f3b933e93",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e44d48cf-333e-4df5-931f-bd2677a8992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c80868a-2e24-4748-b18d-328f5acef32c",
        "cursor": {
          "ref": "29839604-0670-48bd-8fc0-56735622e04a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b93cbc67-2069-408b-9d95-88fa83e037f8"
        },
        "item": {
          "id": "4c80868a-2e24-4748-b18d-328f5acef32c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "014ed87e-1703-4173-894b-6dea7aa3f831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74dc67f-d24b-4d31-9271-6840d24175c9",
        "cursor": {
          "ref": "edbc1c77-92ef-4791-9e3b-8292824ec461",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0caa3741-6516-4ff7-8e39-a4bac8b2b518"
        },
        "item": {
          "id": "f74dc67f-d24b-4d31-9271-6840d24175c9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0ea7fff9-77c5-4c5e-b1a3-c73b9ada2fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd88c135-10bc-4b25-a807-07eaf002e88b",
        "cursor": {
          "ref": "1636951a-b4a9-4068-9c13-3015fd27a0c5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "efddfb95-5186-40fa-ae75-98c3d4f4ecf3"
        },
        "item": {
          "id": "fd88c135-10bc-4b25-a807-07eaf002e88b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f1c2e306-a3f0-4185-bd08-ee864b7487d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adb0e0a-b5ec-4088-94d5-5eafb99b6e49",
        "cursor": {
          "ref": "0c9cb658-64c0-43d3-a16b-a07dfc83764e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e72699aa-663c-45ef-8fd0-e10e9e973417"
        },
        "item": {
          "id": "5adb0e0a-b5ec-4088-94d5-5eafb99b6e49",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1d63dcd5-5ea5-4d49-826d-850b62b5c300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eedf1e7-a776-4cfe-98e8-c78395388db5",
        "cursor": {
          "ref": "cdcc3456-2611-4790-b64b-d792c964ecf3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "50d39123-585b-4344-bf98-e6f05cfed3e8"
        },
        "item": {
          "id": "3eedf1e7-a776-4cfe-98e8-c78395388db5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ebb04174-0e55-49d4-a074-7d58fa6e5569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63359ab1-073b-4505-99e8-ea1854ff3709",
        "cursor": {
          "ref": "d2045334-3119-4d9b-8754-32c5988f64ec",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dbcfd876-6a0f-4c1e-a26e-96aeb0e8d796"
        },
        "item": {
          "id": "63359ab1-073b-4505-99e8-ea1854ff3709",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "50d535af-bfdc-4aa7-8a34-c81da8aa8415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c49078-4e29-47e0-a1aa-9a2baf80cc20",
        "cursor": {
          "ref": "5df74a6f-6569-4ced-93cf-1d520ac8c0a6",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7222ad75-3920-41c3-97ae-46f6a496c67a"
        },
        "item": {
          "id": "d1c49078-4e29-47e0-a1aa-9a2baf80cc20",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92a7bd04-4628-4245-8193-1c1115f67d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad83e493-9537-44bf-b092-987326981d13",
        "cursor": {
          "ref": "9b64b947-0fdd-4dea-b854-c33a413b1512",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8f68227f-a234-44da-98ec-244c6c976e99"
        },
        "item": {
          "id": "ad83e493-9537-44bf-b092-987326981d13",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1a5183d8-cb21-4ee5-b871-11a332965f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465fbbe1-2979-4950-8477-dab341fc14cb",
        "cursor": {
          "ref": "c08b8c1c-9a32-4659-b84c-a31d1ea84244",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "98d20c09-8986-43eb-ba5e-0d62faf01caa"
        },
        "item": {
          "id": "465fbbe1-2979-4950-8477-dab341fc14cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cd4062c1-3bab-4516-9813-ba505c732e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a424106-47ef-4c7b-a14c-70bc1f6183d0",
        "cursor": {
          "ref": "a4a1a7a9-32b5-4396-8d6b-877a410e176f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6e82b381-9f49-4e2a-bbea-a735b8b397f4"
        },
        "item": {
          "id": "2a424106-47ef-4c7b-a14c-70bc1f6183d0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c869f792-9d81-4a71-9b6d-66569997912e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53d6d0e-9fbc-46da-b2ad-62f31abeb4a4",
        "cursor": {
          "ref": "8dfdeb6d-260d-4e87-a5d4-a31823d6ba1c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "832ca36f-995d-47e4-a79b-a0bbe38066ee"
        },
        "item": {
          "id": "e53d6d0e-9fbc-46da-b2ad-62f31abeb4a4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a919c8f4-6a3a-42b0-92c2-5169c8e2bd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b46601-9335-46f5-bee3-a5ae870c3469",
        "cursor": {
          "ref": "f5b74751-4d81-4fd3-89c6-f47e15deb313",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d89e0bba-69c8-4c04-ba54-64a804947b41"
        },
        "item": {
          "id": "d5b46601-9335-46f5-bee3-a5ae870c3469",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c264960d-d8c3-4ccc-aa3d-71881a2db1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26266a9-3c24-402e-9829-75f9fc12e5dd",
        "cursor": {
          "ref": "59862a61-93a6-4219-82ba-594ec2ddac7b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9b32eedb-264b-45a7-86a0-61874146cd6c"
        },
        "item": {
          "id": "b26266a9-3c24-402e-9829-75f9fc12e5dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a2d73ed4-1712-4bc9-a482-dc2f8597b7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe0e4b2-93ae-46ac-b672-01917871aeb2",
        "cursor": {
          "ref": "82e265f3-9e73-401b-94d3-9710706230bf",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0130d4ff-c093-4357-8f0d-7fc9af47013f"
        },
        "item": {
          "id": "fbe0e4b2-93ae-46ac-b672-01917871aeb2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "269d2aeb-8b9e-4f5f-8146-1007799ad153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b2a0b8-033d-4836-ad02-ea1dc82b7f7b",
        "cursor": {
          "ref": "08955ed1-34d7-4f3c-9305-5f8f1bade956",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c92a2453-61e0-4330-aae6-fb200731292a"
        },
        "item": {
          "id": "d0b2a0b8-033d-4836-ad02-ea1dc82b7f7b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aad6e974-7289-440d-a160-f530b75c6df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cdbdc8-791f-4722-bfc7-3e4d5a976e8b",
        "cursor": {
          "ref": "5bb44e0e-9466-4b5a-a621-506d849c2a7b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ee1b9233-ce05-4ddf-bf64-f126d672fbd3"
        },
        "item": {
          "id": "c9cdbdc8-791f-4722-bfc7-3e4d5a976e8b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "53fcb0c9-cc59-4571-a97e-338c5382761d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d897b752-ca1c-42c3-a2eb-ece1a898f4a5",
        "cursor": {
          "ref": "85df4d7c-bebd-4cce-805f-e33de7ab37e1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8a46cca9-99ff-4a22-888d-1250a132a954"
        },
        "item": {
          "id": "d897b752-ca1c-42c3-a2eb-ece1a898f4a5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7d7e38be-21e5-4ef0-a5dd-21495f9f60af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81f64ff-ebab-4f17-bdac-d1066101ed28",
        "cursor": {
          "ref": "75930743-cfaf-40b8-b9c6-eaabdf0f0028",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "164669ea-fece-4555-98ad-0d14d9084b9d"
        },
        "item": {
          "id": "b81f64ff-ebab-4f17-bdac-d1066101ed28",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cfce522f-fe8f-46fb-b034-86f77dab8f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dbcfe1-7530-4d43-83f2-06f4eef7dbb7",
        "cursor": {
          "ref": "d2eafb40-6247-4567-87da-dc3926330bbb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eccb2cb9-b26c-4666-a3ba-761b9530bce3"
        },
        "item": {
          "id": "51dbcfe1-7530-4d43-83f2-06f4eef7dbb7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ab94c29-65b7-48b4-9a97-8f7624c4ef0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9b1c91-f078-47d4-910a-1cc8a6ec86db",
        "cursor": {
          "ref": "d0bf8825-00cc-41ae-8c8c-9c4f2fc893c3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4880498a-f2da-4814-a6ed-d34799875bb5"
        },
        "item": {
          "id": "2d9b1c91-f078-47d4-910a-1cc8a6ec86db",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac653ec9-53d2-4b30-87aa-e645e348539b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9004bcc3-b413-4668-b7a1-e5ee32f5c890",
        "cursor": {
          "ref": "79d02e86-731e-4bd1-a9e4-5259f1b61d7d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "80056f3f-4d01-4b92-ab4d-eff1e302bf83"
        },
        "item": {
          "id": "9004bcc3-b413-4668-b7a1-e5ee32f5c890",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a8382adc-7e5f-433d-90a1-7d0cb0daff97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75d6fae-e431-4b7b-8cbf-64a773631152",
        "cursor": {
          "ref": "e4dfb359-aab2-49de-bb73-06633e5e6200",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9ba2d7ee-fff7-4914-a1e8-b7375ebfd364"
        },
        "item": {
          "id": "d75d6fae-e431-4b7b-8cbf-64a773631152",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "61589bd8-e9d0-45e6-8210-9fd485a55e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9978eb70-0b73-4e95-8e98-063a156b9286",
        "cursor": {
          "ref": "db557aa6-1311-4e92-8574-d5d16617807d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c5c4bf87-f65f-4da5-b040-1fd91e3a2475"
        },
        "item": {
          "id": "9978eb70-0b73-4e95-8e98-063a156b9286",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5e8d830b-ed53-4167-8d59-c2570690ffb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b454a51b-89b9-4dce-b42f-d492b4b3a5d7",
        "cursor": {
          "ref": "96e4e67e-c22f-49bb-b968-5e777614563f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ef67071d-ba5e-40b4-aa44-b88bdc896673"
        },
        "item": {
          "id": "b454a51b-89b9-4dce-b42f-d492b4b3a5d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "86e3413d-f0f4-4219-b35f-560f091f80e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0168c35-20ea-402a-bb62-2d5eef3688db",
        "cursor": {
          "ref": "b4ddfbff-5e0c-47cb-ad89-42a5f17ae4c3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "59c2fd0b-8402-463e-afc0-e0f9f6725f2e"
        },
        "item": {
          "id": "a0168c35-20ea-402a-bb62-2d5eef3688db",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2dec7297-734e-4803-97b4-1e9272bc1ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a472f22a-e5a4-4dd7-94c0-624a975cc6d1",
        "cursor": {
          "ref": "ce69c02f-42f9-4db9-83db-b2aa6081c771",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9b07ca1a-c5e9-4581-9031-9dbb236604aa"
        },
        "item": {
          "id": "a472f22a-e5a4-4dd7-94c0-624a975cc6d1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4854fa06-4ede-4e6a-9bc8-60f949dbdb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d747ac49-0e08-42cf-b6dd-f8e970e7921e",
        "cursor": {
          "ref": "192ae67f-2bba-4853-a7b4-a2eb75da0b52",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "65002795-c052-4070-aadc-d7128b3006ef"
        },
        "item": {
          "id": "d747ac49-0e08-42cf-b6dd-f8e970e7921e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "97d44fa8-75f7-4d75-98a1-4a33b1d6c6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a7fbc6-bcdb-42d7-a969-7eb471c4f522",
        "cursor": {
          "ref": "2039f381-9624-44a0-b929-a05c51788720",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "290337a3-a9d2-4060-b828-4c35890ece42"
        },
        "item": {
          "id": "90a7fbc6-bcdb-42d7-a969-7eb471c4f522",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3a3b1787-7898-4f9e-9e6f-94ae9f48424d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd7df18-b5e9-4d2e-8055-4c10f05ded42",
        "cursor": {
          "ref": "9f7cb854-ac19-49f3-ad6e-244c8e7af8f9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5517f035-72be-4a82-8aa0-b28c3a050b44"
        },
        "item": {
          "id": "fcd7df18-b5e9-4d2e-8055-4c10f05ded42",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a204ef5b-f974-4d5d-8b30-840e67a876dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381f3b88-2818-4ef5-8b97-a12f0e4ac532",
        "cursor": {
          "ref": "285b97b9-42a0-4a7b-afcc-412260bdc3c2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "164eecc7-82b1-49a6-871b-630d3482a031"
        },
        "item": {
          "id": "381f3b88-2818-4ef5-8b97-a12f0e4ac532",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "174c3026-16dd-446c-b49c-55d90105771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7992e5c1-eb1a-4158-8520-d8d2ec3a6066",
        "cursor": {
          "ref": "66df99b2-afcc-42bd-a430-dc89503c28b1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "348c4a7b-1f1c-43ec-8e95-c32ec68a7abc"
        },
        "item": {
          "id": "7992e5c1-eb1a-4158-8520-d8d2ec3a6066",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "de06ac5e-18fc-43db-b5fd-cdc032702350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bdc365-ef10-401c-b7d1-ef61b8d1ed48",
        "cursor": {
          "ref": "42e9e1ae-561b-46a8-935f-d42e9f830562",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c4b11c69-627f-4e26-834a-fdf9a281f613"
        },
        "item": {
          "id": "19bdc365-ef10-401c-b7d1-ef61b8d1ed48",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a0e68e2a-14de-41bd-a28f-5bdf63e51861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e47759-a553-4d2e-be9c-351a37a2720d",
        "cursor": {
          "ref": "c8381a40-dc12-4836-a7ed-2ddd367fb630",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "50d31404-99db-4137-a178-24c0682da3ac"
        },
        "item": {
          "id": "64e47759-a553-4d2e-be9c-351a37a2720d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a47b9c6e-25b9-41dd-aeed-ad79db032560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05da205e-a05f-4582-9a75-7afc22f8fd77",
        "cursor": {
          "ref": "d029c52c-0601-4afb-8003-5c9d3a2229a3",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "545c8def-7c41-4261-8c14-c045efb3ffea"
        },
        "item": {
          "id": "05da205e-a05f-4582-9a75-7afc22f8fd77",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "609633aa-a86c-449d-99cc-0f9fb5e57ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96955efa-f987-49fb-a97c-c1eb7e46fef1",
        "cursor": {
          "ref": "0edfa9f7-00c5-4b18-8efb-c75da437e83d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f0f12baf-f3fa-4dfc-8e17-5ae897dcfdf3"
        },
        "item": {
          "id": "96955efa-f987-49fb-a97c-c1eb7e46fef1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8dca11fb-f30a-4ed4-bc0d-d975349d50d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fef971f-5351-4637-81f1-ed1e1a3794e5",
        "cursor": {
          "ref": "bc5b21fa-b632-4f12-b835-077143e7a5e5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "61de6b0c-f9f5-4256-9a69-28f25aaf607c"
        },
        "item": {
          "id": "4fef971f-5351-4637-81f1-ed1e1a3794e5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8c11d12e-b799-42c4-98f1-85a3dad41916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cce5c05-3392-4c0f-bf37-2e2ae0dd8b25",
        "cursor": {
          "ref": "10490ade-5c04-4e2d-9950-b978cd492e31",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5f4e4be1-3511-401c-8311-87d627486567"
        },
        "item": {
          "id": "3cce5c05-3392-4c0f-bf37-2e2ae0dd8b25",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e6867e02-30da-4394-8dfa-bddf7b7121e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d5f964-5ca3-4a40-8aaa-a1a577bb51d2",
        "cursor": {
          "ref": "bb0db4de-6e8f-4985-a77b-5a4f9e0db580",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a8563d5e-cdfc-4347-9a8d-f455b8cf0163"
        },
        "item": {
          "id": "d5d5f964-5ca3-4a40-8aaa-a1a577bb51d2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7bd9f70-be11-4c02-963a-a6df8e15b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465d21bc-7575-4e2b-a7c8-dad47461e2ce",
        "cursor": {
          "ref": "76304ca9-133f-4a9e-a22f-272642e56fd2",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "88b96b20-7532-4f1f-95ea-8b4d41c32ce5"
        },
        "item": {
          "id": "465d21bc-7575-4e2b-a7c8-dad47461e2ce",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a7a7c99d-9a9e-457c-84e0-61119d1c22a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df182a5-8d56-46e2-9ae7-6ad2215fa8bb",
        "cursor": {
          "ref": "c5dced01-6571-4af8-8607-45d71b232c3c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "64085a59-2ecf-4405-8569-c6afbe44bb77"
        },
        "item": {
          "id": "2df182a5-8d56-46e2-9ae7-6ad2215fa8bb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3c0e516c-9e2c-47a5-8117-efad418b8486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac67bb-76a5-4597-9603-934e65b64a51",
        "cursor": {
          "ref": "36db2bad-8231-46f8-a92f-4290f600deec",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "63982836-c1fe-417a-ba64-944da30a5e96"
        },
        "item": {
          "id": "ecac67bb-76a5-4597-9603-934e65b64a51",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "022b457f-adfd-4ad2-914c-5f657192beb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2f3d9d-4cb3-476a-bd2b-c868f7c68cb4",
        "cursor": {
          "ref": "e9db8f69-dd7a-45f9-8177-a87bfd5ccf56",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "af1cf8c5-4399-4e81-8ae0-9bfd23560780"
        },
        "item": {
          "id": "dd2f3d9d-4cb3-476a-bd2b-c868f7c68cb4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7eb30c7e-1dd1-4f31-8b29-24a81ed951bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb3ec04-db4a-4b6b-b327-d3c07f4faaa2",
        "cursor": {
          "ref": "56747a63-9379-4e4f-baa2-48c1d421dbdb",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "342f74c7-9622-4eea-9fb6-b51aa240437b"
        },
        "item": {
          "id": "8eb3ec04-db4a-4b6b-b327-d3c07f4faaa2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "97f248e2-9fa5-4aa5-8b15-94d5984bd9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2b42bb-e336-4e45-b38f-1553014a9f7f",
        "cursor": {
          "ref": "8f46fb69-f4fd-4922-b8d5-3e23b0ec4b13",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ae254bd5-bee2-4f54-ad52-34e24cfd4bd7"
        },
        "item": {
          "id": "0f2b42bb-e336-4e45-b38f-1553014a9f7f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4ba082a4-7bd5-47b6-ba8f-605c8cd6f0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67503bf0-c9c9-463e-94b1-3d797a2204b6",
        "cursor": {
          "ref": "fee6bac1-bd9c-4130-adf4-680de2418e4f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c7bf26e2-b056-4926-b7ba-f6f3788929aa"
        },
        "item": {
          "id": "67503bf0-c9c9-463e-94b1-3d797a2204b6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "20e899bf-1c67-4eb2-925d-0ed51ad40cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbaefc0-538d-4e84-b3cc-994b76217c6c",
        "cursor": {
          "ref": "adc1ad21-500b-4264-830c-3ad6c3094109",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3a2939de-44ea-4d0e-822a-02c993850b78"
        },
        "item": {
          "id": "2fbaefc0-538d-4e84-b3cc-994b76217c6c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e82d13a5-b99b-44a4-ab97-a4a7684462b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615112e6-23fc-419a-8b09-e9d471ada4b5",
        "cursor": {
          "ref": "041945dc-9483-4993-92d3-339dbcfbbba5",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f62a59a0-ebbd-46fc-83d5-9d94dba30949"
        },
        "item": {
          "id": "615112e6-23fc-419a-8b09-e9d471ada4b5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1cacc5b4-94ac-4488-92e0-f7a2b04c97c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585e2240-e96e-48ba-9188-65bc891b768d",
        "cursor": {
          "ref": "ebc5d762-4c3e-4e39-b34a-3c159288177e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0dd4792c-ee01-474f-ba95-2f1cb9606e86"
        },
        "item": {
          "id": "585e2240-e96e-48ba-9188-65bc891b768d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ef98cd8b-d474-4739-a60c-910ba660561c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e0df08-3128-40c8-90ab-adc35c1d61aa",
        "cursor": {
          "ref": "fd910c08-b37d-4ec5-9574-68d957d186aa",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a07d89af-4470-4cec-bb2a-dd9482b12217"
        },
        "item": {
          "id": "13e0df08-3128-40c8-90ab-adc35c1d61aa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "31720a7a-168f-4713-9c91-54d4824c55fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c86b68d-ddde-468c-a9bc-42776993fc7b",
        "cursor": {
          "ref": "a8bd00f0-8e7c-4aab-9b40-f29407edf2df",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ab5a0f11-ac92-478c-b4da-8645be2e13f9"
        },
        "item": {
          "id": "2c86b68d-ddde-468c-a9bc-42776993fc7b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "717b4d31-69ca-4897-a5ae-44b4d415e264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c3e503-0aab-42fe-b634-6e145b42b57e",
        "cursor": {
          "ref": "a275c2ab-38f6-4a70-872e-ee9b8fe6e1a6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f1d188bb-8dad-485f-bd20-b949ad536fc8"
        },
        "item": {
          "id": "25c3e503-0aab-42fe-b634-6e145b42b57e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ac359793-3922-42f3-8d63-5cb4a6eb0633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7bbff4-6d09-46dc-a9d4-cf55419fda2f",
        "cursor": {
          "ref": "5aa6878b-a6df-4f60-882e-1a90c782b258",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e0c948f9-74c2-4aaf-bf0b-71ebcde75707"
        },
        "item": {
          "id": "7a7bbff4-6d09-46dc-a9d4-cf55419fda2f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "199af4bb-266b-447e-bed5-fa157582e835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e3ef94-ff68-47af-a3bf-1bc586502da2",
        "cursor": {
          "ref": "344271b3-c5e6-4cc0-a494-6ed1f9919aa7",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2b8c9a64-18c3-4a64-9ac5-9cf7e369e38b"
        },
        "item": {
          "id": "61e3ef94-ff68-47af-a3bf-1bc586502da2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4c80ffac-9566-45cc-b0c9-b0ae0615a7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076963d5-9e24-4a2c-bda2-e780ce72b74c",
        "cursor": {
          "ref": "7bdd4c5e-c207-44b4-ab34-cdc739fcd684",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4f417a45-8285-4289-b1b5-1c0ce12c39cf"
        },
        "item": {
          "id": "076963d5-9e24-4a2c-bda2-e780ce72b74c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e012e247-5639-44bc-9ee1-3e7745fcaeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0df174-34fd-43e8-bb8a-1a7b7e370e59",
        "cursor": {
          "ref": "17d5b58f-8438-4db5-bb76-16cf84d39455",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2a863363-7ed8-4de3-964e-66bd0f3c611f"
        },
        "item": {
          "id": "ac0df174-34fd-43e8-bb8a-1a7b7e370e59",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "47c93cbc-a668-4d89-9e7d-88daa64613f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81ed1a7-8f8e-498a-b5a6-00c0929219cd",
        "cursor": {
          "ref": "261bf68b-7c03-4350-97d1-905834691ae9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dfd40868-05c8-4227-a1cd-fd75452a73d3"
        },
        "item": {
          "id": "a81ed1a7-8f8e-498a-b5a6-00c0929219cd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fc3ed14e-cc3b-4f45-a310-c659ff6230b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0256e65-b2f8-4f49-8f7c-a0ca1679595f",
        "cursor": {
          "ref": "af80facf-e432-498f-ab84-34fa7737434a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2ea7b774-439e-45d1-96d0-46c25d57cb81"
        },
        "item": {
          "id": "f0256e65-b2f8-4f49-8f7c-a0ca1679595f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "48416933-2839-49d3-afa4-7281cc1a661d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701fe192-9ff0-423d-b6b6-66153a72a43f",
        "cursor": {
          "ref": "97a17dbe-fdfd-48f4-8ca5-419f755920fd",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5411f38d-f5ea-4f3b-8624-7b955c8c15f9"
        },
        "item": {
          "id": "701fe192-9ff0-423d-b6b6-66153a72a43f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "17c57c98-cb5d-435a-9887-0fb1bd2ed807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f853c4-1996-4036-b450-013624d6708c",
        "cursor": {
          "ref": "afbd75d5-cc2b-441b-b6d6-5917a312d8ec",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "148d503c-dc6f-46f7-8307-c1d281ec1977"
        },
        "item": {
          "id": "e1f853c4-1996-4036-b450-013624d6708c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "68bd949e-d276-4444-9c8c-c4f0d23a46fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cc38ff-ccc0-4856-84d7-401b1d336f09",
        "cursor": {
          "ref": "2c217a34-4b55-4a00-8d12-39c8f104ff72",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fe687325-366b-43d1-ac44-5bfc95e85f91"
        },
        "item": {
          "id": "51cc38ff-ccc0-4856-84d7-401b1d336f09",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f8dca366-b4fa-47dd-a770-42fe1af2fa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bd005a-34bf-46a1-be6c-4c76028cf545",
        "cursor": {
          "ref": "061061f8-b52d-4433-9ff0-b180d9695be8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1ac62b8b-1db6-4b81-a5a6-41676fe76eba"
        },
        "item": {
          "id": "b0bd005a-34bf-46a1-be6c-4c76028cf545",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a1426c5b-379b-4864-9e06-a399999ec185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640c66d7-3229-4779-9dc7-c3f7d2e72813",
        "cursor": {
          "ref": "661ed891-d935-484c-b539-55d5618706c4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a8f7ae60-f3fa-4015-99ee-43bb0bd85849"
        },
        "item": {
          "id": "640c66d7-3229-4779-9dc7-c3f7d2e72813",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f096f144-2888-4323-bdb1-75a0739ed059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f42ee8-f431-4076-b4d0-5f9b4fd8de43",
        "cursor": {
          "ref": "d8ecd06b-9cde-4c4d-9934-99755d64a2cc",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8fecc611-da3a-4a46-ba15-5ac5ca48f56f"
        },
        "item": {
          "id": "d9f42ee8-f431-4076-b4d0-5f9b4fd8de43",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "67fdc64d-7c53-4c06-a68c-9189d8bd8c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8f8120-14d2-46de-bb8d-51a634ffea5a",
        "cursor": {
          "ref": "c48ccc95-6688-4656-a5fb-f5ca7757df2f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f0e0e3a9-eb24-4331-a782-789dd6982dda"
        },
        "item": {
          "id": "8b8f8120-14d2-46de-bb8d-51a634ffea5a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "90a600f4-ab86-4bac-a222-2391232a1bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fa23fb-3955-4178-9293-5130206c1ad0",
        "cursor": {
          "ref": "efea9782-ecea-4fa5-bf7e-35936b7c743b",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "da28d32e-c1cc-4a10-a148-31f4bf165d29"
        },
        "item": {
          "id": "f4fa23fb-3955-4178-9293-5130206c1ad0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3346fe13-2077-4749-9c0b-c39e2fb316c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ee5f59-7f33-405b-9f72-34b2c3eecd1f",
        "cursor": {
          "ref": "ae91fdfb-2051-4508-8e13-dcf2feb579ef",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "33b4b3dd-aca6-4a68-a6a6-9179f0e0ddd4"
        },
        "item": {
          "id": "e1ee5f59-7f33-405b-9f72-34b2c3eecd1f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "eb160e46-efe8-4be6-85cb-40a2e08b6ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9f4a49-1ae8-413b-a718-97012ea91ddd",
        "cursor": {
          "ref": "80112e2a-7a78-4de5-80d0-b1e17d576f83",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "deac9556-938f-4f9b-bf41-17c76f8a25ef"
        },
        "item": {
          "id": "5d9f4a49-1ae8-413b-a718-97012ea91ddd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "076ff41d-55ce-45a2-a92e-046a68ced7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fe5f71-90ba-45ff-9a02-076346a7dac0",
        "cursor": {
          "ref": "b41aa076-5bae-41e5-8ee8-b67ca0cac8e9",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8963e584-d20e-4cfa-ab48-44707bdfa8dc"
        },
        "item": {
          "id": "26fe5f71-90ba-45ff-9a02-076346a7dac0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "44a6efc4-ad40-4f4c-b749-1aee1626d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3367d2-4bbf-4011-b567-7e5df89f958c",
        "cursor": {
          "ref": "75bff168-7ef2-4146-a6d7-7578ae71c250",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "39c7ad70-cd55-4c36-a304-6e53050e1600"
        },
        "item": {
          "id": "cf3367d2-4bbf-4011-b567-7e5df89f958c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a7e4ebd2-2400-4675-aa1c-168e7f0453fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5c45dc-b664-4ca6-bd29-73120546054e",
        "cursor": {
          "ref": "5e4e4404-58de-4f68-a774-351e9038d6fc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b96d72db-11cf-466a-b754-fa5f0b1e8128"
        },
        "item": {
          "id": "0c5c45dc-b664-4ca6-bd29-73120546054e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cbf197c0-20a1-4606-9811-c3edf31f52ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0962d97-227d-4098-9f48-367fa1cab72f",
        "cursor": {
          "ref": "496a20c9-6023-46ce-83b0-e1c7263f4198",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "169632c5-4956-4d37-81ac-3646a543f67a"
        },
        "item": {
          "id": "b0962d97-227d-4098-9f48-367fa1cab72f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0f3ec704-3d7d-46c3-8337-26ce5ac93f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a2ad2e-569a-4491-bfbc-dc482f2b7b29",
        "cursor": {
          "ref": "595bcf45-bb04-479c-a7b3-8d7d3336678a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f03a6aa3-18bc-4121-9c8e-88f0d60698e9"
        },
        "item": {
          "id": "d0a2ad2e-569a-4491-bfbc-dc482f2b7b29",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4108ecc1-e7cf-4750-a5b5-2f9d29137543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2818ad2-74b3-41f2-8fb3-402937300923",
        "cursor": {
          "ref": "80d401c9-cd7a-453c-8a7e-77fbe16d0e8e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bda8e81d-5533-488b-8187-72c2f4fe6a9f"
        },
        "item": {
          "id": "a2818ad2-74b3-41f2-8fb3-402937300923",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f6f61671-d36e-42e7-97b9-babf7f380307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c623e547-dc53-470a-9147-fede4d3549c7",
        "cursor": {
          "ref": "9d3eca38-b8c6-438c-9296-f408ee417e60",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "78cc367b-7d21-415a-9144-bf6afcd25c0e"
        },
        "item": {
          "id": "c623e547-dc53-470a-9147-fede4d3549c7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5f4a5580-c16c-4795-97ab-da64ee55cddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8219107-8b1e-4203-9613-2f757e6fc699",
        "cursor": {
          "ref": "b3fbfffc-1afb-4499-ae7c-bddedd0d179c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "881415a6-8eb5-450c-918a-3e52c1648628"
        },
        "item": {
          "id": "b8219107-8b1e-4203-9613-2f757e6fc699",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9cb97ec1-f66d-425d-8b15-33f4b4c4e5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99672e21-e3e2-4b47-a279-c9837e55f5bb",
        "cursor": {
          "ref": "0a79121d-84e0-4ed3-9318-f8a811afe4d2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "afc1f802-422d-4a26-968b-1bbc748d7d45"
        },
        "item": {
          "id": "99672e21-e3e2-4b47-a279-c9837e55f5bb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90ff04fd-65e8-4c55-854c-9c06fb64e76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2ac238-4dff-4ea1-93c5-10bf488b63d9",
        "cursor": {
          "ref": "d309630c-e71c-4601-b8e2-2bfe5d43b82a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "64cc34f9-f716-4162-8aa4-8cd57ec8726b"
        },
        "item": {
          "id": "ac2ac238-4dff-4ea1-93c5-10bf488b63d9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ae63738c-d7c2-4126-99e2-6da6c651f633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def7b6e2-6d9f-45de-a8db-a5bbaa7fdc66",
        "cursor": {
          "ref": "72901bcb-e84e-428e-9a8c-c860c08c2116",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "55bc2c3e-f7af-475b-b672-3fed0690c497"
        },
        "item": {
          "id": "def7b6e2-6d9f-45de-a8db-a5bbaa7fdc66",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "917e1caa-ad7c-4f33-8956-863078ee9f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985bd312-de71-4af7-a76c-1923e12b9469",
        "cursor": {
          "ref": "020837c4-299f-40dd-928f-2bd4c90bb281",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5fb0440c-207c-48e6-9f0f-9359147accc2"
        },
        "item": {
          "id": "985bd312-de71-4af7-a76c-1923e12b9469",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fdaaca4a-73fe-4013-aa2b-ccb519a6c752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d011d640-f085-4cb4-a04d-8e1f75cd78be",
        "cursor": {
          "ref": "7f5b161c-4110-449e-b881-9936401e7630",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d468a33e-62aa-4f16-a3e5-7ec53184564f"
        },
        "item": {
          "id": "d011d640-f085-4cb4-a04d-8e1f75cd78be",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a5b7edba-4d01-4e7e-82f4-a81d587319ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c043672e-3317-4722-add8-d8a0c6e549b8",
        "cursor": {
          "ref": "61aaedf6-4014-47c5-8954-2b59c130cc9a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "499b4f76-bd50-4b6d-ba63-9d1de268d8ae"
        },
        "item": {
          "id": "c043672e-3317-4722-add8-d8a0c6e549b8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "95180650-2fd3-4ff5-9f1d-6e1a6d241873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df5e0bc-37b3-40f7-9346-7de5b4fb38f3",
        "cursor": {
          "ref": "c78c1649-19ff-4ebb-9585-96ae5127ac8b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "93528ed8-c3dd-456c-a10f-846410239503"
        },
        "item": {
          "id": "2df5e0bc-37b3-40f7-9346-7de5b4fb38f3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3bcfeaa4-bb7c-4d34-aeda-217fe113d1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706acbf8-8f4c-4168-a079-5a6e9da6ed7a",
        "cursor": {
          "ref": "da1eac3e-30cb-4820-8e3c-ea3460dc181e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f8bc251e-fff5-4c38-8ad7-48a0d309713f"
        },
        "item": {
          "id": "706acbf8-8f4c-4168-a079-5a6e9da6ed7a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9bdaa2e6-68df-4a72-a0f1-83fb115c142e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64a83e7-bc6b-4e60-a35c-08ac669d8fb8",
        "cursor": {
          "ref": "2db95b5c-1c1d-43c8-b8ec-6eb36b4713b5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cba0a5c3-47b9-4377-9936-be40de753f32"
        },
        "item": {
          "id": "c64a83e7-bc6b-4e60-a35c-08ac669d8fb8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7bac9d96-713c-41ab-b4cf-70e5aee56b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f00d51-f133-43f4-b798-fbf59476422d",
        "cursor": {
          "ref": "fd547561-f6e2-4b0b-9f0b-d8ae95f2b8a2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9bd2745c-ad47-4155-8291-bd9912b53210"
        },
        "item": {
          "id": "c5f00d51-f133-43f4-b798-fbf59476422d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "04a63b07-775c-422e-ba52-b573c49de626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57b358a-2de5-4610-8fed-f2c0a616e28a",
        "cursor": {
          "ref": "8b930ec5-ec20-448b-816d-9f941af7518d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ff23a93c-e000-4c52-b2fa-470b9fcdebad"
        },
        "item": {
          "id": "d57b358a-2de5-4610-8fed-f2c0a616e28a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0c4f3276-389d-4992-8c3f-3165d76e6eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ea23fb-d9ee-46f6-94ba-4871209dfe7e",
        "cursor": {
          "ref": "1d097395-8744-478c-ac1b-244caf098a69",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d4ad144-27a9-43c2-a805-f29f8bed7a7b"
        },
        "item": {
          "id": "89ea23fb-d9ee-46f6-94ba-4871209dfe7e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "be281cc1-c91f-4cb2-9e7d-814babe74e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacd9550-a5f5-4dcf-a113-55a26ea8d5ae",
        "cursor": {
          "ref": "ee77b41a-0346-4a1f-8c38-e20d8bca09c7",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "75cabd31-84bc-4671-bc87-4406890b0bfc"
        },
        "item": {
          "id": "aacd9550-a5f5-4dcf-a113-55a26ea8d5ae",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9d3772f7-c093-4dee-b30f-2cbb59488e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87ddd42-53de-4de9-b064-62b2d19d28ac",
        "cursor": {
          "ref": "8cba133c-9da0-4eb5-b04f-772b4b0b2063",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e7a53a45-f3b5-4b36-94aa-df6533143074"
        },
        "item": {
          "id": "d87ddd42-53de-4de9-b064-62b2d19d28ac",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "87b76048-1c6d-4f36-9dbf-d56316ab2cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdedf34c-579d-4377-a5d7-6fbbd7702647",
        "cursor": {
          "ref": "3d3c400a-d551-4000-9946-cf850aca7575",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "23d768fc-b00d-4597-8faa-b2167990d40f"
        },
        "item": {
          "id": "cdedf34c-579d-4377-a5d7-6fbbd7702647",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3617d9ba-2735-44e8-88ac-b5f92018d8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa0c9fa-d490-4fe6-868f-442556044884",
        "cursor": {
          "ref": "6c0efccb-d2b9-47f4-ab81-81f7ebdcaf7e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "77a365cd-c07b-435b-88ac-6cf11f533fd1"
        },
        "item": {
          "id": "7fa0c9fa-d490-4fe6-868f-442556044884",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "068d719c-4c22-48ac-b18a-e5d688ff5b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0364f5c-ae43-48d4-be6a-532c14a1f7b6",
        "cursor": {
          "ref": "6843dc43-02fc-4022-91c8-1067f1c2862f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "21d241c2-de92-422b-871e-670e51e4c944"
        },
        "item": {
          "id": "e0364f5c-ae43-48d4-be6a-532c14a1f7b6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "58ed8899-f8ac-470d-b776-c4796fdd5dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505c4b0d-9f7c-4ccc-808d-c44e96a91659",
        "cursor": {
          "ref": "17c09c60-6eea-49e4-b436-4b18a7f18655",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "66f2ba16-24a8-46fe-b506-d77305afa3c2"
        },
        "item": {
          "id": "505c4b0d-9f7c-4ccc-808d-c44e96a91659",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d018aac3-3f71-490a-97a6-d532cf8cf884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9126018b-5b1e-4808-ab94-536d5fff75f4",
        "cursor": {
          "ref": "ba18915b-f555-4de4-b8c5-d1fc4f2791ef",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4e532359-88f9-4019-8cf6-d33da812d995"
        },
        "item": {
          "id": "9126018b-5b1e-4808-ab94-536d5fff75f4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d0f88862-af54-4e5b-bdf0-bcb159cff8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ff2ce-5a5f-4860-8727-693c4e2a7c1f",
        "cursor": {
          "ref": "dbba7780-3d0d-4d82-85b2-76664fa83c3f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "24f24795-7e01-41fe-b16f-272dc21b6bf0"
        },
        "item": {
          "id": "de8ff2ce-5a5f-4860-8727-693c4e2a7c1f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a15a0c42-56ad-4faf-8ece-34363a92ec2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7a9137-869f-46e4-afb1-6300a073afef",
        "cursor": {
          "ref": "a1e59d3b-10b4-4a86-9079-a2665da71cf9",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "533121f9-f802-4fd9-86f9-8b4486138745"
        },
        "item": {
          "id": "df7a9137-869f-46e4-afb1-6300a073afef",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b1bad55c-42a8-44d4-8431-f5e1c96885aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237d426e-5937-49a6-958d-5ebe17b3808e",
        "cursor": {
          "ref": "fd0d4e27-4c2a-4050-b014-8c7e38e1402f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d1446802-44cc-46c4-9e95-15e3c2e9e1f5"
        },
        "item": {
          "id": "237d426e-5937-49a6-958d-5ebe17b3808e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f9ebf4c8-b1e8-420a-ba35-56f87bfb8839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1be9298-b2a0-4725-a4ee-b7bb922fe69d",
        "cursor": {
          "ref": "b84c654e-2aea-48e3-9269-4a32935e10e0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0c016181-2fcb-425f-8331-ae4e98209e81"
        },
        "item": {
          "id": "d1be9298-b2a0-4725-a4ee-b7bb922fe69d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a5f72dd5-3fbc-4166-b8a0-7aa48b65303a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16e9dba-b31b-4860-98e1-f3d5fcff5922",
        "cursor": {
          "ref": "746b5cba-7626-4ba0-a8d4-2ed8be1fbda3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7956449f-4fd1-4e6e-8b9e-13fb4d790b33"
        },
        "item": {
          "id": "b16e9dba-b31b-4860-98e1-f3d5fcff5922",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "82c1e1a6-4513-4e94-9229-5bed0198c9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9254177e-8fe3-42d8-9ab7-4d2795732d9c",
        "cursor": {
          "ref": "38478170-6257-454c-9253-f96a8a537f6c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fb405e8d-6508-41b4-a092-b1c75f44a525"
        },
        "item": {
          "id": "9254177e-8fe3-42d8-9ab7-4d2795732d9c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ebc4752d-3d0a-4459-9410-4c83a71a79c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d51cbf1-6236-4234-bec5-548fd0c291e1",
        "cursor": {
          "ref": "405aea0a-64e2-47fc-b75a-d726cdd94513",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0467a0e1-fb3b-4612-b0c4-9d3b7c12dbf2"
        },
        "item": {
          "id": "9d51cbf1-6236-4234-bec5-548fd0c291e1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e5f19283-f4e6-4a7c-917e-99c551f24452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341f2674-3e0c-4b67-950d-e15a542e8f59",
        "cursor": {
          "ref": "eb28cda5-9f16-4644-a188-82b24a8b81b5",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "69be0c81-b95a-41b6-b62f-3b3e09ed8b68"
        },
        "item": {
          "id": "341f2674-3e0c-4b67-950d-e15a542e8f59",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c6ce727b-4eec-49ff-a10d-543f74015e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fabbd30-f2cf-491e-a4f9-2750987d1ec0",
        "cursor": {
          "ref": "bc79a755-fae1-41a7-9ad4-946a615a8b4f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "66f29117-9314-4d81-ba12-b9f972820704"
        },
        "item": {
          "id": "7fabbd30-f2cf-491e-a4f9-2750987d1ec0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "292d29f5-7d25-4880-b81b-7933db267f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be1d5bf-ab22-48ce-ba99-0a0dd0888ab4",
        "cursor": {
          "ref": "21fdda27-09d0-4147-93fd-2cfbcfc1ba66",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "34a70c09-dfbb-4ee0-9fc2-d3758ea8d154"
        },
        "item": {
          "id": "0be1d5bf-ab22-48ce-ba99-0a0dd0888ab4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "98f0d3dc-acbb-4cda-8b44-71d2836ea797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3b474a-d9fc-448b-8791-ac3dd3410a65",
        "cursor": {
          "ref": "809c0c30-925b-43b5-b0c3-374db9c7dd8e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "eebce9f2-76e4-4892-97f3-28b779f8ede7"
        },
        "item": {
          "id": "ab3b474a-d9fc-448b-8791-ac3dd3410a65",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a8c34eec-7321-4eb4-b28d-bc4ca97569a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfad9389-9ed4-4af8-896e-75946111e6c2",
        "cursor": {
          "ref": "516bb4b2-dd13-458c-b591-3be71bc8ed2c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "94ddf7f3-015c-4fce-b7ed-08c3918393c2"
        },
        "item": {
          "id": "bfad9389-9ed4-4af8-896e-75946111e6c2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9ad9cbc7-bd69-4e22-aa8e-9d45383821ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2678a425-2b18-407c-bcb8-943fd4f49025",
        "cursor": {
          "ref": "bf8f1550-139a-44d1-a9cd-726e684c4f42",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4caeb96a-cd8b-4f7f-b5e9-6e150bd5aaee"
        },
        "item": {
          "id": "2678a425-2b18-407c-bcb8-943fd4f49025",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9f0d5110-9909-41b4-a1be-1f01c8c05c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451ed6c6-77d7-4fb0-ba8f-0992d9bd647e",
        "cursor": {
          "ref": "4b56ed1e-e74e-409a-b55f-1b2ae6cd448a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bc168001-abeb-499c-a55f-d5d47fe17a47"
        },
        "item": {
          "id": "451ed6c6-77d7-4fb0-ba8f-0992d9bd647e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0b192e27-5e05-4fc4-b10d-595a9942f0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccba7024-c22b-46a2-8595-52e8f26805de",
        "cursor": {
          "ref": "3a64ecf3-a5bb-44b3-ad36-41508af999ea",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d3d6373e-7ad7-479b-a31b-604a95e88b99"
        },
        "item": {
          "id": "ccba7024-c22b-46a2-8595-52e8f26805de",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "86950759-c971-4114-b2c5-d2754ab947e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45787033-157f-464c-b9ec-294218c61d5a",
        "cursor": {
          "ref": "85f7a3ee-4fc0-4f27-9964-b6c327d2b041",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e5b26c6a-8fdd-4141-a856-ceb19207d050"
        },
        "item": {
          "id": "45787033-157f-464c-b9ec-294218c61d5a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7531bef0-adb1-4ad2-90ec-d4185aed6d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44862d37-eee3-44e9-8de9-489d161ea232",
        "cursor": {
          "ref": "679d7b67-031e-43dc-9f09-bb58ec5f72f0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3d9cd390-27c8-4791-a9fe-b117f8039c1d"
        },
        "item": {
          "id": "44862d37-eee3-44e9-8de9-489d161ea232",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6e9b0d81-506a-42ef-a7ef-ef89c4d9905d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de22f3f-16c6-479b-a0ee-4418b64f04be",
        "cursor": {
          "ref": "7da5995a-16a5-4ec6-b01b-953c8b42665f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d1723e77-deeb-463f-96a2-8291f4f4cf55"
        },
        "item": {
          "id": "2de22f3f-16c6-479b-a0ee-4418b64f04be",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f9a776bf-8a2d-46e7-985e-0f369004b63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6d1c4e-8922-4da7-84d1-c40beb33d9ac",
        "cursor": {
          "ref": "74f6f05b-6331-49e7-bca5-b5675789a2e0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1a2a8311-158c-480f-afb6-cd7be88f5e1e"
        },
        "item": {
          "id": "5d6d1c4e-8922-4da7-84d1-c40beb33d9ac",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d59c74ed-5d68-485d-a8a6-393318753f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293684fa-148b-4c52-8394-e09fa1980ca6",
        "cursor": {
          "ref": "430c97bf-19c8-494e-b8a2-be469029f7c0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "134d184b-3ee4-46da-95f0-9df938bf37c6"
        },
        "item": {
          "id": "293684fa-148b-4c52-8394-e09fa1980ca6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e500e7b9-4e7e-41da-b274-cd46c87ec2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce06e4f-a4d2-4a3a-9d8f-4ddfae41047a",
        "cursor": {
          "ref": "2f8fe65b-c005-4069-bd62-0bb0fc574a7b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1da4f074-3ff6-4101-836b-9c6ef82248ec"
        },
        "item": {
          "id": "1ce06e4f-a4d2-4a3a-9d8f-4ddfae41047a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8696278e-3c7e-4da1-b320-ea3c6bdff9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f9c084-2341-4b4a-8a80-402e762b5456",
        "cursor": {
          "ref": "bcbd23b0-7fd1-4a60-9527-0804bd135304",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "173fdff0-34de-4642-9d3a-854248879048"
        },
        "item": {
          "id": "07f9c084-2341-4b4a-8a80-402e762b5456",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e090aa07-bb6b-4f3f-bee0-c8a26f72ac0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee98e51f-ac20-4981-83f0-bffe719a5729",
        "cursor": {
          "ref": "1250183e-2590-4ea5-b33c-09ebce9ce837",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0fb6bfa8-a46c-4327-895c-6b24a41da3a8"
        },
        "item": {
          "id": "ee98e51f-ac20-4981-83f0-bffe719a5729",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b192f0e5-ba52-4c39-8d05-26b893072959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52db6040-d16b-44a7-ab57-835de4a7a195",
        "cursor": {
          "ref": "a5ba9086-809a-459b-a334-23dd43ebb003",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "11eb13d1-9aca-42e0-bb0f-63d64feafeb2"
        },
        "item": {
          "id": "52db6040-d16b-44a7-ab57-835de4a7a195",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "eb5b00dd-d5f5-4b45-8def-48fceff8259f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022f1acc-5641-4829-b305-881c03b85ceb",
        "cursor": {
          "ref": "a0131901-83d7-4d1d-b3d9-6c7695d5a34b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "377cb0a3-9d6f-460c-ada4-9881c5f8c819"
        },
        "item": {
          "id": "022f1acc-5641-4829-b305-881c03b85ceb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "11e45592-a523-46ab-9b57-83af17034b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbe489a-35d1-484f-ae8b-48197979e9ab",
        "cursor": {
          "ref": "89f32c5a-5902-428d-9217-9883011e06e5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8b73cd06-125b-442e-bcfe-7bb880c1f76f"
        },
        "item": {
          "id": "bdbe489a-35d1-484f-ae8b-48197979e9ab",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0949385d-25ee-4adf-b74d-f41138414b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372fe198-b916-4080-abc4-a5f60e644a09",
        "cursor": {
          "ref": "941e53ea-1baa-4a76-9a25-719e7fb60c6f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5e393d8f-4f98-4ecf-85d0-ecf349366463"
        },
        "item": {
          "id": "372fe198-b916-4080-abc4-a5f60e644a09",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a2f1d047-9e84-4e32-8936-ce76a861fd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ad3a71-6823-4b7a-99e1-2645ae68cdef",
        "cursor": {
          "ref": "8e464a3c-5c77-4e88-bad9-030b845786ec",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "49b0052f-dd24-4f4d-a8f9-5fdc70f30950"
        },
        "item": {
          "id": "98ad3a71-6823-4b7a-99e1-2645ae68cdef",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0f323c80-c22c-4a8b-b4b4-adc96c760680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b8e744-e4bc-46ed-a4b0-56a108cd4226",
        "cursor": {
          "ref": "8902efb2-e506-4ce9-9f85-ea5802cbecd5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ad5a28e8-ca07-4b6f-84ad-85adc6b12d20"
        },
        "item": {
          "id": "55b8e744-e4bc-46ed-a4b0-56a108cd4226",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6d8456a2-980c-4eba-a892-fd23c2df939e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3402939-37c7-4258-968b-c73a492f406f",
        "cursor": {
          "ref": "edd05de0-2636-4d8e-8fe0-9f3b122efd47",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bcf94245-ae10-4df6-978a-583e6c6cc1da"
        },
        "item": {
          "id": "c3402939-37c7-4258-968b-c73a492f406f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b959fdf7-6d1f-4d46-ad37-a21a2021564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc873a4-143c-4565-b167-7d151c04393b",
        "cursor": {
          "ref": "56b64a0c-fb58-48d8-84a8-d2bf1f78d6c8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "581878f0-ee8c-4af3-b88e-be8d6192cd6c"
        },
        "item": {
          "id": "5dc873a4-143c-4565-b167-7d151c04393b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "28ab3eec-b7f1-4a17-bf72-3ad462e4441c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427da57d-5902-4566-aac3-3bae814294c8",
        "cursor": {
          "ref": "a96fbc27-5850-4f58-973a-efec34f08e7d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a24c30d5-b6ea-4ac4-a28b-eab8bbfe94d1"
        },
        "item": {
          "id": "427da57d-5902-4566-aac3-3bae814294c8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "664df6b8-9982-4317-a08f-550bf93ed526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beb8698-b363-4155-8f02-128d6353970f",
        "cursor": {
          "ref": "89e0cd2f-a970-48a3-a92a-19f1e72051f7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f7eee39b-69fb-4230-a65c-93ceb9e75c4c"
        },
        "item": {
          "id": "2beb8698-b363-4155-8f02-128d6353970f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1539da8d-1e88-43a1-8151-add37222e5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0283faeb-520d-404d-93fe-e53125ed93a7",
        "cursor": {
          "ref": "01b113d0-1b48-4ebf-b09b-aa96a37b4a67",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e1bf4c87-8d69-40fe-b2bc-a3aba5d957c9"
        },
        "item": {
          "id": "0283faeb-520d-404d-93fe-e53125ed93a7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8dcd14f6-c01c-4ef6-a45f-9406f4c8b160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e4ecce-6722-483d-b557-252cfe18976a",
        "cursor": {
          "ref": "7f4b93e2-f80f-43b8-8f42-240113a14b41",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "06230923-250e-467a-8739-0c54e88d903b"
        },
        "item": {
          "id": "d6e4ecce-6722-483d-b557-252cfe18976a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "109dbab7-753e-4385-b305-4c9ac90d286b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5d2cf6-6399-4798-b4c5-bcf5bbac9124",
        "cursor": {
          "ref": "c708fc78-ebd1-4c1d-9e09-016a0f797748",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "37aa15be-7947-41d6-8fda-fb3aad0e0d6d"
        },
        "item": {
          "id": "7b5d2cf6-6399-4798-b4c5-bcf5bbac9124",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "30210207-b969-45c3-9ea0-d8719d4f2e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c45eb0-b8a9-4f01-9c4b-3aec4ad78abd",
        "cursor": {
          "ref": "e802c761-50d0-45d5-84c7-dc1b01c8360d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d539cd90-246d-4be0-abec-5639a6e0d6e3"
        },
        "item": {
          "id": "01c45eb0-b8a9-4f01-9c4b-3aec4ad78abd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f99fb577-76ce-47ef-ba6d-477d6cb9f800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5614f69-e3a7-4dac-a013-9f20f49ff911",
        "cursor": {
          "ref": "c84eb716-7b97-4fd2-b160-1624db517fce",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7d944bde-b9b4-4f10-bea0-70cdb5a98374"
        },
        "item": {
          "id": "d5614f69-e3a7-4dac-a013-9f20f49ff911",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3a9fb69f-f65a-4337-be3e-1c9cdcd6267c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fab8df2-5a11-45b9-b31c-f8281984677c",
        "cursor": {
          "ref": "b407dc5b-cec5-4ed3-8499-a8fd0615da7f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cab730cf-753b-4ab2-8d00-380d942d5631"
        },
        "item": {
          "id": "3fab8df2-5a11-45b9-b31c-f8281984677c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0a267f07-5b1a-443c-90aa-d3962a4473fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd18d82-9dba-4394-95dc-2b2eed793aed",
        "cursor": {
          "ref": "8082b101-b71e-4494-99fd-f98de118fe0d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "deafc30e-6073-46ec-9c27-7954a43cdd46"
        },
        "item": {
          "id": "7fd18d82-9dba-4394-95dc-2b2eed793aed",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "774b9942-5b7c-4ff2-b541-3d20eaf5d7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b57f74e-0444-4fc1-a2b5-6c15854d221d",
        "cursor": {
          "ref": "3d95f12e-a2d7-4097-9e69-1e85cc95a073",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "315d08b5-1eac-4ef4-b9ca-b242b6c92965"
        },
        "item": {
          "id": "0b57f74e-0444-4fc1-a2b5-6c15854d221d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "28ca45ac-5e2f-49ba-835b-0ada6c3a1540",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6400ad21-9ba5-4709-b9a9-9f27f38c4fd8",
        "cursor": {
          "ref": "bfe8ea75-44a9-430a-b219-67992072fe80",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2096ff59-2038-4dec-a8a2-07fa757a9ad5"
        },
        "item": {
          "id": "6400ad21-9ba5-4709-b9a9-9f27f38c4fd8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5c4cc56a-aea0-4c80-9264-0af096d3ce93",
          "status": "OK",
          "code": 200,
          "responseTime": 2219,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "08154665-d037-46b8-8ce7-a72033a69cd6",
        "cursor": {
          "ref": "f4ed3848-6829-4192-b28c-6fc8aab74264",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "42078166-571d-4506-888d-d4d52f193252"
        },
        "item": {
          "id": "08154665-d037-46b8-8ce7-a72033a69cd6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c9b10734-1ce8-48e0-8b07-91b96403bb63",
          "status": "OK",
          "code": 200,
          "responseTime": 3010,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2f77bc-65ef-447c-9b23-ad278912b00d",
        "cursor": {
          "ref": "3983e417-d3d9-4eb3-aff1-20c14ed962b6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1bf49377-c28b-4a71-b0f3-2cf3f4aee986"
        },
        "item": {
          "id": "1f2f77bc-65ef-447c-9b23-ad278912b00d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6efb496e-0d85-4953-86c8-fc658af78a9c",
          "status": "OK",
          "code": 200,
          "responseTime": 2540,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f28f92-d3e1-4f02-8f40-5b7fab090efb",
        "cursor": {
          "ref": "86bf3b72-36ba-4ecc-abf8-575766987d8c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b0987e11-0429-44fa-ab97-ba9091f51827"
        },
        "item": {
          "id": "22f28f92-d3e1-4f02-8f40-5b7fab090efb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8dc20614-31ce-41f4-b786-c53010e7b272",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f28f92-d3e1-4f02-8f40-5b7fab090efb",
        "cursor": {
          "ref": "86bf3b72-36ba-4ecc-abf8-575766987d8c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b0987e11-0429-44fa-ab97-ba9091f51827"
        },
        "item": {
          "id": "22f28f92-d3e1-4f02-8f40-5b7fab090efb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8dc20614-31ce-41f4-b786-c53010e7b272",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28dd00e-e136-42cd-8838-65892ea15e8b",
        "cursor": {
          "ref": "38ff5067-7ce3-4362-981d-cffd4fa3ddef",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "188706c0-70ec-4ea3-8132-3aef5aaad5a0"
        },
        "item": {
          "id": "c28dd00e-e136-42cd-8838-65892ea15e8b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9f95dd77-5aae-4dd8-afec-449914ee6953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c621a6-19d9-4cfb-b41b-8fa9b4f3934a",
        "cursor": {
          "ref": "b7230024-44fa-46ad-aa0c-84aea83dd533",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f7f70fa0-00ce-4263-9bdb-f72630566a1d"
        },
        "item": {
          "id": "23c621a6-19d9-4cfb-b41b-8fa9b4f3934a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "df054f55-85a6-436b-8876-89bc300fc34d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}