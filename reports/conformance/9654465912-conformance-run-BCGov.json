{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "87bb3888-30ae-4d4b-9cfb-d43f97a8d53c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5de1437f-ef9d-4743-8975-fcb6f606d489",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b68cee1-931b-4035-8428-ad20c4bb8dc1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b1891610-a57b-4b9b-adbc-94da3f92ab98"
                }
              }
            ]
          },
          {
            "id": "e7a11d5e-9d62-401c-8109-74e6e50a917e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9d2a97a-092a-4013-a83f-491218d610f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "de248088-60c7-4474-bd55-6321ed8a5156"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "880bdd38-c50e-4a6f-b9d8-23aa4b0f9517",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c89d6465-bb94-4a73-b268-918648b4aee5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b046dd5-3595-4046-bfa4-2cfe58cc71dd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ce75e10-07cd-444f-997c-81f0b1df3424",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "752ef6b8-ce02-46d3-8766-b1a6456a4adf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "316fdaa8-0b07-444a-9859-b40105d4e54c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c1b5a89-3995-4f38-8217-1cec8a69655d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "45c8c307-5122-49ab-bdac-04fbc1ab38af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "432fc397-cdc4-4379-8a5a-eb9642d5698b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72b9b70f-c67b-46da-9e56-8175f89792d4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8fcc0240-f2b3-4d2f-a32d-374880bda398"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "248d26b8-2c3f-4b76-99df-bef0eae08d55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aba72599-230c-42f6-994c-a00b1fdfcc45"
            }
          }
        ]
      },
      {
        "id": "390c2ded-398a-4b34-a203-3710b6d63c10",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "27d400c3-997b-41ff-b5f2-9f1991d06c17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19a2a02c-5ce6-4e1d-aa37-669bc444403e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16120221-0a97-4fdb-bf9a-962aa3bf1a94",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df22e2ba-4ae2-40a4-9663-6f8560fff731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8a49aeb-162f-4f2f-8ae1-177618afbaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abda662-5206-4ac8-afdf-2d7321630aa0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5d6f64-f944-4a2c-a311-1538ba6e65c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cb87f67-38b5-4089-a3c0-195f9f75c4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691be59d-554d-4f42-a841-be038b88bd14",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e28c9c-39e5-4913-93b5-05f484a2fb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ee76900-a72d-46bd-86ec-996b7de73edb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a5ebc725-a60f-4304-a633-a34d8f2b56b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e171a3a-b236-44f7-a31d-2ca4afa6782c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f4d4dc-7dfd-43e0-be9b-6d71b6db4b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2553b2fe-0d08-4f39-846a-8c652108580c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb67c77-fa39-4af5-96f7-536cf5b4a36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f33c831-7703-4a1a-b414-6c02d517b044"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "25d8b7c7-c361-4b4d-b7f8-839121d36fa1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f14c2542-844d-42ce-a8e5-3d01fe2fc1a9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce37da43-a732-4363-8efe-af9234143da5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4330c08c-e190-45d1-a973-b6e4b18176ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af8d9dca-27fe-4e04-b6bb-ef7fbf9d1cc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "07cac7e9-0296-417d-8ebf-b3472029bcaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1e53345-a0af-4023-b567-6a00bbfffc91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99f64a7f-4ab5-45e9-88f4-0e3d4bb584e8"
            }
          }
        ]
      },
      {
        "id": "ef72e678-b5c0-4e64-8899-b7725404f047",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "23c7e07e-ab2a-4237-82a8-0a2f91ead57d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0485aa97-683d-47cf-9b7b-5d6199007c68",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7a66e63e-65e4-4e7e-8e23-1b9acd0b391d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff664efc-2575-4ace-b75c-076cef2c8407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0eff73-6864-4c66-9570-2fdcb583b0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aea99a-3945-4738-98c8-709a92760b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "124f8a92-05b9-4984-9c74-19812c39deaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c674b5ed-025d-4c5c-a4be-8a6e0d995938",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4eecbb-3cbd-4128-b649-d0173826f6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d2ab82-23a5-4da9-977b-e5a156c6f0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d370c53f-678e-453c-9830-0d2fab63f623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e2e2ec7-f4c4-44d7-b768-28f8d7330102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc41958-0acd-451e-ab5e-30cc467edbd8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d965bfd0-f6fc-482e-8703-4ec43cca631f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48adb542-eaad-4445-a5c7-2617b6861147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcd081d-58eb-47a2-853b-472b66a94e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b5ae75a-10b4-4623-b4fa-60f34376e5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce199fc-ce8e-47b8-aa4b-ef5856e194ac",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eace4c-59fe-4b5c-b828-1cf3a8919aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f419c5be-de27-433c-8c99-536cc53c46a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d8cda9-b4d6-481b-8a9f-b01ada3d4c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98111c37-b9ed-44ac-ad12-1aab6d41e3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1fce29-4808-4ed4-b3bb-71f99e359c9a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab93b8dd-3d1d-42e2-abda-3ed5bee23714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddb5002-bd6a-48db-9495-2e8ae3a9cda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43ef637-90c0-426d-912b-7e37e006ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22e4b6b5-f438-4806-8d6a-7bf22f6351aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50b7b8b-f919-4049-ab88-55d3aad0b178",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1188deb1-9a48-41b6-8164-754077d58d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f529cb4-726f-4a5b-bb09-8ac44fddbfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13ca2f5-988b-4bea-9576-4a5db16f297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78032fab-a8da-4750-8c7c-ece9e000a881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3d3019-8ff8-4035-b919-216fd19b5f5a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d858b7-eac5-46e2-9851-c43b6f288078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a656dd9-f44e-4a96-b987-53f36e4facf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d67eac-e1ae-4c74-b5e3-05ecfd7d8259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a187a350-7d15-4a3b-a28b-dd9d9e4eaa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd31f07-fdba-444a-9e24-e3e3d748ddba",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886290ea-a7bc-4e2c-abb8-aa3c3fe2879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc2dc9f-3b77-4194-b47c-102f6ab9f785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4c22e8-cd54-4184-8f1d-8fb0db1fcfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2af92ee-401b-4ed9-add2-f61555c41dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eeba8d-09fd-4be2-88c6-0e8bca9fbf68",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3129fade-54a4-4c5b-bec1-c0c8d9954d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0b6cea-6d0b-449a-a1f8-47c48e80c700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d160d888-18b3-426e-b9a4-3c7cafebd8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a56658d8-672b-4d62-b9fd-5c9db1f633ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b9ea16-9142-4e62-b4ad-08572e46c940",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5002488-2102-46a9-9165-ab86e13b50ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fdc410-1a81-4653-ac31-14f3c7845e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff498429-4a96-4eaf-972f-78d48c57c9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65ffc623-d47f-4b67-ba94-5f16dfda3b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031241c5-7d60-46ce-88f6-9c9c08ec8196",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4020a3-85b9-4860-82b3-99ef61168aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34446ee7-61ef-4113-b1a5-f41261f8b1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a4be1f-6cce-46c7-a10f-66800335ef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6be91ab6-f7da-4058-9c05-c6c26349fdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6717c9ec-e131-4392-8e02-5c20f74e3bf9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ce9d3c-6bef-4879-941d-e01dd97d2b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f3a27e-f2fc-4c75-892c-794cd26d8606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cbe312-c862-445e-912d-36f7e7851176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b5f2c96-8c34-400a-ba97-14f484000f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7816df61-b294-48e8-9160-f0c2ceb91545",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aea165-c978-4454-b5a9-1efafa52bfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb838d4-9ccb-4df9-866d-b048e8dfa2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44424bba-3153-4125-8f6e-218beae44389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9edf4dc-8526-4064-b104-bcd59e90f3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da5a67e-0a0b-40e4-8768-9e4ae170daf2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01982587-521b-473c-ad3a-d79bc7c84310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66859e1a-d1ef-4bce-bda8-db0ae4cb04bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9290a1-cea9-4bf3-a179-3e5465d3fe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84779835-e49c-4ed9-963c-6ceeedee2e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb572e8-8d09-49ac-85e5-05d5ffb309d8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ad7d69-bd91-48b6-8ec4-246390316e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4eeff21-917d-4a19-a8f0-26f32226cc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81306c9c-3d91-4edf-85a5-ccfceadd0c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0b08d30-acb0-4141-bb3a-9ce118318bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a751bdda-fc70-4702-b3ca-4a2becb291ff",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c44ebc0-3688-4110-aef6-3707676511b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89417f01-3a78-41eb-9810-5f5f4599f392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd9fc5c-83a9-4dcd-bb92-50228d03896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "014341ee-8519-403e-812a-d3a0e5760154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8505919b-333f-4069-9d2a-a33bcdb10181",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1381cd-9d48-41ad-a9a6-37289fbebaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2acc1d-7c96-4025-ab37-5ebdebc224a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25088ae3-d245-445e-9a94-f3cf0414a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d25ce642-205f-4f77-9d3c-d4a8da5c4d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fda1d1-c980-4f3c-9585-a704c82c34ad",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23b8c23-49c3-4000-80dc-58bb7329ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e652b31d-f90e-4137-aa35-10f62b27995b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d75565b-45a7-4678-9208-61fbe2299d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc699d0-020c-4410-8970-4ed417f4708d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6af60e0-e101-41fd-a401-1cfd240041d0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3983b6b6-fdc0-4f7f-a539-3dd8c8e1ee96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f809f3-6edb-4ad8-8041-b484ad6c200f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f959ca3-bca2-4cf9-9851-1e8546068305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b48d793-aa44-4ec7-8ed7-cb8ecb49132b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78199b5-abe0-4d22-8fbb-16b985aa8475",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2090d26d-1b80-4e3c-ba2a-c2338ee54e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499ca00a-a29c-4a3f-a128-e9305159d18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce77e6d9-4417-4977-a8b7-ec82e3e617d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "339ec1df-2fe6-4376-9652-cf367501b7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa45af6d-c6db-47eb-b815-6cafdbadb918",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb38b328-91bd-49a1-8b43-946a3b4eee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4112702-10e5-46fc-994b-5dab2aa981e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8167d4-4d12-4afa-9d75-a9a7a943b40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b670dd86-3324-4625-91dc-81b1b7b5e722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda13f00-6b92-436b-9eaf-40aeb4658f0f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d7fb4a-97b7-4049-ab54-ec4c69658f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0b368a-d7b1-4bac-b839-782165cc13ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092c2de7-4a3a-4f32-8146-dc4b578ca987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b690bec-23e5-4148-a456-ce67461596c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cf528b-1edd-4b76-b7b3-b0b0c52ae504",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2842260-8e54-4e6d-b5ce-dc053dfe7696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ff440c-7d81-4adb-b19e-85c9bb37fb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a2b583-4f09-48ed-bb30-3030df483ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca08514a-75af-4e8e-97c4-8827cdf8b170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ea74cc-fe1c-4937-b45d-fe23a0baaca8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dfc534-c50a-40f6-b5be-e5ede5a3158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb164340-299e-4c79-a900-3b7d5ecfdd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46023aa8-3cda-4685-a0ae-f62f3c251551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e20bf6b-931a-4df2-809c-158bd8ae82ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33cacb0-13a2-4c5f-ad81-0330b6e3f8d1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e666180f-f808-406f-b214-6aa82394cc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9817e392-ebf3-4ed5-bd97-966b53344362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2e1693-5e25-4378-88b1-950d9d2ad6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1109693-06cd-421e-86bf-d4549db59a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1eaad8-bc3c-42f0-9342-271942570bd8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd177ab2-585b-47e8-a708-b8cdc796a00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffd079d-ccf6-4857-be18-e31c998474b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685e3011-6c63-4a44-a254-adc49f701745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ddb4fe-f7f9-47fe-b7b8-7c1bd335bfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be0582f-f839-4468-8df5-ad81d2c22317",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a2eb5e-aa56-49ea-9385-5dbe36b3a1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bbfd98-d2e0-4658-a3cc-1c86aa620ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48ff692-e12e-444f-a8a1-7614a696899c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c322409-2a41-44ed-abaa-ff335d0de477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73e3b1f-348a-4b96-abc8-3e6f18c5e1a8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ed5373-1c8a-4608-8ec3-9da19db7a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b011bec-b4b8-4e85-af5f-06426f3eb2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea8ebf2-40b8-4335-b0dd-f73e84a10b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53de6cfb-1d8a-4b3a-973e-96d463342a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c17250b-f2a2-4175-bf4c-aff3f2bbb8d5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bc4ce4-1804-46bb-9912-b774cb6f1faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474304e6-790f-4bfa-96a4-d7500e1cd69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17732136-b429-4f38-a64f-ed00d510fc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc97936d-9db5-46be-97c8-72382d23a2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06281952-06e8-4bdb-8c11-3e538e54d3e4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a663c1c6-0812-45fa-8811-e875f047401a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107a3009-0dfb-483e-b4f2-3abd525bba6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1bb92b-0744-4cd8-8344-45c3b4f35d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b5ee08-b7ae-4331-89af-dd22b1c7ef29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f99d6e5-ea7b-4720-8144-7591dbc2d93e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6730ba40-cb2d-4e5a-bcd6-de5f6ae8db1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2ff806-e8f0-400c-bd1b-6cede4b5df42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893c25ae-cff7-46ab-8f19-6d2a718cfea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9b2b21-bd70-4b3f-b7d6-c5e63e8d439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53898019-0da5-4cf0-bf9b-44949d297b46",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ea9bdc-fcd2-4bda-9f96-e35643c43eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b618ba8-6ca8-48d9-97f9-2ab5987e1189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b71f5c-2710-4512-9085-17c33b3b383e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3337e5-ff66-4ce0-924b-59c2094054ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9500c562-dbc6-43cd-b8f9-25c47a74d01f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041dfef3-c75b-4715-b407-196d3af6c027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f60fdc-1ae9-43c0-96eb-17b4036535fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa3e131-dfec-4bf6-ad81-d6af895082e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a103a2-b5d7-4013-8b5f-86a51adeacc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99af020f-2213-4983-9ea0-9308521860fd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917a4d81-9fd2-4fc4-9bca-6c40c5fc0f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72015834-2326-4300-b4bb-213787d561a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685018d4-d436-441b-b43a-e1631d2b6d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "473088a8-c8b3-4ceb-8bdf-52cffa5dcfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be92939-40f0-4543-86d2-3f1af9b7b89a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71fb35b-e126-415e-833a-70ba25030771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d613987-0b8b-4fb0-934d-2b701b94011a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc96df5c-c6f3-47ee-aa40-4a5e7dd68908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6a201c-212f-44aa-89d5-13d28cbfcd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a1a44f-6a8e-460b-bc02-26503a727e7d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64f07ba-736b-42ec-83d5-563a29057614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "102600c5-23f1-4fe4-85df-96f8fec512e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed23be0-fba5-4a96-822f-d87215fc7e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32b670bd-8a87-42ac-ad51-6ffa024a3fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a07c5fb-026c-4f29-b7f3-ac57008a7e85",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064078e9-8550-456c-992e-c746502874e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04860c2a-918b-4dc0-8985-f69d1a2454f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e98e22-f50f-4377-b30c-3bead465d441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2088e308-7fbf-4d0e-9674-e352f183c0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f733223-d280-40da-99fc-c1de3d8c4230",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f169e9ad-5c91-4087-82a7-c19b8f8bb5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e638881-3cc8-489b-9669-a853fd7673ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5673b67-81da-482a-bc58-69e76bf0290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a79bf4f8-cc95-46c2-a3b1-97c5d2aee5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683f28fc-518a-4f97-9636-4eb1e7929922",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4843f968-bc4b-4ea9-b26d-f216ae42869e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9201a110-b2af-41cb-a4b9-95c18e0859b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7415de03-bc0c-4812-8f38-9b48e0b1b532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd7b527-a7cb-4d72-af4b-e4c6f4015339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e594c9-534e-4e9a-b215-9deb5620dd14",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816cbd18-c43c-40d4-84ca-b09c8cb50704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9720c0ac-dac8-440e-b513-29d273c6947b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96266dc3-cdb2-4a26-a909-1fd866f1cb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4fc162-006e-4f3d-8390-1840146b2f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384a7e61-8c58-4dcc-b169-9e4efb505acb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f44a3e-711a-4b6f-8393-83c9c9089424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c0af11-446b-49f0-a2c6-1a64e86bf2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598774ce-31f2-4916-a765-e755198c109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2cf312-f5c3-4286-b99e-e030fd972fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39a3ee2-9a7c-4931-86cd-e97d6a820e03",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3440090b-0632-4e1f-9354-b56d570505ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a71440-e163-4554-86e9-d09e977102d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98608e0a-2430-41a7-b735-5da10f661285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a6907d6d-9149-4b15-827c-7757b09edb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756fc8be-5295-4362-9739-1a1b359af8bc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269f7886-bd72-4552-b4d2-1e55ce74a1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1727b9-a7a5-412c-b90e-15cd30c68b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ae4501-c305-4ef0-ac43-25ac898971a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d4b5bb-e4d7-48cb-a794-6b2a17cd6855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93b3c9f-dda7-42ee-978c-e0a1de0afa8f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f8908e-68ff-42df-8cab-40c3bc123769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd96f90d-5a5f-428f-82ad-1a4361fdde80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af652eea-5a0e-4375-b220-612488f7edbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6bd3a0-350d-4b39-8026-c45d43c655d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce577a6-02c3-4379-b74b-57ffb274d862",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b719f3-daef-4722-9f52-cbeb78b852d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127deeb1-ba73-43e9-a69b-02dd92f1be64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fced3c5-d4cb-4280-9ff5-cefa17df59c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "454dc23f-6935-4f33-bf1a-04dd5529e235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2806345-2b9c-44ac-9802-d96974f02ad5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71196e30-cd6b-4bf2-b324-d77b9e050549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814930bf-eefa-4e57-a522-00a9bfe53054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a46351-adb8-4836-bee0-bc9aed2e08ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6787cdd-ac97-4d8a-90f2-09ce9a8c018f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569c128b-3e3c-453f-ba7a-b770419d0820",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c7c133-447d-4d33-977a-c26646b41570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b6c53b-e614-47a4-906a-9cf1c7571655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14747d08-d8f4-4cb0-8504-00b4b10816a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e478bd6f-c7f9-4cb1-b3eb-70fa09d41b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddf4677-9905-4a23-acc8-6b05871dab6b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b49021e-7b59-4880-bdb4-f8400de3370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba99774-d61e-4da8-bf3d-ff061240d002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70ccf47-90a0-4e26-ad25-ce7d3abc8653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece00bc2-b3a2-43fb-921c-418e1515ff70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781607a1-9f77-412f-b0ee-6d25d1eb6467",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601b9d77-47e3-4086-a517-837ef24933b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7581fbf8-55ba-4716-8e95-f396d4ccca22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e6d002-48ce-4488-80c8-5e947a6a00f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e156f892-1a50-434f-b4f0-d42ae9e04c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bfea2b-5e87-416d-9e2d-f1bebaedc7e9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3e08b7-274a-4912-9e92-326f90a93449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b023e8-b826-443e-8f22-d9f858e9c6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e3fbd2-293f-4167-a261-dc3ae6c8770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56e70b5e-0662-4080-92ec-ed070de4cdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ffb06a-02a8-4fa7-97ed-2c890cf2ca47",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d699641a-b545-439b-819d-79dec64ee441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930658b6-d9b9-4b56-9bb1-b6787692b8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0910d9-b835-4fc4-9979-bbf2cf7cea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5772331-b63b-4967-9a17-de065e6e5763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555f0096-e87b-4d55-87a2-6ab8ff5d7caa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fbacb8-f111-4017-9710-07bd7944215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54bb825-0a9d-4e1d-8bd8-1d5366fe65cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bbaa21-3ffc-4743-b7d3-760c6ab9a7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00f48c8b-b606-4b48-ac2a-7cf1dfd4bd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9766c7-2e0b-4e45-8aea-ecde49ff346f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c4721b-7727-402b-9d23-85f4d28645ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6109aacc-17c6-43f8-8d53-f16399706c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb96daa-1761-432c-8afe-96c83e00bbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd12b8ba-3553-494a-9e6a-57921610508c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e2487b-5692-4a22-bd3d-75b8400634ac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a913b7-b239-4832-a48f-f694c9429d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8475a06a-e491-452c-bc1e-35d02f674ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3920f1-e083-42ad-91a7-c9d717c4ad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9234593d-aed0-4e52-94af-3d5e0711a713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872ff4e1-9d70-4f50-b359-9cbdb5c68391",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2313689b-fcca-4b9e-a6aa-9d070c9d0bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bff931-056b-4c50-94d6-76853e2b4766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ee77b6-c063-4b6d-b236-c83460c610fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21255a5b-445b-4084-a318-9709de6973dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d5db60-c19c-47d4-95ca-1a57e1c6e776",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8275dbca-9199-42f8-8727-0f41343d9f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48318ecb-f4e7-4935-9a72-d92aa5b1e605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4926432f-7ceb-42ea-87d7-f258c7179ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4c4a32-ce82-47e7-9b12-0b118ae4d0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924df22b-a5af-46c9-b77b-b1d858234c83",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d64070-876e-4104-a838-7a2564ddfbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b24716-fb20-4407-931f-7b59ea68f8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e412b35-bc67-415e-a8f8-afdfb4ae578b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f97c4f64-ad37-42d4-88a4-ad584e39d985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24818734-975d-4782-b42e-74369e2b1ce3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe532ca-2345-4aab-8c64-ec9966dc79d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0aa875-7752-4d76-8d45-e5100bff3c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a8d1d6-69c0-4d0b-ae90-ac504f8e34a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d8b97b-4bc4-4e2b-ab41-ea5163e404ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736454d5-9c1e-4a8b-a554-9052c414bb69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b305c6-4063-4515-b19c-2bb982f7ccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7a10b7-bafb-4f95-b069-b3ee3972eedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edf3bb1-9e0d-4b0c-a88d-14005bb2a98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8df327-a305-4bd3-a413-73f104bda4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a67e49-1e7e-4757-861c-04e7ef2ec3b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a77606-d1b0-415e-b9c9-d5bd3d0b7267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc1acc6-3f83-4f88-a03c-5fdd89c9ce88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad8fac0-255c-4004-8910-ceb675466a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28dbe77a-af76-4bfd-861f-f1f7df85a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0077ff52-f9e6-445d-9c21-78180f0de18a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b858a8-58fe-433f-a776-a534184cc763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e6c88e-164a-49af-856e-1a71f620452c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4154277c-0ff3-4702-884d-ee87b7bfd2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "85eb17bd-70c2-467e-8e87-41ed207e8fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47ff02e-46be-42bd-accb-d0d743f62c50",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30be243b-62cc-4388-b382-a698fbe167cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2492e3-7eb6-4bc2-9474-3dde13502c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6fd5a6-7f58-4dda-adda-829f39097f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d22c5f-931b-4602-93c9-4568ff6f8225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa9cbfd-cdb8-46af-831e-111c4c6d87cf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaf93a5-1d5c-410e-99e8-9229dbb84cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7ce31a-b615-4f8f-8650-d42f122920a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6669ac23-55cd-48a4-9788-b9d505cd812a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2f1480-bcf1-4d77-9014-b28293f8f065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6adfe7-fce3-459b-8874-be8d338596d4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544535ce-2043-4689-b9f1-2ff9401522fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda8078d-893f-491d-a9cf-905a51d87204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670730f3-881f-449e-b9a6-ae4f7e971e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c4d74a-80a2-43e4-803d-b36b927d3064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ca1eb3-975f-415a-9e5c-fff37ebf4c41",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6707c5-729b-4222-8aa1-21a0eda80dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42410ff0-cf4e-4bbf-80ea-c9d203576a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ea8bca-cfa1-4ec6-9b48-0c4f592135f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00bf6cf1-bc3d-4b97-9179-37e6f693a8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191cc6a1-bc6c-4a7d-b871-91017cb647b9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb43992b-8f5d-469d-af11-0bc3ba7f7b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b0270e-a642-4ecb-af06-d09b10e84f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5de707-832f-4fe0-93c4-a4e53be768de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66724a5e-a3d5-4644-9734-e651abbf7b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090fbfca-11d6-4557-b268-6c14741e56d8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578a91e9-a711-4871-b651-77d77b211843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8238c048-3147-42c6-8cf6-73d66e88088d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45e7207-b755-4bab-862f-c5145eaa277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf605c5-41ac-41ec-9da4-7ae8b0b7625e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be6e0b3-819e-4673-8774-27592a51347c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbff2535-8e69-49b8-afac-c793c3865d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285a57ea-bc08-4141-a7f6-c3db761ee4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09b951e-d032-412d-8435-8d3e5c037186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6eaa83-a571-47b1-9460-19c9878e0042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf568c0-e645-4c1a-b3cc-faa0d439d486",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e092bc2-1fc9-432f-a26f-91f93c509bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28453d2b-a5f4-46b5-b8cd-8028c1e11daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfa35f4-5c50-425d-8eaf-5e947efc7e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f331f6a-7037-4ebb-8ee3-dd3d82a32387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c49eaa-1aca-4954-b629-6fec5bebf2dc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffb2d32-fe8a-48f0-a5af-a1c8d0018b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8531713a-1d96-4231-990e-59454884d3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ff9bd6-0211-48fe-9f45-c8009e35649e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15444a95-8333-4139-8116-e8b0597b76e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6689735e-6e9e-47ba-b6a7-ff9bd1cba5c8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac7a34f-1594-4753-9b1f-3f74780b02ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2162209-9393-42e2-8754-0b99c92c87c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eaea8f-abc5-48e4-85f6-8e7b577b7dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e597458a-9ff2-49d0-b68b-feba91455669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf9208e-02bb-42be-b582-267cd2d2077e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707891d6-45c1-4e88-836a-c41cf1fe2a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be285e49-73d4-4327-bf45-0637710b0cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bad129-0625-41ca-91d8-6e2feca518a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedab981-3f7a-4078-b335-1be49df11eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9107a16f-96a6-4fb3-bd54-fc31493ae7a2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c22228-a507-483c-825a-d0f2504ba9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9bb0bc-1e80-4c66-9ba0-eb3e9d16837c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f49d4f-2a67-4a8d-b04b-5321fcd89557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bde45b1b-6363-481d-ad92-0ad67867f9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da57ebc-a228-41f2-81db-5ca2af879708",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fe96fd-1552-4bc2-962d-4528b83ce657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debcc7b7-3bc3-4abc-ac85-9e2abc31b768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e536fa7-8c83-4400-b5f3-9ecb7674be54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc02870d-9790-4bcd-a2ad-f2ade2125ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a30879-8b47-4f49-9fbb-d005c505d5d6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cffa70-5891-4cf6-9d46-76b14371bfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7353a00-7567-4f9f-80ab-e64f28fda9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b7af62-e120-4f4b-933b-c9816f71f15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5423dba1-827b-406e-a57c-58c2aa59a9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36623a40-8b3f-45ee-b087-33929dec54eb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a45db0-947d-4b27-9880-ce202f512976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa8a6ae-61b4-4e5b-94bc-e48481b22ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d44ba7-1f1d-4a91-ac00-947005fbeb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93eca090-22da-4aa8-bb7c-8b06800e4ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d987482c-892b-44e2-a65f-616d573388b2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d018bb-ba0d-437e-96ae-fe482b10c032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3f8fef-22cf-4df5-8087-32162a496d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6495ac9d-708d-4379-b447-1258f3fb5480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "864b31fc-f445-4307-a4b1-ba5cb4dace56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef4096b-78c7-4f47-a804-455e65a65b1f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ce4b50-576a-4089-82f4-18836a6052d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904272c6-8aad-4024-8e6b-5aab4e5fc3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b28fb9e-f71a-41d6-8d37-5e6704747ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "084c2546-92ca-4781-b78d-0d608296736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b5a532-3ce1-465b-af2b-338a8ad5b1d8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af637c24-eebc-45c3-bad6-c7165a082695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e7f141-84d7-4df2-a3c2-8dde223c71d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222af01b-ea45-41af-9232-09de2cd0e35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd63f0c-4db2-4681-bfca-c1996d47695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca43707-87f1-4a2f-adbc-95965a486fe6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cc2d67-ca43-4a66-ac8b-403fdef77de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176ee32d-366d-4bcd-93c4-e56d5f6149f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf15ff5-f078-40c9-a439-8e4691a2e1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "982fbd21-ad77-42c8-aced-b9e3468a110a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec9cd0e-215b-4490-a3fd-e3dba8bccb11",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c6ca5f-317c-46cc-b927-85382465a96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2004a69-5dea-4b74-9d85-e98363aeb5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fe34c7-fb79-4eb8-9695-2ae703bb562b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d5edab-20e2-48cf-b9ac-2693b264ff4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2352178d-3257-4c36-a23a-d27ec3490e27",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d65bd0f-58b5-457e-b20a-75fb26f8854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893b26c0-d523-489e-8e56-9ee24fa1cbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac1df4e-9c6c-457f-91f4-5349fa64cec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff0bfa6-3031-4f81-a255-090af3d8879c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1ac391-5d6f-43e5-9122-d3491e274587",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe0c715-94b7-4c8c-af61-4dc7757f10e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b13236-9808-4904-847a-3ca6ff7aa718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bfb187-b58e-4cd8-9b17-311a6639b7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c1dec6-6525-43f1-af06-de58db93687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3007df-abc5-4de2-b3b6-40003490056e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43f1cfa-3a0a-43bd-989b-27032110d97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f982c9b7-0ddb-4674-ae8d-e0ed04848d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c71f73-10e5-4c60-a40b-47dd47fe5a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ec2526-3807-40cd-87a4-1160b109c9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfa12fb-bd43-48f0-88f2-8ea861430594",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fc8e4c-abe5-4e20-8072-351bdf281f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d652fb-1fb2-4adb-bbd7-d3502e8d892f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c428363c-63e3-4c2d-85f0-ef1329313a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d47d8e23-1ebc-4b47-8712-f08a8d6cd5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1d1c8c-e163-4ba3-88d6-e50aa786e7ec",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9649908c-c391-424f-8d35-0afde718b949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7fef05-c84a-43f4-a4b2-26438566b4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579d827b-b200-42ae-9ff9-3320b60c0cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f54b9133-fdd2-4b49-9218-da22a0af76f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f7242b-fe5d-494a-b13e-788673db7fbb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a707720-6d30-47c8-b521-96c7e90b5e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a853dc85-1463-4d73-a648-268706d6ece1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747e24c7-a335-44d1-b54d-3ebfee4dd50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4a9055-4b51-46fb-8097-c40f62b46d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d24062-87cb-42f8-95b0-220ffb30193a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990f1938-166d-4d13-aa06-f173a50f701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5503d6-ada3-46be-9d01-1e1350685ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6111f8-e9e2-4c15-b902-4d9fd4532344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c586cb24-7e5a-4401-a2ab-26d8962eaf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee945c2-1148-41d3-aef8-871414971eda",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146a2301-07aa-410a-8b70-e13bb26653a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2512be-76a8-4da0-bbd2-7d8401f42f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f169ad-da1c-42d7-aeac-01063c6e97c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c95801-3d7c-428b-a613-b836318d8b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecefb89-a973-43e4-b406-982aedfc0fa1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ae7291-df85-458d-9c2c-48fb2133258c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9994bfcc-d032-4fae-82a9-4ceff28b940f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b867b1ee-15ee-440d-8167-ba33d6586ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc493e1-bd5c-4e05-9eac-44cd23864b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ece087d-1ec8-407c-8b36-cbccab0750d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ec1e7c-a3c0-45d4-aa0e-335235c189f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f848ded5-317b-44c3-ae49-37ae3a22ede8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e682bf58-513a-4440-8e69-a3ed39877622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a48711c-c074-42d2-badd-23697d9c2a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da8ff65-dfaf-42b1-a287-b49150982b8f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b21e2-fe81-49b8-91e2-d0f0721eb070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5a5466b0-0a4a-48c2-b80d-b01ba4b279c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19debfcc-edd6-49aa-a868-ff4c6ad25c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfeb0906-05cf-4683-8ee8-2f1c3cdc97b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45789922-048f-4813-8a0d-8430ce4d4895",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2bb964f-fb6f-41d8-8e6d-5053354a1371",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0155eb8-a76a-440e-8ff4-bd4088c4fe53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8194fc20-86e2-46dc-a6d1-d329d4e14ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2b4ad4-7432-4288-9157-5af21bb7abf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e10d6b6-b412-4985-86cf-69854c05ee36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18144a53-dfd2-4cfb-a471-b581a2db2c9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "496019e1-7eaa-49bb-8e99-d14f2435f5f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "944e8751-9a47-4273-906c-fde92570bca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c95d362-52a6-4eca-a6c9-0a9b6b4bddf5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86479f33-c7df-45c5-9a1a-d8f6116ac602",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b12ddd8-5883-4af9-b33f-fb487cb54678"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "16565ef9-f8a5-4be2-9dab-d0aa1360aebe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "097c0074-4136-4cf7-bc7a-33a0f3b51940"
                }
              }
            ]
          },
          {
            "id": "05b31da5-02f7-41be-b8b9-26389423cc81",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e5411a0-b6d2-4662-81ee-04a1afde9d80",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1e3a9249-5165-42c4-9337-c0481b8b75ab",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f0ce10-5721-41bb-839b-945ced1b8884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c4a61e0a-b5e3-41ae-a1d4-33476abe767e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e2d658-6611-4d00-acdd-d80cad64837f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69554166-b6e6-498f-954e-6b99146df34d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad29550e-3d7d-43b5-8b77-2792531a9fa7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4343c95a-c16b-4da5-9ae8-1fd4cab03cb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "258366dd-91ae-41b0-9d88-11c373e32d34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9131099e-d133-4d80-a412-89bcbc39bd1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60faa322-8914-4f75-a74c-5a01cf3023d5"
                    }
                  }
                ]
              },
              {
                "id": "8b9cd4a1-8567-455f-a627-27d0e5937f6c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c1c597c-3318-4373-8b5c-302b3884f7dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48d14b53-59b2-4dee-bc0a-79a0a024850e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80303542-343a-4ed4-8075-cd883407bad9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d419955-4dbc-403d-b890-53b4b9d7e3ea"
                    }
                  }
                ]
              },
              {
                "id": "c2c16a84-b361-4785-8aeb-d90c8707f2ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e29dd45-7eaf-41d8-bb55-d4b451b0d620",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29762b20-47a1-488b-8bd8-34d525f6edc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f77a919c-1702-41bf-ac54-9c729d6f272e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ff20099-9c11-4c79-973b-631a277d7753"
                    }
                  }
                ]
              },
              {
                "id": "2d3a7775-ffac-487d-8625-29d657aa465a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a2c54a7-45be-4711-9039-ba67f4f1184f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "049084ef-0d23-4c43-bbfd-9601018a714d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "194c2f76-9d51-4f3f-a1db-e64580bb3961",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e273579-6d69-48e8-9265-7f714524ee84"
                    }
                  }
                ]
              },
              {
                "id": "3239832c-cb17-43c1-aaaa-d745339037a9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a16bdf1b-2d4b-46a3-871d-47b919b5ddd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c403d0e6-a97c-482e-b98f-2b772b570b93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4ed90f2-0beb-4e21-b2f7-8b5ca8148148",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "efe7aa8c-a15a-4e3c-b846-aa9c3514a3c6"
                    }
                  }
                ]
              },
              {
                "id": "80290a99-11c6-4755-ab81-ef76295aae00",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6f849da-3f21-404a-95e1-cb3edd985915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a07e8639-b255-4bd0-b83c-1eeb985376e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab621b76-eae7-433d-82b1-73938308e5d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29ba1ce7-71b1-4807-9de4-1069bbbb6e13"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8788926e-e117-4432-9d3c-4925d6187bf4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34cfeff5-312b-41d7-8708-4313ce800d9d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dca29927-478c-440f-93b7-b6bae54b8fac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d23997c-9707-4faf-8e2f-46a13629f26b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0365c17-5aa8-4681-8a7f-e04b43d3339b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6657127a-499c-4984-b7ca-a65d6e6d0dd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8530089-526d-4561-9fd1-9ae9927248c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edd9d718-0975-4057-ba78-45fbc50887cd"
            }
          }
        ]
      },
      {
        "id": "b78d5ef9-d746-49f2-beb2-424287af7975",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "324b0693-18d4-4e7d-a689-f4a8e7fb1ec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dc7bdc2-c84b-40f6-a917-938eb58727d7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7022a395-a5c8-4ee3-a924-c7b952698f9d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c9400d-d80c-4a06-8aff-9a26a09768ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a865ce-fb44-41b0-8f15-e0daba4f0200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a71132a-5506-4dfc-838f-7612b66f83f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4859196-efc6-40e6-a770-8a664880a6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669528fd-c330-4094-8820-e715c9221c00",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62743b89-c750-41f4-84c7-11cb3901ed78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80562378-ed8a-4a40-b45d-5e67f502fc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4901854d-409a-4ddf-adda-69c11108d126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe3d777-e393-43ce-bcc8-779e49274265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c131b242-dbf3-45a8-a35b-20a5d8eeb1d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34825bdc-c840-45fe-b3e9-175866003733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0143387c-e70d-4e35-97a9-4e29da8be247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c636a0bb-57f1-4865-950e-b4cb7c50f360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab6df96-a570-4617-b20e-5564ae9526fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89adffbe-ba12-4581-a6f4-b6797378e2ab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531bf407-6b3c-4b77-90b4-f1d9720defcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e09fef-7dd8-488e-8c12-a644df60f9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cd3ffd-627a-4a06-a207-7c19766931ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53df5fbd-5151-4a22-be23-a1dce1c01c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34514ae8-bced-42d8-b3d1-d7d8083ac45f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac1da48-7496-4511-9d73-e3036371effb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca368e8a-eb01-4245-b9b1-a5028df2dfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219afa1c-4ed0-4fe7-906c-7fb7530e1653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fabf1f-d7be-49d6-a479-fda992f28f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca39e785-fdad-4e60-beec-cccc0c21e40c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29fdc41-7402-451b-bde0-57b83c26a9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4834ac-fd08-44d9-bfc7-e999f127c8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a33e40d-5ed6-4c08-8aab-8490633c1589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49bd22b3-eec5-44eb-bb84-884fdcad1d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7ed266-4806-41c9-a9c6-e804b6539b56",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617d1d9d-9b59-4662-894f-f4d9bfe17093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7334f858-13bf-4676-a826-b278352dc30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a246e73-4f4a-4126-b273-e5fed181466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "53574f89-6375-43dd-a1bb-b83c3204e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2772657-f9f6-4b9e-96dc-01ca492ab6d1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57914629-cd13-4186-b2c4-c49167a0b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1537e341-9703-4cfd-8778-52ef8430dc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25577110-fb45-44b8-b62e-8cc2c6b4ea52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe50734-8b01-49d3-9fd2-8ad09ac1295d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935814a4-4b9f-4ebd-8b3d-f79bd920de7b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75b0a0d-63d7-442c-af76-6f89f82af425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06788d91-cc4d-48c7-8b3c-4cdae290afd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78dee9d-8c84-407c-ae14-4965c72ce696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7552b652-4422-42b1-9b06-8ab557c99dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c772b361-90d8-4bff-8a33-cb52688e7491",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c121501e-c4fa-4eea-a9e8-9779ffc667a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0252d7b0-e264-445e-95fc-3b65867f765f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022513f1-5c15-401d-b67a-9e97df1e1617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a65a5318-183c-4f96-9e50-ba902207b43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93064259-1123-46c7-a870-88fcc099e719",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c9b7f3-6f99-419b-a7e9-6269ac537ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac609371-b219-47b8-bfba-0c333ff23c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4441a5-3153-48a8-aacf-1d2818d0182d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6de1427d-1d4b-4f38-8f8e-c7b1f9c077c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51695e13-816a-42ce-b5a3-dacd731b28b0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3844e937-5114-4087-b8b3-5b6aa0ccc2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f60dde-47e8-49d1-9e6a-665f83ab9c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbe1705-514d-4f8a-8e47-dd0ff79d0c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0d1200-2d5f-43a8-8d3d-131a3b43a16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a23ef2-809a-4e8f-a4a0-c8713aaf7c83",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c534f0a-1c54-4565-b044-a3a3357233db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e14770-4238-4d92-9c1e-305579e5ab09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db6978a-e550-4977-87e1-65c2fa521c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "349c32dd-60ce-415d-b0c2-96796c9610b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180c2e37-97b6-4b15-b00b-5ceef38ec79d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0749149-d0d6-4c83-ae23-2d8c21211c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e21077-1b83-4caa-984e-20670d02de0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ddf29e-52fe-4606-96b2-0802749f3169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a8de4d-878b-4bd1-bea4-d43536be8cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1febb395-dfb5-4952-a32a-d6ab11cdbc9f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223ac6ad-e294-4fa6-b5a1-348760751c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6df32d8-372c-41b9-9457-e3dd4e40ecd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8850bec1-8514-48ca-b0be-c3b31467861b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba4f1f7-ba00-41ce-9773-61171c363889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d41100-9997-4f52-85f6-9a9994222c9f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3004eb2-f7d5-44f0-ba24-4304c60f2dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea259f56-a571-4128-b05b-e97e3a9c5cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3666f916-ee8b-472f-bdfd-a864e86d158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60fe7aa-ddc5-4b51-9b42-6452fd4ec752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451d3240-94fa-4de0-bf75-841b0e2a5c17",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10312664-5bd7-4fb4-823c-da10818d32d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a864bdf5-ad47-45ec-b077-745761235534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a6bfa8-4761-4c72-92c1-c9f589ef90a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "491d70c7-8630-4c43-9110-96ced6c8ba37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a5e2d7-1477-442b-bd3e-dbb6f1459835",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dca124b-d5f1-423a-807b-3215451a8d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db6a13f-6820-41ab-9f74-2b08723073de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e87b23-bfed-497d-970f-d6361a1ffbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3e0655-0a7c-4f99-83ea-b0e4fb016cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e355a7-6357-4086-a3ca-06214b43ce46",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe17156-1235-46b1-b269-4a8b99fb8d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d014e5fd-b246-4d31-909d-9c4b237a4f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd45d91d-c54f-4ca7-83e8-6676bb833d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66418725-782c-4afc-ad76-5d391d48fe67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41671f17-cc0a-4a83-9de2-8484ce7a62d4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0c0e96-31eb-4edc-a644-81dd077e4439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a129bf-88a5-40e2-ae66-1ea2aedf07e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fe1caf-abae-445f-8d43-60cd4826dddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4903ebb1-33ad-4b89-a35c-2b6b53297a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfcde41-903d-4933-935a-118638d3f239",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9482e501-b5a7-4555-8689-7542fea4b8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c3df2e-89f4-46a6-93d1-8a3b1eaa03a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b7759f-02b3-4510-8589-56cb906795f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d55ce1ec-688e-410d-b79f-33a03db39eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559ad3ea-84ce-4968-b145-1fd3e63a5d17",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd3e0cd-cf6f-4c2a-8a96-ce619004519f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e37604a-c08e-4d1e-87b6-2b072a516ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd4544b-5faf-4d7d-84f3-7141328fb8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb98562-b9e8-4c4d-8243-fc0a487b6ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4c08a9-366d-4229-9333-24997f17eea9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4baeff-cf24-4fa9-832d-456d093dbff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a66376-97cf-4c6e-bcf9-0781d196e731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597b1bba-615e-4ca9-bc60-96e73ca56112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e75319e-e3d2-47da-b6d8-2a32f4841fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abadf001-d5f5-4a29-9341-3d11d5647561",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f16998-ea4b-4f3b-be68-03c035b66500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac0b400-22c8-4f75-9ac3-5dbc7261e033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1072f761-6e60-41c5-878a-bcb840fdc3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc2e350-d86d-48ab-89f1-29b57330d372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f982ef-88d3-46d8-a69d-db5166e461f2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54667672-7030-46d9-aee9-fec72342feed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08360ed8-e10e-48fc-8132-0fadacf1a983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffb586b-6327-410c-9dea-afbcd55b766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fade1d-7088-4899-aac7-4200a0eaaa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ca3f43-179e-433e-9b70-785fa1e50311",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa493c8-b454-4f9d-88d5-e8bf0cbbb9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5a253c-11c9-413f-b789-a993088b08d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cd2e2f-49d6-49a6-b952-d859d963eb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f310d3-e32b-4eaf-9d02-e76e81670bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2a276e-4cd2-41e0-bc6a-60c14de0ca6b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debd0079-0a10-47a6-b093-99c968d589f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c419774-c017-4917-852f-ba1161d2fdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faadbc8-2028-4a2a-af3e-9f9bc139b70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baea8bd1-6ff9-45f0-8297-9bf47bc12396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1f5c92-4ead-4d5b-b129-731370a4a0f2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad7c50c-cbe2-4b5c-b543-ef61aaf9b7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ff4a90-598a-4e91-a3b4-4a7f643ec438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d190576c-cd5a-4d05-9b47-38c55f363a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf22035-f958-495d-8f09-096f02fe347c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305a1af2-c788-46d6-ba63-a3344f0c2645",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f81315-1461-4b43-ab4b-4932719f321e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bbdf7d-59da-4ae4-839e-20760f4d5a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8c195e-45fb-488b-8cfa-0a6a9f0f82fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3c921c-b748-444b-8db2-99814434da5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c747b8-1a53-4acf-80e3-957c44d8e8ad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f579323-86b6-4150-a467-00561710d4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f6a8cd-0b48-4ffd-af77-11b6e2a4d5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a3dc7c-a0ac-4c41-a33a-8894f3e16707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c06c2ef-8152-49c9-b155-32b093a9941d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44073314-a852-4a71-94ab-f43732ea4cdb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901d8077-c2ef-4fc8-984f-64471753e570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0c80f7-d2c0-4bbf-870f-962b16ffb9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b19dbe7-7d51-49f7-9ee0-3c502f7a8de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba92630e-72a3-4ba8-9772-4773eddd998d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4490e0-9a2d-4ea3-aabf-42e829443039",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808cd074-9ca5-4abd-969e-fed9f71c4168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e93a793-1774-46e3-b6e9-360b8b7d3c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4068d8aa-b7a8-4baf-9d2c-151c3ce39c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa87f62c-406d-429c-85a0-0728af295698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24f3a67-2b8f-4955-944d-74c8c59cb91c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4beb6de8-b9a2-4e68-963c-1933a5a07f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ccd1a9-e970-436b-962c-de92d12383af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced7e6f9-c997-4136-9b09-68dabe5da9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34f8556b-21e1-4621-815d-eab84f80d4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebbf59d-239c-4be6-823b-895200d29988",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6630aa09-bcfc-400a-ad8e-0060ed425e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7576fb5-2031-4a5e-b36f-7763b3b7657e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3c4385-6fc9-4af7-8701-e3e66030a79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "730566ca-a73f-4801-af92-453fb294d328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43978f3-42d9-4985-91ab-d7ab08594e02",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae962688-8f4a-4d27-b1a1-583ea2c20c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3624ae-ab2f-4535-8dea-ee1b5e2a5079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a646344b-f0fd-44a3-832f-6290ee378ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef618f9-5ef8-4974-b272-b12bd273f0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40569eb-80cd-4510-a7bb-f0ef90f01905",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d45ef4-e98f-4a96-a452-ac982bd4d16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d7e723-011d-4749-9dcf-1d24a3a80d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c2f383-7c7d-4c36-a49c-c7aa5e1e2bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "666e8794-1e89-4050-86a3-e1d1281d2d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed18154f-2f8d-454e-84d2-91dcd7fc206c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5f6fa3-e634-4f32-8e18-424852dc719a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518ca895-ad75-4d9d-9569-dc7658d38be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ad09d3-a9a1-4c30-a20b-67d6fe788ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94ca523-03e0-443f-ad57-28676210d74d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c0d90e3-3d1d-4bd4-8325-0c3c990291bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c35d9bff-86f9-43b2-9616-e3d38c9fb4d4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694938d2-aa0f-43e4-be4e-98957aff4cc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32c71159-797b-4772-af44-1c9524aa015c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282f09f8-e730-4dd7-a4b0-5f8d89759b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71f89471-bd5d-48b3-9bd0-d2d6a6ee7337"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e20281b-a2a0-4d4a-8e90-fcd1dd8fd9d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fee86b8-7a5a-4c77-ae29-5941540bd92c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e12e7f5-ca14-4e0d-907e-4e9156d298bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4929e1b8-c2ca-493a-9179-48bac2a08dae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8fa1064-c4a8-4ac8-b231-43b759f2e442",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "318f30c6-b5e6-4acf-86bb-793be4b1bd61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db7d817b-53c3-4a61-aedf-00f258a3b51c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "606d04a5-7d36-40e1-af25-0da197a621b9"
            }
          }
        ]
      },
      {
        "id": "fecd0eb4-9a35-465b-be3e-6de9ec7a9850",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ebf7e2dc-0eac-4a77-9c25-ea880b91361c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89cb77a0-bc96-45fe-a539-34062056d09b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f4cb269-b049-4002-a94d-a18890972a42",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aaf639-ca86-4d55-8e1d-3ac8179e95d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bdc552-cdc7-4b07-86f2-8cf459d50d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bab5a2-9ac1-4273-83d1-25a034043297",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de914a39-2a3a-4529-85f7-62eedf385a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d34768-9da7-44d3-831f-675fbfbf7ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb7821c-66fb-4af4-b7da-d4efba8328ca",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade6edbd-cc65-41c5-9147-13e4aeec71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bede0feb-3dd9-454a-993c-f35fea7b2f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a7a423-b7cd-4c97-b479-2fda94ac2c89",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c275c4d2-c5df-4954-923a-5ceee35d62d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a548de4-5116-4b04-9974-aa2f8301f8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4edda7-cfd9-4b76-bc3d-aef924065650",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1802ad9-e5a6-436d-98c4-d5f878752d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce8fc87-dceb-4623-a29b-272072792829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3dee08-bbb1-4351-8739-4af14d2fbc20",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6be191-d5c8-425a-9765-460e89071829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a782d565-ade6-4e3e-be4c-d22c0fb9c417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7153b3-3255-4b35-8ec3-6509cff1369f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd120c4-af4e-4bd5-a028-67b37b2d67f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f83c56-6520-49c7-9a47-c48bd7f40a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a483b-ceeb-4952-a34a-caf71bb7e1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa676d4-a596-4fb1-a1b3-4dd7c9ee52fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0943ed-1c38-4327-a0ef-1eed9654afe1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1182a19-9580-4d61-b78f-ba873898606c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b721d72-8dab-46d9-9abc-7bdbe50d75f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3fbd99-502b-4bd8-bc4b-498b6efb1338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73adee30-5047-4e7f-a28f-c4fd13dd450c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f76311e-2de1-416a-bb8b-373b7d95e7a4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0381a9-2bf2-43b6-ac7d-37c6d512f5b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34bffab6-024d-4415-8b63-eac883f430dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ca05f3-3f99-4a60-91ee-7bcb098c3f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c177789-3d0a-414c-a77a-783f18d104fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed27a23-c0e3-4e7b-8753-20b71af8e624",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f147376-82d5-4a8e-afaf-67482702fe12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b46185-42a1-4268-9c8d-a12e0f47cb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8f5bde-7e74-4ebc-be24-bda18044461f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52f966a-6a9b-4045-a6b2-598be5b3d8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f014ba-e88e-4d85-9eda-aaf36424ec85",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab4b73b-d1d3-43a9-9e20-be8fc35883ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e8757c-6f7a-49c9-ba87-a20193b8c563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab33d72a-8cba-48bf-95a3-99f484246434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d123cdb-df2e-4268-aad3-b8ee758d09f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e74fd00-d15e-4f85-acfd-cdcb2de3bb5d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695fce7c-bbca-475f-9654-775e3a7389df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dabed0b-ced2-43a2-8518-14a8a0efe675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d730c3e-61c2-4668-8dd8-7b897c9f7601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71475d6d-3e22-4081-99eb-29fabf87a7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec243f7e-ab05-449b-9818-5ff3fd0990e5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8972f9cd-b2d1-443e-a5dd-cedcdeae7eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0293f27-a11d-4ba5-90e2-5a6ae0f1c073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529aa4f4-9935-4594-b582-fbcfd8d46701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3dc25c-1028-4599-8d6b-b1ee0aa24fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7912892f-49d1-4cf5-873f-66abb0f8c705",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8801c966-6c63-41fb-9ef3-d01ea1c1507d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7449ce-a6f4-4fe6-93f3-710e7b609a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b2573c-9965-4f1a-ae1e-0dc3266b469d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b46490-1d12-43b7-bdeb-c2b031f8b2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb6f879-1d78-452c-b6bc-cac4d0ba56c8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc30f39a-6ecd-410c-a7e8-ab7af306e66a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f12127-a716-40ba-a688-a32e8975adb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cb58aa-8798-4d00-a60d-ce061f06e17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56a2888-7535-45a4-8148-e2ef821acdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1892d65b-dfd5-470f-9211-8baeac999d05",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45c30f0-31a5-4d17-ac40-c62a6b3cb7c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b69c2d3-d77c-4d81-8078-fadfd728ebd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132fa636-f9ba-4153-887f-e0e2efa11a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5628bd-4f0d-42a1-b4ec-25c2e816e949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb7ffb0-9518-4b72-80d5-e0ae7a62ba8e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f775e076-edc4-47eb-b9e6-048709b44d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da694760-c9ff-4393-adb6-f9b49d611e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d900f43e-2a0e-4829-98fb-b812609fe308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e766e1-f9f2-4410-99dc-b65cee8169d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2bf6f0-aa2b-4fa3-afff-dc3fc6036e9a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9424b863-1818-44b5-8c4c-7701f3810caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dce213-51bf-4682-be17-f69142e2c2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f04b7b-89a3-4229-a2e1-19e951afc526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac2da79-edd5-41e9-b6c0-e325244f3ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e518d4c9-7a51-4d20-adad-e14bf6f8eb33",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2d0927-d1e2-4b65-9627-248302232b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b56206a-aac8-4d3e-8ed4-db6373548b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eaf474-f478-4094-a341-f287a4cb3f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6011b2f-d39b-44bf-801d-ff6797e3ae16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0461fe-bc88-402d-ba57-8a07d0851309",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bde301-d0d6-4d31-869c-c0c69a7a6a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de3c8a4-e98b-4e21-b966-d9a55f2f322d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e195ce85-c01d-4272-812f-6335d0d350b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1ad098-81e8-4139-92c4-0ba3200839d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5ca4e0-6ddf-4ab9-9116-97bbb22ef1db",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05360b7-53c1-4a02-9a55-90622827d380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d181c51c-6b09-4897-ad17-5148ca882f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565af18e-89bf-4e62-b114-2ef52dc0cbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e3ab19-758a-4454-8397-348ebb943f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4df5d7-6ceb-406d-924e-ceca03277217",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a700af-3cea-4803-86ee-ddf339e1c538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ea9be9-9f59-4a8f-8194-aa38a363af9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bd3fd2-b4db-4782-856a-9aba62ada880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05845fb-9fb8-4d57-9c72-f6452ddc17a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cc5b07-1e0a-4c58-978e-1392eb000d58",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76da930-c15b-49a5-91d8-dd602c1b1777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c15548-5d86-49ca-b60c-af1b6e5ce6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78b50c3-3872-4301-b0b1-49296118976a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfc9674-0fe3-4372-b0d2-c305e7e6fedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbd928f-5d02-46be-820f-18fb6d403fdd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8a096f-50c6-47f4-893d-0bc34f91e5b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00745ee0-b303-4ff5-92db-f16881125f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b447c823-d143-4ba5-a768-e90514ad55d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6103eeb-4794-4a1b-b340-c3fa113a389b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3765039-8957-44e0-a92e-eac89e8cf094",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97bdd8a-fc65-4e55-9e92-789aba055f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5a0be7-c114-4e5d-8c32-b6a83f2fadb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126a39bb-a771-49ef-a0f3-ef018acd979a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a175fcf5-b150-4463-8fe4-b300d9f4a18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b244569f-035f-4d29-b3db-933b72643b3f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfd45a9-72e4-4b65-8762-2d5be338c348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9865c1d-6c85-4bd2-996a-afd7420f6ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7119d078-850d-4fff-b2af-e9b422c3d69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63fad15-11a9-46e8-8ed2-4d0adfbbb9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e767516f-5cda-4d0a-9a39-a925d3b508aa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38d35e6-42f8-4e93-aaf8-dc34dda9dd75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0617fa5-4318-4570-9ce5-6d0177444aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838bac52-17f3-4284-834b-739f1ad657df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33750641-75f1-42c7-8248-bd39794a798e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e004882-b3c8-486a-bd26-dc268958b79b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb66781-662b-4248-b446-bf7670cf8b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ea28ce-a3a2-4b82-91ba-2b0f71b15c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8433c9a0-dd29-4e5a-a2d7-6879d2ecf602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89aed64-dc02-49d8-aaf3-6bb069bb43e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c59629-dee1-4201-9612-9e7af0832246",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23910730-0f50-4306-83a6-83ec350f2857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45869e87-5eec-4aaa-8760-730743dcbdaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bca6cc-bc58-449c-a889-d4f6eab0014b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800a07fa-a059-4fd9-acbb-ce53b17596de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244d9697-21ae-40ad-b097-4cc8b9b14f86",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa737ac-60a0-44e8-adf1-6923edac22a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622e9e83-2b2a-4d61-9498-3ef2d7e826a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd89612-fdd6-47b9-be02-f826a9569be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b24f86b-a6f8-4f0d-939f-decdc4b846e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd783e0-1c9d-4196-9d82-a71f41c33bb7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5e2470-fa04-4009-8b6e-433faf4dbee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f99725-d064-41fe-a9c5-6b637808e6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ccee8d-b5bd-4244-b4c9-5a28ef09d503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2132455-935f-424f-a95b-a303c4e2e32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab052af-d6a4-4f9d-a095-51b4febca3c2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634187d6-b37c-4f69-ae64-179608030851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e418098-7a05-469f-b492-1e5e36bcc2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e71c65-0560-41e3-81fd-ed23a419d347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e623785e-682a-498f-8295-679d30da4680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084042bc-e5b8-4119-8c0a-8746fcc90dd5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df98a68b-12f2-4701-9d1b-bf1424f2aa9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c44abe-8404-4a5a-b9e4-801b33ef373a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078f302c-2250-4cf4-8c2a-a196fa018d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e4311b-0790-47b2-b26b-42d30a30b4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056dc0ff-0606-4d8d-a87d-f8ce45ea197f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76be3cb5-8245-4612-ac28-2525407e3614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c243d58-1ac8-444c-a8a4-57c30a8157c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa3d48b-06d0-4fda-b853-b05b3ee95750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92abee2-e136-4fda-9661-14083206642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be6c402-16e1-4230-b3ec-898ae40f2f4e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d70616-c720-4bad-b337-88e4cc4108e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3e403f-05b7-4c85-bc33-602628c48c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837e3eb4-099f-40bb-ae9e-d307ff992b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8824595-4bd7-4c45-8424-470662163179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efbb1af-6de5-4f74-bbd9-3d19dbe2d624",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d76a91e-8a92-4a72-a3f3-77641409f334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30577d51-d7cd-4692-bd11-e0114bb1692a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19094e4b-2bff-4791-a288-f3043456f936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae18200-2d48-4da9-b90a-940cc1d2ff36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c10c37c-f318-4fb4-9971-5ee49fca256f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d1bcdf-eaf6-4480-8f00-e0bfa39a9006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ad0890-1d76-4e98-b089-3d94d8a3eeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097ef098-5698-45be-bc39-a80c702016ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40398e46-f115-47d2-bb37-32d4a95d4500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cbd312-8f1b-44ee-a239-ed8e6543ed61",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658623c2-3eb3-402b-b594-ad42a36ce8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43155e4f-f074-460b-86f0-603dba3b90d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884a7c68-5169-4882-8d52-2dce65145ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f258e457-36e5-48b9-9195-ba0c45e8d591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b2a925-ac04-4322-823b-bcf037911445",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1d848b-e37f-460a-8631-6b6c21d04111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aaa7593-3fb2-4eff-b8bc-eb2e0f348478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f2f21d-1493-46e7-94af-20f277bf3cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6fef7b-00c8-45fa-9050-66ba48a3f6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9116e64-4d30-4df5-b457-86a79172d9b2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340a7633-442d-4c12-b873-fcd88e80165d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18dc294-1f4f-494f-a5fd-2a869c65a4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec101eb-178f-4533-9d31-21df37654078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944363f6-cbb5-4381-8362-f0a51d179669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b11c09-0007-4e0f-b260-9c2864f2ddf3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220b9bbc-5bf8-4bef-b670-84c9458ffcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d431665e-2506-4b70-b6f9-2dae2cbbd096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aac056b-9497-4fa3-ba66-2cf7cfc9adb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af3a2df-844e-4c5c-bc8d-79f8e0389b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09cc035-8ee0-46c6-8a80-6cecee082c9f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e2538c-2269-4d2e-84f4-e02bded7bbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec47d0e-39ab-469a-a3b3-6eecb763eabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cb53d2-8029-4248-bc54-33a6a4458ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dbd90e-88d9-4037-8706-3605d202cb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f33eab6-021d-4d75-b94b-438bf876496d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45280ba4-2741-47a0-8a7e-c111a10c333e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4db50c-9bc0-4781-8277-14f2c4dd8dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6738883f-fbf2-4bae-a989-cefc1bafc8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a79931b-f749-45e0-a030-546e78c23fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ae0e21-a386-46c0-83f3-6b57023b10b6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c204e22-850f-4966-beb4-c96c7f3238e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8a2646-efad-49b7-a5e6-2e9bef372642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a8c8cd-dc96-423c-bbbc-8ff11ddc6d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ff759c-f17b-44e5-8a7b-834d5216adb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03164d5-f19f-4495-8c34-54acd8fe99f2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c976cd-0702-4d44-be62-9f27ac9564b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a886b84-8581-4f44-afd7-2e44b90670e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ce79d2-70c9-40ad-8886-e05e0ee1d23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11bd6459-bdef-40cb-9d56-98dbeefc9925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13095fc-04b8-4490-9459-0f977101383a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b08b2b-9e62-4199-bf01-18e2dede6810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceff32cc-84a8-46ad-befb-9c87c2e9a951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ba37d9-5600-4865-a84d-714c4220bb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8beb1502-f477-4ff4-8c04-070eac2bd435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b56d041-61f0-4fce-993c-5c2f07f3b032",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c616765e-2cc3-4cf6-9654-4713dfab838f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a3636a-7e94-46d1-918a-82ed825c0cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283108d6-5741-4a47-9b9b-b966928ad429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aedf4f7-7211-468e-8924-880429c345b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d4ebc8-9218-4393-b5f6-ae79079d1319",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294f90f3-a6b5-4bdc-8d93-d66b82e9daaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ecd4c4-f8a1-448b-8d44-2eb8e839c712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03aefe5d-1ba5-4f61-b91f-bc67ac3ca245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52513d7-4851-430d-a037-aa440678a898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ac31d9-7d57-4343-83e7-7338a53a8534",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a1eecd-aac6-4ae4-bc80-e2ebbdd2de69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3312513b-2ebb-488b-9bae-9f6628cdabcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0363dcf4-604a-4171-8879-1131b1ad26df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4feb96-a7c1-4cce-987e-5c4977415067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c834d751-ed7b-4f79-963c-c783f10871aa",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9edb9d5-faf6-45ad-8247-c79fc11cef84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5f4301-c0bd-44ff-8cdc-186abe992005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bdc51b-12c4-43e8-b768-2ef3edf07942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65060ff4-c3b6-4c43-9bf5-cd52883e717b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f8059f-512e-4e87-accc-015ac838d668",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efea840-06c8-4373-adb0-aa6ef7576b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f813cb11-6133-43ef-883b-28af6090a876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95ec194-4fe9-4e0e-8f61-f6f002863287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0bc825-6f31-410f-9fa4-d6608c81622e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c9c06b-8e1e-4fbd-a6c9-a8630481a9be",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5888c4ca-4374-481d-9134-936e573d7fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16e6347-9db8-48d3-8319-1dcb85a9b308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4612b3d-b9d9-49f5-b9c3-d9d65bb875c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d656f75-944a-443c-9105-92eb077e3551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeedbdd-c8c0-4e63-a2f5-f5ee08a93b1e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab21aed-db50-4b75-b5c0-77ca43b90116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdae24d-a51a-4ee8-9450-94cfcaf1fd15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70552456-d588-4cfc-80d8-3a2cdc7aeff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf6ff07-5876-4258-8ba9-7d2612893a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a7f4fb-5af3-4357-aa5d-b99fa20845a2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36b2f3a-5a7a-4620-ae74-af2763ff9b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8853a6ca-48d7-47d8-ab5e-5d21e3bf2bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08487005-eee4-4738-bf16-d619fd04324b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0931d7-c66d-400d-ba41-fd8899041669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccb2c91-62db-45d3-889c-3f67da90f525",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50fb821-f44c-40f5-9453-6c16b5965814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c077fe2-3d27-49d0-a0d6-9b3cb65b4e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5201330-5e84-4afb-af7d-99acde206301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23252a08-0ff8-4813-a50c-f118f15fafb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e599a2-f3b6-494d-9166-877f21d2ac5d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e962cff6-cfcf-4a39-b4b0-8a0adae7cd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de7a2a7-e88e-49c5-be65-c4af89e2508e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c3c3ed-60bd-44d1-8330-aef300070ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2400f01-7e58-4ce0-8388-959606a33ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb94f91-4bf6-4342-b89a-08ae0dfc88fc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275732e4-d831-44f4-806c-9c281a4b24fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36be9aba-9a24-4678-a692-9d7e91f9457c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dc8fca-3b76-4e9e-a82c-eaf68adef85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971652ba-7074-46cf-a3f3-59a74a5ed091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd2653f-c0b1-426f-90cf-ba49192cd6d6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70d7104-f5ab-41aa-9f95-512448ddb763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ce0911-4f38-44b6-a51f-0c994732280f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6aa74e-30de-49c1-ab04-71c89b545d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe89e76a-712b-450f-8a97-e7f8d7280034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0854615e-a75b-45fc-825b-8d17bb2c366f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafc7d01-8c18-418e-9f77-d3f70fcdf648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b0d596-d7fa-4ebc-9bef-9f7cfd5d24aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68038256-7781-47a7-ba32-baf81b10a5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0775df48-d901-4158-8004-23fc2ba259da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0623c0ce-a6ac-4041-a4ee-3615e773794e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1445d7e0-903c-43ae-ab27-31b0ad6a92d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d40779-f3dc-44ac-87dd-bfae636bbc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f55c1-47f0-4eb8-88be-f3ae84575afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83cd889-8c20-411c-8551-d07b8c1f9c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536306fc-18d2-4fd3-aa28-c1113c048821",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21882bb-831d-4ee3-ab94-2d41afba2cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55d1eaf-20d0-4b26-a2d8-37848b4ef9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0b2da7-652e-4c35-a57f-1803bcbc0b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d018e4b-8962-41fa-9176-440e74c5e27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7769f375-9dd3-4b8b-812e-c309c6ca0336",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12d95f9-b846-4268-bdee-772ede3d79f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aabbad3-3672-4289-9ec8-dc7b2f6a2795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f8eadd-8e0c-48aa-ae68-75375468ef9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f9286a-3590-4de0-9a47-bfc484b891db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba83ffa-bb30-45a9-ac8b-31b14a775d8a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d1473a-5633-48ec-a41a-841d86006cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd4d25d-db00-4243-90a0-cedbcc93f4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db3c243-eafe-4856-9f07-e4b3b64f4574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbc216c-de8d-4352-ab51-8316b4886f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23cd61d-812d-4436-ace1-9efecbc5cc62",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8e672f-d6d1-4a64-805d-c0fc2d7dee2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c9c2628-e275-431a-9742-46ba774a4ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e102b4-08fb-42f1-80f3-13826a956975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fc0b7f-4e0b-4376-9d36-000ddaae52f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838b784d-7d7f-4208-b54e-4fc941892f62",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ac2482-d423-490e-af9c-99a3dc71887b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53da55ed-dc47-433f-bd7b-a8c400491e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dd5d4e-9ca1-4706-87f8-83c7aa77e3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf000358-6776-4ec4-8e9c-8ac609d45ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8021f22-11b9-4092-b3b0-901b0779727a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52d1026-bc48-4827-b549-d46623df80df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b903ffdc-c36c-4515-8523-6602cfb5fcd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c54b037-5d78-4702-8d1d-4e5e5cd165b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d049a3-399e-4e12-ac24-a994cb4aa89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a750db2-7eb8-4af4-bb9c-a44effc4c228",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ede9e1-68c4-46d8-b71b-2e32fb1765c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38e2dcfc-61c4-49a7-8259-ea37002b7fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40f5e52-d2c1-43d4-8149-bc5ece6390a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578bf56b-b237-4999-b126-8dbde72c0fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c69087-3acd-42a2-8057-47e5db7d684e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c784077c-b42e-446d-87b8-48a3d91dc0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94427fa5-0b1d-4d94-ad26-fd94d4abe159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fafa75-0635-49cf-81ba-72bb39627254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81f232c-852f-4ab4-a239-378ed3cfb0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5413ae-5a49-4013-b439-4dca872211af",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402328c4-cf62-4e46-a6c2-7c04a4de6966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7efae66-35ed-47ae-971d-f5ec64e1765a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e28a5f2-aae9-48d1-92a9-3d51f608821f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7470bf8d-e70f-40b4-beba-4405c9aa5ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1b89e5-5fe9-4e4e-99ec-10b624952c0c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeb5227-04b6-48d4-af16-178510c4c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43215006-218f-483b-abde-7a96dc7cbaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba5c2fa-daec-45ee-b280-e28409e4c6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93481826-8ba1-422d-a9cc-cd0e603ee3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fee42c-e9a0-4800-a10a-d3f88aab34ef",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb2cbcb-111f-4614-91a5-583d28cff5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48cfcd6-1761-4b1b-8741-85cb7b5a81f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ce870b-6620-4f85-87f7-dfa799839b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a9ab5b-42cf-4502-a22f-500abf39f7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689fb617-a514-4cd2-a713-bd39cdb7e2a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29edd68a-b602-43f8-9620-c11a1052c19e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "198b0b40-daa7-49a2-a5cd-5da247fb03e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6d42f3-c530-4ab1-9097-50c7867edd6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d98e916-10c6-4fa5-a163-d8bced116baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d520e9de-f0eb-48b8-9a55-51a53a2db212",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914dc821-9fbd-4018-9b39-34530def0c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802c883f-b736-4528-a811-a9b833eb3b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45288cf8-c783-43bb-9ed7-5fd0898831e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d62a397-718f-4005-91e0-c5953a3bba12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86fcf34a-1586-4311-b82e-67ff34a11d0d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80770207-b3c9-4869-ae92-4b3fb81920bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8655c25-19cc-4c7b-a46c-427dab05eed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8494b3a8-bd9b-4ea1-833b-b8ab7a81b869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82427c30-4f33-4542-84d4-31759477b32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c02e28c-0e59-43c0-951d-8670279c430f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8774c243-5786-4706-b851-6124c8899236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b4bb0b6-af82-44ec-9d15-88e5192e70cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7403d3fe-919d-47dc-b8a1-3fc8d255d6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4010c41c-a327-4fff-b9ce-c8a823c27f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfa5c23-7c1d-4d59-98f6-ecbff06ea3c7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff86e8d-0e84-4925-aeac-cd8a991a9a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26a2df0-adbb-4446-82f7-a825e80d68fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c8b802-b511-4c9b-8df9-9da0a68f2833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7496ed-a031-4f6a-90dc-52d41036e0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db759ef9-2f34-4a01-bd23-4a446a37d2dd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbbfec7-baa2-4b4b-8d7d-4203c3afa1f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84856674-01b9-4496-a7e4-e0cbd76b8381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8874d73c-ba27-4aa7-a51a-0b444d69d3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9085930-0611-4289-9b1f-d1f35570f322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb6abe0-300f-43ee-ad63-b34eb5168fe4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202538c7-4ea5-4b20-82b3-91d409ed5036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e67e125-41c7-42f8-a7ff-5dd1113f829f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38358b34-f398-46ef-8848-42d1f10c68c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139a7f97-5bab-4ae5-a3a7-8781ac2e0c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e936fc77-b156-40c8-99c6-5e11fd94ebb0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902921ca-2c34-44d5-89db-2e32abfbba94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c1908c3-0437-4d83-b692-f06f080212b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f31501-3b28-4fbc-a7b1-1038900084d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8218c880-c7c9-4cda-87fc-0fe0b18de491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665c79ec-ab54-423c-975d-d8ac2b2fcd28",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab421906-7838-43f9-818d-4c2aa454dfc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ce51d2-52a0-4a0e-88a9-29f0a9065493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6925e362-fecf-46fb-9b23-29ba21329077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ba6912-f6e2-48aa-a54a-423f64f4a133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b35f751-9f18-4d14-9c1b-5e68831fcd50",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef708cb-34a6-4b65-8f47-5f47f3c09dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b84021c-308f-4560-909d-1d6dfae75cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f8227e-781f-46a0-ae35-3d684f4beea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619abf27-3d2a-4693-8fa9-6155bb28e693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cae6d9-383d-41ed-b2a6-f10c88a97bf0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc11ec54-e8ec-4936-b790-d11b7e5c3fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e984eecc-b24a-4201-8b14-8da8168c90b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b9dde7-9722-421c-bbfb-5a5cedff0b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ea7048-b15a-4d72-a7ea-f2119dd31880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a40575-bbcf-43e5-84a5-8f9123d6cc13",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd89091e-fd5f-41b7-bede-74d964a3004f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c86d3d3c-1432-4914-a871-ab294f9f219c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6054ee95-c6f2-4987-8016-3b79e5b62a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c56d21-fb1d-4adb-9f10-ac63210fc0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadb7ff2-3ba1-43ec-9ce2-4f41963a2ede",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ad4e44-5dd2-4226-b78e-809819577575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82eb915-8597-43b4-94a8-f914ba1b2107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b91e15-05db-4810-b189-36b3fb14f9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8b661d-b409-4e88-814d-6b5d8288e8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b4ac8b-e57f-4a59-8180-f21b0a7b1499",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088cb174-f4f7-4d54-96bb-871550eb2fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429dced0-2c48-4be7-afb7-626ce15f9a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e274c2a8-add4-405c-95ac-cb6218ac58ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7dd1af-ba74-43de-9b51-a77c6c7bc0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad8a9cb-ff6c-44e6-9a04-82d33a65b0b4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c9a160-b690-4512-9ab0-2ab337bf3336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072fcdfe-0dea-41c4-a8e2-72732995517f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5917fb86-f8de-4a0c-bf72-a56475899a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2617556c-5593-4892-9c94-74256f32de6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda8f59a-0f6d-4c29-b343-fc8e799985bd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ec59f7-9e5b-4f9a-87d9-d66c572cc5f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2100c13-dea5-437d-9670-8834f4c4471f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6e7ae4-255f-4abf-87b8-9805a14b6593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e8c37f-1841-40f8-9e17-6b5c2629f189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c936ba4-134c-4dfd-a235-b6b495038dea",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cec2b47-4e6c-4721-96e5-961b96f99c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96171fc9-dc15-4cbc-8b7a-db0ee1f61edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e0a126-aa97-4f47-a296-e0b55d3c5889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7397d2-eb2a-4273-bd86-db0edb9e09f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d810b5d1-3b02-4ea0-9da0-e1f205e83438",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3842e38-5974-4bf9-8f32-d173e9b75551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd930efe-cee1-48e3-97bf-36d73b29a42e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dfe652-7b5e-41b4-9b14-55aa60581241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228de402-e44d-42ef-ad34-c2f74fc23c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f377f3fa-6dbc-41ab-95cd-3cdda56f2118",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8214608-f421-4615-b225-d037548d9365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "413c87f5-e9e9-4ade-86b9-3c93cded2208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369fb6b6-a4af-4d8c-b1a8-7cf3f05688ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024db052-51e5-4b9c-9ef6-0e60c085793f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403fbdaa-2bbb-40ca-8b0b-4bd0d5f0dc95",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eff8a00-17b4-4b4a-a551-7b0e66f8a462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7304adc0-3a3a-45aa-8b23-97ce4be6b6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d969cd-ce4b-4bfd-ae38-5eb541ade0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b4aa15-4fcd-48da-92b4-a43c9c241a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7ca635-396b-4c7a-a492-7478da0c7c0d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ccb9f7-15ae-4f78-9bfa-454306e7bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5a2ae4-b130-4469-a914-b41f1dbc0c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d0ce62-881b-4724-98a7-3abe9b921ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2801d9-a13d-4699-9163-fa317dad0581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93083a6f-a91f-4769-bda4-08464e625c49",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1000a6-93f2-4bc6-886d-effb79ee7a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546efabe-bd52-48f3-9768-aa55cbfea3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddadaae-3655-4a34-a65a-359eb6fa02cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2a2a9c-3ec4-4a61-b6c3-3e9437b40483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b595206d-7916-44bb-b5b9-07ff7d224dae",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e7bbfb-5454-4d09-b35f-9e4ed67631cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe57c5a3-a1a2-4de5-9b3f-2ab7daf27cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd72621-fef2-448b-85a5-e798e74dcd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07b3734-2ef5-4959-87cb-a8439d2f4c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4e0972-443d-4f62-a0af-624eeef5e0ad",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ddeb0e-fb2f-4bf4-983b-060c621a9912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5708ef5-3fb6-4874-90e1-9ef69bf12242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b3dac2-3ef8-47d9-88c8-2eef4aba8ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825f92d2-7d64-45a9-914d-6212f0b136f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa29fc4-9cd7-4acf-92fd-160239b6c27a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f325449f-10cf-4973-8bc9-bb1e93ebb6bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75be2876-e0fd-4dfd-97b9-96852447677c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a882da6-fbd2-42cc-8273-e5bc4cee58e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1838f4e7-b958-4032-91ee-449ad7b4385f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bfb372-5c9a-49b2-9c71-70cd972781fb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a926b057-fc60-4e49-a4f5-1e04d56c0281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc58b95-bdc7-4ea8-beb8-80599510e912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72d2ee9-d225-4bef-92f4-9c77f84e5674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a1a679-1b5b-4731-b751-356c6917a559"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b7ff1ab-3d70-4758-9812-f3a4afbf49bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "facc6d0c-2d42-45a2-a338-36cc23f94ab3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72e4df91-4098-47bb-85da-63b40d8166cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ce76b2c-3b65-48af-908a-477fdde834ce"
                    }
                  }
                ]
              },
              {
                "id": "1a847dba-d9ac-4f9f-b231-f231ddf2a440",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cd7bb8b-21ce-481b-bd2b-4cd660638a9a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297dc3e6-f85a-419e-b88f-c778990e397c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d693865e-779f-46c6-bc2c-f607d0730a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb6f039-ff8c-4c4c-8b43-7a00b5dbec5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4303a182-7e44-415b-9141-92c858805208"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "175d4197-de24-4488-8a89-ebc61529c8d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f411a858-db8f-444b-854b-9a84af3005a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e9657a4-1365-47f4-8f11-0b8e8254bd5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ba33ad0-8427-4f44-975b-8c413ea9e5ac"
                    }
                  }
                ]
              },
              {
                "id": "9b82c54e-c5c2-4ada-ad47-1aaf050590cc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d5bd963c-ee89-4016-9ce0-8db5c6b9a470",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87609a7c-8a32-4cf2-a9f0-b43d5ec0c72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5086266f-9d94-4ba9-8bae-847f9453ec1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590fe79e-46e6-44ce-9731-e39f0c76cb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766b9919-7d1b-4fe8-9e6c-1e8dea1e925a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8939f54d-70a4-4481-ab8d-7657895fcafd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "340f6875-7ff6-40b4-81bf-2fe58bcdc259",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81849657-b9a8-4326-b86a-19f35696d985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4031df8d-c63f-45a2-a41e-7293a2cda607"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c430ca4-5033-4de6-a1f6-ef9618bfb3db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0687df1f-f64c-48a6-9a9e-f8028bb30e67"
                    }
                  }
                ]
              },
              {
                "id": "9a69d7c7-1a02-4495-bdc5-8b3681d8c64a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "564e38e3-9337-48ab-b9b8-49820fd2b92a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a6c1854-ba81-457a-9fa4-930adb022a56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c981d1b0-90bf-42d9-aeaa-7a241eb58d6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d4e6174-c342-40a4-aea8-2da02ebd7ed6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0995927f-cffa-46c5-b22d-4bc8d0ce5950",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1eaf6958-4dad-497c-83a7-7c2769b06fbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0e0b1ee-ec38-4ac5-a188-b68a9d525cdd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f33728b4-6bc3-4be5-a0ec-ab6971686606"
            }
          }
        ]
      },
      {
        "id": "202990e9-342e-4422-ab4d-5ef1b7587e39",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "359cb9b0-9f9a-4585-9ec2-4fb486370a36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8aa138c-8ce2-489e-a575-9d248121347a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e727fa4-8155-4b34-a11d-cab5e75d0e4c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada8d9a1-dc6b-4232-bea9-2efda7ce05d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "97779e34-9bb2-42a0-8954-eb68f4653f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675616ff-ef55-47ec-b00f-4fbfdca56c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "372ce404-97a8-498f-ae7f-d24a504349e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b59660d3-165b-4acc-ba66-0d1224cf16a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e84d0d16-9bf5-427d-8448-2c062682f700"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b02c9f4-30d4-4019-9c56-a0d46a6e5728",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60fcb70c-3aa6-453f-9d8d-8297343773a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "042d2ab3-dc2a-4fed-a470-2219645fdad4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2a758db8-c94c-48e0-8c17-ba57416a5d54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "168e1cce-071b-4524-b207-761313f6aef9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69df206c-abd8-4920-9c9f-b1767fce9d0f"
            }
          }
        ]
      },
      {
        "id": "d97abb08-69d4-446d-9b30-f3d91ab5f487",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "af63fcec-f75c-4003-bfcc-1e485815152e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70c6a4f8-50bd-4c56-888f-e2842211eab4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3742c1fa-17f9-4a4b-b702-fc728b036bc8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fea4075-b0c7-48f1-a41c-062749c38c4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbae72aa-b0ac-4c23-9c33-ea2043cf868e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a42f63-2a66-4f6f-b783-84d917e36ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffb3b0e1-d5cd-4281-88f6-d30947222be5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f51c54b-a46a-4b8e-8e40-a5ee824c77fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b1b51b5-5851-45ec-8e82-1f8785722b1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08d0b8a7-9c20-4caf-9e42-bdc1a650e56f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "917caf96-52c2-4035-b4f1-eaf9d77a250d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91ce8f98-497a-4725-a0c9-00353801f5db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a47f735-fe62-4e09-8a29-c84946583cb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cc738e4-98d2-4a16-adad-1c1e803fef15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "082eba2a-2cb6-4ff4-b8db-2550b91ed64f"
            }
          }
        ]
      },
      {
        "id": "798e4716-1d23-45ee-9863-28fc262f5418",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "14c3810f-f8d5-4c86-b6b9-485ed96b872c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44ad6ef6-eb16-4256-b1ea-64a23af73611",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "131e59cb-6faf-4cf9-9b42-bd045476792e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9358cba-2032-4970-aef7-1b6a21a1e448",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef7c74fe-4c6f-4834-97c0-67d54443267d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f7cb7-7151-4f79-8d95-9a48457fe850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9032091-5302-478c-8887-16a2cfff9152"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f3fa33d-88f5-4236-9dc9-0d629cba0136",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "312608ff-957b-4d90-8bdc-65237b81954a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0f7ecc1-62e7-4bdd-b2b9-9e4c11b70adf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "058876ff-7476-411c-b763-73ee50974607"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "830fb553-8249-4914-a643-3b458291d887",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b61d1498-452f-40cc-82a0-3b2c6f27b948"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56d6526c-edfe-45de-8b10-1e4586322d3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a2db956-a50b-4ef8-8fa3-043b3e52a3fd"
            }
          }
        ]
      },
      {
        "id": "01da9a63-b9ba-4de0-9198-ca31e4d3003a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0f7f2db-4a38-4e0c-9605-8fef9c1980d9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eaf5f2a4-e8bb-4354-a6e3-f126d0f1b76b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bccd546b-de52-44a7-9519-37a132d913c6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3682f957-b536-4291-a1c2-8664b83d2d10",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "421988d9-71b3-4242-a977-666ae8e30fda",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 309.69047619047626,
      "responseMin": 25,
      "responseMax": 8713,
      "responseSd": 1287.9288218790493,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719275883043,
      "completed": 1719275969430
    },
    "executions": [
      {
        "id": "5de1437f-ef9d-4743-8975-fcb6f606d489",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ab144488-3dbf-411d-b41b-8d0a12119e20",
          "httpRequestId": "51782d99-1a95-4c3e-ac54-9961ce971e23"
        },
        "item": {
          "id": "5de1437f-ef9d-4743-8975-fcb6f606d489",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "548a5aa0-b3b2-4056-9b74-78e9bdc742c9",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "e7a11d5e-9d62-401c-8109-74e6e50a917e",
        "cursor": {
          "ref": "b848e5da-6b7f-452d-a790-f6f347c795f3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "03a6a477-40c7-4059-9d9a-8c03dfa71d40"
        },
        "item": {
          "id": "e7a11d5e-9d62-401c-8109-74e6e50a917e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "23798935-9810-4669-bdc5-9fd95d11097c",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 0
        }
      },
      {
        "id": "6b046dd5-3595-4046-bfa4-2cfe58cc71dd",
        "cursor": {
          "ref": "a7a1cd47-e5cf-4b46-a2a7-1f2913049660",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "14dc52fd-ea11-4ace-967f-1af326e52f54"
        },
        "item": {
          "id": "6b046dd5-3595-4046-bfa4-2cfe58cc71dd",
          "name": "did_json"
        },
        "response": {
          "id": "41d6b395-0f06-4889-98a6-87d0e5685c6f",
          "status": "OK",
          "code": 200,
          "responseTime": 429,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16120221-0a97-4fdb-bf9a-962aa3bf1a94",
        "cursor": {
          "ref": "bf3524eb-cba7-4c72-9418-243b642dc77d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd77e3a9-d0f0-4c34-aa9e-daeb4e640426"
        },
        "item": {
          "id": "16120221-0a97-4fdb-bf9a-962aa3bf1a94",
          "name": "did:invalid"
        },
        "response": {
          "id": "5749394f-96c1-4ca4-84e8-5c99a14d0cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2292,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16120221-0a97-4fdb-bf9a-962aa3bf1a94",
        "cursor": {
          "ref": "bf3524eb-cba7-4c72-9418-243b642dc77d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd77e3a9-d0f0-4c34-aa9e-daeb4e640426"
        },
        "item": {
          "id": "16120221-0a97-4fdb-bf9a-962aa3bf1a94",
          "name": "did:invalid"
        },
        "response": {
          "id": "5749394f-96c1-4ca4-84e8-5c99a14d0cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2292,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abda662-5206-4ac8-afdf-2d7321630aa0",
        "cursor": {
          "ref": "90e570c9-b4bf-472a-88de-0ea756d33093",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b1c75512-2afe-4d29-bb01-b656deefdf74"
        },
        "item": {
          "id": "6abda662-5206-4ac8-afdf-2d7321630aa0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "32db72d3-8796-4ad1-9c8a-f3f98c59c13d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2537,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691be59d-554d-4f42-a841-be038b88bd14",
        "cursor": {
          "ref": "606bf9a1-786f-4427-8984-9f592756a9ed",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "942f5d64-cc3e-4578-9030-3b2e9dc98de6"
        },
        "item": {
          "id": "691be59d-554d-4f42-a841-be038b88bd14",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2a13afa1-96f0-4312-8deb-34c83bfc2e5d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2252,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e171a3a-b236-44f7-a31d-2ca4afa6782c",
        "cursor": {
          "ref": "37dcfa11-91b1-4c1f-aef4-1b1484513dcc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "78aa50ba-ad4b-49af-9db8-d789c5681f90"
        },
        "item": {
          "id": "0e171a3a-b236-44f7-a31d-2ca4afa6782c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "00e7a796-7c88-4b06-8d7f-9b2d05b4e405",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14c2542-844d-42ce-a8e5-3d01fe2fc1a9",
        "cursor": {
          "ref": "48f82584-5faf-44a0-adc1-e20981c3602e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "68510ba0-ed99-461f-a574-af748dad6abf"
        },
        "item": {
          "id": "f14c2542-844d-42ce-a8e5-3d01fe2fc1a9",
          "name": "identifiers"
        },
        "response": {
          "id": "3bbb20b8-a776-498a-84a0-79f0aa705378",
          "status": "OK",
          "code": 200,
          "responseTime": 2405,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a66e63e-65e4-4e7e-8e23-1b9acd0b391d",
        "cursor": {
          "ref": "da6bc2da-07c8-49ac-a9b7-fbd57911563b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ce88533e-1008-43cb-a025-ec8ec4cfc145"
        },
        "item": {
          "id": "7a66e63e-65e4-4e7e-8e23-1b9acd0b391d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d255f72b-62fc-4a0d-932c-ab08188e067f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c674b5ed-025d-4c5c-a4be-8a6e0d995938",
        "cursor": {
          "ref": "ed78ea0f-3956-42d5-a013-6697ba4611a9",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d03e3e7d-cddd-4419-9afe-b329c389059c"
        },
        "item": {
          "id": "c674b5ed-025d-4c5c-a4be-8a6e0d995938",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "59c5334f-9c92-41c8-b277-b2e0529e90dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc41958-0acd-451e-ab5e-30cc467edbd8",
        "cursor": {
          "ref": "ae4b3324-e7f1-47cb-82db-dd5be37a4a48",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "75f15682-94f1-4340-a438-befda023d8c3"
        },
        "item": {
          "id": "ffc41958-0acd-451e-ab5e-30cc467edbd8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "663c6def-04b0-4d5e-bfd3-18b22f0d4dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce199fc-ce8e-47b8-aa4b-ef5856e194ac",
        "cursor": {
          "ref": "7cc64bab-5aa7-481a-b917-76db3cd7b85c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b5af8bfd-fb35-415f-b2d5-6359bd61a5ad"
        },
        "item": {
          "id": "3ce199fc-ce8e-47b8-aa4b-ef5856e194ac",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d0264010-e39d-4e46-8839-2c96a10cc3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1fce29-4808-4ed4-b3bb-71f99e359c9a",
        "cursor": {
          "ref": "ff7e04fc-91ea-4796-8996-076e6f1286ad",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f0d63afa-e9f0-4ae6-8f43-dbb60aa0a220"
        },
        "item": {
          "id": "0e1fce29-4808-4ed4-b3bb-71f99e359c9a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "df8444a5-86cc-4243-b725-9e91db72016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50b7b8b-f919-4049-ab88-55d3aad0b178",
        "cursor": {
          "ref": "44480ee2-c503-4493-869a-e50d70058fd3",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "128c3dc3-94d8-4e14-822f-6606fcf8246d"
        },
        "item": {
          "id": "d50b7b8b-f919-4049-ab88-55d3aad0b178",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "81701f15-d6ec-4b28-b601-92eca14a0277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3d3019-8ff8-4035-b919-216fd19b5f5a",
        "cursor": {
          "ref": "8b2fdde7-34e4-4ed5-a888-933e0387c5e6",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ba340a30-9c5f-4f10-b2af-b0574e3023a5"
        },
        "item": {
          "id": "5c3d3019-8ff8-4035-b919-216fd19b5f5a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bcd33912-3429-41ac-abb8-6904d3868273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd31f07-fdba-444a-9e24-e3e3d748ddba",
        "cursor": {
          "ref": "06cb8ea7-9efd-44a3-a00f-93c9e025c2cf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "baca33c6-633b-4c6c-b505-840a8d7080a1"
        },
        "item": {
          "id": "1fd31f07-fdba-444a-9e24-e3e3d748ddba",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "32da89d5-833b-4bd1-8d36-a647669e85b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eeba8d-09fd-4be2-88c6-0e8bca9fbf68",
        "cursor": {
          "ref": "084f2b57-5e88-45b2-b6f9-163768015848",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bd7e607c-4d69-4347-aede-d94790e96d48"
        },
        "item": {
          "id": "01eeba8d-09fd-4be2-88c6-0e8bca9fbf68",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3d15d58a-846e-485f-b843-f06fc538ffea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b9ea16-9142-4e62-b4ad-08572e46c940",
        "cursor": {
          "ref": "7dcef9bb-462d-4377-88b4-9d412a387dec",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a8ce59a2-8e19-4c82-a0a6-6a3849f69356"
        },
        "item": {
          "id": "11b9ea16-9142-4e62-b4ad-08572e46c940",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b6e3fbf1-c519-4072-9a77-b3e1e0206e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031241c5-7d60-46ce-88f6-9c9c08ec8196",
        "cursor": {
          "ref": "58b6b78e-482e-4c64-b834-bfa776807339",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "04aeba46-7560-4edf-a48d-1680e0746b72"
        },
        "item": {
          "id": "031241c5-7d60-46ce-88f6-9c9c08ec8196",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ae620820-d1bb-4e9f-9af5-c9f5cd9078d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6717c9ec-e131-4392-8e02-5c20f74e3bf9",
        "cursor": {
          "ref": "33d31302-06c0-4c10-bb2b-b44c221edd1a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4ec47f03-6902-4733-ae8d-37fe85ac6c79"
        },
        "item": {
          "id": "6717c9ec-e131-4392-8e02-5c20f74e3bf9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "01602f0d-2488-4ffc-9da6-29a7acaf846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7816df61-b294-48e8-9160-f0c2ceb91545",
        "cursor": {
          "ref": "34489b53-ee3c-42f5-b3e0-45d63c0190c6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7fa1b211-ce60-430d-a7dc-0700f9f57670"
        },
        "item": {
          "id": "7816df61-b294-48e8-9160-f0c2ceb91545",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ea54c480-3c26-44ea-bc67-545c06fd210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da5a67e-0a0b-40e4-8768-9e4ae170daf2",
        "cursor": {
          "ref": "e5d2eb93-cdf5-4369-8219-96b10fd4952e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "49f92b91-e145-450e-8503-6c352923c481"
        },
        "item": {
          "id": "6da5a67e-0a0b-40e4-8768-9e4ae170daf2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "30eb1b5d-1880-4106-b37a-a25ca8c5813a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb572e8-8d09-49ac-85e5-05d5ffb309d8",
        "cursor": {
          "ref": "df814b16-02b8-4b62-a16e-004cf732ae59",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "61d37484-b4cf-460b-8955-6e3dfb18e782"
        },
        "item": {
          "id": "fdb572e8-8d09-49ac-85e5-05d5ffb309d8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9821c8df-791b-4dfb-9095-ce656abc20c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a751bdda-fc70-4702-b3ca-4a2becb291ff",
        "cursor": {
          "ref": "f0be6a1d-066b-4190-9ef0-b625f4d4972a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e4031420-213a-43f9-8c84-7f336de8bd91"
        },
        "item": {
          "id": "a751bdda-fc70-4702-b3ca-4a2becb291ff",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "61256867-a1bf-4170-96ee-7eb16333298a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8505919b-333f-4069-9d2a-a33bcdb10181",
        "cursor": {
          "ref": "216a03be-bd40-4bb1-ba59-44ea1c321f91",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ba495f96-0d2a-4db4-acf9-de4a734a3760"
        },
        "item": {
          "id": "8505919b-333f-4069-9d2a-a33bcdb10181",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5d8b7118-d32f-466f-9014-40a58cc439e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fda1d1-c980-4f3c-9585-a704c82c34ad",
        "cursor": {
          "ref": "37bb5d8d-7600-4fce-83ad-93e137f45726",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7af3846d-040a-4fa2-a9fa-7ebe2553ecfc"
        },
        "item": {
          "id": "45fda1d1-c980-4f3c-9585-a704c82c34ad",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c9df2325-a438-41e3-b890-c7056ca5a05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6af60e0-e101-41fd-a401-1cfd240041d0",
        "cursor": {
          "ref": "a86bc8d5-54aa-4bf7-b5a7-a9a59d058527",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a0b967a1-eaa4-49b8-a3c3-b3cf98d83c05"
        },
        "item": {
          "id": "d6af60e0-e101-41fd-a401-1cfd240041d0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d08e7707-4bdf-4492-b5c7-6dbf5d364012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78199b5-abe0-4d22-8fbb-16b985aa8475",
        "cursor": {
          "ref": "fa558c20-eca7-4cba-a0e6-00bf82bced9d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6f2acf82-5cee-4ceb-9461-e6ea2fc71fca"
        },
        "item": {
          "id": "b78199b5-abe0-4d22-8fbb-16b985aa8475",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7fba20ba-8077-4b01-a431-7373a80bf136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa45af6d-c6db-47eb-b815-6cafdbadb918",
        "cursor": {
          "ref": "a29b96d9-a5f6-41e8-9f29-b626437f4eea",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae930244-954a-4141-80ad-0a753615e04e"
        },
        "item": {
          "id": "aa45af6d-c6db-47eb-b815-6cafdbadb918",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2c104051-b5cf-4a6f-9e9e-23838ceca805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda13f00-6b92-436b-9eaf-40aeb4658f0f",
        "cursor": {
          "ref": "5d888392-4127-4ab4-8cdc-b258e65b45a6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "660dd7aa-2ab0-4d7a-83f0-bf243c94c025"
        },
        "item": {
          "id": "cda13f00-6b92-436b-9eaf-40aeb4658f0f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8e4cddc2-df8c-4f0c-9cd6-9adb4405ac8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cf528b-1edd-4b76-b7b3-b0b0c52ae504",
        "cursor": {
          "ref": "e3034206-e3d1-43fb-b9a7-b5df974d4034",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1d8dc749-84a7-4436-80d0-692870cda717"
        },
        "item": {
          "id": "f4cf528b-1edd-4b76-b7b3-b0b0c52ae504",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a4927bdf-52b6-4f57-a393-d7358550b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ea74cc-fe1c-4937-b45d-fe23a0baaca8",
        "cursor": {
          "ref": "fb2391ce-ea1a-4d31-a608-b25551f4941a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a2c73398-1e71-40e8-beb4-8ef4ee6f679d"
        },
        "item": {
          "id": "80ea74cc-fe1c-4937-b45d-fe23a0baaca8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c7a512d2-2845-47ba-99a5-d235f3526be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33cacb0-13a2-4c5f-ad81-0330b6e3f8d1",
        "cursor": {
          "ref": "7c746ea2-449e-4d39-972a-6c92ab2f07b2",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "83a12c6a-9756-4b0d-b992-f7fe49775844"
        },
        "item": {
          "id": "e33cacb0-13a2-4c5f-ad81-0330b6e3f8d1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "87f4bcb7-8b71-4ba4-9e5f-6f6217469058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1eaad8-bc3c-42f0-9342-271942570bd8",
        "cursor": {
          "ref": "a450090b-82ff-4c5b-b125-995ffa00e535",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "938f5028-2417-4dc8-8dbb-31ede911c690"
        },
        "item": {
          "id": "8c1eaad8-bc3c-42f0-9342-271942570bd8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5233d38a-c81d-41cd-90a4-a0c5b23c06f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be0582f-f839-4468-8df5-ad81d2c22317",
        "cursor": {
          "ref": "0c22d891-dbff-445b-a5cd-13bbf5affb7b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d2ab69a5-097e-407f-a266-1034574e1413"
        },
        "item": {
          "id": "8be0582f-f839-4468-8df5-ad81d2c22317",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7e80bdf6-d2dd-417b-8afc-1ef18d3eca4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73e3b1f-348a-4b96-abc8-3e6f18c5e1a8",
        "cursor": {
          "ref": "f021ef8d-60d5-464d-a1f2-a1dd8cfaf795",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ba686ea0-5dd5-4865-993b-447e34a344e8"
        },
        "item": {
          "id": "f73e3b1f-348a-4b96-abc8-3e6f18c5e1a8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "28cf1ffa-114a-49b4-acb8-10e51f424dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c17250b-f2a2-4175-bf4c-aff3f2bbb8d5",
        "cursor": {
          "ref": "04e08b04-8bd0-4218-8565-7040e48ad04c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "21f52c15-cd2b-4a62-b2f4-f130ed35121c"
        },
        "item": {
          "id": "3c17250b-f2a2-4175-bf4c-aff3f2bbb8d5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c529b165-a0da-4b48-99a8-0f18247a4dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06281952-06e8-4bdb-8c11-3e538e54d3e4",
        "cursor": {
          "ref": "ecb00c3b-d747-4ff8-84ad-7db0f9b59d03",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ca3def9e-9204-4992-b1dc-81f6c0cb5935"
        },
        "item": {
          "id": "06281952-06e8-4bdb-8c11-3e538e54d3e4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "156a958c-96bb-468f-82f9-889c70873f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f99d6e5-ea7b-4720-8144-7591dbc2d93e",
        "cursor": {
          "ref": "9d21d1d3-a93c-4b2e-be97-5c93f7cc7512",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3e66aa5a-4e96-49f5-9ba4-09b6fc55db67"
        },
        "item": {
          "id": "3f99d6e5-ea7b-4720-8144-7591dbc2d93e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a6df4d9c-1f2a-4a2b-92ed-8522b263d59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53898019-0da5-4cf0-bf9b-44949d297b46",
        "cursor": {
          "ref": "34506eda-ca2d-486b-a93f-49b4be68decd",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e3136254-9807-44aa-889e-0c4fd2dc8835"
        },
        "item": {
          "id": "53898019-0da5-4cf0-bf9b-44949d297b46",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4c15daa7-09cc-4dbf-9556-7edb7aec671f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9500c562-dbc6-43cd-b8f9-25c47a74d01f",
        "cursor": {
          "ref": "aae78f99-6a94-4976-b389-8acce42af459",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ac54378e-973c-4049-8a02-b44b06ef1256"
        },
        "item": {
          "id": "9500c562-dbc6-43cd-b8f9-25c47a74d01f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c83fb35c-63e7-45d1-ad05-f4458daf3e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99af020f-2213-4983-9ea0-9308521860fd",
        "cursor": {
          "ref": "5bf3f8ac-4af2-44c1-91cb-1f549e871d3e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8d7e5024-4572-412d-8e57-8117d413f9b2"
        },
        "item": {
          "id": "99af020f-2213-4983-9ea0-9308521860fd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ef0a15c1-92d4-4729-bf64-cb6b1c3c633c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be92939-40f0-4543-86d2-3f1af9b7b89a",
        "cursor": {
          "ref": "6b1bbf2c-b427-4952-951e-6dd7be5bd3c5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7e053cb8-d09a-4fc9-a8f7-a18a02029c9e"
        },
        "item": {
          "id": "1be92939-40f0-4543-86d2-3f1af9b7b89a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "312a65ea-10e2-42e3-99d0-72c70dcd0d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a1a44f-6a8e-460b-bc02-26503a727e7d",
        "cursor": {
          "ref": "33e3b69c-b754-4453-8c30-052c1bb6a588",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d43bedfc-9e4f-4539-ab0c-a7e06a574e6b"
        },
        "item": {
          "id": "f0a1a44f-6a8e-460b-bc02-26503a727e7d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "001def3c-0a51-44c8-94e1-a18cce391163",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a07c5fb-026c-4f29-b7f3-ac57008a7e85",
        "cursor": {
          "ref": "286a0f89-f83f-480f-9494-2034e34bde73",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "956f55b3-b526-450f-be06-d963fdf7455d"
        },
        "item": {
          "id": "1a07c5fb-026c-4f29-b7f3-ac57008a7e85",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4941c437-06db-4bc8-b5ee-ec141e856284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f733223-d280-40da-99fc-c1de3d8c4230",
        "cursor": {
          "ref": "18f6181f-bd13-4e56-aa85-c4ae6065870d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "88381c06-1f3b-4636-8c44-18e6079c9927"
        },
        "item": {
          "id": "2f733223-d280-40da-99fc-c1de3d8c4230",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3b2f1b0b-97b2-4d88-98a1-3b7ddbf6e7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683f28fc-518a-4f97-9636-4eb1e7929922",
        "cursor": {
          "ref": "b449ccf3-6888-4cf2-99fd-1c545298eac8",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c6590c97-2bfd-4e8a-bec1-a3a9f40af705"
        },
        "item": {
          "id": "683f28fc-518a-4f97-9636-4eb1e7929922",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3cb4f942-ee66-4dcb-822a-f4c63bae13f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e594c9-534e-4e9a-b215-9deb5620dd14",
        "cursor": {
          "ref": "04ec83ad-949d-4f8e-a8ab-55c93d122212",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "373cf9b3-2297-4c35-9c3c-4f48ed723145"
        },
        "item": {
          "id": "41e594c9-534e-4e9a-b215-9deb5620dd14",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0fe24e0e-b379-4eb4-ae95-661fbe4cbd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384a7e61-8c58-4dcc-b169-9e4efb505acb",
        "cursor": {
          "ref": "5777000a-737e-4b6c-8fd7-d7cba01d7af9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4e724163-b40d-4799-a5e8-28050ac5410b"
        },
        "item": {
          "id": "384a7e61-8c58-4dcc-b169-9e4efb505acb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4d689cf8-533c-4756-88a0-cd939a274cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39a3ee2-9a7c-4931-86cd-e97d6a820e03",
        "cursor": {
          "ref": "84bf147e-4849-4684-a961-62525ef646c8",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d177ca26-9276-4b03-9e26-e82eeea7d9a6"
        },
        "item": {
          "id": "c39a3ee2-9a7c-4931-86cd-e97d6a820e03",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "abfa05eb-f1cd-469d-9de0-1fcf7358da7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756fc8be-5295-4362-9739-1a1b359af8bc",
        "cursor": {
          "ref": "d794037d-c6e3-40c3-acf2-3189d0615dca",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "175bb5fe-9864-45d7-a91f-8e781f1880eb"
        },
        "item": {
          "id": "756fc8be-5295-4362-9739-1a1b359af8bc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b96f303b-a5fe-4933-8c24-968b1a771976",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 53,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93b3c9f-dda7-42ee-978c-e0a1de0afa8f",
        "cursor": {
          "ref": "941a26c8-f834-4982-8b3f-30767813cb2c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2af18bef-3c88-443d-ac76-e99dc3f4f46f"
        },
        "item": {
          "id": "e93b3c9f-dda7-42ee-978c-e0a1de0afa8f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "82f8c53e-fbdc-45b7-85db-660826b51d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce577a6-02c3-4379-b74b-57ffb274d862",
        "cursor": {
          "ref": "b3c2297d-67c8-4918-afd9-47a1882d92fd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ab6af18c-518c-432e-a094-1880c11c044a"
        },
        "item": {
          "id": "0ce577a6-02c3-4379-b74b-57ffb274d862",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "939c867b-29f1-4194-854a-c2463f064acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2806345-2b9c-44ac-9802-d96974f02ad5",
        "cursor": {
          "ref": "928621f6-8dba-488c-a9bf-f2872881b0eb",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2aff7990-204c-470d-a2b4-33b01762c05d"
        },
        "item": {
          "id": "e2806345-2b9c-44ac-9802-d96974f02ad5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e9b6fffa-7942-4056-a0e1-5bf2781e2c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569c128b-3e3c-453f-ba7a-b770419d0820",
        "cursor": {
          "ref": "48a275ab-d436-446b-b003-4e3f7ca0d09a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a02c81d3-e91b-4ace-969e-2f488b4492e9"
        },
        "item": {
          "id": "569c128b-3e3c-453f-ba7a-b770419d0820",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "34a24f51-38ee-4519-9204-5f3a0a6f1b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddf4677-9905-4a23-acc8-6b05871dab6b",
        "cursor": {
          "ref": "5045ae59-bf4c-49b3-a42c-a0d639c50969",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4fca7870-8fc9-4cef-8eb7-4297da01c5cc"
        },
        "item": {
          "id": "2ddf4677-9905-4a23-acc8-6b05871dab6b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0b4c6d83-9d7b-48e5-8558-7dc4b3b13577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781607a1-9f77-412f-b0ee-6d25d1eb6467",
        "cursor": {
          "ref": "2724580e-015b-45a5-9532-48a070150d72",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "40db5418-d6cb-45ae-a652-129773e34a71"
        },
        "item": {
          "id": "781607a1-9f77-412f-b0ee-6d25d1eb6467",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c28188a1-30fd-429e-acf6-e75b2388d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bfea2b-5e87-416d-9e2d-f1bebaedc7e9",
        "cursor": {
          "ref": "52312501-2ba7-42d7-832a-497b2b078b8e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "67fe46a2-dd4a-4e6c-a031-839e257bda42"
        },
        "item": {
          "id": "c4bfea2b-5e87-416d-9e2d-f1bebaedc7e9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2017f09c-4863-471f-b3d4-46bc81d97483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ffb06a-02a8-4fa7-97ed-2c890cf2ca47",
        "cursor": {
          "ref": "73976d52-c39e-432a-a1b2-b1e9b57611b8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9e61332a-4ee2-4bd2-b7bb-f58c0f38e517"
        },
        "item": {
          "id": "e1ffb06a-02a8-4fa7-97ed-2c890cf2ca47",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4d9859f3-ad0e-4557-a4c2-040552aa0f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555f0096-e87b-4d55-87a2-6ab8ff5d7caa",
        "cursor": {
          "ref": "6e1b5adb-3c8f-455d-9b81-b7837ca040ff",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "513918f8-0ee0-4d21-a767-f165f8154812"
        },
        "item": {
          "id": "555f0096-e87b-4d55-87a2-6ab8ff5d7caa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d1a37925-c6f2-4f22-ac3c-94b345a4bd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9766c7-2e0b-4e45-8aea-ecde49ff346f",
        "cursor": {
          "ref": "46b2de37-52ac-44b4-9fd4-780b08348f90",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "190f221b-5d35-4220-83f0-671c6c12b767"
        },
        "item": {
          "id": "2d9766c7-2e0b-4e45-8aea-ecde49ff346f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fd73f4d4-8054-4c8f-8f5c-7f3ad1b7fd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e2487b-5692-4a22-bd3d-75b8400634ac",
        "cursor": {
          "ref": "ca8da411-72c1-49ef-be45-d1fbdc0c93b2",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d4bf4e84-6b8e-4e57-b20b-d81cc54df5f9"
        },
        "item": {
          "id": "f0e2487b-5692-4a22-bd3d-75b8400634ac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "aa7833cb-3398-45bc-b0fe-6c39bba77812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872ff4e1-9d70-4f50-b359-9cbdb5c68391",
        "cursor": {
          "ref": "5d005efa-30f8-4ba7-acde-bf1f36172875",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dcfa0d77-2582-4b7f-b377-161da2b5fa07"
        },
        "item": {
          "id": "872ff4e1-9d70-4f50-b359-9cbdb5c68391",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e3708f37-0b05-41a4-87ba-503eeec80631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d5db60-c19c-47d4-95ca-1a57e1c6e776",
        "cursor": {
          "ref": "8ce1cc8b-2458-461b-a738-9c5e892092f9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "754f08e2-132f-42c1-9470-2fbe6bb39bbd"
        },
        "item": {
          "id": "a2d5db60-c19c-47d4-95ca-1a57e1c6e776",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5d286caa-2b20-4c9b-8db9-738f272b6cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924df22b-a5af-46c9-b77b-b1d858234c83",
        "cursor": {
          "ref": "a358a5f8-3529-4bd5-a714-33ce8848e0fa",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "21703146-a6c2-462a-a602-9ed791632e45"
        },
        "item": {
          "id": "924df22b-a5af-46c9-b77b-b1d858234c83",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "21cbdb09-3869-4b0d-a355-1088e1cbec69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24818734-975d-4782-b42e-74369e2b1ce3",
        "cursor": {
          "ref": "5f007827-acb3-4c91-a69d-18da70b34bd3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8cd6abdd-46f4-4903-a86e-c5da3218a7ac"
        },
        "item": {
          "id": "24818734-975d-4782-b42e-74369e2b1ce3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "661e68f6-209e-408d-961a-43a419338a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736454d5-9c1e-4a8b-a554-9052c414bb69",
        "cursor": {
          "ref": "fa5bbd0f-5a95-44f0-be03-b989afdf5a6b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7322f83f-605d-4c96-a007-d1e29cb6b9ed"
        },
        "item": {
          "id": "736454d5-9c1e-4a8b-a554-9052c414bb69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9e44b362-f366-48bb-a2c3-69f785876a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a67e49-1e7e-4757-861c-04e7ef2ec3b4",
        "cursor": {
          "ref": "84c85afb-1b25-4d97-80ad-7208c5cdec7a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "605d7897-3a13-4662-869e-fe8bd82c0047"
        },
        "item": {
          "id": "88a67e49-1e7e-4757-861c-04e7ef2ec3b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "517b5c72-8bbc-43ea-940e-802cf7936119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0077ff52-f9e6-445d-9c21-78180f0de18a",
        "cursor": {
          "ref": "db56f0cd-c8a4-4eb4-bf9d-7d19fd8e16b3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3bded373-23bc-47e1-bad9-73e09f6da0c6"
        },
        "item": {
          "id": "0077ff52-f9e6-445d-9c21-78180f0de18a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "84cb4c9b-af74-4caa-af2f-766e46e1fcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47ff02e-46be-42bd-accb-d0d743f62c50",
        "cursor": {
          "ref": "c4b242f7-1547-4ea0-88fa-20be669bf6cf",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3f23f88e-34a8-4f71-80ef-92969c28bf9d"
        },
        "item": {
          "id": "d47ff02e-46be-42bd-accb-d0d743f62c50",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7694e918-ec5f-44e9-bc1e-db13b99dd4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa9cbfd-cdb8-46af-831e-111c4c6d87cf",
        "cursor": {
          "ref": "7c0c18c1-c66d-4998-a650-b124b00d7dc5",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a47aa6d4-6985-4b9b-b4f1-ab327e1af107"
        },
        "item": {
          "id": "9fa9cbfd-cdb8-46af-831e-111c4c6d87cf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "abb54714-26a8-4dec-b481-86da1fd90ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6adfe7-fce3-459b-8874-be8d338596d4",
        "cursor": {
          "ref": "e0815dbf-7294-428b-bad2-c5690156b52c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "00891d28-b32d-4e55-a907-b93463fe15ce"
        },
        "item": {
          "id": "5f6adfe7-fce3-459b-8874-be8d338596d4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "29b539c3-dbdb-418c-ba1d-07bce0043902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ca1eb3-975f-415a-9e5c-fff37ebf4c41",
        "cursor": {
          "ref": "e22094ef-6c9c-4b97-bb85-15ffe10711ba",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4b68a4d8-e6fb-4c17-b9a6-ea3a51f94872"
        },
        "item": {
          "id": "60ca1eb3-975f-415a-9e5c-fff37ebf4c41",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2febcf06-8ca4-4ab4-bdad-2cb3362b3488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191cc6a1-bc6c-4a7d-b871-91017cb647b9",
        "cursor": {
          "ref": "d45b8cce-460c-447d-b40a-e16f8a402848",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f76ee72f-8f5d-499d-b038-32e415371ada"
        },
        "item": {
          "id": "191cc6a1-bc6c-4a7d-b871-91017cb647b9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ed8a460d-e46d-489e-8c09-616968e9786f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090fbfca-11d6-4557-b268-6c14741e56d8",
        "cursor": {
          "ref": "88d57d3c-d2ca-4cf2-8b17-0ca741f41fe2",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e6e053a2-02c5-4b6d-a796-6828600ef07a"
        },
        "item": {
          "id": "090fbfca-11d6-4557-b268-6c14741e56d8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4ef78446-dd7a-4d63-96d8-a435d475d7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be6e0b3-819e-4673-8774-27592a51347c",
        "cursor": {
          "ref": "af32e021-33b5-4eb8-ba96-8b0c9e2fa8a8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c8e1d86b-ceae-4c03-80be-480f59582e1e"
        },
        "item": {
          "id": "2be6e0b3-819e-4673-8774-27592a51347c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "81b426a8-8793-44ee-8d57-c87d2f341842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf568c0-e645-4c1a-b3cc-faa0d439d486",
        "cursor": {
          "ref": "194f8453-ffde-4582-8f60-74960dcea6e5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d3dc38af-932e-424d-8b6c-13485fa5df29"
        },
        "item": {
          "id": "adf568c0-e645-4c1a-b3cc-faa0d439d486",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cbe43bee-3223-4645-8780-fb0ef712c61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c49eaa-1aca-4954-b629-6fec5bebf2dc",
        "cursor": {
          "ref": "825048c8-0444-4874-96b5-ae6d42e528f3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "43264775-d057-4050-a299-006eeb5b2d90"
        },
        "item": {
          "id": "c7c49eaa-1aca-4954-b629-6fec5bebf2dc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "82377a50-05e9-4817-8b52-e5c2d75e3b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6689735e-6e9e-47ba-b6a7-ff9bd1cba5c8",
        "cursor": {
          "ref": "07c7eb38-f037-4acd-8b40-d2cc53009f1d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ac0f02a4-18e0-4b96-850d-1df4f8ccb2b9"
        },
        "item": {
          "id": "6689735e-6e9e-47ba-b6a7-ff9bd1cba5c8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4ccd8674-39c4-44d2-b632-797e353bd98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf9208e-02bb-42be-b582-267cd2d2077e",
        "cursor": {
          "ref": "f7e8a809-f5c2-4a0d-b23a-efecb9ced791",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9c670b29-a097-4207-aebd-7ad3ba34c295"
        },
        "item": {
          "id": "5bf9208e-02bb-42be-b582-267cd2d2077e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "02af0c45-6317-4030-88f3-c6eea339d371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9107a16f-96a6-4fb3-bd54-fc31493ae7a2",
        "cursor": {
          "ref": "989e6027-f730-4482-8b1c-7949896b29ed",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6c51e0f5-5771-44ab-adb4-29610b81a10b"
        },
        "item": {
          "id": "9107a16f-96a6-4fb3-bd54-fc31493ae7a2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f4291975-2131-40e5-9069-2edd43db1470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da57ebc-a228-41f2-81db-5ca2af879708",
        "cursor": {
          "ref": "7cc8da0d-f3b4-46ed-bdcb-8d20e025dec6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6aa8cfa4-d79b-470f-a67f-60512c60c1e2"
        },
        "item": {
          "id": "7da57ebc-a228-41f2-81db-5ca2af879708",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c4617dc9-01a8-4df5-a5ca-f021d5ef1857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a30879-8b47-4f49-9fbb-d005c505d5d6",
        "cursor": {
          "ref": "6d6d3b75-d553-4e57-bff8-a656984f71b4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4157a7ab-cfd4-47e4-9461-0a14f049b3cd"
        },
        "item": {
          "id": "99a30879-8b47-4f49-9fbb-d005c505d5d6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4c3fc879-5dd7-4b79-a821-dd0bdc598520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36623a40-8b3f-45ee-b087-33929dec54eb",
        "cursor": {
          "ref": "32c33f81-cf0e-456d-881e-5f2a112ed5a8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "976d4f62-79e1-45e6-9ee9-5c84cb4c7dde"
        },
        "item": {
          "id": "36623a40-8b3f-45ee-b087-33929dec54eb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a2c4220f-7ba2-4466-8c1e-aa0a41339bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d987482c-892b-44e2-a65f-616d573388b2",
        "cursor": {
          "ref": "e6840d38-99f2-43ff-8f2e-3e6ee3072374",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2eab6267-6ffe-44d4-bddc-1e8628a57b3d"
        },
        "item": {
          "id": "d987482c-892b-44e2-a65f-616d573388b2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a2a94603-910d-4873-84e6-278b9ea0cbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef4096b-78c7-4f47-a804-455e65a65b1f",
        "cursor": {
          "ref": "b66dfa34-9418-46f9-8d15-e4cef4e475df",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6301d493-ad64-4c8f-af1b-005ef1fc2708"
        },
        "item": {
          "id": "bef4096b-78c7-4f47-a804-455e65a65b1f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c5bc98d0-4ab7-4a61-844d-5388968ea377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b5a532-3ce1-465b-af2b-338a8ad5b1d8",
        "cursor": {
          "ref": "ca09665c-4f4f-4daf-8637-5592b6468036",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d6f195eb-77cf-4644-a9f2-1a2253b1497c"
        },
        "item": {
          "id": "e3b5a532-3ce1-465b-af2b-338a8ad5b1d8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ec627fe3-e3a4-40f0-a22b-d8ef3022d213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca43707-87f1-4a2f-adbc-95965a486fe6",
        "cursor": {
          "ref": "7c834e9f-37c1-4bb1-887c-d1ec6bb4f27f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "89a6bf6a-e707-4470-87b2-8d22652e8d16"
        },
        "item": {
          "id": "bca43707-87f1-4a2f-adbc-95965a486fe6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6cdcaba1-fdfc-4261-aa95-e0c264add541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec9cd0e-215b-4490-a3fd-e3dba8bccb11",
        "cursor": {
          "ref": "bb9be75f-263c-41d4-bf26-80ced9cbe1a5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2e824e3b-2a92-4a9f-809a-a944142caac5"
        },
        "item": {
          "id": "eec9cd0e-215b-4490-a3fd-e3dba8bccb11",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6a16546f-6d47-4853-9fe9-98380a8bdd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2352178d-3257-4c36-a23a-d27ec3490e27",
        "cursor": {
          "ref": "5817b541-9679-4f26-b043-2d8683ca02d9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7ec519c3-67a6-4a85-91c1-09c687631073"
        },
        "item": {
          "id": "2352178d-3257-4c36-a23a-d27ec3490e27",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b86cabad-b7d5-4d9b-96a0-9879f4b075de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1ac391-5d6f-43e5-9122-d3491e274587",
        "cursor": {
          "ref": "19d69430-6f73-40c6-a3ae-a3cdf7aed1bc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "afa65870-daea-4fa3-83d3-08ee055ddcfb"
        },
        "item": {
          "id": "da1ac391-5d6f-43e5-9122-d3491e274587",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5d6ddd21-492b-469b-b3f6-a33624493f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3007df-abc5-4de2-b3b6-40003490056e",
        "cursor": {
          "ref": "69e1595a-c8d9-4596-9199-28e6f46d93ad",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b871d3d8-079c-44fc-8d09-90fe0e808386"
        },
        "item": {
          "id": "5d3007df-abc5-4de2-b3b6-40003490056e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "319c0069-7979-4b44-be10-8e42d8bca30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfa12fb-bd43-48f0-88f2-8ea861430594",
        "cursor": {
          "ref": "0709ca87-f54f-4680-963f-d1b61530cdaa",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "31ee2e0c-9eff-487b-9721-1af68760eaf7"
        },
        "item": {
          "id": "4cfa12fb-bd43-48f0-88f2-8ea861430594",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cfc8452c-dad8-4120-a37f-878f1f9fbfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1d1c8c-e163-4ba3-88d6-e50aa786e7ec",
        "cursor": {
          "ref": "906f0531-65b3-49cc-9259-bed21e8312a1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c0d24275-d8ff-4e79-8483-ebdecd9fb6f8"
        },
        "item": {
          "id": "8f1d1c8c-e163-4ba3-88d6-e50aa786e7ec",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "01e79afc-64fa-4364-85f0-f06127cdd6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f7242b-fe5d-494a-b13e-788673db7fbb",
        "cursor": {
          "ref": "620977a9-e829-41ff-9aaf-d47e28a14c68",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "013be0c8-c1c9-4dba-9c0c-8272d825566e"
        },
        "item": {
          "id": "55f7242b-fe5d-494a-b13e-788673db7fbb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "20ad7605-811f-453c-8c16-e6115d859d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d24062-87cb-42f8-95b0-220ffb30193a",
        "cursor": {
          "ref": "3cf30fd3-6d73-4657-ad3e-7688026939c8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "190b11a9-0cb1-4dd1-b105-69a0bcce8f87"
        },
        "item": {
          "id": "40d24062-87cb-42f8-95b0-220ffb30193a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b604a5ec-b9f6-4fcf-9b06-7a410c81e2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee945c2-1148-41d3-aef8-871414971eda",
        "cursor": {
          "ref": "7eeff92b-ba68-4481-b99c-a217d877fb43",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c1d20008-17bc-484f-b470-d164a012c705"
        },
        "item": {
          "id": "cee945c2-1148-41d3-aef8-871414971eda",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c2f35769-f060-4e44-b475-137164b7256f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecefb89-a973-43e4-b406-982aedfc0fa1",
        "cursor": {
          "ref": "23b9e9af-8432-4411-9bd3-07e4c3ec180b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6dde8ec0-8deb-4099-9171-471559a38e03"
        },
        "item": {
          "id": "eecefb89-a973-43e4-b406-982aedfc0fa1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e6dceaa3-75e2-45ef-b272-60fd50c84cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ece087d-1ec8-407c-8b36-cbccab0750d8",
        "cursor": {
          "ref": "3a835988-9416-43e1-a42c-dc90d5c695b0",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "28f83de9-b8b9-42c6-b224-9350344ae5b7"
        },
        "item": {
          "id": "7ece087d-1ec8-407c-8b36-cbccab0750d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b02f9f4d-3930-4b4e-bb1e-da4706166f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da8ff65-dfaf-42b1-a287-b49150982b8f",
        "cursor": {
          "ref": "6d1901e5-f7c9-4988-ab31-a27fa9745005",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4691dff4-8d46-4921-a366-bac8ac2ccb83"
        },
        "item": {
          "id": "8da8ff65-dfaf-42b1-a287-b49150982b8f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "53334d3d-c9e9-4a10-bbf8-3f56180775fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bb964f-fb6f-41d8-8e6d-5053354a1371",
        "cursor": {
          "ref": "dc9a0d6c-4b10-431c-a583-58facd3583e8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fd4bd691-0093-43a8-967b-a1208e296de8"
        },
        "item": {
          "id": "f2bb964f-fb6f-41d8-8e6d-5053354a1371",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7b051f8c-5d29-4e9f-a484-09eb60bfee9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3a9249-5165-42c4-9337-c0481b8b75ab",
        "cursor": {
          "ref": "e2c1de28-f1ad-45c0-9f8d-ef944fce6619",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "51dc9efc-7d95-4f1b-a700-6bf0e3b62084"
        },
        "item": {
          "id": "1e3a9249-5165-42c4-9337-c0481b8b75ab",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "79817083-8901-414e-b725-af6b9d2c8307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ad29550e-3d7d-43b5-8b77-2792531a9fa7",
        "cursor": {
          "ref": "83184df2-b7b9-495b-85e4-3c10f07de078",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5351469a-2178-48cc-b481-8ae845018fc1"
        },
        "item": {
          "id": "ad29550e-3d7d-43b5-8b77-2792531a9fa7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "16468f5c-6084-4083-9650-be77453e9a23",
          "status": "Created",
          "code": 201,
          "responseTime": 8713,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9cd4a1-8567-455f-a627-27d0e5937f6c",
        "cursor": {
          "ref": "ac9edea6-6f34-46c7-aa54-72b8d8f085de",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b69cd74d-9fea-47af-9b35-5ea669aa63e8"
        },
        "item": {
          "id": "8b9cd4a1-8567-455f-a627-27d0e5937f6c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f8522b3e-4170-4210-9f18-630110f6f1c7",
          "status": "Created",
          "code": 201,
          "responseTime": 8235,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c16a84-b361-4785-8aeb-d90c8707f2ef",
        "cursor": {
          "ref": "e1e093b2-96a2-42db-87d2-8c86e269c276",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d1592d6b-ee5a-4882-a418-65f9ea2a77ea"
        },
        "item": {
          "id": "c2c16a84-b361-4785-8aeb-d90c8707f2ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ac6feb15-157b-4f51-8ef4-ba5c4abdfa04",
          "status": "Created",
          "code": 201,
          "responseTime": 8204,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3a7775-ffac-487d-8625-29d657aa465a",
        "cursor": {
          "ref": "5ebd964a-0b73-45cd-ab28-434a723f3c2c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ef896de0-b960-41bb-b8dd-a2397ef66d89"
        },
        "item": {
          "id": "2d3a7775-ffac-487d-8625-29d657aa465a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "81c96d8c-17f9-4d56-b16e-5348ec8dac86",
          "status": "Created",
          "code": 201,
          "responseTime": 7939,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3239832c-cb17-43c1-aaaa-d745339037a9",
        "cursor": {
          "ref": "af933cd4-02a7-43b5-aa95-589f0183faf6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "37e793d7-2fac-4ff0-b51c-942e08fb2eaa"
        },
        "item": {
          "id": "3239832c-cb17-43c1-aaaa-d745339037a9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6d1f2a47-484e-4073-a96e-d81c3e696e58",
          "status": "Created",
          "code": 201,
          "responseTime": 7929,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-25T00:39:02Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-25T00:39:02Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "80290a99-11c6-4755-ab81-ef76295aae00",
        "cursor": {
          "ref": "7e4a3c62-f03f-4fbf-806c-03e517ebeccb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7d450cb2-755e-4207-b6e3-701deb150e10"
        },
        "item": {
          "id": "80290a99-11c6-4755-ab81-ef76295aae00",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8ad6d5ea-ff8b-47ac-b398-cc4c59448f14",
          "status": "Created",
          "code": 201,
          "responseTime": 7872,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7022a395-a5c8-4ee3-a924-c7b952698f9d",
        "cursor": {
          "ref": "c4f0a344-d0d9-4fc1-8073-1de7708e29a9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c0471cb9-6127-4cb5-a8a4-ca4c5dec8445"
        },
        "item": {
          "id": "7022a395-a5c8-4ee3-a924-c7b952698f9d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cb40658f-21b2-45ea-ba07-5d4b3ae47be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669528fd-c330-4094-8820-e715c9221c00",
        "cursor": {
          "ref": "c74ef521-51bd-4d6a-8333-2cfb8e11881b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "01b8719d-9193-42a2-9705-cdcae52049f4"
        },
        "item": {
          "id": "669528fd-c330-4094-8820-e715c9221c00",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99c14c54-fd1d-40c1-b300-0daa5691d1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c131b242-dbf3-45a8-a35b-20a5d8eeb1d0",
        "cursor": {
          "ref": "090ddfe9-8829-496a-a5a1-c4dc3c702424",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3f807caa-c5b6-419b-8003-313b1d63f62a"
        },
        "item": {
          "id": "c131b242-dbf3-45a8-a35b-20a5d8eeb1d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e5cb9837-2631-4969-afd8-f7ab54e9ec2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89adffbe-ba12-4581-a6f4-b6797378e2ab",
        "cursor": {
          "ref": "69add953-9215-4e5b-9ef7-0ccb1f63d35d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "12ccdcd0-3913-43f3-9cc9-b1a6a453305e"
        },
        "item": {
          "id": "89adffbe-ba12-4581-a6f4-b6797378e2ab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b30ac406-ac05-43d0-8627-43b8a09d92aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34514ae8-bced-42d8-b3d1-d7d8083ac45f",
        "cursor": {
          "ref": "8834aa3a-d738-47f0-946f-2f40986f2914",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8ad4afe2-00b7-492b-84ab-ed7f02706f05"
        },
        "item": {
          "id": "34514ae8-bced-42d8-b3d1-d7d8083ac45f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "54cc3cba-6ad8-4885-9c65-e851bf6544cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca39e785-fdad-4e60-beec-cccc0c21e40c",
        "cursor": {
          "ref": "c94d70ec-d1ef-4c1a-813c-1abfacc6733c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2d35cc02-8812-415f-a315-d0306c99c68f"
        },
        "item": {
          "id": "ca39e785-fdad-4e60-beec-cccc0c21e40c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "baeddd1b-2fdb-496f-b5c8-9dde15bcc2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7ed266-4806-41c9-a9c6-e804b6539b56",
        "cursor": {
          "ref": "fd949fb7-bdb5-46b1-9958-6a7a221dbb48",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e2bc2df4-bf6b-4597-bec0-f76f2e827adc"
        },
        "item": {
          "id": "6a7ed266-4806-41c9-a9c6-e804b6539b56",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dba75bad-49a1-463b-8b0a-3916622346e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2772657-f9f6-4b9e-96dc-01ca492ab6d1",
        "cursor": {
          "ref": "c655db76-d407-49e0-bf14-094f2162b78b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "08c2f52b-5bef-4b3e-ab7a-7bfbb99cc0bb"
        },
        "item": {
          "id": "d2772657-f9f6-4b9e-96dc-01ca492ab6d1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aae87f6b-38a4-478b-8c84-3d106afbdd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935814a4-4b9f-4ebd-8b3d-f79bd920de7b",
        "cursor": {
          "ref": "b76b77c5-62f9-410c-a024-d53b29fd215c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7fe0fda5-0d7d-46d0-9647-a36aa65e76d7"
        },
        "item": {
          "id": "935814a4-4b9f-4ebd-8b3d-f79bd920de7b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3dc2f564-08f6-4a52-81ab-ad27b568c6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c772b361-90d8-4bff-8a33-cb52688e7491",
        "cursor": {
          "ref": "7d0e455b-b840-456f-bf7f-e568e51e9b1d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "97539887-98f7-47db-b7ae-fff097c474e1"
        },
        "item": {
          "id": "c772b361-90d8-4bff-8a33-cb52688e7491",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "492bf161-8f2f-499c-b0f4-66cbf42970c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93064259-1123-46c7-a870-88fcc099e719",
        "cursor": {
          "ref": "8fb25d3a-8739-4309-9bdf-dbd65f9280cc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8f2af6ce-52fc-43db-9d98-d3e918ff2a77"
        },
        "item": {
          "id": "93064259-1123-46c7-a870-88fcc099e719",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eb23eec0-b4fb-4016-8e49-43a3abea6cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51695e13-816a-42ce-b5a3-dacd731b28b0",
        "cursor": {
          "ref": "74ed2e1b-40b4-446d-b405-444f3aee7f47",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9d0eea9e-93d1-41b8-99bf-b91f602f73a9"
        },
        "item": {
          "id": "51695e13-816a-42ce-b5a3-dacd731b28b0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "42362b13-9604-4069-b3b5-851d970dc0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a23ef2-809a-4e8f-a4a0-c8713aaf7c83",
        "cursor": {
          "ref": "c282c7ae-bde5-4592-8123-4e0eb2c1fe0f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "96a54fbf-9bb0-40f7-b7c3-cde07c345d1b"
        },
        "item": {
          "id": "d8a23ef2-809a-4e8f-a4a0-c8713aaf7c83",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c390828d-02f2-4bce-a87d-d0b0b2b1cfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180c2e37-97b6-4b15-b00b-5ceef38ec79d",
        "cursor": {
          "ref": "4aa62b24-4758-4263-a815-e0022d62c711",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b9e05a9e-c0e0-4292-a054-5d6bca65b32b"
        },
        "item": {
          "id": "180c2e37-97b6-4b15-b00b-5ceef38ec79d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d9b428ac-a0da-4461-bed6-28b550be4d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1febb395-dfb5-4952-a32a-d6ab11cdbc9f",
        "cursor": {
          "ref": "15835eed-730d-4229-a9ed-f8a4774786ce",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3b433ac7-3f39-482a-986b-c9d62e7f9783"
        },
        "item": {
          "id": "1febb395-dfb5-4952-a32a-d6ab11cdbc9f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5c8dd69a-62b0-4286-9f3d-af63b4fc1ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d41100-9997-4f52-85f6-9a9994222c9f",
        "cursor": {
          "ref": "63b53bc1-7756-4506-b1cf-2d1f03047883",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4fd58070-3166-4d14-baaf-dbc4b1674ab8"
        },
        "item": {
          "id": "43d41100-9997-4f52-85f6-9a9994222c9f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f011913c-2458-4ff2-80c2-b931d45b4a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451d3240-94fa-4de0-bf75-841b0e2a5c17",
        "cursor": {
          "ref": "a4323cbc-2cfc-48d9-b3b0-ff09835635da",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5e29c500-2428-46b1-be55-11d9a04774e3"
        },
        "item": {
          "id": "451d3240-94fa-4de0-bf75-841b0e2a5c17",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "40e05811-3441-45cb-b151-60803de81f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a5e2d7-1477-442b-bd3e-dbb6f1459835",
        "cursor": {
          "ref": "e544ad86-aed6-45b1-ac5a-1071c45ec426",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e309cfe5-ebe1-439a-9041-488072a146f6"
        },
        "item": {
          "id": "31a5e2d7-1477-442b-bd3e-dbb6f1459835",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fe12edcd-f3c5-4c2a-bdc5-acee06dc17db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e355a7-6357-4086-a3ca-06214b43ce46",
        "cursor": {
          "ref": "2d984d5f-661b-490e-9d01-7c80bd57cb94",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f95ff2ac-8f2a-45b2-be30-e954a97f0a59"
        },
        "item": {
          "id": "07e355a7-6357-4086-a3ca-06214b43ce46",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "590bc724-0bf9-4c43-9254-1ca9b79c0e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41671f17-cc0a-4a83-9de2-8484ce7a62d4",
        "cursor": {
          "ref": "974b4dda-386b-44ef-b3a7-c8c8df52cb34",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "27f0e616-b8f0-4cf3-a069-5c3dc04df79d"
        },
        "item": {
          "id": "41671f17-cc0a-4a83-9de2-8484ce7a62d4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "14f9e4ff-8a3e-456e-88ea-f897961604e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfcde41-903d-4933-935a-118638d3f239",
        "cursor": {
          "ref": "2558a8ca-e6c0-42b0-8b4a-9735cfd6f1bb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ac208e99-fad2-43d4-95d8-cc61ddd21ae7"
        },
        "item": {
          "id": "9bfcde41-903d-4933-935a-118638d3f239",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "39139678-7506-48d7-9b64-ea82b0b7d492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559ad3ea-84ce-4968-b145-1fd3e63a5d17",
        "cursor": {
          "ref": "adc933e3-08e9-4af2-bcfb-2c37f136c733",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c729f693-0b07-4a20-aae7-b02140e1e5b4"
        },
        "item": {
          "id": "559ad3ea-84ce-4968-b145-1fd3e63a5d17",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e3f0670c-74da-421d-b7a1-d51aaa70ceeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4c08a9-366d-4229-9333-24997f17eea9",
        "cursor": {
          "ref": "b643da63-7310-47ef-8491-c8258093dc05",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ae961c3b-2e99-4f86-9ed6-0b641effd238"
        },
        "item": {
          "id": "1e4c08a9-366d-4229-9333-24997f17eea9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3feadfba-dcbf-4289-8416-01fb5c2a293b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abadf001-d5f5-4a29-9341-3d11d5647561",
        "cursor": {
          "ref": "1c855767-295b-4f16-9e15-696f67e953d0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3452d4e6-7675-4069-9b3c-fb1c059b093c"
        },
        "item": {
          "id": "abadf001-d5f5-4a29-9341-3d11d5647561",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9b4ff681-c5c1-4052-8be2-93ef3460ab3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f982ef-88d3-46d8-a69d-db5166e461f2",
        "cursor": {
          "ref": "85674705-bea6-4398-836b-7f1017d8b1cc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8051218c-f624-4682-bbe3-24594ed8e7bd"
        },
        "item": {
          "id": "b6f982ef-88d3-46d8-a69d-db5166e461f2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "56189c2b-dfad-4b78-beae-1fab0b451a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ca3f43-179e-433e-9b70-785fa1e50311",
        "cursor": {
          "ref": "639cd6f2-1ec4-42f8-85c7-43122d6a97fb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d566754d-0d15-4fa5-bb9b-fa6e754c55d1"
        },
        "item": {
          "id": "42ca3f43-179e-433e-9b70-785fa1e50311",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd23acc4-e743-4c65-b91b-5bee543e386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2a276e-4cd2-41e0-bc6a-60c14de0ca6b",
        "cursor": {
          "ref": "ca7a9dc0-4dfa-4bcf-9e2b-0a2fa9076a8f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a21fe20e-95d2-4d45-81bb-5b8a0beefa22"
        },
        "item": {
          "id": "dc2a276e-4cd2-41e0-bc6a-60c14de0ca6b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "472ff598-e84a-47af-8fde-768d51faf47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1f5c92-4ead-4d5b-b129-731370a4a0f2",
        "cursor": {
          "ref": "54314df3-c6d6-436a-b058-541fc123b260",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e0a2c52c-1ee9-4813-9b14-99f66ab696cc"
        },
        "item": {
          "id": "fb1f5c92-4ead-4d5b-b129-731370a4a0f2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2a7e4229-42a1-4017-be80-d2985be7207a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305a1af2-c788-46d6-ba63-a3344f0c2645",
        "cursor": {
          "ref": "353dccb6-3750-43ae-87ff-669f4c6499e7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9b111b3c-986d-4a32-a8d3-44a537d4717a"
        },
        "item": {
          "id": "305a1af2-c788-46d6-ba63-a3344f0c2645",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ffc51ba4-8bd9-44ee-9125-d721ed312f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c747b8-1a53-4acf-80e3-957c44d8e8ad",
        "cursor": {
          "ref": "406f3e24-beb6-4d6f-ac22-2796d6daabc9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b20af64c-7f87-4c1b-bf8d-08156e9ce6cf"
        },
        "item": {
          "id": "14c747b8-1a53-4acf-80e3-957c44d8e8ad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "34d575be-026a-49fa-a9e5-348ec82c8ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44073314-a852-4a71-94ab-f43732ea4cdb",
        "cursor": {
          "ref": "72e84def-fcba-4038-9d07-e31cca06baf4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "403550aa-0139-48ea-80ec-6776e862d023"
        },
        "item": {
          "id": "44073314-a852-4a71-94ab-f43732ea4cdb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f306081d-dff5-411e-a6b5-f8cd0cedb708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4490e0-9a2d-4ea3-aabf-42e829443039",
        "cursor": {
          "ref": "dece8995-ccf9-473b-8ed8-99259e6531ec",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "262d3df2-a70f-41b2-b32c-e691b56f35e6"
        },
        "item": {
          "id": "5d4490e0-9a2d-4ea3-aabf-42e829443039",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3098d884-c807-4115-bc1f-f3fe890ba311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24f3a67-2b8f-4955-944d-74c8c59cb91c",
        "cursor": {
          "ref": "2e7e9976-a893-40d3-bb08-93868a007139",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "287dc99d-d9e9-48dc-93a0-f5b126735f8b"
        },
        "item": {
          "id": "f24f3a67-2b8f-4955-944d-74c8c59cb91c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "475e7cb1-eed1-4d62-bf9c-aeb4a495bdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebbf59d-239c-4be6-823b-895200d29988",
        "cursor": {
          "ref": "96f0be1c-9219-4978-8d78-51933f4c033c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2e564267-ded3-4f5b-9bff-893abfb8b66c"
        },
        "item": {
          "id": "eebbf59d-239c-4be6-823b-895200d29988",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6686fa88-41dc-48f4-b656-bdf80fd36da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43978f3-42d9-4985-91ab-d7ab08594e02",
        "cursor": {
          "ref": "20c29357-38d3-4490-b874-4e2bf9e1240e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b78bffab-627b-47d8-9922-bd20faf94509"
        },
        "item": {
          "id": "f43978f3-42d9-4985-91ab-d7ab08594e02",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3363e410-bab4-469a-8a32-f5bec8ddbea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40569eb-80cd-4510-a7bb-f0ef90f01905",
        "cursor": {
          "ref": "2c4854aa-df67-4863-9bbd-31794f7f979b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3706b602-74ad-4d22-90f7-91e907712ae1"
        },
        "item": {
          "id": "a40569eb-80cd-4510-a7bb-f0ef90f01905",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "651366a4-e2cd-4fdf-b67c-80ff69527f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed18154f-2f8d-454e-84d2-91dcd7fc206c",
        "cursor": {
          "ref": "703593c1-e35f-4fe1-b71b-2f2c8386ee51",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "882d369a-c82d-42b4-98aa-71d089431b7b"
        },
        "item": {
          "id": "ed18154f-2f8d-454e-84d2-91dcd7fc206c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2fbd8ddb-45e0-4b45-917b-26bcae786fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35d9bff-86f9-43b2-9616-e3d38c9fb4d4",
        "cursor": {
          "ref": "5de48bab-04e7-4a18-99a0-6d5ca25943de",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "68811978-3c5d-4a64-9fa8-ed7859fd2c81"
        },
        "item": {
          "id": "c35d9bff-86f9-43b2-9616-e3d38c9fb4d4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bccc40c2-6219-48ee-a9c0-513f83105572",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4cb269-b049-4002-a94d-a18890972a42",
        "cursor": {
          "ref": "a9860262-a415-484e-83ac-5db95df11025",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d9b13d47-d8d0-4a89-bac9-c65d2433029f"
        },
        "item": {
          "id": "1f4cb269-b049-4002-a94d-a18890972a42",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c7e0d650-3f9d-40fe-b1a3-d8f4e0bc6ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bab5a2-9ac1-4273-83d1-25a034043297",
        "cursor": {
          "ref": "efe0578f-a1d6-4fc4-ac33-5854cbfd13bb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "94509e50-0c49-423a-8117-b526a7a0b8bc"
        },
        "item": {
          "id": "e4bab5a2-9ac1-4273-83d1-25a034043297",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b0c39f39-511b-4d00-907e-e925410aea61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb7821c-66fb-4af4-b7da-d4efba8328ca",
        "cursor": {
          "ref": "e4b464c4-e0bc-4a5f-b010-ea8988ec2a19",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4c60ccbf-fbc8-4a70-b582-e25961b6b934"
        },
        "item": {
          "id": "3cb7821c-66fb-4af4-b7da-d4efba8328ca",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "222b309b-4019-4f69-9640-a2b3813816bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a7a423-b7cd-4c97-b479-2fda94ac2c89",
        "cursor": {
          "ref": "e081e2c3-df9a-46c4-9aaa-f482fe849c45",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ed868d8b-39a8-4804-bdf2-d1745b0160b8"
        },
        "item": {
          "id": "d7a7a423-b7cd-4c97-b479-2fda94ac2c89",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "debf18c2-df64-4bf6-bc7f-725a55577ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4edda7-cfd9-4b76-bc3d-aef924065650",
        "cursor": {
          "ref": "1d60572b-c643-4927-9a57-e6378db54a88",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0df41aa9-e512-459b-be3f-ed01364c5b6f"
        },
        "item": {
          "id": "ea4edda7-cfd9-4b76-bc3d-aef924065650",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2e877cec-06d4-44ae-a458-d690b1d127c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3dee08-bbb1-4351-8739-4af14d2fbc20",
        "cursor": {
          "ref": "41aff583-8e85-4ff0-8bbd-aaeb1a838fcd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d4265b1a-6451-4c3f-b030-1e57ff2100c1"
        },
        "item": {
          "id": "3d3dee08-bbb1-4351-8739-4af14d2fbc20",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "305414fd-0aa0-4f19-8a31-fe49523e1719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7153b3-3255-4b35-8ec3-6509cff1369f",
        "cursor": {
          "ref": "8a947365-c83d-43a6-a2bb-f297909793ba",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4b86000b-5df8-4126-9dfc-faf5cb56fb48"
        },
        "item": {
          "id": "0e7153b3-3255-4b35-8ec3-6509cff1369f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a3d5083e-1c42-4513-b927-d80d74a3be9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0943ed-1c38-4327-a0ef-1eed9654afe1",
        "cursor": {
          "ref": "7c9157c4-cad3-456f-9e7d-b72b7e4a7b00",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5e34e1d4-c636-4bf3-946d-4564e2e6d9b7"
        },
        "item": {
          "id": "8e0943ed-1c38-4327-a0ef-1eed9654afe1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fb609e05-3843-452d-8685-efee739b4519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f76311e-2de1-416a-bb8b-373b7d95e7a4",
        "cursor": {
          "ref": "b2b6ea06-7fdb-4db3-a381-2f79ad14b00e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f6285bed-a4f7-466c-b59f-940a44fb31d1"
        },
        "item": {
          "id": "7f76311e-2de1-416a-bb8b-373b7d95e7a4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6afaef76-574d-4d2c-9650-9fb863d3dbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed27a23-c0e3-4e7b-8753-20b71af8e624",
        "cursor": {
          "ref": "2c167362-acab-46b6-9e71-1b3803c097d8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8983640f-787b-4075-a211-490f36a1e9ba"
        },
        "item": {
          "id": "eed27a23-c0e3-4e7b-8753-20b71af8e624",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "222fe1ce-7895-4f02-9210-d42cb45608f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f014ba-e88e-4d85-9eda-aaf36424ec85",
        "cursor": {
          "ref": "526c58a8-9d58-4062-9d14-1014f273f93d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b50aa93a-06f0-4301-ae38-d7fab13e6845"
        },
        "item": {
          "id": "b0f014ba-e88e-4d85-9eda-aaf36424ec85",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6312180b-8d79-4ebd-aa05-31e408295453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e74fd00-d15e-4f85-acfd-cdcb2de3bb5d",
        "cursor": {
          "ref": "b48c4a4e-a02b-4c89-baf9-71d16ab82e7d",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f97bc396-7da5-4501-b9ff-62f47ac6df86"
        },
        "item": {
          "id": "1e74fd00-d15e-4f85-acfd-cdcb2de3bb5d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e3266f7c-fa8d-42fc-9233-2af9177bcba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec243f7e-ab05-449b-9818-5ff3fd0990e5",
        "cursor": {
          "ref": "549f8ec7-6482-4c2d-9cf3-19158510d608",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bbb2db77-2705-4690-8710-131e8815b775"
        },
        "item": {
          "id": "ec243f7e-ab05-449b-9818-5ff3fd0990e5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a22e0685-76b4-44cf-9261-ad3427bbfecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7912892f-49d1-4cf5-873f-66abb0f8c705",
        "cursor": {
          "ref": "dc5651ad-3491-4e87-a64b-0becdd4bd169",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b064dcfc-cb5b-4a6d-924e-f8a14bf22809"
        },
        "item": {
          "id": "7912892f-49d1-4cf5-873f-66abb0f8c705",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "da60a20b-117f-440d-af8e-5497dcfa310c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb6f879-1d78-452c-b6bc-cac4d0ba56c8",
        "cursor": {
          "ref": "506b7017-f43f-4ef9-8548-aa3ca92486be",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "37b18590-6e84-4ff9-90c1-648d5a125cd0"
        },
        "item": {
          "id": "edb6f879-1d78-452c-b6bc-cac4d0ba56c8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3414ceb9-7177-4c7c-a3d1-3e46b704f54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1892d65b-dfd5-470f-9211-8baeac999d05",
        "cursor": {
          "ref": "885b02fc-aab9-478a-b5c0-8f3a69e88098",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c9003add-c99c-4b9d-9243-6773e34cba66"
        },
        "item": {
          "id": "1892d65b-dfd5-470f-9211-8baeac999d05",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e410c671-2a38-402d-8df7-81983e1ae9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb7ffb0-9518-4b72-80d5-e0ae7a62ba8e",
        "cursor": {
          "ref": "861205c6-fb18-4d87-9d40-fdd0bf6adc6c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "abfe2f29-d5ce-4d14-b2f7-ddbff8a0f7b2"
        },
        "item": {
          "id": "5eb7ffb0-9518-4b72-80d5-e0ae7a62ba8e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ea50397b-ff15-4d35-987b-e6f83095a606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2bf6f0-aa2b-4fa3-afff-dc3fc6036e9a",
        "cursor": {
          "ref": "2e443bb0-6c4a-48b2-8d9f-fc4c11003403",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f58ce518-95cb-44b5-8c4e-fce795918ea2"
        },
        "item": {
          "id": "6b2bf6f0-aa2b-4fa3-afff-dc3fc6036e9a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c60b587a-add5-4832-9ad2-7d66c0db4eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e518d4c9-7a51-4d20-adad-e14bf6f8eb33",
        "cursor": {
          "ref": "204e9a57-715f-4456-9700-25ada5bb6078",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "50bed51a-0a1d-4252-be1c-1ea8d32d7a52"
        },
        "item": {
          "id": "e518d4c9-7a51-4d20-adad-e14bf6f8eb33",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ba0802df-fde5-430e-937a-831ff6366630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0461fe-bc88-402d-ba57-8a07d0851309",
        "cursor": {
          "ref": "e684ecd1-12fa-42e0-b1b0-6f5cc12bac30",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0c45b8a9-2f7d-4485-b440-694ffc8b757f"
        },
        "item": {
          "id": "4b0461fe-bc88-402d-ba57-8a07d0851309",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a5c36fec-55bf-40ff-81f4-a87dfde90bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5ca4e0-6ddf-4ab9-9116-97bbb22ef1db",
        "cursor": {
          "ref": "e42ac939-c75a-4f3c-b109-393ddbcda9f1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1c3adef3-aeb8-4453-b87f-7d87e693da2b"
        },
        "item": {
          "id": "ba5ca4e0-6ddf-4ab9-9116-97bbb22ef1db",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9f0870e7-8666-4a48-a75d-c95df5571471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4df5d7-6ceb-406d-924e-ceca03277217",
        "cursor": {
          "ref": "df76e063-b33a-4e20-ba0a-121769d6eafe",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "11e80e49-eae8-4024-9aa5-6d445c7915cc"
        },
        "item": {
          "id": "de4df5d7-6ceb-406d-924e-ceca03277217",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d1e7d37-5c1f-4abd-bac8-47c1d0eeb56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cc5b07-1e0a-4c58-978e-1392eb000d58",
        "cursor": {
          "ref": "a041b4e7-2fc0-4cf1-8088-a8dae0172f50",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a7b5fa41-e223-4775-a8b9-afc7d017a548"
        },
        "item": {
          "id": "d4cc5b07-1e0a-4c58-978e-1392eb000d58",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4fa03018-931d-4a3e-aec4-271a222bea3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbd928f-5d02-46be-820f-18fb6d403fdd",
        "cursor": {
          "ref": "7d68b296-2588-4911-bb53-99747b6f6c99",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ff24d123-aaa6-4273-9704-72e9c47b34db"
        },
        "item": {
          "id": "bfbd928f-5d02-46be-820f-18fb6d403fdd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "649d89e2-ca1d-4231-9568-8dd9f874cea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3765039-8957-44e0-a92e-eac89e8cf094",
        "cursor": {
          "ref": "a0aa93a2-8050-4151-af67-42d90edaf295",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8432e510-eaec-42d0-9fac-d17909b39306"
        },
        "item": {
          "id": "f3765039-8957-44e0-a92e-eac89e8cf094",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d19dd60-8b4f-4ebe-9817-e6f555b1eedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b244569f-035f-4d29-b3db-933b72643b3f",
        "cursor": {
          "ref": "7d1d7e02-e54a-47e0-928a-6fb51f3b9e9e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0e1e08f1-bea8-4f5c-babe-ee302dc74dad"
        },
        "item": {
          "id": "b244569f-035f-4d29-b3db-933b72643b3f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8d244e45-afa9-4b48-ba53-e4d3d0344376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e767516f-5cda-4d0a-9a39-a925d3b508aa",
        "cursor": {
          "ref": "deb96866-f31a-45cb-acd5-b81dc8b7957b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a8193a91-8c4a-4cc2-9412-a57dfb9d012e"
        },
        "item": {
          "id": "e767516f-5cda-4d0a-9a39-a925d3b508aa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eddc28ab-e772-4dac-9d2a-858b6e8bb078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e004882-b3c8-486a-bd26-dc268958b79b",
        "cursor": {
          "ref": "c3f810bf-c5fd-4b00-b6c6-5fe55904c2de",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c5a5ba8d-36bd-4dc2-8c9e-e89c72fdcf59"
        },
        "item": {
          "id": "0e004882-b3c8-486a-bd26-dc268958b79b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b956f7d1-558b-40b1-9646-1406216398c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c59629-dee1-4201-9612-9e7af0832246",
        "cursor": {
          "ref": "825d4175-fd59-4d50-bdcd-a6ab23beec46",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1ae261ae-8ade-437e-8964-c1589e49cc88"
        },
        "item": {
          "id": "f0c59629-dee1-4201-9612-9e7af0832246",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6bdf4b8d-fcdd-4f2e-80f0-a2b0a835cf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244d9697-21ae-40ad-b097-4cc8b9b14f86",
        "cursor": {
          "ref": "2b30a13e-4403-4034-91fd-6341809fa8f5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "881a3800-afa3-45b9-90b8-f88589fc3435"
        },
        "item": {
          "id": "244d9697-21ae-40ad-b097-4cc8b9b14f86",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "366bb4ac-4cec-4383-88ee-3901260e4829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd783e0-1c9d-4196-9d82-a71f41c33bb7",
        "cursor": {
          "ref": "f05f8238-2ad8-4b69-864f-92173f729938",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "200c44af-0c52-443d-9f9c-45e8a55ce713"
        },
        "item": {
          "id": "6fd783e0-1c9d-4196-9d82-a71f41c33bb7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "907f067c-2238-4b22-b981-9da8dce3ba14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab052af-d6a4-4f9d-a095-51b4febca3c2",
        "cursor": {
          "ref": "6ba36cbe-aaf4-4d4d-a2bd-21309b7e15a9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "45d9bc50-4375-4701-a5bf-b3416ac21885"
        },
        "item": {
          "id": "1ab052af-d6a4-4f9d-a095-51b4febca3c2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ee966999-08ca-45fc-a0ff-eeed38f5b723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084042bc-e5b8-4119-8c0a-8746fcc90dd5",
        "cursor": {
          "ref": "f7446105-2480-4b34-b6c8-c1c7e4d8af99",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "730077ed-20e6-4785-ad94-4ec2e750ce1b"
        },
        "item": {
          "id": "084042bc-e5b8-4119-8c0a-8746fcc90dd5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ab392c4a-9831-490e-89cf-27a2cbaec195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056dc0ff-0606-4d8d-a87d-f8ce45ea197f",
        "cursor": {
          "ref": "3f973675-b328-4038-8c71-387de08b32e9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "134371dc-2c86-4b96-a769-915a992e2a98"
        },
        "item": {
          "id": "056dc0ff-0606-4d8d-a87d-f8ce45ea197f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3e76ef82-6fe3-42cc-b691-334acce80961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be6c402-16e1-4230-b3ec-898ae40f2f4e",
        "cursor": {
          "ref": "151fdae2-7f54-4aa3-8452-3a1c0847f541",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6a7cd0b8-084c-4d0a-a050-b18f2332e74c"
        },
        "item": {
          "id": "0be6c402-16e1-4230-b3ec-898ae40f2f4e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ea5d087d-1783-47dd-827b-2ddc8c49eaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efbb1af-6de5-4f74-bbd9-3d19dbe2d624",
        "cursor": {
          "ref": "488d172d-b2bb-48ea-9b29-be20a4d8b964",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ab55f50f-d2c1-4ddd-8dbd-af5bdc9233f4"
        },
        "item": {
          "id": "8efbb1af-6de5-4f74-bbd9-3d19dbe2d624",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "77f5e627-e2ea-4030-832d-3960c170e75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c10c37c-f318-4fb4-9971-5ee49fca256f",
        "cursor": {
          "ref": "4dbde547-44ef-46c0-b90e-599bed838c02",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bd7cc517-efdb-40ae-b302-d062734c6570"
        },
        "item": {
          "id": "9c10c37c-f318-4fb4-9971-5ee49fca256f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7599e981-e46e-4d02-9679-bae20b2776e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cbd312-8f1b-44ee-a239-ed8e6543ed61",
        "cursor": {
          "ref": "f72d52a9-edfd-47d8-bd9e-0329d3647831",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7a6aad31-0ccc-40df-a11c-a6577adf83ba"
        },
        "item": {
          "id": "c4cbd312-8f1b-44ee-a239-ed8e6543ed61",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "51ff8155-09c7-4bb2-a325-1b1ead02be4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b2a925-ac04-4322-823b-bcf037911445",
        "cursor": {
          "ref": "2ec5d7b4-01fa-4059-96cc-fcb726d4e024",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "35c9b6f6-2812-4b65-b85d-9decba3ad1d0"
        },
        "item": {
          "id": "86b2a925-ac04-4322-823b-bcf037911445",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b4784c6f-8073-4da1-a653-b70a426bff38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9116e64-4d30-4df5-b457-86a79172d9b2",
        "cursor": {
          "ref": "e17a5a3d-e38b-4770-83cc-eb55e7561900",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "94bcdb96-a2d9-40ca-99ee-685309ebba59"
        },
        "item": {
          "id": "d9116e64-4d30-4df5-b457-86a79172d9b2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c0e6e2f4-cc01-4c2f-80bb-942863ef10bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b11c09-0007-4e0f-b260-9c2864f2ddf3",
        "cursor": {
          "ref": "a7f5ef3e-a7d8-481a-a30a-e170f38bd1da",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3887a0d3-07a0-4743-b10c-937fcddca71f"
        },
        "item": {
          "id": "51b11c09-0007-4e0f-b260-9c2864f2ddf3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "467f48b2-7f0b-4c91-a105-5dda06867ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09cc035-8ee0-46c6-8a80-6cecee082c9f",
        "cursor": {
          "ref": "0bee41b1-256c-4abf-a021-b82ff5f90ce1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8293d90d-526f-44b6-b827-d80dfeb86e35"
        },
        "item": {
          "id": "e09cc035-8ee0-46c6-8a80-6cecee082c9f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "24dd90be-d1ca-49e4-a4c4-6b0f6a02662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f33eab6-021d-4d75-b94b-438bf876496d",
        "cursor": {
          "ref": "b333e7ef-38a9-4d4b-9653-b76432427111",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "84d257a8-e00a-43c3-9435-327f4da1ef12"
        },
        "item": {
          "id": "4f33eab6-021d-4d75-b94b-438bf876496d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "653de5a5-2fab-43d1-9b8a-349cf5812bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ae0e21-a386-46c0-83f3-6b57023b10b6",
        "cursor": {
          "ref": "24222d21-5075-4383-8c7a-0ef2d976c460",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b11b1958-a515-4d07-ac46-08238b9024d6"
        },
        "item": {
          "id": "c7ae0e21-a386-46c0-83f3-6b57023b10b6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9ba6ed18-a9ae-4b4e-94f1-94a14f55d8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03164d5-f19f-4495-8c34-54acd8fe99f2",
        "cursor": {
          "ref": "0956740d-cb97-44e7-9e9f-b08aa15df392",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eda00ad8-940e-4bc7-a643-efa2951deea6"
        },
        "item": {
          "id": "f03164d5-f19f-4495-8c34-54acd8fe99f2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c673e8fa-b3b6-438d-aa32-0f46862c5a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13095fc-04b8-4490-9459-0f977101383a",
        "cursor": {
          "ref": "99b57f0e-6bca-4ec0-8562-25ffb5a07d9b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d9439b44-cf8d-4dfb-b881-eb742222483e"
        },
        "item": {
          "id": "f13095fc-04b8-4490-9459-0f977101383a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aed62817-c73c-485d-9b1a-341fa0bee08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b56d041-61f0-4fce-993c-5c2f07f3b032",
        "cursor": {
          "ref": "1ee6bae7-2471-42ec-96a4-ccc73765d376",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8a57e441-74f6-4f0f-a892-cb114d4f8989"
        },
        "item": {
          "id": "6b56d041-61f0-4fce-993c-5c2f07f3b032",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ce3207e4-1375-48a5-8c00-f7efbfcaa968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d4ebc8-9218-4393-b5f6-ae79079d1319",
        "cursor": {
          "ref": "82d15da5-16a3-43fd-861d-5c82132cfc3b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "83fbb5f4-c12b-468a-859a-80b7b3be1830"
        },
        "item": {
          "id": "09d4ebc8-9218-4393-b5f6-ae79079d1319",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eda0d025-ac98-4f69-99cc-9568d9eb7135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ac31d9-7d57-4343-83e7-7338a53a8534",
        "cursor": {
          "ref": "69f9fc67-ad4d-4346-a852-38698dfb833e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b6462441-e947-427b-9fff-47975041e1b3"
        },
        "item": {
          "id": "c1ac31d9-7d57-4343-83e7-7338a53a8534",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3268e62d-8173-4a6a-bd3a-455b9962c0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c834d751-ed7b-4f79-963c-c783f10871aa",
        "cursor": {
          "ref": "36725d14-0611-470a-b9f8-7ef12bd8cb3e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "602f4988-368e-41ed-b498-7ca901fe9f93"
        },
        "item": {
          "id": "c834d751-ed7b-4f79-963c-c783f10871aa",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dfa75c9a-6f12-469d-90d9-ccb1504b3e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f8059f-512e-4e87-accc-015ac838d668",
        "cursor": {
          "ref": "36e59fae-0feb-45de-b70e-16592d3c95a1",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "08b2b96b-a330-4fd7-b7e0-9db9e7fc1137"
        },
        "item": {
          "id": "c8f8059f-512e-4e87-accc-015ac838d668",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1a6af4b4-ba11-49e6-9866-66d358673710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c9c06b-8e1e-4fbd-a6c9-a8630481a9be",
        "cursor": {
          "ref": "6fe1e936-32d7-4516-9452-7939a1fbea9b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5f9b9f6e-eb55-452a-ba3c-2338929833f9"
        },
        "item": {
          "id": "d2c9c06b-8e1e-4fbd-a6c9-a8630481a9be",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dbb9fe2f-2f15-4333-a6f6-b6e9f04d4134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeedbdd-c8c0-4e63-a2f5-f5ee08a93b1e",
        "cursor": {
          "ref": "0e63b14d-16c7-42dd-aac4-193f8a71dc61",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b12ffe60-6276-46de-8b48-bd510ab5ca47"
        },
        "item": {
          "id": "bbeedbdd-c8c0-4e63-a2f5-f5ee08a93b1e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bf40525b-45d1-4d87-b7de-f43f6df70b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a7f4fb-5af3-4357-aa5d-b99fa20845a2",
        "cursor": {
          "ref": "c159989f-4f64-4e7a-be25-bfaefc2a06cb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cf5f196f-2291-43a3-8ab4-f74d9eddfbf8"
        },
        "item": {
          "id": "b2a7f4fb-5af3-4357-aa5d-b99fa20845a2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9c3764fc-21cd-4cc0-b695-675300156871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccb2c91-62db-45d3-889c-3f67da90f525",
        "cursor": {
          "ref": "7b92bf7a-f7f8-47c9-915e-20559a8c1f12",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c03fea1d-9ed2-4d64-b36d-ddecdb2efa9f"
        },
        "item": {
          "id": "9ccb2c91-62db-45d3-889c-3f67da90f525",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8a95d9c2-3bdd-42ce-bbb5-e6babc90da81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e599a2-f3b6-494d-9166-877f21d2ac5d",
        "cursor": {
          "ref": "dd94cdd9-a6c3-4261-8625-1718b5021bd5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "025afc0e-c52e-43f0-9af3-14ea65cf7e84"
        },
        "item": {
          "id": "33e599a2-f3b6-494d-9166-877f21d2ac5d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "052c5289-eaca-42fc-8aab-935569140f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb94f91-4bf6-4342-b89a-08ae0dfc88fc",
        "cursor": {
          "ref": "0dcbee3f-ec3d-42cc-b07f-d3e2e6a6fd76",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "333305e9-2ce2-484d-ada3-7b50b5c19b05"
        },
        "item": {
          "id": "ddb94f91-4bf6-4342-b89a-08ae0dfc88fc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "17f5abb2-e36d-48cb-a27d-ab50e02bedbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd2653f-c0b1-426f-90cf-ba49192cd6d6",
        "cursor": {
          "ref": "4d3ffb16-6eb5-4fd3-83f0-b085f7354c35",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7363b60f-997f-48cc-a511-d3358a3bebba"
        },
        "item": {
          "id": "0bd2653f-c0b1-426f-90cf-ba49192cd6d6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dfef8652-466b-4448-b240-c67d6e3afa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0854615e-a75b-45fc-825b-8d17bb2c366f",
        "cursor": {
          "ref": "5d476454-1449-41da-823f-efe5886f735c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "071c15e9-fe60-4016-ad5e-78abffc873db"
        },
        "item": {
          "id": "0854615e-a75b-45fc-825b-8d17bb2c366f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b0e1d0d3-e6b1-41e6-afc2-b5da3cd4c002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0623c0ce-a6ac-4041-a4ee-3615e773794e",
        "cursor": {
          "ref": "da0bf385-b005-48c6-ae44-b248364176df",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "51150adb-a5d8-4167-a704-1592dca95f46"
        },
        "item": {
          "id": "0623c0ce-a6ac-4041-a4ee-3615e773794e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c2f9f8fd-d1c0-4b71-b847-d8c9eb3f914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536306fc-18d2-4fd3-aa28-c1113c048821",
        "cursor": {
          "ref": "544c11e9-1669-4863-b0d8-ed8effe7d04a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "42786bbf-40a5-4146-bdc3-0c5255599d15"
        },
        "item": {
          "id": "536306fc-18d2-4fd3-aa28-c1113c048821",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5d4883a0-6b2a-4329-9de8-88d6d3a8a21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7769f375-9dd3-4b8b-812e-c309c6ca0336",
        "cursor": {
          "ref": "61d27d94-3f94-4018-92b1-e70b562ca3d8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0bc2520b-530f-4d52-a1a6-3d8af0193b87"
        },
        "item": {
          "id": "7769f375-9dd3-4b8b-812e-c309c6ca0336",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7f8d60b6-1c8d-4f4f-9975-5144bba52e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba83ffa-bb30-45a9-ac8b-31b14a775d8a",
        "cursor": {
          "ref": "d570d8ad-0c7a-4d73-91e1-dff54649e214",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6b9f5307-5dbf-4247-9207-d779f0b6cd4d"
        },
        "item": {
          "id": "0ba83ffa-bb30-45a9-ac8b-31b14a775d8a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "51b152e5-f03e-4669-9d94-5e39a7329420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23cd61d-812d-4436-ace1-9efecbc5cc62",
        "cursor": {
          "ref": "4579e112-9f35-49df-8c1d-ef12bbaa55cf",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "14754467-5bcb-4e6c-b419-bebe8dfff65c"
        },
        "item": {
          "id": "b23cd61d-812d-4436-ace1-9efecbc5cc62",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2ee58333-2a99-4392-a7de-9cf332165380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838b784d-7d7f-4208-b54e-4fc941892f62",
        "cursor": {
          "ref": "663e0897-e0e4-4884-8824-1b8a5cd29ae3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6d487b94-5848-4fc6-a5eb-ff398d0bde62"
        },
        "item": {
          "id": "838b784d-7d7f-4208-b54e-4fc941892f62",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "caad7639-5591-4520-9675-b0ea3c0b0340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8021f22-11b9-4092-b3b0-901b0779727a",
        "cursor": {
          "ref": "ec4af374-6a5e-4a4e-97c2-575e6f68d060",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "198d942a-031d-41de-a307-019bde73e261"
        },
        "item": {
          "id": "a8021f22-11b9-4092-b3b0-901b0779727a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "36faff82-5343-4dcb-b4f0-5e961499a97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a750db2-7eb8-4af4-bb9c-a44effc4c228",
        "cursor": {
          "ref": "94027b7f-7f27-4aa3-8c96-0ea20011af5d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "652b6247-b262-4a3e-b07a-44b1383a3402"
        },
        "item": {
          "id": "2a750db2-7eb8-4af4-bb9c-a44effc4c228",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "aec8c0c8-7dab-4591-b092-d86fb8772431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c69087-3acd-42a2-8057-47e5db7d684e",
        "cursor": {
          "ref": "65a2c813-0859-4602-9929-7c4f26b95c44",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "484ec2e9-7786-4b8a-ae08-3eb9593fe4a1"
        },
        "item": {
          "id": "c5c69087-3acd-42a2-8057-47e5db7d684e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0c1f0fea-a451-44f3-a8a8-01c7b543c670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5413ae-5a49-4013-b439-4dca872211af",
        "cursor": {
          "ref": "c5d098e9-a904-4b2d-9788-499aafb65fde",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3d595db9-b54b-4067-bd7b-22aee324afcf"
        },
        "item": {
          "id": "af5413ae-5a49-4013-b439-4dca872211af",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bcc34176-6491-4762-8bbe-c00a62e0ffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1b89e5-5fe9-4e4e-99ec-10b624952c0c",
        "cursor": {
          "ref": "38dea30a-686d-4519-a7e0-5b9d658f312f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "344fb443-224c-46eb-a8bb-3d61dfe49747"
        },
        "item": {
          "id": "fe1b89e5-5fe9-4e4e-99ec-10b624952c0c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "71f6806a-f7fd-4382-8409-90af47801a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fee42c-e9a0-4800-a10a-d3f88aab34ef",
        "cursor": {
          "ref": "89c0f681-e487-4905-9cd3-0868d3409713",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "84d06c00-8f25-45f6-86a2-9b7ac2aeb8c7"
        },
        "item": {
          "id": "51fee42c-e9a0-4800-a10a-d3f88aab34ef",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2ce8da4a-553e-496a-a0ed-f7ff92fd64c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689fb617-a514-4cd2-a713-bd39cdb7e2a8",
        "cursor": {
          "ref": "acb0361c-5032-499d-bc98-fedc184bb19a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1815f46f-34c1-4c63-ba83-d17a708750fe"
        },
        "item": {
          "id": "689fb617-a514-4cd2-a713-bd39cdb7e2a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2df56890-2fa3-4823-9f63-94f86b65605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d520e9de-f0eb-48b8-9a55-51a53a2db212",
        "cursor": {
          "ref": "54816a33-a916-4d90-9a4b-ff93f2b33e16",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4ade5497-ce5b-4905-a783-978b2a173562"
        },
        "item": {
          "id": "d520e9de-f0eb-48b8-9a55-51a53a2db212",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "119c0224-0989-4d1c-9b98-6b3ba0cc944f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fcf34a-1586-4311-b82e-67ff34a11d0d",
        "cursor": {
          "ref": "f0b63430-1256-48a0-b23e-60610fa0d5e8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dd1fbf03-6e0b-427f-a50e-a00e88760068"
        },
        "item": {
          "id": "86fcf34a-1586-4311-b82e-67ff34a11d0d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "805da4e3-95eb-4eb0-8580-6e7ce7a1a202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c02e28c-0e59-43c0-951d-8670279c430f",
        "cursor": {
          "ref": "0c614bea-d71e-449c-8f1b-4c62805aa5c6",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "abbd6171-e4c1-401f-b2c1-bbf7339c3b66"
        },
        "item": {
          "id": "2c02e28c-0e59-43c0-951d-8670279c430f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9cb1243c-bb47-4d76-a4d4-68c45c97248d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfa5c23-7c1d-4d59-98f6-ecbff06ea3c7",
        "cursor": {
          "ref": "5b965f93-d687-40fe-8159-643171937869",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "45b3590e-07ce-4e68-90ea-a29b7ce278f8"
        },
        "item": {
          "id": "0bfa5c23-7c1d-4d59-98f6-ecbff06ea3c7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "19024666-692a-4609-9740-6f2a01d566f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db759ef9-2f34-4a01-bd23-4a446a37d2dd",
        "cursor": {
          "ref": "17c57883-a9a5-4800-ab1a-626b96e13eac",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3bbb3c91-6624-4791-a418-8c0576201788"
        },
        "item": {
          "id": "db759ef9-2f34-4a01-bd23-4a446a37d2dd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8b5485e8-b8ed-4525-85d8-59e51a9a5680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb6abe0-300f-43ee-ad63-b34eb5168fe4",
        "cursor": {
          "ref": "42849032-d689-452d-9753-26995d467ead",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dec79ad1-2961-44d7-aa06-84a9015196ff"
        },
        "item": {
          "id": "ebb6abe0-300f-43ee-ad63-b34eb5168fe4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e8540600-3ee9-4e1b-9e0f-e8a43cddad1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e936fc77-b156-40c8-99c6-5e11fd94ebb0",
        "cursor": {
          "ref": "998cccc8-21c5-403c-97f6-552c987c4ba8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "071d1ef3-2758-483a-bc1f-574c90a4c998"
        },
        "item": {
          "id": "e936fc77-b156-40c8-99c6-5e11fd94ebb0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "eef2e97a-6310-48f0-a538-813fc1df6326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665c79ec-ab54-423c-975d-d8ac2b2fcd28",
        "cursor": {
          "ref": "c17a167e-1c66-4953-9ad4-a53f3272728b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "32f65fb3-1def-4238-8b1c-8748da4350ef"
        },
        "item": {
          "id": "665c79ec-ab54-423c-975d-d8ac2b2fcd28",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "614d727f-c442-4cbe-9a39-8a21b46567a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b35f751-9f18-4d14-9c1b-5e68831fcd50",
        "cursor": {
          "ref": "7c8219ef-cc36-45b5-bec0-08b0b2c5afb7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7b2999c0-9733-4f33-873a-621817804948"
        },
        "item": {
          "id": "7b35f751-9f18-4d14-9c1b-5e68831fcd50",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1eb81d8c-bb72-4af3-bc9f-fe36af420b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cae6d9-383d-41ed-b2a6-f10c88a97bf0",
        "cursor": {
          "ref": "a2e739b4-664d-44e2-919c-56a58cca08b2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5db6fec9-beb3-4351-b2a5-7f97dc58555a"
        },
        "item": {
          "id": "46cae6d9-383d-41ed-b2a6-f10c88a97bf0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "88766063-3732-4be8-8195-c46d4d877c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a40575-bbcf-43e5-84a5-8f9123d6cc13",
        "cursor": {
          "ref": "cecfab82-915e-44e3-a8a2-983ed581aec2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6961ecd5-d7e1-49a3-b063-c5d9c161dce2"
        },
        "item": {
          "id": "d4a40575-bbcf-43e5-84a5-8f9123d6cc13",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cec378f8-b9c1-4da7-bdb6-40c95cc06add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadb7ff2-3ba1-43ec-9ce2-4f41963a2ede",
        "cursor": {
          "ref": "d9268665-0237-4944-a2c7-563b6e2a054a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b23a54b1-0f7a-42fc-9c95-0b8d8ec8ad65"
        },
        "item": {
          "id": "dadb7ff2-3ba1-43ec-9ce2-4f41963a2ede",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8cba1395-4354-4fa6-a362-152ee4ea40c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b4ac8b-e57f-4a59-8180-f21b0a7b1499",
        "cursor": {
          "ref": "fa3f68a8-b876-41e5-ba75-c48dd1b19462",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fce2010b-1dea-410f-a32f-7809a53092a8"
        },
        "item": {
          "id": "92b4ac8b-e57f-4a59-8180-f21b0a7b1499",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ecffed2c-fa96-422d-97b4-29355f019049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad8a9cb-ff6c-44e6-9a04-82d33a65b0b4",
        "cursor": {
          "ref": "e77a6d31-46f6-4a8b-8ec5-5b780a545bed",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "06933f9f-6d93-40ed-a457-7337af5f6b25"
        },
        "item": {
          "id": "cad8a9cb-ff6c-44e6-9a04-82d33a65b0b4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "73a2121b-1322-44ee-9afe-19d622c5a03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda8f59a-0f6d-4c29-b343-fc8e799985bd",
        "cursor": {
          "ref": "d85928d2-9cc5-4ad6-8e07-0f9a6ab78076",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8def3c26-45b6-4e02-bc26-948f89d1314d"
        },
        "item": {
          "id": "eda8f59a-0f6d-4c29-b343-fc8e799985bd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "445ccf32-f46b-4eec-8c1a-6553f8923e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c936ba4-134c-4dfd-a235-b6b495038dea",
        "cursor": {
          "ref": "6a2a0e78-0834-40b2-8808-14887d9410e8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7e1e0f5f-f194-44fd-871c-78092e8cf7da"
        },
        "item": {
          "id": "5c936ba4-134c-4dfd-a235-b6b495038dea",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e6935407-1375-45ca-b7c3-94cc004d362b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d810b5d1-3b02-4ea0-9da0-e1f205e83438",
        "cursor": {
          "ref": "99ef35ec-7a69-493c-87ba-3e5c8826eb09",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "03b40388-caf0-41f8-bc42-78566e695551"
        },
        "item": {
          "id": "d810b5d1-3b02-4ea0-9da0-e1f205e83438",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3a2297fd-5f0e-437a-af5b-25cfab75bab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f377f3fa-6dbc-41ab-95cd-3cdda56f2118",
        "cursor": {
          "ref": "81a3cae9-2da2-4b1f-93ef-5eb757c77962",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "43da367b-97b6-4440-8056-f228c56c3e3b"
        },
        "item": {
          "id": "f377f3fa-6dbc-41ab-95cd-3cdda56f2118",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "30cebabc-c301-44e9-88df-c6754e236afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403fbdaa-2bbb-40ca-8b0b-4bd0d5f0dc95",
        "cursor": {
          "ref": "ae867da0-c565-48b4-a993-34e0bfbef729",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ed89ed42-edb1-4952-ae17-6263db20816d"
        },
        "item": {
          "id": "403fbdaa-2bbb-40ca-8b0b-4bd0d5f0dc95",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f446511b-d2b9-4f33-a12b-ec22befeeaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7ca635-396b-4c7a-a492-7478da0c7c0d",
        "cursor": {
          "ref": "6a3b7d6f-529b-47e4-af82-53b4b78895a7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "76e97306-295d-49d6-bdb3-65a3cb2e01c8"
        },
        "item": {
          "id": "ba7ca635-396b-4c7a-a492-7478da0c7c0d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f738b64a-76b0-48fa-9f16-5480631d60ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93083a6f-a91f-4769-bda4-08464e625c49",
        "cursor": {
          "ref": "88fc9fd2-07a9-4b55-9638-65226de95c59",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "61d31242-308f-4ea0-af85-de37ac272288"
        },
        "item": {
          "id": "93083a6f-a91f-4769-bda4-08464e625c49",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8ed9faf2-90c2-4466-a86c-f743e4fa8103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b595206d-7916-44bb-b5b9-07ff7d224dae",
        "cursor": {
          "ref": "ea596b3d-6269-45c2-ac45-4331d44c8b87",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "085e3c31-9242-4eb4-9421-cb99801e796c"
        },
        "item": {
          "id": "b595206d-7916-44bb-b5b9-07ff7d224dae",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "425a698c-44af-4f3d-aba3-02ecb6e86963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4e0972-443d-4f62-a0af-624eeef5e0ad",
        "cursor": {
          "ref": "5a978757-5bab-4009-b8ed-28dcfea465e3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "61f9d80b-3dc3-4f9f-b56e-e1d67900996f"
        },
        "item": {
          "id": "aa4e0972-443d-4f62-a0af-624eeef5e0ad",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "13cf81c2-c73f-4e3d-adb3-928083711ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa29fc4-9cd7-4acf-92fd-160239b6c27a",
        "cursor": {
          "ref": "9dacf1a0-4c71-4bf1-9045-34722cde8ad3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a59e6f37-694d-4ba2-81d9-f8c60700adc5"
        },
        "item": {
          "id": "faa29fc4-9cd7-4acf-92fd-160239b6c27a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5dd731e6-f2b9-4c38-9233-c403e51fdf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bfb372-5c9a-49b2-9c71-70cd972781fb",
        "cursor": {
          "ref": "2fb11651-b485-467b-be3c-0bd36ead353d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "430f49c5-5597-417d-93d2-4382161f53df"
        },
        "item": {
          "id": "13bfb372-5c9a-49b2-9c71-70cd972781fb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e5f485ec-afc2-4355-89f3-482a967aeb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd7bb8b-21ce-481b-bd2b-4cd660638a9a",
        "cursor": {
          "ref": "543ae673-b797-46dd-abfb-ea034e8a2e64",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ad2b3577-a067-4036-a588-955b53e24397"
        },
        "item": {
          "id": "5cd7bb8b-21ce-481b-bd2b-4cd660638a9a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "39509a96-5d86-4a83-9e4f-6b51bb5df309",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bd963c-ee89-4016-9ce0-8db5c6b9a470",
        "cursor": {
          "ref": "24c88b65-6ed4-47c8-85d5-ccc47c7feb20",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9e39726e-22f2-4369-8afb-ada6517f2168"
        },
        "item": {
          "id": "d5bd963c-ee89-4016-9ce0-8db5c6b9a470",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cd071a75-8a19-483e-b148-749f738502da",
          "status": "OK",
          "code": 200,
          "responseTime": 2296,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "340f6875-7ff6-40b4-81bf-2fe58bcdc259",
        "cursor": {
          "ref": "6cd204ca-b508-49f6-9e12-71dbc65078c0",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c9c7c8f4-9359-48a4-9cde-2cf8584835b6"
        },
        "item": {
          "id": "340f6875-7ff6-40b4-81bf-2fe58bcdc259",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c832aaf5-f412-4e24-8682-3a92d3fdeef8",
          "status": "OK",
          "code": 200,
          "responseTime": 2924,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a69d7c7-1a02-4495-bdc5-8b3681d8c64a",
        "cursor": {
          "ref": "61ab4c14-4258-4c62-b882-5903923f7c40",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5beeccc7-5b23-4564-9107-c144d981ba25"
        },
        "item": {
          "id": "9a69d7c7-1a02-4495-bdc5-8b3681d8c64a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "59d51a3b-8493-4fb8-9dc5-29511b405d92",
          "status": "OK",
          "code": 200,
          "responseTime": 2481,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e727fa4-8155-4b34-a11d-cab5e75d0e4c",
        "cursor": {
          "ref": "5929fcf0-d690-4326-b21b-050ff5eb3e55",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "da2f7bfb-07ff-47dc-9117-8121f65f4a1b"
        },
        "item": {
          "id": "2e727fa4-8155-4b34-a11d-cab5e75d0e4c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4d627c1-17fd-47e1-bcc0-f1ccac64b19c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e727fa4-8155-4b34-a11d-cab5e75d0e4c",
        "cursor": {
          "ref": "5929fcf0-d690-4326-b21b-050ff5eb3e55",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "da2f7bfb-07ff-47dc-9117-8121f65f4a1b"
        },
        "item": {
          "id": "2e727fa4-8155-4b34-a11d-cab5e75d0e4c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4d627c1-17fd-47e1-bcc0-f1ccac64b19c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3742c1fa-17f9-4a4b-b702-fc728b036bc8",
        "cursor": {
          "ref": "0a2d8a7d-56f0-481f-ba1b-38447ed51526",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a22cc3f6-7107-4ba3-814d-97a60fe4d0bd"
        },
        "item": {
          "id": "3742c1fa-17f9-4a4b-b702-fc728b036bc8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f44f1ff-0479-4962-94ce-138ccce216ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131e59cb-6faf-4cf9-9b42-bd045476792e",
        "cursor": {
          "ref": "6f6cd0d7-3bb7-4557-8497-3bff14b0821c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "208a0804-47cd-4570-a9f3-ff1771a7507a"
        },
        "item": {
          "id": "131e59cb-6faf-4cf9-9b42-bd045476792e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cc17be97-0f99-4ca6-8f10-7be6f30326a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}