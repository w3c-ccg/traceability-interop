{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "95ae0f2b-65b1-4ac7-8359-e7de3b64dc46",
        "name": "Clear Cache",
        "item": [
          {
            "id": "57467cd2-6a4b-4fa4-982a-8f8ac5903d30",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b27ebc8a-0348-41d3-96e6-a243d48b7a70",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ffa7d33c-ebc6-48d5-8bf9-cbcd5b60cb70"
                }
              }
            ]
          },
          {
            "id": "0cda9c1f-3759-41c0-8d4c-7fecbf392baf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edc3f85d-861b-4fee-8ade-d77219d9c1ba",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "739f47b6-c3ac-453b-ac54-25879aad7654"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2f0ca163-d09a-459c-b5dd-99357965975c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fe33f67e-f05e-4616-a1cd-206a63cc1daf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aafe11d0-efe8-4382-bd91-3f5edd005c75",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f805348-9cc3-451d-b755-8e1ee1c0e77f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47648049-9e63-41ac-bb0c-63e1f0f6797e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "930a80d5-da04-498c-bc4c-1f905849b3fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41de985d-61e4-4484-91ec-13e46bed47ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "227fae0f-c498-45b8-8d85-99298e5499fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0308c9e9-9fa4-4c7c-9f24-6f5c68b7d471"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf04c585-5d94-4cb4-9efb-fec3e58a1939",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "23b365e8-e5ed-4670-83f5-32add5456372"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c44b582-037d-4486-ba2a-98af8fc8ccf6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "def1b62d-c753-42d4-8fa7-18d0df1b0374"
            }
          }
        ]
      },
      {
        "id": "891a9724-44dd-4a96-b57a-741a0e514279",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9729249f-03af-4552-af09-5186bc62a1bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4c18530-66dc-4b5e-8767-bc67bdb73983",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28fb1012-c91c-4ab2-9a0e-87bb1d107859",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbfc6ea-fd89-4468-ad80-5fabb3081909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f93c3921-d038-4ba4-9729-d64e391fbb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c30b21b-3c9d-415e-a18c-14974318d485",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c4ee67-cedc-4526-96cb-8da141720dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f10f611f-a519-4c4a-8cd8-b24137d3bfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be52573-39e6-40d5-8fed-c7fdee5812b8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13919c8c-8486-4ed0-936d-f79c1e260107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51630be9-fd98-462e-a40f-3ca622ca0345"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21efaf38-4c49-4b74-a480-57142d5cbe26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d479a4eb-8d16-4096-940a-a720386df0d3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab6ebc7-abd0-4856-ac0f-5d537ee57dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f813e0b2-4b3b-4999-b0bc-bf5297e2bc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18904fa-8b8f-4919-ac40-ee520f1e493d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35efc382-9676-4103-9183-39bbe7bae43e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e7e371ce-a99f-443c-bad8-2101857983b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f243230f-7487-4907-af06-6a513b09c07c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e78be56-a2b2-4a08-93f5-6ecc3784e0bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "24312541-29b6-4b5e-b691-6cd2ae6a15a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb06c8c4-8bdb-4e82-874c-e2677a6fe3b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b510462d-f97d-46b8-aa7d-96ba2202644b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7002b18f-53c6-44c5-a11f-7695c1f8dfe9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ab25eab-9f3c-41b2-8b1e-03ef6dae5f43"
            }
          }
        ]
      },
      {
        "id": "7ce6ee9c-7deb-43a5-b95b-1ebc8408218b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "247a0fd9-370e-4a01-8d52-f1320887d773",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45d2d9bf-1a2e-415e-87ee-422272cb7b3a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0b6a0d35-4ea7-481d-88e1-75eaa6fa934f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc02ef1-ee44-4c60-b6d2-35514b0a5412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b384f8-be6b-4779-9d6f-216d4e685997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200526b2-2280-4611-9b1d-06eb19653ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed2f5ded-31be-46e6-888c-4950b1e32c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66f1ec5-fd17-4f3d-8833-05af96796c29",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54afc72d-0706-4737-82c5-7e5ad7ed14bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c07072-a681-4d45-aede-499710d59745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8164acd5-ea45-4a2e-83f9-354b0c07343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cab97859-f37d-491b-9852-25f2bd7c9445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76aad81-8e21-40bf-812f-82a20e0c77f7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab5e54c-daa5-4ce0-a7cb-b2fa7f34a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e39e1b1-9c79-4f44-b8bb-fe8f5e240259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14f1b15-a588-4ec9-aae2-7b77ba8760b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf3cd66f-0d59-4998-9235-420561794b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faca307-dcdb-4e44-8d39-c2ca59c0184d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4d5ea6-86a7-42c7-b0d3-b63d9b44e277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7788b744-541e-43c5-b649-dc7eaeb7ade3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd230a24-60d1-4c88-a66b-834cae680344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f27faaa8-59c6-4793-875c-d6df9b6797a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607502c0-61ff-41cb-b109-9c5b137ddb96",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d3d524-a7ec-4b0d-bb93-fac2c03f6d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35d5169-04b8-489e-930c-3cac13c575b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844ff99b-4748-43cf-9544-10cbaa3d6490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ef130d2-f16c-453d-bf1c-3fcc0ae96dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a4efa4-44b7-46cd-a53c-9b0f9cf48284",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cd8d10-4a99-4b9e-87ed-65ec56addb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7cce4d-8ea6-4727-9a59-539b51a71ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed5e62e-cbb2-48a6-804f-9a8a5eb04f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d9ecf5e-22cb-47d2-a3bd-c3e9ef82d452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7863f87a-e00a-4063-8a6b-356ca50ae1eb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc425670-e99b-47f2-9ac8-f2a2783df991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4939673-d329-46d8-9af5-d6f6cb9ceaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9f44d7-3401-407e-b82e-2f1b2d6b7764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b379bdd-ae69-4530-b047-de8d6329438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f8a362-425e-4efa-a832-42d4b889f832",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdca1b01-7f85-4b55-8b90-55a07a9cb62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb6be3c-0711-4733-9dff-f51bf1c1b91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6672f3e-d1fc-42eb-8542-f89d4d0c857d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b50e2c3e-048d-47b5-b4c8-072e6909c4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f44759-3efc-44fb-adde-a8734efd5a48",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b2115a-a0ff-4005-831b-d6072ea33712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1075304e-1f78-405a-b07c-02ee98cdd664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa7ecbb-a149-4df2-9838-5d5e16f149a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ef03f48-beb3-4e1b-9fec-cd92ccf1c8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17fadd6-b450-49da-9f83-e6a48829e2fd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e73363-5cb7-49d8-81ae-ed61696886c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4b1397-5ef0-4b4d-8cda-315846067a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e89940-4794-4097-83a7-f0696d0fda40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8610cf28-074e-445c-adb3-1dcef6f94b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971cc689-0231-40e2-b478-6eb957901acc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cdb8cd-fea4-44cb-9904-ef54340a593b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8d32fa-4d29-4be6-bbd3-e1aa875be121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b8e014-0d1d-47e9-9f5e-e831f80bc70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97718a58-f980-4ff4-b387-90191dc2c702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4d9bef-339f-470b-a02c-c9e0d9625e77",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0730f4d5-3656-4f4e-a56e-e409373b26a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbef4eb-ed81-456c-be75-7fee3f5e78da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f63bc4e-0578-49d3-821e-a1fcce2774ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdf94306-29f6-45f2-a57e-dde4ee848d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0116f524-8ddb-4ea9-895e-4e15d70d1455",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212cb07e-5a45-4461-9dd4-df42603d4fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb66a0f-ff4d-47ee-b59f-de1c67236a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bcbd26-a30d-449b-a6f5-a42b21566f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83800784-f9e3-4a24-a4d0-9783f77efe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c1cbec-743a-4f8a-8335-88d122c0ce4b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9098e451-06ee-4412-a18d-4c930bfced29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3897535-f478-4daf-985a-b606b76fb3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee24367a-cf75-4092-bf82-a78d4e963585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db5fff7a-c650-40a8-b494-e0edf25a1ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f4abb5-780f-4605-a0d3-3c14a52cd91e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50898940-1a49-4ebb-9fff-efe3eb03800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60efeb56-5be5-472c-bb89-3db5227255d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ca71db-debe-4ead-873d-7a7c982247dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e7ed238-135d-48c6-93f7-c9b73a8b1769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844cc042-565c-41e0-a329-8ff96821b0dc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5bf96a-c035-4907-90c8-a688eadec032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c48617-5605-4454-999f-61c3e5b4295c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc49a326-f4e9-49bd-981f-efeecffa30e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "036ce59d-b697-456f-ab5a-c2cacef7751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7822fe4c-95f0-4afb-a4e1-2435b617afd9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480d5178-5ff2-453a-b98d-18b16f512ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc89b87-14b9-45fd-83ae-024770b46104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b300562e-b160-4f20-95d6-fd7a8a659be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e366e6a-2a65-43fc-9deb-ee6dbf591f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af956e6-7ccb-4842-9627-f0eda0ee39e7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49f500a-e2ee-4343-837c-bd40d828fa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d50e1b3-2f62-48a2-82aa-2f0d6017f3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f68197-b045-4927-9be3-718f6adea0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "291f1690-58a9-4e01-b7c0-b3322d76fbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9d4e34-f7db-42e7-8030-68f0716f26ec",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b201a68a-e672-4c59-822d-352736f67d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f210d4f8-3b82-40fd-94ca-a7cbb2e88750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad023de-3b8a-4dd5-98c0-990a154f3e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dfe467-9eb0-4545-9b7b-ceed0f9c6ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c0f838-e318-4cc3-adca-84314e2a2aec",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feaab77-9a4a-4715-8894-143fc0c7a2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7e76ed-efb6-4cd0-b886-1b543703ba87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7f4e96-ee91-4fd2-bd64-993e61e49921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d16577d2-7e7c-42bb-ab05-5b9ede2beabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ef2058-e8ce-4dbc-9f1f-76f168f6d327",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40287b5c-1c48-4257-b905-f1e9482768d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb204015-f5a2-4988-914d-50cacc643448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaba54c-b98a-4ca0-830d-24c3d0a51398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b83c39-240a-4335-9fc5-4676e575844f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e543d5f-26ac-43c7-96ad-37853163c856",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd54d457-48cf-49cb-8a1d-c38c1f451222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ebaacc-d82c-4b6e-9247-caa0f5e7c616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db38651a-ebdd-4e47-8deb-ab5a3eaa2979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05fbc44e-aabb-4508-8740-e661102e898f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470531dc-7faf-4794-ad8f-1f6e14c77846",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e959a5-8486-47a5-812c-d591caa4bfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05d5b7a-2397-4e27-a635-e91e64a4a598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f0f25b-3871-4ad0-83df-952fb2e9f560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a536da2-e85d-424c-baf7-1037d9da8436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e421d42f-e4c7-4bb0-a6a5-7607ce43fd7a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d564f832-85a8-4897-b74b-13ff15c36027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734d62fe-7145-4162-8b0a-b5dcf1643f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd725730-206c-4ac5-bd7e-b6c8fe3f8d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed80d677-90fe-40f6-bf56-20abdbc3442a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949186fe-03eb-439f-9cae-854783da60e9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94533dec-7de3-49f6-a2d1-d90a7a206610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200d87ea-7c08-4da7-8a6d-1ce70630891c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388a95a8-4f56-4b65-9e5b-3d02225d3737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb6f6b0-311c-4b08-990f-180e4340d353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550b2f05-165e-4ba3-88e1-498f3bff5460",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0368c7da-2735-4415-a82a-3f067f298ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46f839a-58f4-49d2-ae4b-2a36b2aab01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4030f88-06ef-4a9e-a903-40ca200d90f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a701d5-8caa-4899-a1c8-92935f84c89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d399a8b-4784-4bb4-b836-ad8f7efb6a06",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d875787-4830-4020-9332-e07f5ebadb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f98623b-7cbc-4889-8f31-b50170f36a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e446de6-d6d4-4ed0-af49-b4d6aa693f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5e5fca-f89d-4e7c-9379-8002e209b9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76b52d9-fdab-42f7-9f73-2340c405ff9f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8bb8b4-b429-4bb4-b097-2a9bfc2858f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e82624a-9503-47a0-af37-f46f9bb42861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944fcf48-d586-448e-8de2-9923a87cbf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ea1df6-68d9-465b-91a0-902b6229dbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1227fcd-dc96-45d3-830d-c9caf1777629",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87bb87e-9ec1-493a-9b27-d7d68a659707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e1ca3e-c14f-4cdc-8703-54069bcc7c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc812183-daaf-4dd4-aae4-5bba93738a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54ef0ecf-bc30-4632-a5f8-bb15b558d378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282bdd1a-d9a8-4be5-b312-956adf1faab0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887e7252-869b-436d-af73-f810f5b57539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771784e2-87ce-4c87-88bb-cd8c089d3da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721a19c6-00ef-47a2-8d9f-dbb039e69063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d66797-4ccc-475c-9caa-a22b142cc5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807046ce-a3b3-432d-b1d7-571b95f0e640",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b2af04-b1f1-49e9-a349-3c9edda6e84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55521ee-2c9a-4d25-ac5c-f6a8634a9bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1338080d-4dda-4dc0-b564-227aa30e7606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac341d96-ae80-4d78-bf24-60a61d7c264b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaf47ae-ba36-4f67-9e3f-fcc29d1f30db",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5cbd16-bfea-4f86-9026-c129bbdc1fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f815a6e-1406-4057-9771-5a5f9b5d2831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43de10c-fbae-4b2a-8bad-779d9afee586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "358e3b19-bc34-4ff3-99a4-733618c0844d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3942814c-7c3a-492e-9ea8-3d570fce6c50",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5cf10f-328e-4133-bf7f-346929adf9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac5c4e0-df8a-4c39-9a1f-b7ce8eb259dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a175d0d-324c-4198-9c72-bcb1effbe4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb4c83d-2010-4160-bb38-5c8c19736214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2702fdc7-4990-4e51-865e-161720254fb0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775fae20-6ec9-49ab-823d-4592fa2d6232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46914c6-9617-4e4a-a8a9-d0ca494b7149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b33b9f-e73e-46b5-a8b4-f4b1ba9056f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "026b8321-822c-44b9-8884-d61af97a5c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b757df-39aa-4322-bda9-6f55ea67973d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523798e5-11fe-46b8-9397-4ce31bc7aeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a4b5e4-c364-4ef6-8e8d-94f941ce9dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9932254b-c186-4f58-a221-712743d31b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e00baca8-da97-4d0e-8c6f-212e01c72007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f69ad9-a2a6-4d7e-84ef-5e5a25f5beb5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85644978-b28a-43d6-9fd9-8f98b887716b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "561929de-a50f-4c17-9505-f4138f8b706a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4397b92-fea9-4f98-845d-57d2af39977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d767c93-c0d7-4fc3-a4a3-931cc3edf160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd453d58-274c-4d5e-b08d-4691ba00ef57",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b7eaba-1d29-4d12-95c4-c375764ff12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adfdc9b-d190-44b4-bde8-12c7bfb0518b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b9a5a4-ab3d-418f-b72d-6917f4b458f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a998e94-b02a-4217-a2de-03c30254d014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd56e804-ec22-426e-ba8e-9bc01da5c558",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e27398-c790-4ad0-869c-2ddca2e605cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7976ba7-fb1a-4bdf-8533-5e39cff5a4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5b0860-b3d8-44ec-bc3a-526c6a5d44e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcee47bf-8896-48d5-bd0e-8e45d5c8c068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fff7717-b100-47bf-a11a-cb3b5abd0582",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884afd3a-690a-48b4-8e47-ced5dcb00b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea452ecd-ea28-4f44-89c6-fe1f6d2241fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d6adb7-8ff3-4fdc-9369-21c2240b0c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28f496b6-4d5e-4113-9f0a-8e5cfec25aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdf68ec-2288-4739-b1f9-71e6be9a44b8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3779392a-5f0d-497f-a997-d3e4b0fcd41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744c6c5d-d5cb-46dd-b5ff-0bb1185707d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6cce6d-4d93-47da-bce1-3f8a7131fc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b2a555-ce8f-429f-8fb3-a7b8cfa5a1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282693ff-710c-406d-b29a-453daffd6e38",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcfc396-753a-43ef-b105-cf22118bc6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c35fdb-abd1-41d3-b090-5b9fb014ad09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d942972-39b8-4674-96c8-baa204cda82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2040f2e9-eff6-4161-9815-ae4f0903fd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca2bb46-cbe7-4aac-8149-5f56bceb9f07",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa107d2-ae84-48e2-927f-e39f14b11492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0a2f1c-8ced-45fb-8012-57013f504d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178a5426-d706-47be-9d30-5d6454ecbbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a08a666c-ec16-48c0-b9f4-0e4649cf8132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3a91f3-9558-4fc1-a2b0-c9977acd8dc4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b6e0e8-5f23-4e44-9c4f-bf6194c70133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a56f6e0-d1e0-4d36-8398-71fbdb5e1233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51112d6c-6bbd-4747-a352-898530b01c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "24190fdc-44fd-41d5-98bb-d7eb146fc66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85a8798-426f-46f8-abc0-480a2f78d090",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818e9aef-b1b5-4d46-be0c-2e6b2964323b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1320c3e2-7948-4969-8048-24a4f25f2578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681ee517-1eef-41d1-a95c-4f7346bf6b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "47645c7c-064d-41a3-a04c-9d0927e659af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af55377-fbc7-4fe7-ba68-ff21f45772f9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19a2894-536c-4219-a909-29f72d7eb540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8da6e2-2281-442d-9f50-577bb634fc1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7547d40c-17f6-41a7-ad31-65c0892dd129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f1b084-70b2-4551-b9c9-941bcbe3c7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9692bf3-739c-4f70-ab93-674564d8b265",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f6501b-f43d-45ea-839c-07a3ca334210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9ac6a7-5360-47ef-9d3a-50d84b572f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba9c334-bbad-485e-906d-589afc5e00ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4b873f-1c28-49f4-8887-48573545bc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b057dc08-bd44-46eb-baf9-57d4c017b0f4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8c5b7d-7613-46d6-80c2-04a0a625f6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725581bf-fce1-4a2f-b2df-a0b5f43c5913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f27ead5-cd0b-4c6e-a2e0-88742e40272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1317ad-9eaf-41b4-92cb-d0f3e6467ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfd8d5a-2845-4b7d-8740-c77e232cd55e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d531e2-9cba-4ed3-904a-b1ba74a62af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa395198-6fdf-467d-80c9-4956800f0356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454939c6-52f1-4040-89bb-682aff0ccf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73119d29-33b4-4b1d-a7eb-2d2243867376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb27372-eaa1-4cf5-ad1c-527548e4839d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d353848-5f76-44f7-8f62-8cc4d5371d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9340e7be-faf0-4254-9b4c-ee42f500b2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be01fc4e-85b0-40b5-a96b-e9302294fa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c162879e-a5c9-47e9-a788-253c3f5aeb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09edf49-8103-4ea3-9a6e-1bdde95e215f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e90c37-6d24-406b-9ed9-861aeee45354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedf6bad-68f7-4510-8b26-97b26c3a63a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a888d3-ef65-49bb-933a-7e8a50b091ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fee5c0e-c5c5-46f7-b0ce-a28fd6cde8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05938ac-094b-4aa6-ad11-e29875577ea9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da04c9b3-ed4c-4e77-a208-05e6c0f68e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bcf25e-c859-49e3-a6c2-7997bbb47b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b14541-48ce-463c-806a-7f47e76b6bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "07cc91ce-dccd-45fa-8748-510452320e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546cf637-b774-4922-a34b-fc4c9c419adb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81974a4a-889d-4c8c-a55c-9021f314f210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebb9988-6b9f-475f-80cf-90eca800c8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03d4a1d-0408-43c7-8da5-872705d8e8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f90972f-52ba-4f4c-b8ef-91386f656ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404ed68b-34bf-4ce0-8589-211762b18a7f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695694c3-1eb3-452c-b18d-a9dbf3caf544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c21d1b-3355-4e09-a67f-b982c2b12725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ece037f-71b0-40ee-8a9a-f6936e012767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5ae7d4-1c07-49ac-a79e-79907c4eae0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4638e585-09dc-419d-8b25-6b8371b11876",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a55d0a-5fc3-406a-a792-1accb0e71632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdae603-d096-4a60-8147-25ddf4551ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20edfe85-9f90-4c4b-b396-9f41b16041bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a4ff1d-bca0-4f7e-a717-cbe78ebb4a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dc34f5-a6da-4e3d-8a3f-427261854b76",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6416b8-55c1-4b09-bef3-e7fc5bc8e888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322b8325-2126-467f-a541-d53fff2ec985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aec9b27-9c3c-4bf1-8e17-7898662edfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aaddefb-c72d-4292-9ff6-77ee83bec90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4749e0bf-5a8b-4f97-8795-5d050725d7ee",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843f884c-8264-4837-907f-13add3daf588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed32bb2-8600-467d-9868-fcdef8385a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf9075d-bfce-446a-b982-a97e35f1c617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "99fcfb35-476b-43ac-9248-29a578ee1d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efeb6ce-c301-40e9-8837-564dc1a82d38",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5640ec-e143-4894-94e8-fcdd09d756f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299c69b8-997e-4449-a5e7-ce73676493a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6f65a2-e335-4384-a3de-0a23a5bf96e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3adc4050-9aaa-4052-9f25-7e22ca9f9aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf115f8-6840-4c1f-9fb7-94a316761371",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8a2a8f-d295-4346-904e-dd957dc5b17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac30dc1-b2bd-48b8-a6aa-7e317f4ca95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ceccc01-3ff1-429c-be0b-a06ffddafe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "13923d1c-c735-4e6e-88d0-63decfca51b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a713ccc9-75fc-4e7a-a29d-7a702b205844",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0148e908-e355-4ad0-90d5-4bce5f7e3d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b8a04e-2b5b-4605-85bd-a28a5bac371e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed53edc-d528-4160-a732-33d4fb53aa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c121698-9d75-43ef-9fdd-bf4a87338024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d951d62-5e84-410b-8c89-7d938501bffa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fb1b77-1556-4028-8c5f-c2f603e5088a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c59cba-1922-4a4e-8d65-caec0028eeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f15200-3774-495f-bb88-b497cb784ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "633049b8-9d41-4c2e-aa8b-41a068d50163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17de2a6-0bb8-494a-9852-edaeeb6c9d16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99310944-b376-4220-8cf3-b4ed70979918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27c7a4c-297e-4917-9a67-abd34701f502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc07040-3773-4b2c-8e51-58552c9d8337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b856c8-8be8-4766-9fa6-46ebf8465987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aaa04a-0690-4c4f-b32d-1943549495ee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d56f5ff-71cc-49ae-b58f-d532b114b4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9460c1fc-842e-4073-8010-b412e2e8d8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff2cf9d-d9e2-4f56-ac7b-4b3d12e5fbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed30a2ce-3906-4a3e-a81c-06d25fa5e44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80451705-9d50-4125-b5b8-55abb9138652",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afda29c-4f30-4029-bec9-971eea557b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e154329-fbfc-49a0-a8f7-ccbba5ace5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b62215e-3f37-436c-936b-fd3a9d7d364a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "67448ed1-6876-48e3-a3d5-6861347caf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cab847-db82-4d5d-b89a-45ba2133efd7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff82a21-b167-40ce-a1c1-dccfe3ec05ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a161e3ad-70f6-4d69-b581-a32bd22b7414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fece0912-926e-46a4-a06d-4e9b3c8b6c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb6dbd7-4896-4b4d-a9b9-889181305ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68991e5-9940-489a-8333-49e9a0e2d30a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be813d2-f1af-48f3-96ae-7b964a1eedc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e0049a-82e8-4a0e-9239-43c526830cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5d6c4d-7c95-4e31-bdc5-c56683f02e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9822d68c-fd07-401a-b3a5-06affef1c210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a193b9e8-6779-463c-a94f-9d31914a6549",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31757b04-391b-480b-9d8f-ac97600a4454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6046c578-5ee7-4d00-a41c-f3fa6374a691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4608b0b-3d91-41bb-a4f2-ab7b4413899f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7dff3e3-54c5-4819-ae98-df234ba9a2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfac8d9-c393-4577-b311-bb8bcee0c6d3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a1a8f0-d778-41e5-9787-4a575f623346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4896fc17-4344-4c20-b403-61185108b243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855dc6d9-1164-4144-8b14-8763b0a93027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f327d005-686d-4a58-9a56-dfe6b6e4c3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079f5126-fdd2-4363-8cd8-d6a75a978814",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4551b5ad-53bf-42dd-a205-ce61f53a3f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de20f62b-03e7-444b-9708-2c14edf46e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dae5a2-59e3-478c-99ad-501e029c8ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5956c37-53ea-490b-ab49-9c83d1f74628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de08107-0e99-4a83-9dfa-9edcd46e1414",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5743c947-7365-41f4-901e-9c4559af5646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e733b9f4-8055-40fc-9883-06b56b295c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83817f4b-c103-4c1c-90ac-f0dcc8c46c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc82850-dc9c-4ad7-ac2f-d0cf29f5acee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1898b091-7f50-4d75-beea-8e81b0a5897c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf550ee3-528c-4dbf-a6d8-41fafc86cd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044ff7b8-69c1-42eb-910e-33b813d2df14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2481944a-fd95-4f5a-87da-10e1e461ecf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d7a30c-e0da-49b3-ba7a-ceb6d3c4e87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1711c29d-1d56-4abe-bd8c-db449e7ba867",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaf1e27-0a29-4def-babd-60b2fd184730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b71883-3594-4de9-88b8-d1fbfdd57494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24863c65-fe03-4c8c-a8b9-ce7badd70705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56736a41-cd2c-4ca8-b3a8-bb897b39644e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba8c583-6fe0-43ca-86ec-95d6e730a829",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbe097b-bfdc-49b0-a8cd-6ba7100e2045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76e33f8-c693-4862-a849-03e778fde66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6b84bf-b5c9-44cf-b612-50767ffa12c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d80fbf-104d-4f6a-b54f-f248770685a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5092b9f7-e5d8-40f5-a4fc-66a5d1da4340",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fa6d98-ba01-4aba-8680-3135825f9105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933ff025-853b-4657-8a0a-96f324dc0c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66470158-3422-4308-bd35-f7d95ff1c547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2968e91-d802-4ae5-8d14-91b630f75c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3317c8b6-fe52-4451-b426-309f42a49369",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a52694-ac1d-4c24-a648-a261e1877719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4ebe30-a71d-4294-87a2-b55b2b31844d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e038de-37d1-4fc5-8043-0500f578463e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "985a03cf-80df-4681-a7fe-06a026a23d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f1b519-eae9-4847-afe6-4e15c946cf55",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472fcc8a-c19a-4d04-ae28-a9dfedcb325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2017472-5ffc-451b-8e43-5b299bbdb08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556092d4-32a2-4250-9eb1-a70dd101f981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03dba31-71d7-4909-b78d-3f40f46db9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd084adf-fa07-4bd5-acf6-e128c543ddcb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf37f18-9698-4ce6-a029-67f98048172c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c332f7-9027-40d9-8332-dc53b025a850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbc4355-cd0a-4cd3-9c36-d9d8ff7c2e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe7ae55-c017-4eea-9e15-35f51cf56e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b05afa5-cb7b-44a0-a91b-aa11f04e5e7f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2139c441-6a34-4437-9f18-dca8fe11e508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3038aaf4-7ef7-4fca-ba74-1b833192cef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6438ea-8339-44d0-af4f-3b4cab262ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a73f64ec-2291-42f7-9fe5-6dfaa0b19e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258cdbc2-7479-4b9c-8f66-362c996399b9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6bd2e5-f332-4119-a6cc-c3969cf9b53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9478429-81d4-4594-9b73-6483c7227d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3d5d7a-d10d-484a-9a92-3c4f706a3a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1d8e02-267d-470c-9a6c-5ba292299d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6455fcfd-6ce2-4561-8762-d4742aac13c4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a905c64-e521-49c1-9732-f1118733a77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e4fb36-641d-4f96-996b-47af1a26818e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad5742c-6227-47e8-b95f-c833cebc505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "549cecf0-3f14-4c50-82a4-a71bfd384b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4dc961-b38f-4335-a356-321cb57e551b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6bcaf5-e02a-4f8e-b058-e9a1f3297261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae79abee-24d0-4e8d-8e74-f3cf51476241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc81f27-fc38-4d89-a806-c65b915d907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4faec04-0054-4465-b603-f42f029a9941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da335fad-d3fc-4155-8fd5-556cd49dc0e4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467d32e6-4aa2-40cb-b14c-8f41d1202fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0125272-e3ff-4376-9082-e45183b94f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513cfa76-4419-480d-b0fa-9c2b9606346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19df1839-3003-424b-977f-c5c6905534c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0f09f6-a0be-488e-8d95-58cb34110bc3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08329c95-e586-44f8-b1b0-c9fd6330edea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280de177-7cd1-4f10-adf6-2c3a02158a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fa3f41-698e-47d1-8d59-aba3cee33ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6db0b6d-d952-4d58-a7a6-8f1e846f8b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465ed5f1-3f37-4cb4-9cd3-1b0a21376201",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb91d59-3461-4f65-b4ca-2bbbe86ddd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefb04eb-81b4-48a8-8a30-50d9f1cc744e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1f8b03-6ea6-499d-a5ba-9786eb6b180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37541321-2519-4fe6-a69f-b570c03ab733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc6618c-4932-4485-bb5a-910d3c4e46fc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0da8c48-2237-42d5-98de-99c54aca4bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd04a43-312f-4c77-bc72-c4300219b8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340e0d3f-7ce6-4572-bb0c-16fd7fb2e404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d89e1799-9f3f-477e-b49a-df74d9be2f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419c90ea-ff9b-4a6c-aec8-3f6449ba7a7d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eddff74-9f1f-49bb-8b52-5748451d70dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12255ca-af20-481a-9420-3d0a70b5a696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f20c3d-07cf-4b33-accc-86e137887c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2999b2bf-f045-4a6a-99c3-e6bdb5e95389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8636d7ef-479f-4dae-93c8-d575e06fd384",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e6925b-26a2-4f03-a56b-7e64869d55de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d4f59b-1fdd-47e1-8b12-8404dc39737e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5295998a-b9fe-4576-af89-e5be46d98af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8a6064-22a7-4e42-8031-8a9d954e2e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca8b16c-cd23-47a8-8743-d6b6a050a224",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8711f68-9e64-49d8-96c1-79dbfbf35414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b6fde4-8c44-49c9-ab1e-aa079ad57b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac63d293-f6d2-4604-b364-eb3ae43b86a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "84de7fc9-0651-446c-a6f0-f61e049017b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c7cde8-db05-43e8-9986-e5814d90445e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ac30a4-e700-4659-9a0d-b5d8046b70c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180d3877-b255-4dbc-9860-3069aee344c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a6aaa9-61a2-4397-beee-9dd3b6cdb2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d23344a-fff1-4f20-a934-a0bb79f1d345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebecded-20c7-4e93-ace4-9fae0d6089fb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9733144-148c-4b36-baca-32ad239bdd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825d9904-9ee2-457e-8e53-86484b1f1273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29a3117-3160-4f26-82bd-7c9468b50475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4486087-e961-4b04-b071-15c76d7e7711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661cac29-0969-47d3-a679-09beb22310f4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4ae094-35fe-4009-9525-5c67c324bb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a93e84d-5072-404b-a332-edc3c88e63ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd455f86-5a6b-447f-8e87-ceaff544dc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45af918e-f59d-4395-9405-7dabb8be98dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a5de88-0dfd-4ea9-abd6-8841183739c7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb618f2-94cd-4f43-9021-90be2743929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e47efcf-d2e9-491d-b8de-e6c3e7847790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe0c9a7-9a29-4176-b1f4-c616e3d4895f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d832708e-35b8-4643-aac2-53ce13ab39ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecdac61-8190-42b4-8853-ab691d828763",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c116facb-0bfe-4592-a08c-1fc2d0a0a4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9cf1383d-dd9f-4efe-a88d-415c55123ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8651b72-6d13-421a-b529-769e447ffa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a57a9c-6206-47d1-9819-671c41eaf647"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95edc6c5-0853-4d74-8eeb-6fc1014123f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2876665-fe25-4f80-b114-56300ac88176",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d93a9d-c062-4e72-bc3c-1766d123151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b2091c9-1934-4e1b-b115-a20ecb572604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379c1b80-6c35-45a2-8fc6-e6100a7e0cc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c04746dc-b6ae-48b2-917f-f58ce5255325"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26ed56a7-14d6-4d10-a732-f535085623a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "768691f3-2f6d-467a-a4a8-b03d357893f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1153972e-76a6-4ecc-9bc9-1722c8f2ab12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb90068a-584c-4437-b52c-d728f16bd16c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4588e61-a3af-4562-9898-96f04aaa4a50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "094ab938-14c9-43ca-98bb-f94222f94cf5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d460816d-b363-4999-b9aa-8fe99435e4fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a808baba-3bbb-40ef-b442-4964a73329c1"
                }
              }
            ]
          },
          {
            "id": "134d8591-6025-4182-a8be-e7cd878e2ce6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ebea817-7504-4247-8d7d-eade6fe88e32",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c29d6b8-8965-4f94-9e72-4957602804ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5358eded-bfe9-430a-95cf-46f02cdf4ba0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "241274bf-daf5-4f16-bbf3-7d11853b7370",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0af50722-d288-4d6e-bc0b-1512ee1f5c96"
                    }
                  }
                ]
              },
              {
                "id": "07446f82-7358-4ed4-ab1f-7f4862ddc57a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5de54353-e78a-4aa4-8444-75ad6d5ac978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb571ef4-be7d-423b-9b9d-04a0df88b140"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e890941a-d0ae-49ea-8796-ae9e649109bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b42f92b-ffc1-4f48-9090-91458cf1ff5d"
                    }
                  }
                ]
              },
              {
                "id": "40d1b99a-1587-4ff6-a2d3-f4535a739adc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2f9997d-829d-4297-80aa-c7ca496ec0be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "624c2ede-078f-4f20-8581-38fdab109cce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dabfd284-0229-4642-b0f7-90cbb7742c7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1beaf6ad-5698-4ea9-8dc4-9121eabd42f8"
                    }
                  }
                ]
              },
              {
                "id": "bd74ea3e-fbf6-4fa8-a958-cf871a470797",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e2e4dd4-0a61-41af-a6d2-7f25fb26a735",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75200d14-f5f9-4fa2-ab6b-da0969e8d285"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04105572-96ca-4c3e-b204-97a89d52a783",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "994a5e3d-5950-4ab7-ab24-eb035486a607"
                    }
                  }
                ]
              },
              {
                "id": "ca8b3a72-d27b-48e2-b19a-a083614f34cf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b6eee59-a5bf-4b4a-a467-b9eb97e5e53f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "364679a1-f2af-45ef-b64d-d7cb0df349ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d99088a-9815-4ec0-a31b-9e644ed364a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e7cbaf49-edf3-4bf7-aff0-dd540655e38b"
                    }
                  }
                ]
              },
              {
                "id": "18a8c55f-a902-49ef-b86f-97d473e2aa56",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2807fcc2-19d8-4b74-a14d-4b26d952a131",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f87651df-f1d4-4bfc-8a06-f520b067a34a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44c5d19c-cd54-474d-8709-c66ded269cab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6d8386e-6397-4ee4-bd19-4b981c35c9f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb300069-363f-4406-8e28-8eef112fae92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2eaed02c-7cfa-4676-885e-ec3413282009"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3a1c7eb3-8aaf-4e74-8e32-87b6e8e6da72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b659d1fc-1a67-42ac-9bac-8e03ca7fa07b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4754561a-2373-409f-bf04-d1cec9b0e00b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a1b404ff-4194-4aa8-a598-ac5038554c42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea6bf88a-d66c-4386-a24b-f04fbf425528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a963a8b-9b91-4866-a461-d725379e8fe0"
            }
          }
        ]
      },
      {
        "id": "66b9012d-7e7b-4727-8d88-6b5c3c63f742",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5bd5e6d9-ad0d-47dc-afa9-495fadfd3be4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97274984-2e35-450c-bd94-238f357607c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e1b2135-b99d-479a-b6b8-a50a6df2dfd2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3ec24b-dca0-4fcc-b5cf-9546d8e4f460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef0883e-a59e-4a0a-b9c2-1057cc26d6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68a494c-324c-4a81-ac4f-5765171619ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3066d457-70fc-47f0-8b6c-c76b9482694c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4809883c-da80-49dd-9825-29038f5035f9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42cfab6-ec7a-444b-8fd1-d8675b482be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ece720a-e416-43fc-b52b-02cac650ed2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead18615-f9a1-4a86-a54c-906cfafb35e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4aa1df0-a9fc-4f2b-9d75-c7d796308389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532be794-96fa-4686-944a-246ee4255cd5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c51110e-36c0-43a9-8882-d3c779da4ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6a96d1-dc2d-4915-bbcd-8747418e1369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3549495c-b04c-427a-9ad6-49f9b5e77976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a6b536-02d6-407f-8abc-968efed5620e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8664d589-4915-435e-8dad-af58932ce494",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4a8da2-061e-43ea-a2cb-9e33c24ed1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9070d15c-5ff1-40b8-aad9-e30ee9a74ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582ded03-eb75-4ae8-bd55-3c9dd73ea4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c288bd30-a70e-4a93-a8c9-17b12a970351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2c33eb-b4f7-45a4-9bcd-432d6d678433",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bd0231-6e46-47a2-a1c9-a47e82aca60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816c02f8-6e6c-4280-b5c7-365215dabecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45b9173-8578-4c96-bb5f-b819a98a2775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc637e4-4c41-42f2-a007-a65eeba11602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e842dd-f9f4-4c97-9a91-0aae2b09d1e4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f0d24f-07f1-4e4e-8089-5655bd93f896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73c0b55-4cc8-4066-81aa-c3643408c0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822ef42c-d077-49e6-841b-faa817513624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fca8f12-e06f-434d-b510-055a82b63941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18b76ad-8cd1-4a77-8608-ed90b7beec33",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bdddea-97be-4a26-b4b0-497d0566d37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f765e23-acd7-4830-9b7b-50bb2335a10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6ab286-ced7-4ddb-92ae-587810d89a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b39429-f465-461c-b07a-0a49a94857d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e49b6f-ce07-43b1-ba46-f665483eca61",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613e08c3-0962-4e86-a86b-ed9a554bdd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0247693f-6e4a-4ee4-8cb8-db3fc53a1a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb90bdb-d462-430c-b086-6aa26a507e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1294c8-3a1c-4332-9f35-f3e9404f0ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bc0fc4-dd0a-4e6c-bda9-da1c2dcf1b14",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91a5134-31b3-4c0a-86b1-411bddc40e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d745c32c-252e-405e-8d4b-0711db817f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0a18d7-2314-4097-9575-83d7d03ad72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "213582b8-7f60-4059-b388-c36c5e92dc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98095bf2-a782-463b-98ab-23cd932afc91",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43fe83d-214e-49fe-9425-d5f60f0401b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7e8f57-4175-460d-9f64-153c4afd8412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68064ed-884c-4267-8a82-36e671984dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b388edf4-c4ff-4d3b-a1e9-e6a0851d97e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5b191f-d439-4063-bbb0-360822455eb0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c614a7-1a3d-4b40-b8f6-83d551173108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098eac13-d378-4f99-bbda-92ffcf2e45fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38d7fb4-c3b7-4af7-a3ff-cb3909400344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38121845-572c-4ec7-8172-212c27dd0bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2a2ffe-8041-4c89-8cae-cfbbd1496e1d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f86c4aa-75ad-4903-a48d-b85f72954586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed25129-531b-4833-91d8-0a0695f62487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48f4b4e-c77f-4bfa-834d-f84f203782aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2de7e55d-bb17-4561-87f1-c084b7894af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987d4deb-944f-4d61-b85c-06e10cc42167",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43743d9-bbb2-430b-849d-5d36487dc05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cfd5d4-3dc5-4085-bc7c-4b0653bf35a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a1c7b0-ad7e-4f17-81d0-a0831e61c926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "421b3d8c-5650-4e0c-8d63-c1afda608454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86755d98-e2b8-4685-9221-d416aa06b555",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93baf6d0-da1b-4268-9eb3-bb80278c3c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8426aa-b313-48d3-92af-4baf5469824c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68c2b2e-70f4-41fa-bb3a-342448f4495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc245b70-57dd-45bb-95fa-7f2f82c4cf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a933dc-0e27-4d20-8e44-3e50b7c8481b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e00b4d-6378-4423-bce5-e3dc82289a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84f0614-21a2-422c-b681-a8bbcf9ad102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465cfc1b-c2b0-4cf9-a27a-59140f5629a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b847dfb-ebb9-4621-8676-56d0fe0fec20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70403f1b-76dc-4724-af93-3ef4fc0ac6c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1481fca8-106e-4017-a758-bfcec4b00799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135c8952-16d6-4e28-8376-1f922c33af8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008d405b-adec-4e76-af30-ae394e72e624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5997ae1c-d6a8-47f3-bb4d-3965f61afee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57897cae-156f-475d-81f4-84edd7ca27e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a988b2c0-00e9-4b9b-952b-cf1f401e9447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e961a5d-7a72-46e4-976c-32d09abf7736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f994b75-1812-48e0-81cf-b3d01d2e3097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cff2dd0-9e4d-42bf-b88e-93eb4c4b2b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a1ab14-2a47-4aa0-869a-7ba6f52b6eac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb13f95a-5a5c-4dc4-bbd9-5959f215ab9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351e023f-d9ec-4f73-81b5-f907fc141258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fbd64b-9bb6-4394-8fa9-8819219d4fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "219e74be-b77a-452f-9d34-4a76b6a89b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b344257-c981-4689-84b5-f64f2c1ceb92",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf1cbaa-b6b3-4a2b-949e-b048d07cc575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e0afc5-46db-46c9-a155-047291a6fb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c573b92-186b-43c7-9220-b71412f1a289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8490f962-8e53-4ed0-8ce9-21069832b4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534849ff-903a-4001-8466-015415598cab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b488b61a-697f-48d1-9a0d-f91a2d12effb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95f93a4-8fc6-43fe-9570-8015dcaefbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765c218f-642f-42a0-ad8d-e272f4cec5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca739145-b46d-42ff-8e63-c05e04b479d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b096db-f60f-4496-80cf-398ea5766a4f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29df8c92-bfac-48a5-97b6-f33d97d6db1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a970140-f1f0-4f58-88da-7bad4cd25a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f502ec6-dcf7-4fa1-a8c8-73190b4e1060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcbc4646-9e71-48cb-94f7-c43707da3518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaa5479-1dd8-4f8b-888b-5ddddd636635",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb1b843-edf3-4ac8-b8fc-914cf8eaa0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713eba80-fda7-4ebe-8c53-2be6f80ea6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6622928c-d136-47ac-9d51-c90222630d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ed6538-d5d9-4c7e-b6d8-2523e699d8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52cde8f-3d76-403f-9829-74cc9443167c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8070580a-c294-4eec-8641-7c99a4cbe3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d3971f-b597-45e0-8961-8b46b2c2a5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0238360a-a11c-4a47-87e1-730aea84baf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e32129-bd70-4a2b-8b9c-4f6159e674ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86c4e1b-8c64-4f1c-8784-fe2c113f2b9b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b286816-7c89-4e5e-96db-af8249332818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba72845-f89b-4a3f-9d37-cd56faf47314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9275a9-a357-4687-b63a-69d140d97653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2f91c5-cc59-49d0-b336-778bdea53d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765505b0-e14d-452e-b9cd-74dd948a8e59",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a6c21f-a4d5-4c5e-be7c-ab0ef3ec4013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef44a24-ad13-419d-8732-2cfcc442c9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3178f72-ce1b-407f-bd26-95cdf48d4a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7fccda-674d-401e-9f42-00a86d0b3df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fb2fe6-5757-4914-99ee-af61375ebdac",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c957019-44e6-448a-8c19-790aeb79f5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d86bc5-b447-489d-b246-91199c426909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edec7787-3f6e-40fc-a0f5-dac61138c5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc97985-7c8e-407c-ac5e-4ade7498e7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8a507f-2275-4ab4-b979-10a798ae73cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a13994a-8650-4957-9661-aab09bfec68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fc3327-4cbe-4be9-8601-f353e0ec02f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd370fae-a85e-4d93-a7bb-43f8e88f1396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4678f3d5-0fc0-4691-ae93-40661896dd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b19ff2-a389-458b-a8f6-80468dcbf9c1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad29fc4-8f52-4fa2-9aeb-f667c493341e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7144bbba-3cb0-4ac4-b54b-97fb8f3724b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d44f8-38a2-4f81-a7f0-c0d6706f4cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80fde9c8-c56d-457f-9fdb-271566427792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e045b7-3527-4f91-8808-734d8174575c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fc2a87-e330-4d58-b8ab-50a8b091507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082fb207-f790-4307-a40e-03b9299ae29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a009fd61-b57f-422e-962d-5772530bf107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d920f71-358e-4afe-90fa-04dfc049d697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19284a7d-9256-4beb-a06c-583541b5bce6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f746495-c161-4bc7-8563-48289d089b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42249c20-e974-46db-8a1f-719775afc573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a60191-a084-484d-a35a-b966beaeae74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe20734f-bc8e-4444-9cb6-ff3c17ed6d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c9906-95a9-4152-becb-ade933aec253",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30ce334-0f1c-484f-b41a-4228f10a27e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44899bb9-784d-407f-a794-32f828a7cf96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ec7b8f-0baa-4910-85bf-77b60da8b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d0072a-0069-46f0-a904-8c3bcee9b0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc6d481-92d3-4165-98ba-f4e3dfa95299",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f82c16c-77a0-473c-9f27-833e261beba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61c907e-dd2a-4319-8740-477e2641a451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7199dd-c883-4506-8b18-6f4e445a974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd509eb7-31b7-47ca-bd94-44ed943a912f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a04a83d5-ca72-402a-81fa-b1e0ed538eda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4cd1707-d87e-416e-9dd7-5f9c436534f6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a280c695-4b8b-45d0-81fe-43fd681c8b37",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8d250fc5-5a74-4998-b2cc-45ce419bdca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ec7d0d-1248-4853-ab6b-039c8879bb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "390ee453-4092-4eb9-b22d-c76a2d860f54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fec5a52f-1ddc-411a-8cc4-a70b4a108940",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b4fc57a-65f3-45ff-b624-fdd0945e6b16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05236da3-0e06-4a9f-af76-903024efb625",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "814517b3-d98a-4848-8bb4-da937a914d14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aeeb5071-fdbb-49bc-b37d-99c9dafd4a26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "991de892-1841-4501-8510-2bae5555276d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1614bac0-0bd2-45e9-a703-1f6923a9bcd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7a727d7-9b0e-43db-b10e-b77bddd80c44"
            }
          }
        ]
      },
      {
        "id": "53f3db9f-ccf9-4743-b8f6-85815924c110",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "af5bd75a-ebd8-4845-993e-a9c8995ee001",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92d8996d-cfd3-4195-9f0c-159b2340e008",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f489e3b-c013-41d2-a4f0-fb574ea73a79",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc5ef8-9632-4d0e-ab39-5dbfd6b40be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bc32d8-1e35-4d97-bd73-8314e4f7651e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfa9dc9-aa5a-44ab-99f5-462363a4906b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6251a82-ebf4-446b-8d3e-81f721664424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86b55ff-c49c-4f70-90aa-973f2ed13b0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679fc5d2-505b-40e7-9652-deed999cdda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360e2039-1643-4f79-9b1f-833e7f78427e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5abadd-2f78-4b0a-859a-4657411ce585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "674794ac-58f8-43b9-bc79-eae816f2a529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680b0adb-ad86-4821-9227-5f11738da3b7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e353865c-445b-4f25-8dd1-539821646be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d8c293-601c-4403-a2a0-d9fccccfcff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fb986e-29b7-4bdc-be87-2ce9a162614d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b180f51d-db0b-4e5a-902b-1f6e674ed5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d6a6f9-03cc-4cd3-8008-a0fba847eeab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78559e24-c7a4-4b67-b863-8f7311f0bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1bdcff-9e1a-4486-899c-d6582727409c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d23b77-e1a8-4659-9731-ce3f0943c71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "192c013d-640d-45fb-983f-4902976d6b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884bf6af-25e8-45bb-850a-318345c38d1b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5467eb-f871-41ca-891e-093af01b1c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644e8446-ab88-4647-99eb-dfbb64d1c778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e221b9f-c42a-48a4-9b57-c05ac5c8061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55d8668-2f78-4d51-96d3-a5a1d2b7d6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56739f28-8e85-47c5-9620-46751884f7b2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a37db7b-f752-40e9-9a2a-7b9da635d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9313b8-2414-4104-84f1-d22ed56564c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e2da4a-03ee-4e5d-8be8-17fcdbd03255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a247400a-b5db-40d6-a5d2-f53ee536a24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e925a691-1d7c-4f9f-8d65-af876fa09694",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0488e746-fc8e-4370-91d6-52adbd7b9da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a424d6-f56a-4618-9c96-1c9478962683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f960c8-ff67-4d10-a12c-0b7fb7a964a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "09be4cbf-9021-4aed-a71c-b1a4bfdc03c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cad4b61-22e1-4665-bbac-4ae0b9307ee6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ada44cd-4239-476f-a9c1-e8529877c917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761aeae3-82e2-49d6-87fa-cdd693fdc694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d9563d-735d-4c7e-bcb4-000264b02c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c288a0a-ffe8-4dde-99fe-e22aacdf5c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d6f1eb-de9a-44fa-abe2-f23dc62fa997",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aa567a-3065-4894-9d54-6a7d7e213f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2ca626-61af-42d3-93b4-00cee444abe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b55bd43-82cc-4a27-a5e0-80d89d041bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b60d615-ee6c-4235-ba8e-a7f9c74f7183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cc8914-b3b3-41de-b6e8-8157fffdc836",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aba67c-ac30-4e99-b5d0-daf7fd73d2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f234061-a4bd-4e55-a57a-558680b0d39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365920f2-fd6e-43fa-a663-c9c84fc7976f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "169a8273-2617-4b3b-a45a-cccf931094ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fee641-b586-4635-916d-532ef1501ebf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0239aa11-b653-47b2-9c26-4ff63eb7d1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36af1522-b70f-41fa-9e25-4163455903e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e796b17b-c56c-4196-a2f6-056636d6c5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "784155aa-214f-41fe-9f8d-8cafd5faa121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4bccc1-7744-42d5-a2f4-3f6e4dbb0d7f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5937264-bda1-4418-b070-232f1552f34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6663ff-06e9-42d8-8623-08b9fd5fc710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6684b300-872c-4c2a-baeb-fcdc7d421b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a523c4-5da0-4970-b59e-f4cab6ee97f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a0a750-2059-4cb8-96d3-73ba04700f53",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7247e665-e0b6-42c1-ba4e-0cf10802346b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2dd536-df5d-4988-b735-1b5ed7680615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283df5ff-a4d2-4fa3-b724-caa07039b127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "132395ab-823d-4dbc-841c-c389ad742581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47036355-a677-4314-832a-1d37f4225153",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492495d1-9512-4199-bee8-a375acd22e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1377ecd1-b5fe-4811-8acb-1c95fa17e9c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a5e7a9-346a-47ad-94c8-73c7e4e393ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99b8ee5-20d9-4a9b-88a6-989fcb27f630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c04390-a69b-4bac-a6d0-a48a37fc1e44",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48664121-e922-4b09-95c4-2b23a081f364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039fbb19-96fc-4d7e-945b-2b4b01ae953e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d10660-c5b7-4673-87ff-9d8fd5dbe1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a243eaef-d978-4f1a-af63-121c76b979cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737d4cb0-ac14-4e52-87e4-bb3618a3d8c6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8bad87-05a1-4e2f-b290-39fce463625f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63841903-54bf-4519-9846-92da45f6211e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263d77c3-f06d-4783-84cc-bb3056c78915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "baab61f4-1507-4b04-be46-75278885d4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27951288-f7d2-41b7-a7a9-a8723645d254",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c892a501-2789-424a-8470-75974d32deee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70668eb-1eda-4b53-8d3a-fa0e6b1c99be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d541270-d12c-423f-a8ea-541e1b553b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "577bd7f1-7f76-4bec-9837-34f3431aa2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbde0d4-aaa5-426b-86d2-85f39142f29d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1144351e-b990-40f8-afa8-f1e5854cf1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12619f9a-be03-4ebd-8c14-9e0349556aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dee8b71-bdee-4e46-b53b-4fbf86d49273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f549c48-d48b-45ef-835b-5ae1bf60a9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04737306-f2eb-4931-99cd-92a68805788d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47c5474-998f-4e9c-901d-d39f896dcdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593d9b70-77d3-4f30-a2ba-3f45fb69f079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78055de9-5057-4779-b1ba-0969b845e3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efecc8b3-f1ff-489e-bba9-bb128fd10bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42d98e4-345d-4766-8bf8-b4d8dc966e0d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198c5d0e-28ba-4255-87df-95f36a6ed06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4217e81b-1e89-46cf-a59d-715aaffb760f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c9b6f1-90c7-4582-9e86-77fea2406891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae291c7-9686-428c-aa78-fa2d0f931a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc4a25e-d6d3-4aae-9a92-18b369029749",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b88d3a3-34b8-44c9-8b7b-bccc378a65e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1e978e-a1d7-4d92-8c27-3c0e99e21372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b8a298-1aa6-43d1-9f9f-b4bbe30dfc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8768b44c-104b-479b-a168-dba5da6d06c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bbdbae-6dc7-4047-ac37-52763aeef53a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ed1211-1c35-4d6d-8825-e358367491ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b77ddc-50b6-45f7-b14e-be90e364b282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dff1770-9628-4cfa-b1d1-25d4a5902cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "885d278c-371a-4d97-9537-fda62a30581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e398e5-1c2e-4d2e-80b6-6008e417c2be",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67652fe-0aba-4483-954f-89da0f1a4317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6faac04-3c14-4011-a56d-88726ea42871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9545464-d0bd-4da6-ba51-c9ca29145e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9230a239-7517-4ed9-a349-c8177e3275bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39feb7cc-5014-47e3-8f35-2fc42986132f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7d7062-f431-4e25-9c30-3e61c148876b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a776e0d0-c78b-4432-94d6-11a8ed031a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b03a651-8208-467e-8097-66a0d5391fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcce00e5-faeb-4669-bc3d-fa9735f562a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1db0d76-d000-4d88-ace0-107a0d8acbfe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a7f180-5119-4e76-8ac0-ce49a587bcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6a7005-26da-497b-815a-a0c2418c5fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab84854-caba-4050-b1dc-35f863ba18a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c2a35c-4365-4eda-b5d4-536902ec89b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d15a77-58cc-409e-99c9-3cad1826f893",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f29b62-df58-4be5-8de8-b1cb05a6228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7630c3b3-bbab-4c17-b3a4-5280c8e2e082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5de355-61fe-4a81-8cb8-7580699179f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62c7b00-666a-4b51-ae12-a0a62c9db313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4962602-d1b6-4ea6-9db1-31331e071ee3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a40686d-2a85-4224-bd17-3d962ad72abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78dbd6db-c8a3-4f0f-ba06-48052753de43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b6f6a9-735e-49c0-8dd3-b5a827625dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a15af9-44c8-407d-9316-049f0cbfae9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fb2591-7501-4dd0-8b28-7483ff10cce9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf25ab7-c1a7-4a6f-924e-fe616b7984dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8063acb0-8d93-4ec6-add5-56235a346540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90caeef7-3d23-4107-a00f-5dae08cbf001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff049499-a189-4368-bd2d-ffcafc507bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f86f873-8c32-4e77-9063-c80f93b67e3e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5887237e-0e2e-44d7-a2f1-ad42c6efc8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19158e2b-91b6-401e-85f5-ee9b2ee08c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e11f30f-0ff7-48f7-a915-eb957294e334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "235c1b63-42c0-466b-9fbd-d7be88446938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982dde47-b704-40d0-bb88-5e30eea7f7f3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2823f313-2240-40d8-a987-a365e58a9c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75417de1-926d-4811-93b6-8c1239995cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1370e5-67fe-4477-a6d6-b9a270799d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b88bab-f9c8-41b8-9d93-67c1ece50c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0b3cd1-6e81-4acf-8bf3-5eb65c90faaa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b685a003-66b8-44e8-b74d-1fd950c94fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78507952-9c94-40d6-8e9d-266a059434eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0029d42a-c1ac-4445-9e7c-512110df4354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "534c8b13-93d0-4c9b-a7af-77cca61f5105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9215e94b-90ba-498e-bf2f-bdc1e4054eff",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd9681d-752f-49c0-939b-1a13133728a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b14a757-6d76-4cb5-affc-a1be08b1628d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac4a427-abbb-4a78-be10-74561b232396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9471e40-503e-44a0-8f2c-3d8274472c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6d6ab-4a60-4d4a-a298-e683eb615227",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7c67c4-4616-40f4-bb6a-1d13fad510d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd060940-1d10-4b6b-8f9d-fa3a40c342aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d998e-38e9-45c0-b104-4480b5258b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0532f34-f6a1-4594-96f2-86fc3388318d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e594a86-6e93-4f7d-ae97-3709b0a7921a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65fcef6-c339-452d-987f-38f79b23086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ef23df-4e46-427b-ae72-6f819a502e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17953853-2f50-41c9-97af-f84b1e31ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92176e0c-2f99-47c5-947a-4b44b91a5f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccf0a80-1755-4191-af0a-5ec37839b737",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5488452-cf2c-42c2-9306-7f5c0ee00096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78893a06-8d5d-4317-bbf9-64b000c9a70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419a9e76-7fa4-46d0-8fef-6229451b0999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2990e177-f2a6-4ddf-9da2-984f6f12a186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e7402e-d87e-4774-9d38-475942e74f88",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54655504-23c5-4e31-9d2d-36d112133f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26137dc2-bf99-4203-b410-dc07019cf255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc325c3b-1c5b-41f9-b226-78e4dd3110e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81905fd5-2f59-4d4f-9686-5fa84be22310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53940f54-5ae5-4d2e-910d-6042c7ee2e93",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e7ee6a-89c6-4ab5-9f37-7e40632efed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9d3756-542a-4b3e-b6ca-1ccf6183c750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05a6e30-8464-4a5c-a64a-bf0e302dd0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74493e1-c2cb-4c77-b386-b941d082297e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cdf5f66c-0a96-4774-acad-b084215e5ba9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3db1565-c0b7-4317-854e-8c2d8910033a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5374212b-6e00-4b53-a3b1-69e6c1e981d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f82aed5a-99d0-4103-8857-d382d69717eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda3ea9b-15e6-4a3e-ae67-39b23b39acac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee3186e0-493b-4e1a-ab06-9b4c180c98e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "421cd468-5112-4736-8965-4110b38550ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db5ff743-1a9f-4a1c-a601-ec6cfc47df83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "547d8e1b-fcc5-4233-8a42-5a8720f728c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09df382b-e196-4c03-91a2-a7d54a714510"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19a49ed9-22d2-444a-b418-fc20834c7bd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1e13711-55f9-4d5b-b387-3183e83450dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dcdc20d-6de6-4607-bfc4-5ada2c4a1a0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "980c4349-3a85-4b65-9570-244b5e4cb6fa"
            }
          }
        ]
      },
      {
        "id": "790f881b-9768-4435-b68a-dcc416311df5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7c735301-7189-4226-8c42-72c062a12026",
            "name": "Negative Testing",
            "item": [
              {
                "id": "066fe784-908e-4695-a1a7-35a722eed7a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d002abfc-6f61-4356-8186-a32cc04a325f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5b6ab5-f3a4-4888-96c9-19e2b9c7c751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70313abe-2a72-4f0f-b84d-d4e7261071dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df209c06-12f3-4942-98a4-96e1fcff7edf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fa0c4f-40ed-43df-9052-e788b48372a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10cbc30-1c55-4e31-9dae-f917042d8f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3feaa28-92d0-4ee2-86f8-c3ee7d085d7c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ef5699-f7ce-4198-9d78-c692bc4371d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc475c29-5240-455a-9df6-2b3f2f60ba85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41652fd-70e8-437f-aee2-457630fcf4eb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930a93cd-45aa-4fd8-85e1-6c8ef4ba7b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12dbc9d-2152-4242-b0ff-ebaa906e118f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83ccf9b-8f3a-4e47-ab86-7d20728cc2e4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1c45fa-695b-473b-b5f2-cdd3a350124c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33105e1f-c664-4d49-8358-c7249957e052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5b8051-8dc1-4cef-9ce3-abc57e869261",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7754d8fd-5704-485e-9239-aa74374e53a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7429e67-f465-4c53-850a-9b4797b09f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddc8bec-e4f4-4b63-8315-69eec1641f59",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9c9dce-ac90-4012-95d1-96031f2e9e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4a4a53-5699-455c-a4dc-baf373b5fa0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bc2b5b-dbe7-4e78-98d8-fe07e0d759a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e522b9f9-8ff4-464f-add3-aa6fe9674eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5ad8e2-cbc4-47b3-a5a3-63a7b4b99839",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b33f77-c681-4232-9d97-dfdb8998ff46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9831ae7e-7e29-422e-bb6f-ec26b5667350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290173db-1347-4639-b62b-c0dcfe9a2563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcd419b-aa78-44b3-be88-186e2303a14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acea297e-8742-4c16-9060-d494afee476b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dc8fe0-f639-4afa-b93f-732557607818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c67e4a-100d-42f0-9f03-3c7b2f23d5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4b8c71-f090-416d-ad4e-1d7d058175ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b78b14-f860-4c03-8c35-69ad7ea939af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed9377d-f04a-4828-b2a1-f7988099b24e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b59f6fa-9e8d-4347-801f-1e284485b308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f3d1328-8dc5-4c9c-8ab4-a78f178a5793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291281ee-a47e-41e1-bdcc-cdf4ff4cc228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf480e6-ad53-4fce-a5d2-bb6d315457d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fe7d94-b0f7-4de1-add0-41e84bab9df3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce52550-0f94-43a2-9f67-1b6b5a3f0258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf8d9eb-ffaf-4580-ba78-fadb09a4ff63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0140b5-2936-443f-bb59-b1b5a30cc1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b30365-84c6-46e5-811a-b47ff9daf9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1c6032-6b94-4d3b-9d04-e65315d2b8f0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d936100-57d3-4f70-8951-3874dcfe6d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b09f6a7-23b6-4a65-8c59-9cb0ba0fd12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2d847d-30fd-4d8c-87b1-dd3623bbf480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cb090d-7e46-4de7-a93d-d22ea9924764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd0832c-d420-4ee1-bce0-a5249fef8a24",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415535dc-6af7-4fd1-8912-2807f5a909e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9cd2a9b-1052-470d-8022-16c7594d5800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39e2137-9450-44ac-bda8-471f4682c73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47026656-e8e6-4ea6-ae0f-ebf1f7639d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a3c37b-1350-4f23-aa8c-86a4db8b0c62",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f037cf-51d8-4c79-a5cf-12ab15e9ba59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3699b9e1-828f-4fd4-b74f-a13c06d92b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d27e05e-89af-4657-bcc0-33e8cd0f0065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74957fd9-967a-4b9b-9532-1728033eb974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8647f39e-a429-416b-be87-bf207e59a53b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c862e915-f3d3-4a4d-a015-2be60758d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8cb6cb-56f2-4498-a8b3-4fab3d695cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbed2db-ab21-4352-8ec9-ccae42e8363c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fab97fe-7613-4c87-aae5-9f9c64f66f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7cbf27-cf61-4afd-9b47-2dcc6948a292",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84aec6fa-433b-4abb-ac84-86ad648c58b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8249904-e2a6-4d03-b2c7-ce305a39e4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4131376e-47a0-4a49-ab95-9cc5b39acc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd13694-5fb1-4f56-abe8-bd918c253fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b50d649-520f-4c08-a4b6-a54e2dc91eaf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edddb21-e1eb-4449-85bc-e3e83e1c6a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f98eff-2f65-4c7f-894f-3ad337d4f0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a7b97c-f026-4f5b-9c1b-7642a0adedf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5df071-6824-40e7-8281-023202110737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa11fda-7edc-4ccf-a8f5-e48649728d96",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a033ea-d9a0-4f27-b593-d35cf829dd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a056148c-8bd5-41d0-8bea-cc4bc324d9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29274c7e-088a-45f3-a544-8009c26a29e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59234aa0-faa4-4f80-ae1c-4114f6f54a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dd5385-bd08-41e6-9066-52fddad5b781",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04d5e84-08c3-493e-a36f-796a1fe7e548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9e930e-cffa-4f5b-879d-1898f20a4022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf32836f-807d-4a0d-baa7-0c754c61d02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa5d4ee-ace7-476b-8e05-d95c5deb300a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966fbd23-5e1c-4129-a41f-35cfd76d31d4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c63488f-a376-49e7-81a1-77eacd302309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01bfce4-bba7-4b2f-93b3-8e945ff09cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31874a7-459a-42f4-afad-21ec288745a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1ad796-166f-4f8a-a0d3-9f50c4c24f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ed8485-3ea6-41e4-b085-918f1e096119",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdc1060-e84f-484e-90a5-869f6f5bcc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6604309d-4275-477d-90c5-e944687bc2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b4752c-ce2d-4245-a9f7-4527c091f536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021388ce-960c-4e99-b3d5-489de65cd168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6fd83c-0174-4b31-9e21-071758f767c6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e0bf40-b9be-4529-953a-a035b4c3989d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7983a1-9635-4c17-bf23-32d88b5fd309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a7f1d1-9dbf-4572-85e3-23bc1800ebda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51df59a4-b20f-4c17-832f-c12d6e96ae49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b2e8e7-b514-4334-a57f-b83eeefcf8d5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5aae8e-38cb-4134-92b4-bbe42c2c8fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3b6cde-5b87-4c44-924f-6563cd151076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb98aa9c-846a-4544-832c-cd9653912755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5595f949-055a-4827-b107-a25a5b61152e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215d00f4-c8c4-470d-a8f7-a055188cff9a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53927b4f-5755-413c-9c6b-b26700840fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf5b22b-2dc2-415c-bed6-6356bfb96230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11449450-402c-4663-9d72-dda52c111f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70d2062-7fcc-4a8e-aa26-982a90027fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca54776-136e-445b-a320-154bee47b46b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0592bc5f-1d12-4fa8-a75a-e6795dcc14ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d47afa78-efd3-452f-bcc6-074b2530ab92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b09694-16e1-4aef-a6ce-b4425f672b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c28d20-c1a0-4216-a9c1-c06e04276f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b655a9ea-8715-4158-9735-156a2d3da8dd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37068600-cb40-4367-a1e5-7e9b5b2b5ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8795bda1-ca9b-4f62-b54b-02b8efff0589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e3d574-afc3-4f0e-bfb0-5770ae3912fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f581c8ef-bf10-4f09-918b-310ef5a39bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c79a383-bc03-4f99-a51f-0adbfa05fbb0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a10519f-a477-48f9-8c87-38252193a5e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc7f035-d6b9-45c0-92b1-d332f49a1481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57066fac-2639-4fdf-aa75-31022da4bdcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cabe957-e2c0-4ba0-8b50-1ea5c6a0d718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b7e448-a046-4b61-8b23-dbc8d24d57f5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec7742d-858b-4b86-bac2-959535f7f7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4bb96c-3e29-45dc-aebb-72403612e2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb84e0f-cfc8-427b-b697-ed79ea3e8b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e30692-7370-4868-96e6-f6c374d5f117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2bbfff-81fb-4b24-9b7a-a8ed817eb137",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e981b5d1-62f2-4d6f-8e76-8faceb128910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87347a95-7b69-4749-b984-27d2ba2263c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cefe10-59ea-4c59-8276-b2e4113d6ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1548c54f-3455-4f19-83d3-552388a0f798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f99c41f-a428-4f21-a769-7d1b2d61dcb8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6be0df-8ab4-46a4-ab84-9f62b39ea148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62098801-2f9a-460d-8fd5-e9524cc6bd3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb6a8fa-6bc9-4a81-a73e-443b8b401ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de96c81f-d628-4563-8e11-af697d5058e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ed4e4a-5612-4d76-bce7-96511d1c5938",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652ba965-ca07-4c97-91aa-8bb0fa2bb285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3556c759-0444-4c94-b9f3-6dd12c06301d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44691416-2b95-43c3-b239-36bf94cec30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6eae1d-9620-4e42-9d17-c7da5d2c604c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0256ec-082c-48cb-a56e-25683d689f2f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a52cdd-df99-4312-b005-1db6ec017205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2a8ad3a-8835-4f31-907f-7949ac6361bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f65778-3657-4304-9889-6958ed273ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1571e4-2f08-4d19-8921-2c9bde813758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0485c6cd-fdc2-40d0-a47a-6c721dabaff4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286548ca-b78e-4c75-86aa-23072fc50bc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a07cd86-19e8-479f-bbf9-0b1562315992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ec5555-5663-4567-9e0b-e1b5cf4412bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14486ec9-9cea-4821-a8e1-2f040d2433d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fee18d-7c45-42aa-ba57-37ccd8546dc7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70b6422-3e95-4fe9-81f9-8ae1a91a7e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7486d0ec-03a5-4ac8-8780-1acb9674d8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0daa28-a1cb-454d-befa-4d8b17793383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbefdb2-c241-4398-949f-2ac9afffd5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac090a7-1968-4514-88da-34c29976b85e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69253b2-9412-4d96-9f5d-e36f6a55103f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670fcf87-276b-46ea-bfcf-08a9ee01900a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cd447a-5f0d-4488-9315-078cda85319c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91418312-ba3c-4bf6-ac41-5c1b536962d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea94295-2218-4c07-9ff8-89b862d94b9f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea13cff-2248-445d-8570-f601e27f195e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1831717f-1110-4dd4-8ae3-7369dc7fbd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205eaf56-65fe-4bd3-9ae6-9c048141a879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61bdb9e-695e-4d03-b62a-71bd58402a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df31662-2ab5-42db-8ce5-da29cc833030",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9615418-af15-45a7-a2eb-97392fa694b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187dd16a-5f19-427b-99ae-414f3c4a9a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4002d539-0f2f-45ef-8a5e-121fd9855e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f29db94-4d49-4936-864d-c3b1be6ba7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f75eec2-2657-40b6-8453-b06d43404036",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a2df3a-4e16-41b1-bf3d-ed62a49efad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599ceae7-d8fb-4932-ac36-541967940d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e5ea9b-f75a-4645-8c2b-c47b6c2725f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d22cef-518e-4134-8922-bc46053ec98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3ac0cd-50fb-4697-b5d5-ae247990c054",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e32b8-4a0c-4b3f-9a6d-2b8f0897a082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf85b80-4bfc-49b4-8e7e-20ec35e59a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e4c57d-87c2-45f9-97a2-1d7f098fbfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da590ca5-2c78-4cba-bcf9-8058c02dd5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302f6283-9d1f-4853-b4d6-9467d0b7f806",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d081e9-733a-4b75-96f5-3bf79049c999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a30e08-7fcf-4332-8011-1ccecda053cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f4fb5e-c860-4c19-b0d1-b12def0e6525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92177fde-aa1d-4d7d-baad-e345f28325e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6e5a3f-52b7-452e-a790-b8c71160ece9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529682f6-bcd8-42ea-9265-5993f1d6a42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44434f4f-92e6-45ac-8d61-b8407550a72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0d1cb0-7f2a-48be-93d4-ac86bd7b6fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d59ed9-fdbd-41a9-854e-fe04d3517936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016415fd-b943-4919-967b-6c6029bb9440",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3362ea-3e75-4287-b0de-637366e6a1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadc7579-89a3-4bcb-826a-dd8495345a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424f7da4-1ca6-457e-ac0d-bbd95dc598d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca98556-438e-4667-9fa2-597ac3b7724c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b79d38e-8217-4c2d-9b73-60d217e4ddbb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b701de3a-82a8-4fe4-941f-3d198dc1aa33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781bf101-8ab7-438e-997b-481b945dc9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5097bf7e-b531-4910-b618-238aa9499288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac07f47-0264-476f-9817-8cc410971011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca291f01-c14e-4edc-88c2-85e62d1ebecb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927bbae8-8c3e-4cae-b654-c5084719750c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e677eb5-4341-4fd6-b213-b724d3f1ba4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02014bd-d3ad-41a4-bdf4-578398f82641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d484f2-7fb3-43be-95b1-b799f9988c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66d1092-f397-499e-99b8-cc26dbd9a478",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f6abd1-b2e8-4ec6-b08f-8780b65c69b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bf746c-45cb-4bac-849e-9ccc02ddb22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdab7c0-9890-471a-9e03-3bc3ee0ae16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc99196-2bd6-42b2-bb99-03c51e531278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89f54b7-7e19-406b-b76f-9dd14c29c78f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f469355-da3c-425c-a474-0e0a500ba042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2179280e-d4f4-4e16-8747-3db475003e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0241f816-e087-4b7f-80f5-06f3553ed515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de81ae7a-2d57-4878-aa66-79d782180929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f94e7c8-74ea-47be-91b0-adade515b34e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5206c1d5-c3cb-412d-bc1b-73c120b96493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1696d3-30c9-4ba6-9faf-3906fc5c1d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c2ca09-e191-45c7-8ada-2f6973dc91bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0c1060-ef71-4df9-bf65-736016b70928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81cf4ef-63b5-442d-a950-783b450239ec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf187c3e-dbaf-4dec-b876-15e6b575f1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b84bd43-4098-4bec-8b09-3330d0e1c8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a67a7c2-5730-4add-b65c-464a4af8ed38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97b5a36-55f3-4994-b40e-a90e5b44654a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf1b536-2381-4d5a-8c0d-2805843cd2f9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10f947b-a53e-4f07-9678-f4a1ca2ef86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65901a7e-6650-4f9a-8969-2fa3a4e847d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45747e0-d127-4e98-ba5e-b78b2c5995d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc7eb47-297b-4c15-a081-6e8de228bac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccced13-b965-4657-a9fa-a652f429b06e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c729c33e-729d-42b9-9bb4-5b8edddb1b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4302832-5a0d-42f4-8f1b-4f3f75787896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b18e4d-72ea-4723-baaf-841abb38c2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6b2eb2-8188-49c5-8031-c56654dcf2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aafcab4-2633-4612-9d79-98061d04869a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bd3362-ba3b-4084-a58f-6cfaa7c9b1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f998a9b-7bfc-4698-8ef5-ff3db7976d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05503e7b-4bd7-4e2f-b9d2-37760967b4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f4e913-31fd-4437-ad05-c48f8a342e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563a0e7e-f279-44d4-bcd6-06cd8ff1ebfa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4707837b-3180-4b34-8bf5-958574108386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152c11a2-c9ef-47df-b6d4-534328088197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeee3e33-8a9b-4de5-9081-4cd32f2690f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276dce46-96e7-4041-9cff-a65db81ab5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64549c9a-10dd-440b-b104-945f880cbecb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb56643-ea4a-4435-914a-8c93a74e7281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069a9d4d-08a4-4679-8986-2ac6a624a481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ac2aa4-e435-40c7-ac85-d96bf53fb188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc9ceb6-2e44-4246-b2ac-463fc81db92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17774e71-a069-498b-957b-7950e81e5e45",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba3ff63-938b-4ebc-ab3f-3c9f4ffcc5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92be4fc-48d0-4fef-9615-ee6ed5711db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dedc02f-1936-4a3b-806f-9017a4b19abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13600265-de19-45a7-bfd6-9ed7abd994aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be26689d-ada1-4d74-910a-e645a90fc846",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea063e7a-52bb-481f-b318-596ec9b57929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a829867-eb02-4e7e-b2d1-66214527d538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e480c3ec-614d-41db-985e-17573de525e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2252be6e-81d0-430a-a3f6-5b847bfed3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea59dc3-ec5c-4457-b17b-f0d29f466e29",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011319e6-d0c8-49e6-96df-4ab7614f7949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f764311f-c74d-472a-a9bc-61c1dd17674a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e861eb-a379-4c00-b8dd-e6d8d05fa5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8edde4-2909-4357-9727-237abd41adeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17bab11-77ce-4d28-85ba-35fac755ef52",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857286c8-bc97-46b6-a2e7-6463e4505f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c515a3e-8fb1-4e21-ba80-68e9eb562561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0598deaa-2dbe-4fc5-b70c-702031354277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874bc521-3751-4d45-97f8-b77e63ca6fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93b0e72-5837-4c39-99d8-5f1a4d64397d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33567e85-7adc-4ee8-b8f5-d50e05a0b28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a673be-702f-4c8c-87fa-46b1e1743cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fe85bf-3b63-4868-8437-517aa0d266d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60eee56-c3cf-41a3-81d6-72d7ba10979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adda1c8c-7ba1-4d11-a0da-8028da0cd86b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077b60e7-4ca0-4651-9bb2-287bc42affc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7769b660-369c-433d-8c1a-489103f4e052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8681762-0654-43ab-b5e4-ed38d1b3afd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2a0dc8-d565-4eb8-9407-3cfa1fb712c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adb4251-a568-4212-bb35-a6d3045f9802",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf6ea69-570a-415c-9c47-092fde4f0ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e30cb8-ab00-4952-95ae-b9267ffd522d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c6c916-ac10-49fc-8b36-9f3273b037df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceeffa54-827f-4ae2-b746-c806ad900572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c178029-5ce7-4a94-ab62-b5fd100425c2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f577d80-4970-4572-acd7-bcd30e9be74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8fe4ae-825e-48c1-941b-ed8fea61689d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c9c832-51d5-438f-b98f-9f2d9ff3bee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d630df26-2348-4e7a-9be5-1afd2d4ed3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fb9a8c-a779-4373-93cc-6925bbdb2294",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c9445c-90fe-4def-9fa6-04de5df21e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36768c52-7a75-4e72-a8c2-5d865be82ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07942b5-92d0-4760-9f4e-1eba102fc964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fe43f2-5088-4051-bfa4-30d2fdff09db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ab6018-8946-44e0-8c0b-0c9210fb9c74",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af47418d-1dd1-431d-b1fb-855e33872bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965d534f-7f98-466a-9b91-a732b8f71a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3cce2b-a266-48a2-8b3f-31df3ed8b91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b667b0d2-57ef-4bcf-b451-cbd74d1b15a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8afe4ed-7caf-4eee-bfac-4261146f3d3b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb6e7bf-c925-4be3-9a40-7b4f8b20022a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f21131-f935-440c-ad80-628438c09794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b132daab-51ec-45d4-8cd3-243acce60f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17029df2-0a45-4b4d-a7d1-138cba8aecfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247a3412-e299-4a36-ac75-b71f82c56805",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47938b7f-4cc7-4953-a900-435b4d41733b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b2bec7-43ae-4b87-8d9c-d1c4c723cab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f51f68-6704-48a3-8705-8c9b3ec4727d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b38bbc-3c02-4baf-a6c7-2b9ccafdb9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95224a82-f94a-4cd2-9164-f358efbfb497",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd94fd73-7ff9-443f-b71d-d848abb5e511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70b6c98-44fb-4d29-b25b-d1165592b2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58e3790-692a-4747-bd89-031e23d21226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2362998c-e2a8-425f-a6f8-6085332e333e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5fff1a-51bd-402a-846b-f0780bf130a3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6693203e-d328-47ab-a724-0889ee7e5a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae69b49-2d25-4604-ade5-c61626fa8d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5a53d5-d504-4c88-b536-d449815db314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c90801-c760-4ffa-b767-f352d74ac0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cac601-e7cf-4031-af00-bc123a6c2b68",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a37f04-6eeb-41e8-a42c-d5e51116d61c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062cc628-c359-4f43-b67a-e61e6e4f9709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef10cf5-83d2-4fc7-b4f6-f8ccb0040274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0201853d-d2fa-4426-9d17-a4d85a06520d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7e311d-21c2-46c8-8b12-aadabf4de532",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3868da2-fcb2-4aae-8910-b1e4226c6041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4e6eb2-09f5-416d-812f-b7d5120dcbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb875989-55ff-4874-8e2b-fbe02f7a3950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a6c2fd-fb2b-45d5-935b-d4f9adc46bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143a6a7c-e5e1-48a8-8f4c-fa535623ea57",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3738c3-64dc-4aa4-adb8-39fbe8282d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b89aa24-b032-41e9-873f-eff45921b851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74c7ff2-1c42-48e7-a414-c3674a91d04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab876c59-3a14-4dea-9339-e9b9c3504ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350caf84-b1e3-44d8-8e21-9578f55c2b87",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73a3341-0e56-4f72-aaf1-9b7660009115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbe5303-5d13-4bab-8871-eac718402e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc757b8-8511-4fb2-81a1-2a0d62fe1a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54a2f09-b40e-44b2-9d88-cc6d06e042b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c76815-3637-41c4-acd1-420a65d7c497",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ea52de-bb05-4be0-83b8-04c8371e47fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "543095c1-0fd7-40ca-b343-fb39e0c5ae2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978e1e68-f232-4262-b82c-87914cb3321d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc48c815-c257-4394-8b3f-d26d5c31e269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546968be-bd3b-431d-8f24-ff17987167c9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba72f3e-29f8-4992-9111-529673db74d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9cc953-ae18-4fbc-99de-cc903a22d4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edea8d30-56c5-4f94-b807-97745d7ef65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22828158-07fb-4ce8-827f-cab9696d7b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fef060-883e-4f15-8cea-ef82613e6236",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353f0ffa-c728-40ac-aa3c-bfcb660103b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98a3cc4-253f-474c-8b96-cbfcf9c2254e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ab3250-2814-456d-bc81-3f9666762110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bf369b-33d7-47ea-80ab-827d03b32a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd320367-591f-461d-9d1b-74f3158a4e02",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3bc6a3-fef4-4972-95e3-b0f5c97b4681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ef0a11-2dbb-41ac-92f2-02389d5f1915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7743b2-ad37-47af-a7d6-29d5e5f2a23f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436aa8e7-7e1e-4900-a529-c6b12e457850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db067db-24e1-4f90-9d25-4389dcf6a788",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b266287-693b-44b2-ba83-f4abb4247adb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "884e29f7-ca83-4d42-8411-f5745c8089ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b5d0ab-0cc0-4eb2-a8d7-8e0d0452b2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eb8d75-f5f9-4037-9bb2-8526fba943db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b5d69b-da35-4fb5-be7d-f2acd871fa9f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964c48ce-f1af-4130-a4d2-50d77fb78fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10107c12-4782-4895-8895-f40a33c216f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02578724-41cb-4f2b-a181-98cd4c7af48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df17c074-6632-4d1c-8828-898233266919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14217a12-e3ed-4c32-bd1b-18032f4146a6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ac5d61-d34a-446a-bc52-4369d3edfbf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc50842-180d-47c7-84ce-b2656c8ffc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5aeda6-421f-4816-b358-46606c677bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b91d6c-eb75-40aa-b80f-0915e3604098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8934ca1-a41e-4118-8cc7-14f0d8292ee0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2084558d-42e3-406d-8a38-823ce8995085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b980515-5637-4771-8f82-01ea06056d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0c7b55-2050-441b-993b-fc4824e4de19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dff523b-209f-4d75-9843-6a5efe643e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f0374f-0e8d-436a-a008-0d5b1ccec66f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef2da6e-28e3-4f87-a29e-0bbd155095b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0dc59b-9176-4a5b-8f33-9584d24647da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9c3018-5e7a-4149-b389-72078178875e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03dbf28a-2f92-4da9-bf87-fb5d06497280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f6d13f-299e-402c-b42b-6d6f78f17763",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b80033-f470-44b3-b6f2-761d79cf85ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbb43f6c-1ae9-48e2-819d-74702c5b6db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44785cc7-d897-418d-8103-04a90d9ec287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0283aa-98d6-443f-b712-61d3dfba5e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d6aef5-62ef-4843-ade2-12cb18fc411e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42765c96-3937-4acf-8ed6-f0a8aea96340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3595cb2e-c816-4d73-b3ef-53e5cf1ffef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9aca8b-a963-44d4-84cf-9751dd39a8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2c2449-64fc-4bbd-8a03-5f8548281641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db49c71-d426-4d9b-9d6f-71b0b936b319",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7117a1-70af-49d1-849b-44733763d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7daa026c-ddf5-4fbb-a9a6-dae3a0741fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5bf726-3235-4470-8fcd-7703465b5bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9a4eb6-1bb7-4f6f-b939-6de41a3de906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08157bc-2321-448e-982a-f802c9bab5e2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4978ba7-7596-411a-b08b-768080008581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9540374-aceb-4d13-87f9-85f65591ba03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e400047-9363-41a7-84e8-2c04a8bfbe4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2091bd41-03f4-4055-a719-b33c602a7e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178401c7-cbf5-4567-a19d-440035c921f1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe8931c-6b68-4070-8c43-c74122d782d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80209897-842e-495c-8357-0770fcd64e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f0506e-2d7d-4a2f-bcad-c0172b130f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6e4393-9e83-4a21-b594-6ce877215a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0782ac9-7c21-415c-a8d6-bebf044825e8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae9646e-0891-4ae5-8d00-ee3b7e3295ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e7d353-9e40-432f-9c85-8b0431292349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce260e78-45f7-4568-add6-ad29547c3df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5a6b02-dc02-4809-b11c-b447154293d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084a3d13-0fff-41ab-82d5-b6dd1dc6d78b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da98753-9ff3-46df-89ca-6fdf1fb163be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92caffcb-72d1-4b45-8b54-89d19d27c147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1cf2b7-6b85-428d-a4d3-49f902d2d7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5df47c-cb23-4345-b3fe-51cbccba5a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ff2298-4b68-468d-9e02-6b317af6029a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33588bc4-90b5-4ce8-af8a-9d9052dbc433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7042f6c-51d3-4675-a0c1-8ecd014d539d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2e18bd-24af-4307-8aae-6e3d3c00795d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4ad313-b00a-4125-8fce-53a7de1bfed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28528ebb-d591-4990-a837-a893135a5f3e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044e8e09-c044-40ed-917c-402d37b051b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273d925d-f137-4067-97db-b87d2a9c9bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2c74e8-0ad4-4c56-b8d4-fc6b04b367a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dc857a-6ad9-4207-98ca-6ce2b239922f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e05608f-2878-4e76-ae62-4d3d75473d2e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee22ecfa-414b-4063-a340-be528f70de82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b481502-6936-44ee-8a6a-a76d81b5d21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ee6e52-f126-496c-ab52-dafcef31704a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56ea142-4bb1-4589-aef5-f86c97e0a1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356271fe-9308-42f0-9061-211dcea775b4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3677d1f3-c717-46ef-9736-e6bbfb70d294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb10190-08c4-4a6e-9f18-9b45f4435f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2c850f-2277-45eb-aacd-2ed5794ddb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4f8af2-f367-4298-a047-1d3a851e2bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a964272-d1bc-4836-9a34-829d996195cf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ffd86a-c021-4487-8e98-a404928070e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3c2964-e00d-4303-bcbe-3674f2fb0eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709b47e4-7f2a-47dc-8833-9a4d82c869ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adef9bba-6cf4-434f-99ba-3681e2bdcd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0547bb9-e28d-4134-91c2-58c48561f985",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b28a8e-6a53-420f-8b33-9cb862ffa3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b684a4a6-5aba-4239-a09a-05d0df9b112c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba469de-a1c9-40b5-b662-e85880a44744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d9443b-dcff-45a5-8516-e0d5fa49d340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981e9d52-703e-4513-b8c6-939cb3c5be73",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c5ea54-c990-4786-bae0-6627e326698f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1479909-86b7-4c35-8856-722b49a6d98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f153dc-7929-4ce9-a12a-b8a2a8786135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6f9e61-a287-41a1-9145-4b1a841906d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6be2005-7d43-453c-a832-757229cfa730",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8033e3dc-13e1-40ca-a55b-0b3b95561d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec4add4f-3c68-4cd1-b61b-0bdb4429ac75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd4eecb-f7f9-4351-9f56-90cefb858032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fb505b-3f09-4c5d-a363-673b7e33314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a8df9c-f8f3-46ac-b705-3a21839f85c6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5903e3c5-271c-409c-8fde-388e911f2716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f1471b-8248-468d-a387-00bbff08af78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65faf4a-2bfa-4653-94d3-81fdd26b5f65",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7dac88-1d3c-4be6-a57c-21475811c4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775a3ab4-ba4f-4009-83d1-07fd4bd527e1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5fa249-1fd3-47c2-a034-965fe636d303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d553d373-14ff-46ca-9f19-9629724ef161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2215ae-858a-4fa2-9a5d-9e94832b75f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d2d252-cea7-452d-bd52-26a0872e2792"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d80f6fbd-37f8-425c-8de2-784cfc179deb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78b919c9-ceb2-4332-82ed-fb433340145a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6021c9c-7294-4260-b575-1af7c2dcc920",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a3b00dd-9509-4ec6-93fa-9506bd814d20"
                    }
                  }
                ]
              },
              {
                "id": "606b4b9a-c421-4c38-8022-853c8cb20d2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4de6440b-21dc-46a6-b5ed-b41d9e28bcca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfd462c-1875-4d0a-bfcb-503ba96d5c6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d874fa09-84e7-4a37-89ec-ed63d789e9f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e47e4d-08a8-4ca6-ae23-539f7f4961ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d99fab2-214f-4322-95ee-d3bba50e3051"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfbab531-a185-4813-96a2-d6f8735a4c5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f27ca88c-5c7b-476a-b42d-59bb140f3647"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93fa5fb1-e92e-412b-af85-0088c9267917",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c74ce94-acd4-476d-a0da-78f1e052dd66"
                    }
                  }
                ]
              },
              {
                "id": "127bc1da-f898-4602-b65d-5ab2fcb98cc2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0090ed60-49b0-423c-a43a-ee83672393e5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa2cb31-88e9-4b4a-aa62-dd1b36dd81d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ba6d2d64-8d2f-4e70-80f6-016140b89995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d916ed-4f36-4333-a1ee-0c3ec0ef2990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1074cf84-2436-46ba-9613-28159349a4f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "efa98875-878e-4dfe-b273-2beda758d49d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6cf116dd-4b32-41f8-9e90-99a77581c402",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b03648d0-8070-4ae2-9fa5-e63338a6999e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf45bd43-3f1a-4f8f-8755-9d8db063e723"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3203ee9-c23f-45ca-950a-c0ed332fe795",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee25ca3-c796-4d3d-93bc-afded0d6968f"
                    }
                  }
                ]
              },
              {
                "id": "7a4a3242-190d-4916-828a-db3aa8bc502e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c8fc7db-ebc9-44ed-9d27-c0dfc54d7ac2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5dd30128-59cc-4934-85c3-2e49cbfd5e3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "383b5043-e431-4ca8-8079-d883f00b9bda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31d73aa1-0101-4d02-bc2b-5891db4b549f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba8d00a6-bb64-425b-bfa3-847e445e3f16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fc2461a3-966b-46d8-899c-b801d4bb7f1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c76dcd6-4241-4087-b752-110b49860f2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91632fa1-38b9-4126-b230-81efa5243113"
            }
          }
        ]
      },
      {
        "id": "a4f73518-9f64-47f9-98ce-cf8b54c7f09e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4af5af4c-9d0e-4c90-9c69-53c007f1ef74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f601e15f-9d1d-4ff3-88e6-9741a694ad44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8c13287-b12b-4007-8c04-f91a812d2153",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae10f9b-fed4-47c9-b160-baff575c4a80",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1d09f38d-6755-4c52-9cd3-4c07e3598894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bd4b99-d656-4337-a29e-75025ae50abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "326c2725-0c3a-458a-84ad-ac0830a3b55e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04ec9369-e123-4858-a1ab-4fab33379aa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24c5897b-adc5-45b5-962c-6658f119bfca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bfead3b-02f3-440b-b788-6be21f1a8146",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a640d4ed-b157-4369-a007-f92b7c658cc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9fa2272-a5e7-4b5b-8925-e162c2fda898",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9b7a931b-fb64-47c4-9d35-e8d4c27171ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "152273bb-c257-4e92-ad74-709776edc581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9be64815-8205-4c5a-a434-1df99f6181a9"
            }
          }
        ]
      },
      {
        "id": "5db9fce0-cc96-48ed-bafb-996d17eb400d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6ba18323-afe7-4e48-a74f-43da0adeccac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3238d78b-04fc-46b5-8ce5-c5da8cc47075",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8af5df76-fc4c-4f73-8bde-31059d356897",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad8ccea-f854-4361-a54d-e19745892c9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4664f98f-4abf-4ce5-8a3a-08f4fd7c8b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38303d4f-8bdd-46a8-990b-eff29907bbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3dd8f9d-499d-434d-bb1a-dcc240500831"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c18b0c0-8138-412c-b6ae-6b3755c46b52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f890379-0a36-4afe-ac01-d9fceabc141b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d4df948-2e52-44a1-bb4d-4283689245c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f93a1e0-9b59-4321-96fd-885b350e92ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1e58422-2f59-4511-908f-0124eb07c3f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29af5c28-eabf-4381-b38b-def01785fc6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3308d07-4a1b-4a80-81aa-11762662b95e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a28d7994-b72b-42a3-aa3c-0ba4b7fe4bde"
            }
          }
        ]
      },
      {
        "id": "d432129f-08d8-4f89-83e8-8861e3f8e8f1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f80a24e3-178c-4555-a2bb-1321ffb90129",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d634dae-e611-4144-add1-632825ebbe1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83e617ee-86c0-42f4-b55a-21c98c6b0101",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc91179-0ffe-4ed8-bca9-54a62087bb0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "663c2d64-e667-4eff-8bcc-b492c2f9718d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d795b785-c73e-4362-86a2-d5849ec6f2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67fbfa0f-4d30-473b-9019-00a86f380777"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b40726d-bea2-4c9f-be73-4c42136926eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2661f7c8-28e4-407d-bfb1-bf7235845dbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ede0e160-3de2-46be-a89c-238b2af6e2e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdd9345f-ead9-4794-8e08-443f3518222a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27598f89-cfbc-4902-917a-a6c5aa5cc605",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1de3f83c-a240-425a-9b1a-4b70828b36aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24b1b197-c220-42ba-8061-e1fe35568bf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f99cb28a-ae8a-4505-ac1c-b523b58ea5b8"
            }
          }
        ]
      },
      {
        "id": "8604e0ab-a2ec-4c39-a0dc-97601f92d838",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8bece4e-1950-442e-b0c9-13c680710ec1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46f9ea9b-96c9-4545-8024-066fa709f3da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "08815dcd-735f-452c-a49c-d2537893cc05",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58196a4d-39ed-46fe-9956-3939970f9946",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6bbfb77-9eee-4dc4-8848-a94149d0dbb0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.38732394366197,
      "responseMin": 19,
      "responseMax": 363,
      "responseSd": 26.267274287076816,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695602029395,
      "completed": 1695602050385
    },
    "executions": [
      {
        "id": "57467cd2-6a4b-4fa4-982a-8f8ac5903d30",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "02c6273d-e0d3-4360-9917-04b748e07769",
          "httpRequestId": "1826343d-7f9b-4c15-8adb-70868628e989"
        },
        "item": {
          "id": "57467cd2-6a4b-4fa4-982a-8f8ac5903d30",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "acaa0960-cdfd-4f3b-a068-4620a2580682",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 0
        }
      },
      {
        "id": "0cda9c1f-3759-41c0-8d4c-7fecbf392baf",
        "cursor": {
          "ref": "f154ed79-61d8-4186-abc1-1ee7f27bd73c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fd605940-0897-4bd6-89a3-3665f794df3c"
        },
        "item": {
          "id": "0cda9c1f-3759-41c0-8d4c-7fecbf392baf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ae136e8a-6c9b-472e-a099-72e333158d38",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "aafe11d0-efe8-4382-bd91-3f5edd005c75",
        "cursor": {
          "ref": "3ec14ac7-c965-4cd1-aedf-c348f64a7003",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "619d73e1-2e63-4634-8332-0dfeb705efe3"
        },
        "item": {
          "id": "aafe11d0-efe8-4382-bd91-3f5edd005c75",
          "name": "did_json"
        },
        "response": {
          "id": "f34de491-2628-44bc-ac9e-28a7dc6c1cf5",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fb1012-c91c-4ab2-9a0e-87bb1d107859",
        "cursor": {
          "ref": "355471bf-1665-4fb3-b24d-0da2de6be13d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "153d7bfb-9bee-43b7-bedc-e3210e318259"
        },
        "item": {
          "id": "28fb1012-c91c-4ab2-9a0e-87bb1d107859",
          "name": "did:invalid"
        },
        "response": {
          "id": "b591d8cb-ffbd-4f0b-a305-7c9760a6d00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fb1012-c91c-4ab2-9a0e-87bb1d107859",
        "cursor": {
          "ref": "355471bf-1665-4fb3-b24d-0da2de6be13d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "153d7bfb-9bee-43b7-bedc-e3210e318259"
        },
        "item": {
          "id": "28fb1012-c91c-4ab2-9a0e-87bb1d107859",
          "name": "did:invalid"
        },
        "response": {
          "id": "b591d8cb-ffbd-4f0b-a305-7c9760a6d00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c30b21b-3c9d-415e-a18c-14974318d485",
        "cursor": {
          "ref": "fa56501a-f85f-41be-a5d2-ed6cfee4b7dc",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "496227bd-1518-4c1e-a3c2-ca58c1c11887"
        },
        "item": {
          "id": "6c30b21b-3c9d-415e-a18c-14974318d485",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cf7ec2f6-40a2-468e-bd85-31f419a8c3b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 80,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be52573-39e6-40d5-8fed-c7fdee5812b8",
        "cursor": {
          "ref": "923711b4-6fd1-44f1-b67e-c8835ebc4361",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9b86959-2fdb-4881-999a-3c876e3dd631"
        },
        "item": {
          "id": "1be52573-39e6-40d5-8fed-c7fdee5812b8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "09a565e8-8e57-4f23-a8ff-80570f053a64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d479a4eb-8d16-4096-940a-a720386df0d3",
        "cursor": {
          "ref": "f78e5904-d200-4ef3-bca1-538c6aacbbf3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bf13125f-2cc0-49e8-bcee-d1d5c791b601"
        },
        "item": {
          "id": "d479a4eb-8d16-4096-940a-a720386df0d3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7f397aa8-90f9-4f2a-bb83-9d5939bc5e9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f243230f-7487-4907-af06-6a513b09c07c",
        "cursor": {
          "ref": "54b3e5a3-9d2e-4e70-bd1a-e3fdae169b43",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "90ea6f6c-c843-4ea2-9fa7-ab05bf07bab4"
        },
        "item": {
          "id": "f243230f-7487-4907-af06-6a513b09c07c",
          "name": "identifiers"
        },
        "response": {
          "id": "595067e4-3578-44c5-8c84-b5ac1ff7014e",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6a0d35-4ea7-481d-88e1-75eaa6fa934f",
        "cursor": {
          "ref": "7a04e26e-c588-4ca4-8ca6-51453e645187",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ca5f55bb-2d69-43d2-ad44-ff2e42867bc4"
        },
        "item": {
          "id": "0b6a0d35-4ea7-481d-88e1-75eaa6fa934f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "43826b2f-055c-43de-b438-4b6dd2b1ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66f1ec5-fd17-4f3d-8833-05af96796c29",
        "cursor": {
          "ref": "c2c8e8a7-60e2-4aa3-b0fa-e4ed8e522b55",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "79921535-739b-4c14-b88d-89ce722b840a"
        },
        "item": {
          "id": "e66f1ec5-fd17-4f3d-8833-05af96796c29",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aecf011e-9d4b-46bd-87d9-8b06548eed0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76aad81-8e21-40bf-812f-82a20e0c77f7",
        "cursor": {
          "ref": "53bfcfdd-1c3a-466e-b858-7bf70034d6cd",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c6a8d540-0860-49a4-8e64-840c32ff1033"
        },
        "item": {
          "id": "d76aad81-8e21-40bf-812f-82a20e0c77f7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "71d2dc90-9e53-42f3-ab5d-a93fed8f4476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faca307-dcdb-4e44-8d39-c2ca59c0184d",
        "cursor": {
          "ref": "09126b78-035e-4664-be2e-6fd78be7bf4b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2d18e370-4756-4624-aa5c-f887e6addcc7"
        },
        "item": {
          "id": "4faca307-dcdb-4e44-8d39-c2ca59c0184d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "831c6925-3fa2-433a-ba43-73dd523799b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607502c0-61ff-41cb-b109-9c5b137ddb96",
        "cursor": {
          "ref": "13b9a982-c753-448d-90f8-e6048441f65b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4951dc6b-81a6-45ef-b0f0-5b15584265fb"
        },
        "item": {
          "id": "607502c0-61ff-41cb-b109-9c5b137ddb96",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "90e13159-caae-4661-b599-cdc09cc68480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a4efa4-44b7-46cd-a53c-9b0f9cf48284",
        "cursor": {
          "ref": "634ee8be-9c7f-4f8b-bf39-2bfc4519fb3d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "69fcaafc-ab99-43a6-9c87-5a376d416bfe"
        },
        "item": {
          "id": "a0a4efa4-44b7-46cd-a53c-9b0f9cf48284",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "52f77d47-cb44-46b5-be88-a316747d1e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7863f87a-e00a-4063-8a6b-356ca50ae1eb",
        "cursor": {
          "ref": "5f1c7121-0d55-4ac9-a389-c7f2b88c2e27",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7a31d330-9a16-42b4-a76f-a575d2e635c3"
        },
        "item": {
          "id": "7863f87a-e00a-4063-8a6b-356ca50ae1eb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "50a158f0-df2c-4b33-bb0b-93e044c2831b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f8a362-425e-4efa-a832-42d4b889f832",
        "cursor": {
          "ref": "808a72f1-cb4e-4ce6-8e74-d53cb16e2146",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aa7a2852-801b-4460-a2b0-3e6b1022b4f8"
        },
        "item": {
          "id": "12f8a362-425e-4efa-a832-42d4b889f832",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0c73bddf-342a-47b8-baa3-3e7e97f1b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f44759-3efc-44fb-adde-a8734efd5a48",
        "cursor": {
          "ref": "e9edf876-4e42-4104-b854-9f180a658df0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "994376ad-cd83-4065-b5f9-e0865f7ad414"
        },
        "item": {
          "id": "04f44759-3efc-44fb-adde-a8734efd5a48",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "baf9ce39-f304-4bd6-aba4-01b0e3c2817b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17fadd6-b450-49da-9f83-e6a48829e2fd",
        "cursor": {
          "ref": "9ffaac29-8892-45a2-a497-bbc1d9e77bb9",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b43712de-cdca-45eb-b312-552fbb6b842f"
        },
        "item": {
          "id": "f17fadd6-b450-49da-9f83-e6a48829e2fd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e8a019fe-8a0f-4e20-91a7-80c4632f2c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971cc689-0231-40e2-b478-6eb957901acc",
        "cursor": {
          "ref": "38d7eb9d-35fc-43cf-97d8-7283d2c79d3f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ff8cfe23-9cbd-49e8-ab6d-0a418a11ef78"
        },
        "item": {
          "id": "971cc689-0231-40e2-b478-6eb957901acc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f85edf42-64be-48a1-958a-9e8b00f7bb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4d9bef-339f-470b-a02c-c9e0d9625e77",
        "cursor": {
          "ref": "3303c3a6-5aa2-439b-8960-fb9fbe7a68d5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0054f778-87d3-4da9-8cbc-17fade68331a"
        },
        "item": {
          "id": "de4d9bef-339f-470b-a02c-c9e0d9625e77",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "33c59ca9-6d7c-4fa4-9f4f-32d26ab5ebf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0116f524-8ddb-4ea9-895e-4e15d70d1455",
        "cursor": {
          "ref": "61307026-be79-4ffa-93d2-14bbf1b42b75",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7cf00f37-fd19-4fe1-a2f2-84db90c086de"
        },
        "item": {
          "id": "0116f524-8ddb-4ea9-895e-4e15d70d1455",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7bca29e8-8771-4960-9b62-c71a4e1be409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c1cbec-743a-4f8a-8335-88d122c0ce4b",
        "cursor": {
          "ref": "42b1ccbb-8f02-4925-a8cd-04fe8558aa6a",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2fe3cfed-7063-47ca-9079-4952adf818d2"
        },
        "item": {
          "id": "06c1cbec-743a-4f8a-8335-88d122c0ce4b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0b1e9e23-32d1-43d3-84d2-6c3106fdf879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f4abb5-780f-4605-a0d3-3c14a52cd91e",
        "cursor": {
          "ref": "da1f3ebd-7a64-4071-a259-c0f1b5ce881c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3a933ba0-32a7-4c8c-8ae2-a7275ed229aa"
        },
        "item": {
          "id": "d1f4abb5-780f-4605-a0d3-3c14a52cd91e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4dcc176d-7c0d-495e-adf7-ef673dd49d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844cc042-565c-41e0-a329-8ff96821b0dc",
        "cursor": {
          "ref": "ce4a6c7b-d647-4fc6-a477-8deaa35e5f8c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "046da8bd-fb67-4e4b-8451-9c6494c2854b"
        },
        "item": {
          "id": "844cc042-565c-41e0-a329-8ff96821b0dc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d4805db0-a3fd-43c5-959f-1cf295b8a392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7822fe4c-95f0-4afb-a4e1-2435b617afd9",
        "cursor": {
          "ref": "605ff782-f931-476a-b317-9e3767a9626e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "86ccebf8-0b42-4839-9f86-dbd90f658b8f"
        },
        "item": {
          "id": "7822fe4c-95f0-4afb-a4e1-2435b617afd9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "043b49ca-defb-4d01-b0d6-d0f0cce55eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af956e6-7ccb-4842-9627-f0eda0ee39e7",
        "cursor": {
          "ref": "95ec7173-f5c3-4943-9f94-f01f2ebc078b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2db22d56-8023-4add-913c-83e5855b11e9"
        },
        "item": {
          "id": "6af956e6-7ccb-4842-9627-f0eda0ee39e7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "481392d3-83b3-4d2d-9bb1-2faacf29b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d4e34-f7db-42e7-8030-68f0716f26ec",
        "cursor": {
          "ref": "c6f1ba88-c22e-4b7d-af58-748d45303ae9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a5d7fda2-00be-4e6c-8acb-954dbfaf841b"
        },
        "item": {
          "id": "6a9d4e34-f7db-42e7-8030-68f0716f26ec",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b05966c9-b55d-4611-8cec-41fd93a0e3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c0f838-e318-4cc3-adca-84314e2a2aec",
        "cursor": {
          "ref": "96c27183-b04b-4518-8242-10329b55afb1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dd6b9dbe-63a1-4759-a3b0-4a05362a770c"
        },
        "item": {
          "id": "85c0f838-e318-4cc3-adca-84314e2a2aec",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e0d30125-0f94-43ea-a499-4cb63608d78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ef2058-e8ce-4dbc-9f1f-76f168f6d327",
        "cursor": {
          "ref": "53689589-8442-40d4-a790-b04870ec3c4e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "51f70cc5-480d-4597-a551-667c681dd1d1"
        },
        "item": {
          "id": "80ef2058-e8ce-4dbc-9f1f-76f168f6d327",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2333bf4f-6075-41d4-be37-a14e035ef3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e543d5f-26ac-43c7-96ad-37853163c856",
        "cursor": {
          "ref": "428e38e1-97f8-4003-94bf-3327a6bf5440",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "27baf631-be1f-478e-8946-7966cabc5272"
        },
        "item": {
          "id": "2e543d5f-26ac-43c7-96ad-37853163c856",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "33c82963-ad6b-47e0-a3a1-8d21b423249b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470531dc-7faf-4794-ad8f-1f6e14c77846",
        "cursor": {
          "ref": "df0f5276-1110-4009-9f59-2eb21e84711b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "259fda4a-9d0f-4a57-9b5c-d9a24e757451"
        },
        "item": {
          "id": "470531dc-7faf-4794-ad8f-1f6e14c77846",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "be90e5fc-947f-4222-8269-375dd31473f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e421d42f-e4c7-4bb0-a6a5-7607ce43fd7a",
        "cursor": {
          "ref": "59fa5493-5458-4adf-9717-0e1bbfa91911",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fcb57ea7-7de6-496b-bb88-50af116a2e22"
        },
        "item": {
          "id": "e421d42f-e4c7-4bb0-a6a5-7607ce43fd7a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4f6c9bed-ba11-417c-b96e-0adc197cae9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949186fe-03eb-439f-9cae-854783da60e9",
        "cursor": {
          "ref": "4c0bba67-d5d9-46c9-92fa-6b8ed59f5ebc",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "de627b62-c68c-4c53-bd26-2faa20d4904b"
        },
        "item": {
          "id": "949186fe-03eb-439f-9cae-854783da60e9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3b15425c-9eae-4c95-b82f-1729d97bab6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550b2f05-165e-4ba3-88e1-498f3bff5460",
        "cursor": {
          "ref": "e7251c50-fc60-4a01-9108-de291fe4ce0f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8e7aa61c-a72c-4f39-ac43-0f6172c58d19"
        },
        "item": {
          "id": "550b2f05-165e-4ba3-88e1-498f3bff5460",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e68c1373-7103-4204-b738-ea193ec27886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d399a8b-4784-4bb4-b836-ad8f7efb6a06",
        "cursor": {
          "ref": "4a245b38-7a2f-4281-a3a2-b7af8a95741c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "04aad922-35e9-4486-83b6-d8dc8d6ba757"
        },
        "item": {
          "id": "0d399a8b-4784-4bb4-b836-ad8f7efb6a06",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c98188cb-7fd9-4027-9f33-e6e05deffa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76b52d9-fdab-42f7-9f73-2340c405ff9f",
        "cursor": {
          "ref": "d5c228fc-6659-4a71-a168-6bceff5167b9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f7137f52-4358-46fd-b1f9-cdd21e561bbe"
        },
        "item": {
          "id": "d76b52d9-fdab-42f7-9f73-2340c405ff9f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "19cce38d-bef7-4b92-ad42-07bc44b21315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1227fcd-dc96-45d3-830d-c9caf1777629",
        "cursor": {
          "ref": "fa27585b-a35d-4971-a9d8-ccfc27a7f663",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "62d7e52f-6d82-4ea7-8dd4-6dc016a449af"
        },
        "item": {
          "id": "b1227fcd-dc96-45d3-830d-c9caf1777629",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aa872c1b-357b-43fe-a4f7-3ca1392b0987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282bdd1a-d9a8-4be5-b312-956adf1faab0",
        "cursor": {
          "ref": "a83f4bde-ae6c-4d57-a8c0-ca3fbb21a852",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ed43b36f-31eb-48c5-958f-44c42fccfcc2"
        },
        "item": {
          "id": "282bdd1a-d9a8-4be5-b312-956adf1faab0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0c1b934c-ff74-4a31-bb4d-2e53f2bc2b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807046ce-a3b3-432d-b1d7-571b95f0e640",
        "cursor": {
          "ref": "cf42643c-8704-45f4-86a8-e677eb04ecbd",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e5e6a26a-d98f-4071-b842-00c1181cd48b"
        },
        "item": {
          "id": "807046ce-a3b3-432d-b1d7-571b95f0e640",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f29e0fa3-f796-4060-a01e-092ce8271af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaf47ae-ba36-4f67-9e3f-fcc29d1f30db",
        "cursor": {
          "ref": "ba0978af-08fb-47a0-92c5-240209c01059",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "16f9d834-8014-4721-835f-43184b6f8e1e"
        },
        "item": {
          "id": "3aaf47ae-ba36-4f67-9e3f-fcc29d1f30db",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "38435dd1-4498-44b2-88fe-bff07d07f7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3942814c-7c3a-492e-9ea8-3d570fce6c50",
        "cursor": {
          "ref": "8e025640-0614-46af-9fde-29534c9f26c6",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9a1a67ce-bc61-4c47-a754-f06724132d3d"
        },
        "item": {
          "id": "3942814c-7c3a-492e-9ea8-3d570fce6c50",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b81b67ca-fbf9-4615-b7b1-5a80a28def1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2702fdc7-4990-4e51-865e-161720254fb0",
        "cursor": {
          "ref": "959efa5f-0e0c-4e17-80ae-6c7ba4ae1a26",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2f2e1a03-0954-47ea-82ca-2864731002cd"
        },
        "item": {
          "id": "2702fdc7-4990-4e51-865e-161720254fb0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad63f044-5817-4755-9b91-d2afa044425c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b757df-39aa-4322-bda9-6f55ea67973d",
        "cursor": {
          "ref": "930a8af7-1957-4268-9b7f-273d80564e75",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b869c6be-bb71-4cab-b1eb-d8697202f9fd"
        },
        "item": {
          "id": "d0b757df-39aa-4322-bda9-6f55ea67973d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "217a769f-4a4d-44d2-b463-413b81c80503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f69ad9-a2a6-4d7e-84ef-5e5a25f5beb5",
        "cursor": {
          "ref": "60378453-86ef-4610-a13f-77c1d6b4c8b1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6f0ea222-185c-4537-985f-84cb043f3fb9"
        },
        "item": {
          "id": "31f69ad9-a2a6-4d7e-84ef-5e5a25f5beb5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5710bce0-e1b7-458f-a39b-61749b7b7187",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 60,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd453d58-274c-4d5e-b08d-4691ba00ef57",
        "cursor": {
          "ref": "b5dcc58f-7293-4020-a52c-786ed165e114",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "acc39b92-ac12-45e5-b334-f2aaf432f756"
        },
        "item": {
          "id": "bd453d58-274c-4d5e-b08d-4691ba00ef57",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "67e6f61e-6cb9-4bd7-8ffa-97a324686bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd56e804-ec22-426e-ba8e-9bc01da5c558",
        "cursor": {
          "ref": "953b88bc-91ca-4e89-9e8b-604e348499b1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b6cbbdb0-488c-45cb-86a1-29c780c1fbe8"
        },
        "item": {
          "id": "bd56e804-ec22-426e-ba8e-9bc01da5c558",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "675a44a1-feb6-468b-b536-2713b137e69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fff7717-b100-47bf-a11a-cb3b5abd0582",
        "cursor": {
          "ref": "b286d210-54ad-4a39-8fe8-2a1f2bcdeeda",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e957f799-17a7-4f9b-9b8b-ca4b9aa6499d"
        },
        "item": {
          "id": "3fff7717-b100-47bf-a11a-cb3b5abd0582",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "177cf458-f364-41d2-95cb-b2e0782c75a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdf68ec-2288-4739-b1f9-71e6be9a44b8",
        "cursor": {
          "ref": "85b64d76-cef8-4334-8ce7-624043f5311f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6ef3caea-c125-4f66-8438-0522d466e3b0"
        },
        "item": {
          "id": "3cdf68ec-2288-4739-b1f9-71e6be9a44b8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ea96cea3-0ad2-4415-b042-c277c6e5411a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282693ff-710c-406d-b29a-453daffd6e38",
        "cursor": {
          "ref": "3d20d5d8-af9e-4e9e-a000-40d8a4e9d830",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc1ad944-d180-42ba-b75f-527fb2770f3a"
        },
        "item": {
          "id": "282693ff-710c-406d-b29a-453daffd6e38",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f9b8a4b7-cfd0-41f0-99f0-bf5a9aa18029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca2bb46-cbe7-4aac-8149-5f56bceb9f07",
        "cursor": {
          "ref": "9a3c7110-e156-4500-b317-8eca1b7789e3",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3f3050e2-caac-4f5f-b552-4629a5cda7cc"
        },
        "item": {
          "id": "5ca2bb46-cbe7-4aac-8149-5f56bceb9f07",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0a588431-1939-4e70-90f5-96dd2366904a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3a91f3-9558-4fc1-a2b0-c9977acd8dc4",
        "cursor": {
          "ref": "251a68b6-c21c-4b26-ac8a-83d9a9151184",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "039d6b76-faae-48cc-b606-bd4df75034ed"
        },
        "item": {
          "id": "ec3a91f3-9558-4fc1-a2b0-c9977acd8dc4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "49f469ea-8f51-4397-8599-26ee3234a7f8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85a8798-426f-46f8-abc0-480a2f78d090",
        "cursor": {
          "ref": "42d3fcfe-2d26-4875-b122-90f48e27e008",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9a5603ee-abcf-4bb6-bf89-2d8ef60a8799"
        },
        "item": {
          "id": "d85a8798-426f-46f8-abc0-480a2f78d090",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4ab6c7d5-3ded-4881-a84b-87f16b1e2f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af55377-fbc7-4fe7-ba68-ff21f45772f9",
        "cursor": {
          "ref": "8d350118-06c5-4e88-87d5-fc61db297277",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0b0892c0-f6a4-489f-bc48-bacd674abce1"
        },
        "item": {
          "id": "3af55377-fbc7-4fe7-ba68-ff21f45772f9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "41f9f69a-e9b6-482b-9e38-b49c6e8d4f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9692bf3-739c-4f70-ab93-674564d8b265",
        "cursor": {
          "ref": "11f9d266-c957-4242-b4e0-22e3760112ba",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4c88db53-fbf3-4b8b-aa23-67ed465ddb57"
        },
        "item": {
          "id": "d9692bf3-739c-4f70-ab93-674564d8b265",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "169fe27e-ecb7-4960-9bef-aac9afb93363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b057dc08-bd44-46eb-baf9-57d4c017b0f4",
        "cursor": {
          "ref": "979183c8-3ac8-4941-ac52-f33d73402b4b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "82676a86-e43a-49a5-a0bd-92847b196e3e"
        },
        "item": {
          "id": "b057dc08-bd44-46eb-baf9-57d4c017b0f4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a305425b-88b8-4cfc-bd22-ebd89ef96692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfd8d5a-2845-4b7d-8740-c77e232cd55e",
        "cursor": {
          "ref": "c2edab33-7d30-4018-aa24-d6f5441b065c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "285c53da-2de7-4006-92ee-d61868c215ca"
        },
        "item": {
          "id": "ecfd8d5a-2845-4b7d-8740-c77e232cd55e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "761729aa-eeab-4821-8163-486a1cd37715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb27372-eaa1-4cf5-ad1c-527548e4839d",
        "cursor": {
          "ref": "b1b66e9f-fb51-4c8d-869c-14a250305ea5",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6df8636e-5b13-4475-bbaa-65d041f114c1"
        },
        "item": {
          "id": "dfb27372-eaa1-4cf5-ad1c-527548e4839d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e31185d5-a4e2-4a82-b4b1-7d9c296e5f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09edf49-8103-4ea3-9a6e-1bdde95e215f",
        "cursor": {
          "ref": "ba12d9c4-5fef-4d07-a596-3e44dc72e04b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5d863ce2-1afd-4fda-9627-5210847ce9fb"
        },
        "item": {
          "id": "b09edf49-8103-4ea3-9a6e-1bdde95e215f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "54ca5e3f-2125-4a50-8977-9ee0d3fe0a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05938ac-094b-4aa6-ad11-e29875577ea9",
        "cursor": {
          "ref": "1de2da6c-a94b-4424-91b8-9f7a19ee91e2",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0951b970-4ac4-4b55-897f-de4375ada6e4"
        },
        "item": {
          "id": "b05938ac-094b-4aa6-ad11-e29875577ea9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "83c46437-2d4b-48ea-8626-23e9a33d5834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546cf637-b774-4922-a34b-fc4c9c419adb",
        "cursor": {
          "ref": "b8e621f3-4067-447f-a0a4-a395cc79f216",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9e04915f-8a7e-4f0d-8f1b-7241372352cb"
        },
        "item": {
          "id": "546cf637-b774-4922-a34b-fc4c9c419adb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "92296f59-1de8-4d0c-b471-383689687582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404ed68b-34bf-4ce0-8589-211762b18a7f",
        "cursor": {
          "ref": "983d2046-7771-4fee-b111-51b9d384ccb0",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ae3cb262-1e82-4224-b70d-669a49cef0ee"
        },
        "item": {
          "id": "404ed68b-34bf-4ce0-8589-211762b18a7f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0ad8ccbf-532e-4599-8697-74cf30d2636a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4638e585-09dc-419d-8b25-6b8371b11876",
        "cursor": {
          "ref": "0750ac3a-64f2-47c6-80dd-e580af6fcf3c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8a7ea2fb-ce98-42cb-a5b6-19278bc91d85"
        },
        "item": {
          "id": "4638e585-09dc-419d-8b25-6b8371b11876",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "11f008fc-8ec2-4e71-94a0-30730c8bc5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dc34f5-a6da-4e3d-8a3f-427261854b76",
        "cursor": {
          "ref": "a92642f5-81a6-4830-9965-9968e9f7420a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "37dd28df-01d8-4bb8-9066-07291d2e9717"
        },
        "item": {
          "id": "73dc34f5-a6da-4e3d-8a3f-427261854b76",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d99a5bb5-771b-4af4-a654-9f8b7d4414f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4749e0bf-5a8b-4f97-8795-5d050725d7ee",
        "cursor": {
          "ref": "04074df2-c932-4e94-9d2b-5e39d41e433b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ca301a74-8165-4c14-ac55-b6fd10c1508b"
        },
        "item": {
          "id": "4749e0bf-5a8b-4f97-8795-5d050725d7ee",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b39b7410-6596-42bd-9054-f0fac38a3419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efeb6ce-c301-40e9-8837-564dc1a82d38",
        "cursor": {
          "ref": "8f7f9536-db77-45f0-93c2-858f250060a8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "037ab4f0-1f16-4c4a-8364-e94d5db67a27"
        },
        "item": {
          "id": "6efeb6ce-c301-40e9-8837-564dc1a82d38",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "942d0409-9e9d-4b70-ada6-0a87c3f5af81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf115f8-6840-4c1f-9fb7-94a316761371",
        "cursor": {
          "ref": "e490e1c5-a9b7-4a1a-a783-c074323b937e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3a54a593-9e3f-44fb-af20-546c544c4e13"
        },
        "item": {
          "id": "bcf115f8-6840-4c1f-9fb7-94a316761371",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ebc44239-aa12-42c1-b768-3945864ab0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a713ccc9-75fc-4e7a-a29d-7a702b205844",
        "cursor": {
          "ref": "2eb51a50-0482-43a4-95d5-a05373bb3034",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "28cb88d1-1957-4338-8fe7-07baa2126a86"
        },
        "item": {
          "id": "a713ccc9-75fc-4e7a-a29d-7a702b205844",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "016b31a4-efcb-41ad-ad4e-971be3518a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d951d62-5e84-410b-8c89-7d938501bffa",
        "cursor": {
          "ref": "0804ce3a-3984-4255-a681-126ff902e9ee",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c467ceda-85f5-4b9a-925e-bad6c1f360aa"
        },
        "item": {
          "id": "4d951d62-5e84-410b-8c89-7d938501bffa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3589cdc-d742-40e0-81c3-7a1af6205c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17de2a6-0bb8-494a-9852-edaeeb6c9d16",
        "cursor": {
          "ref": "2d01fcd3-0d14-4cdb-a0db-6c15a44ba867",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5d7064d8-9b5e-4360-8eb7-518b9bb3922f"
        },
        "item": {
          "id": "f17de2a6-0bb8-494a-9852-edaeeb6c9d16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1b6e81e3-a1b5-44eb-8c35-eb9cc50d6610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aaa04a-0690-4c4f-b32d-1943549495ee",
        "cursor": {
          "ref": "24f3ffe5-fee0-4cc9-9c9d-a997d498980d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0dbfbb71-e426-469e-aff0-5321623a3b89"
        },
        "item": {
          "id": "10aaa04a-0690-4c4f-b32d-1943549495ee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "962b0566-5445-4107-a6b6-26e1c3a6ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80451705-9d50-4125-b5b8-55abb9138652",
        "cursor": {
          "ref": "097e5a37-a512-474a-b221-99542182eb07",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c8503507-f09f-4298-a708-0e0e6daafefe"
        },
        "item": {
          "id": "80451705-9d50-4125-b5b8-55abb9138652",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3588c89e-5f92-4979-87d3-a2d77325a69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cab847-db82-4d5d-b89a-45ba2133efd7",
        "cursor": {
          "ref": "39b1e264-086e-48b5-988a-51bf002e43aa",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cec4da79-b4e1-47ce-b031-67232157a8bb"
        },
        "item": {
          "id": "f7cab847-db82-4d5d-b89a-45ba2133efd7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9553364f-2a1d-4a78-8441-58e2ff429e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68991e5-9940-489a-8333-49e9a0e2d30a",
        "cursor": {
          "ref": "a8884f15-7b30-411d-821a-d89df13ca455",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1916bf65-4096-4680-a52a-2d9f5107cb44"
        },
        "item": {
          "id": "a68991e5-9940-489a-8333-49e9a0e2d30a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b6e34480-a632-42cf-8874-3b964c5caaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a193b9e8-6779-463c-a94f-9d31914a6549",
        "cursor": {
          "ref": "1f26af04-3365-4426-afdf-28bbf58b22c0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7a3ab497-45ce-421c-9774-ba133d88ab63"
        },
        "item": {
          "id": "a193b9e8-6779-463c-a94f-9d31914a6549",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "39a0c0a2-4108-482b-ba17-a653fbe16965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfac8d9-c393-4577-b311-bb8bcee0c6d3",
        "cursor": {
          "ref": "1d8be253-2a28-4ec9-91aa-27f73c738490",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3a875d92-7e33-4cda-8d1c-21913aa743b9"
        },
        "item": {
          "id": "5dfac8d9-c393-4577-b311-bb8bcee0c6d3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "75a9328e-a26e-4fdd-84b6-6dc0697ef1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079f5126-fdd2-4363-8cd8-d6a75a978814",
        "cursor": {
          "ref": "d0666736-624c-4343-9802-db04858a2a81",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6da05457-4c73-4b3d-b685-8fa128af4178"
        },
        "item": {
          "id": "079f5126-fdd2-4363-8cd8-d6a75a978814",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1229aa9d-f7db-4a4e-8f1e-bb1c62b4d3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de08107-0e99-4a83-9dfa-9edcd46e1414",
        "cursor": {
          "ref": "3738aa49-e4ac-4e9b-9647-de8a6a110798",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "20ad48a6-9825-45bd-9a2f-a97a4c8afb17"
        },
        "item": {
          "id": "4de08107-0e99-4a83-9dfa-9edcd46e1414",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "67583bcb-f071-4522-b810-f0c0ef4c0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1898b091-7f50-4d75-beea-8e81b0a5897c",
        "cursor": {
          "ref": "7d427f00-ad49-4339-baf2-fd74012a2171",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "84e51011-8f10-4570-aa26-feb5e952a19c"
        },
        "item": {
          "id": "1898b091-7f50-4d75-beea-8e81b0a5897c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "90638bf5-31a4-499e-a947-ad33fa3a8a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1711c29d-1d56-4abe-bd8c-db449e7ba867",
        "cursor": {
          "ref": "5ac5d4d8-2738-4144-b757-6ace0d8ecda4",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ffb14520-e20f-49f7-90fe-8efc412cffcd"
        },
        "item": {
          "id": "1711c29d-1d56-4abe-bd8c-db449e7ba867",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "857e7bf8-3544-47e2-9049-4a91421b689c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba8c583-6fe0-43ca-86ec-95d6e730a829",
        "cursor": {
          "ref": "0c2d4f44-deab-4544-a7da-2a4348b2a85a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aea12ee8-17cb-4710-b4a8-d8236ad013dd"
        },
        "item": {
          "id": "1ba8c583-6fe0-43ca-86ec-95d6e730a829",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cef83db6-7239-4a10-a252-6502bca4a7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5092b9f7-e5d8-40f5-a4fc-66a5d1da4340",
        "cursor": {
          "ref": "d06ef8d1-fca4-4f5b-ae3a-794f8c74e0a1",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0e87fd1b-627d-44ae-9596-6fa4c4c34a08"
        },
        "item": {
          "id": "5092b9f7-e5d8-40f5-a4fc-66a5d1da4340",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1ab4b724-aefd-4658-802f-9cdb4e113e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3317c8b6-fe52-4451-b426-309f42a49369",
        "cursor": {
          "ref": "004023a3-b46e-4fcb-8d80-23db7d6347ec",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d140b16c-8ca1-4ea2-ae33-9b79f7e5035d"
        },
        "item": {
          "id": "3317c8b6-fe52-4451-b426-309f42a49369",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f47dace5-6209-41c3-b0bc-08e8404314a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f1b519-eae9-4847-afe6-4e15c946cf55",
        "cursor": {
          "ref": "f3e3dc0c-ad05-4c37-8d25-7f6408febae4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8f1887b2-db9a-40db-ac83-44fddbc3a729"
        },
        "item": {
          "id": "02f1b519-eae9-4847-afe6-4e15c946cf55",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "01dc3e98-edd4-40b7-8f78-c64e406bc9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd084adf-fa07-4bd5-acf6-e128c543ddcb",
        "cursor": {
          "ref": "c16f2bb9-c16f-486c-945b-5bcc5acaebff",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "393b2d7d-c2e9-4c10-9d24-4f7d1a192101"
        },
        "item": {
          "id": "dd084adf-fa07-4bd5-acf6-e128c543ddcb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b81d80be-aebe-4dad-abf0-003b542b1b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b05afa5-cb7b-44a0-a91b-aa11f04e5e7f",
        "cursor": {
          "ref": "2b8f5053-ef9c-489d-b87c-9cbe36f93b07",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f7d69895-8907-4198-b736-59640e7f3492"
        },
        "item": {
          "id": "1b05afa5-cb7b-44a0-a91b-aa11f04e5e7f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8c6e93c7-3889-491b-91c8-13e69c92ca15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258cdbc2-7479-4b9c-8f66-362c996399b9",
        "cursor": {
          "ref": "f47dbbff-d802-4d12-9369-826a9c984b63",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8594dac9-b343-4bd7-a416-a2675328ba5c"
        },
        "item": {
          "id": "258cdbc2-7479-4b9c-8f66-362c996399b9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ae9a4c79-8dbf-447c-8df1-c22bb1cb5b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6455fcfd-6ce2-4561-8762-d4742aac13c4",
        "cursor": {
          "ref": "1094385f-740c-4db6-b928-5009c9c9d8da",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "722ebc3a-1143-407b-934f-b06ffc9bfcf9"
        },
        "item": {
          "id": "6455fcfd-6ce2-4561-8762-d4742aac13c4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e814b259-9335-412f-af93-5602ecd5cc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4dc961-b38f-4335-a356-321cb57e551b",
        "cursor": {
          "ref": "3c4f8a39-b198-4079-9797-00c89f7035e6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "741af716-4b26-4365-8f06-651fc7838f7c"
        },
        "item": {
          "id": "4e4dc961-b38f-4335-a356-321cb57e551b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8e109fd7-3193-493d-8599-c321d161a953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da335fad-d3fc-4155-8fd5-556cd49dc0e4",
        "cursor": {
          "ref": "e48890c9-9542-40b1-9322-67ab76ecc275",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3ba52b7f-a1c8-4b81-80e7-1e20a4c9b5a9"
        },
        "item": {
          "id": "da335fad-d3fc-4155-8fd5-556cd49dc0e4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c592568f-10c2-43f2-ab28-0ee38cc2fd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0f09f6-a0be-488e-8d95-58cb34110bc3",
        "cursor": {
          "ref": "7b2de58e-4471-4d30-ab80-7ced08d7e64c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "34f9e83b-cd6b-4eaa-b406-40d266975bca"
        },
        "item": {
          "id": "ab0f09f6-a0be-488e-8d95-58cb34110bc3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d3c716a1-0171-4ff7-a75a-bde62f4ca786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465ed5f1-3f37-4cb4-9cd3-1b0a21376201",
        "cursor": {
          "ref": "b78b2949-6c82-44be-bb63-4aaef05a8074",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c90a7cba-13eb-4b4e-aa0a-cec1ce58b712"
        },
        "item": {
          "id": "465ed5f1-3f37-4cb4-9cd3-1b0a21376201",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a2a06000-c6a3-453f-94d5-5ee3eb68605a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc6618c-4932-4485-bb5a-910d3c4e46fc",
        "cursor": {
          "ref": "90b7e009-c679-446a-95b8-c08d3681baf4",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a2c4d68d-86ca-4754-87c6-b766322cc929"
        },
        "item": {
          "id": "cdc6618c-4932-4485-bb5a-910d3c4e46fc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "976ad72e-9076-4ad4-9061-6cfb6271e879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419c90ea-ff9b-4a6c-aec8-3f6449ba7a7d",
        "cursor": {
          "ref": "2b30be95-b3fe-43fc-8957-9edd0a333b4e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "035fd321-68ed-4d66-99c2-9e59947fb572"
        },
        "item": {
          "id": "419c90ea-ff9b-4a6c-aec8-3f6449ba7a7d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "28f97a04-f77b-4699-976e-ddc8eb6cf838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8636d7ef-479f-4dae-93c8-d575e06fd384",
        "cursor": {
          "ref": "6d76a9b9-aeae-4f8a-801d-76f26cba6370",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0bb1700c-a0de-4d74-8f8a-b5f005af1597"
        },
        "item": {
          "id": "8636d7ef-479f-4dae-93c8-d575e06fd384",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f5025968-536e-480f-8c0f-7c45d7e3af2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca8b16c-cd23-47a8-8743-d6b6a050a224",
        "cursor": {
          "ref": "3e3442a5-5cff-48fe-92c7-0bca24b6808f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7da55353-946e-45a1-9d95-70e05f818cdf"
        },
        "item": {
          "id": "aca8b16c-cd23-47a8-8743-d6b6a050a224",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "742b3c87-5090-458e-a482-6439b21da7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c7cde8-db05-43e8-9986-e5814d90445e",
        "cursor": {
          "ref": "985feba3-7b09-4b7a-a03d-cb4ebeae07c8",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fe30d31b-8eeb-4b1a-894b-9e4f00770049"
        },
        "item": {
          "id": "c8c7cde8-db05-43e8-9986-e5814d90445e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5ca3eda9-2816-4cba-b1e7-34b84812e3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebecded-20c7-4e93-ace4-9fae0d6089fb",
        "cursor": {
          "ref": "d8abd6fd-05e3-47da-9d09-b3eb5fe8dde5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "acf41844-3fc1-48f6-82a3-c691856f60fa"
        },
        "item": {
          "id": "8ebecded-20c7-4e93-ace4-9fae0d6089fb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6a231c10-c02f-49df-9596-bf065e584f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661cac29-0969-47d3-a679-09beb22310f4",
        "cursor": {
          "ref": "950ce9e8-7dd2-4682-b8ef-2fae5060dd3c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9ecf34e4-268d-473d-a3eb-ae04b6c3af19"
        },
        "item": {
          "id": "661cac29-0969-47d3-a679-09beb22310f4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a08bf4bd-dc38-4e75-95b9-b8c718217f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a5de88-0dfd-4ea9-abd6-8841183739c7",
        "cursor": {
          "ref": "c336a1ba-ae62-422f-9f39-00d868abb7f9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a0e06876-de9b-4845-bc4a-48462066d38a"
        },
        "item": {
          "id": "04a5de88-0dfd-4ea9-abd6-8841183739c7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7450ec2c-0c12-41ce-a301-3dea47310b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecdac61-8190-42b4-8853-ab691d828763",
        "cursor": {
          "ref": "2414cece-e0a2-494d-8fcf-5b3fc30607e1",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b4c152b6-187d-43e6-8954-1ef5f6f3f0a5"
        },
        "item": {
          "id": "5ecdac61-8190-42b4-8853-ab691d828763",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f4c574e7-76e8-49dd-968d-f99f52da0abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2876665-fe25-4f80-b114-56300ac88176",
        "cursor": {
          "ref": "34346e7c-57bc-40b8-a1fd-3a332050e3ee",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b50fe7d0-d413-494a-a633-12f00304b360"
        },
        "item": {
          "id": "c2876665-fe25-4f80-b114-56300ac88176",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cc25db73-b683-4f44-b082-f35929e25740",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebea817-7504-4247-8d7d-eade6fe88e32",
        "cursor": {
          "ref": "b32570b0-02fa-429c-8dd9-02433ce2060d",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8825c82b-8c53-4c02-ace4-4f5e42fb3b75"
        },
        "item": {
          "id": "5ebea817-7504-4247-8d7d-eade6fe88e32",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0cba5dfc-f736-4d12-9d24-61e8195ff0f0",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "07446f82-7358-4ed4-ab1f-7f4862ddc57a",
        "cursor": {
          "ref": "ceb79862-5ecf-4867-b978-cfebab5b50c6",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "60bb4769-be51-4844-9c9b-27d8d6f817d4"
        },
        "item": {
          "id": "07446f82-7358-4ed4-ab1f-7f4862ddc57a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2cb9f28e-b02f-4875-9433-198ef79f12c0",
          "status": "Created",
          "code": 201,
          "responseTime": 191,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d1b99a-1587-4ff6-a2d3-f4535a739adc",
        "cursor": {
          "ref": "7b9f59a0-4e63-49b2-b3ff-cb764dd70729",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "19aa79c7-fee5-4b66-bc73-213a6b8f2bfa"
        },
        "item": {
          "id": "40d1b99a-1587-4ff6-a2d3-f4535a739adc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "50e22258-c41d-4c05-a495-9fda30b37d9a",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74ea3e-fbf6-4fa8-a958-cf871a470797",
        "cursor": {
          "ref": "772bca0e-87aa-4028-86cb-4ba66b507523",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6a898143-eb42-4f15-b58e-cd649ec02a93"
        },
        "item": {
          "id": "bd74ea3e-fbf6-4fa8-a958-cf871a470797",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "99f40256-27c7-4e2d-bf35-09f5eae1e41f",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8b3a72-d27b-48e2-b19a-a083614f34cf",
        "cursor": {
          "ref": "a4105301-497c-4fce-806e-50503c233eaa",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f0bfb85c-1bfa-4b21-8f0d-6c5be3d6a565"
        },
        "item": {
          "id": "ca8b3a72-d27b-48e2-b19a-a083614f34cf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b79703f2-b12b-4367-95d1-1ab65d10b004",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a8c55f-a902-49ef-b86f-97d473e2aa56",
        "cursor": {
          "ref": "0a303803-552f-485d-b0c0-eee34af94c70",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cf6f9f4a-49b7-4bac-86a9-66ed7dfacb28"
        },
        "item": {
          "id": "18a8c55f-a902-49ef-b86f-97d473e2aa56",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4bf24ddf-4616-4643-8fb2-98e04eef8ca8",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1b2135-b99d-479a-b6b8-a50a6df2dfd2",
        "cursor": {
          "ref": "4d94a735-2de9-4ff2-9be6-4fb7c711d216",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7b97589a-86a0-4710-bf72-81f67a5312e5"
        },
        "item": {
          "id": "8e1b2135-b99d-479a-b6b8-a50a6df2dfd2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a776d6af-3bda-454a-a22f-d197598ff214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4809883c-da80-49dd-9825-29038f5035f9",
        "cursor": {
          "ref": "2d95ee0c-ca62-4fdf-bded-91de4d7329e4",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bd6a2b13-d5eb-4f6a-9386-96755746e90e"
        },
        "item": {
          "id": "4809883c-da80-49dd-9825-29038f5035f9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a63fe484-737a-46d1-9aa7-ffbe9f535bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532be794-96fa-4686-944a-246ee4255cd5",
        "cursor": {
          "ref": "9e51cc9b-36a6-458c-9fdb-9f1f2583be58",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7e4859f0-eac0-4d0f-91db-1478555eb698"
        },
        "item": {
          "id": "532be794-96fa-4686-944a-246ee4255cd5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9dbea666-0f05-4800-9223-a85bf8421924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8664d589-4915-435e-8dad-af58932ce494",
        "cursor": {
          "ref": "1585accf-e8cd-4860-8d59-d340da6cda03",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a3c4c5a5-1fbb-4dfa-845b-6c66ff0da4a7"
        },
        "item": {
          "id": "8664d589-4915-435e-8dad-af58932ce494",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "936b9722-5da9-4980-9543-2037c13022d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2c33eb-b4f7-45a4-9bcd-432d6d678433",
        "cursor": {
          "ref": "6c200e2b-c966-4145-b7b8-4c3312f9e38f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "634ad5f8-4860-4297-8f51-56b618786ece"
        },
        "item": {
          "id": "4e2c33eb-b4f7-45a4-9bcd-432d6d678433",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cb1a4012-bc64-43d3-a6df-857addad601c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e842dd-f9f4-4c97-9a91-0aae2b09d1e4",
        "cursor": {
          "ref": "c2e8ff69-b616-45a2-b498-ec5575691615",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f357687c-6122-431d-b572-e67eeb313ac0"
        },
        "item": {
          "id": "22e842dd-f9f4-4c97-9a91-0aae2b09d1e4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "745da72b-6b86-4844-aadb-eb67c8982468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18b76ad-8cd1-4a77-8608-ed90b7beec33",
        "cursor": {
          "ref": "57bc45c2-b0c6-423f-bee8-0c7b90dc0ee1",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5c42677a-e3bf-4be1-a5c9-5f0fb102e75c"
        },
        "item": {
          "id": "e18b76ad-8cd1-4a77-8608-ed90b7beec33",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eda964d8-0b33-4cff-b3a9-c7ade8cab907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e49b6f-ce07-43b1-ba46-f665483eca61",
        "cursor": {
          "ref": "13ff32b5-d025-49cb-a58e-3808eeecbe3a",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "052a61c7-74cf-43bd-a4b1-6bddb0bbd333"
        },
        "item": {
          "id": "65e49b6f-ce07-43b1-ba46-f665483eca61",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b73322a4-f67e-40be-8b38-9be467622218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bc0fc4-dd0a-4e6c-bda9-da1c2dcf1b14",
        "cursor": {
          "ref": "a5e4bbb4-685e-4f0c-b628-b53f3764bab0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "74b8d13b-ee3d-40d2-9434-142e61e28f1f"
        },
        "item": {
          "id": "a6bc0fc4-dd0a-4e6c-bda9-da1c2dcf1b14",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4c10227d-b1ac-4245-8ebd-e34c486ebe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98095bf2-a782-463b-98ab-23cd932afc91",
        "cursor": {
          "ref": "dbcd7aa5-fcf1-44da-9e43-a0ded38df8b2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "12bc9eb9-7efa-48e4-a58d-3cf7d49583f9"
        },
        "item": {
          "id": "98095bf2-a782-463b-98ab-23cd932afc91",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9a94d39c-677c-4437-aebc-791ba031a440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5b191f-d439-4063-bbb0-360822455eb0",
        "cursor": {
          "ref": "3a87f886-5489-452f-a430-c32c13572549",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "79b9cc6d-6c74-4780-b75f-a88a78dc87f3"
        },
        "item": {
          "id": "0c5b191f-d439-4063-bbb0-360822455eb0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c983ca38-8fbf-48c8-867e-ac06faccccab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2a2ffe-8041-4c89-8cae-cfbbd1496e1d",
        "cursor": {
          "ref": "81d408a6-cafc-407f-93d9-9c5998dfbedc",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b1ada222-ab11-42bf-8d13-110a86f3f739"
        },
        "item": {
          "id": "5d2a2ffe-8041-4c89-8cae-cfbbd1496e1d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c3d71da-12c1-4e0e-bf84-d649243651e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987d4deb-944f-4d61-b85c-06e10cc42167",
        "cursor": {
          "ref": "5da28a4d-aeb8-4196-8015-484be9606de2",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4cdf0169-0b1b-4a12-837c-990670d7c349"
        },
        "item": {
          "id": "987d4deb-944f-4d61-b85c-06e10cc42167",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "32660b54-554a-44d1-8187-39ae650b2752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86755d98-e2b8-4685-9221-d416aa06b555",
        "cursor": {
          "ref": "4111376f-9457-4caf-b5c2-ce55d9c79c13",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aaba513a-f667-46f3-ac93-ffcb2d16de20"
        },
        "item": {
          "id": "86755d98-e2b8-4685-9221-d416aa06b555",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39a188ef-ff98-45e0-a634-357735d98e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a933dc-0e27-4d20-8e44-3e50b7c8481b",
        "cursor": {
          "ref": "9cbd5c75-97d0-44d6-b399-f2dd65f1d068",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6b1c1f37-099b-499b-83f2-6030520111f1"
        },
        "item": {
          "id": "88a933dc-0e27-4d20-8e44-3e50b7c8481b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0f3eb8b8-1dd6-4025-913c-41f8e9368fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70403f1b-76dc-4724-af93-3ef4fc0ac6c8",
        "cursor": {
          "ref": "96044c30-1576-4533-95d0-7df42013117c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0251050f-0fa6-4991-a7ee-ea04dfa4bd09"
        },
        "item": {
          "id": "70403f1b-76dc-4724-af93-3ef4fc0ac6c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2d02e1ef-1048-4765-bd48-b4ead44e0b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57897cae-156f-475d-81f4-84edd7ca27e5",
        "cursor": {
          "ref": "56916bec-1551-43e6-bdce-79bc19285041",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3e4dab1e-a188-4bb3-b1c3-6cbc0bba6e7d"
        },
        "item": {
          "id": "57897cae-156f-475d-81f4-84edd7ca27e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8fb37576-d7e5-4867-9c68-87609b699a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a1ab14-2a47-4aa0-869a-7ba6f52b6eac",
        "cursor": {
          "ref": "b79b6842-b9d6-4821-a6d0-c9ec810ec31b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cdb1d8b5-9a32-4920-a069-186692119844"
        },
        "item": {
          "id": "e2a1ab14-2a47-4aa0-869a-7ba6f52b6eac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "672cd96e-5774-4bcd-b0b8-64afe5138d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b344257-c981-4689-84b5-f64f2c1ceb92",
        "cursor": {
          "ref": "6ea63c6f-d7a9-4cf2-8cff-64604c98568c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7fbf823c-dfa5-471d-be9b-f7d0faac12be"
        },
        "item": {
          "id": "5b344257-c981-4689-84b5-f64f2c1ceb92",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8db9ccac-5671-4eea-8c0d-4eced03f2691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534849ff-903a-4001-8466-015415598cab",
        "cursor": {
          "ref": "97a484fc-444a-43d5-a572-e9b0b76fc19e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c4fa04fe-c539-4450-bb38-120e1b8781b2"
        },
        "item": {
          "id": "534849ff-903a-4001-8466-015415598cab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "576d1269-68fd-4865-9b5c-a6199876947c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b096db-f60f-4496-80cf-398ea5766a4f",
        "cursor": {
          "ref": "6ccfc228-1d62-4377-b0a9-06201f101c8d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "91c63730-22dd-4488-b999-2ce1cdf39321"
        },
        "item": {
          "id": "40b096db-f60f-4496-80cf-398ea5766a4f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "780d5f00-050b-49f0-ab33-f5f57e262966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaa5479-1dd8-4f8b-888b-5ddddd636635",
        "cursor": {
          "ref": "adeb32f0-539a-4958-99a2-f96a82053676",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "72fdf05e-87d3-48b3-86dc-e31faf5ee47e"
        },
        "item": {
          "id": "caaa5479-1dd8-4f8b-888b-5ddddd636635",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9a5e39ee-00a8-4385-add7-e2202daf5635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52cde8f-3d76-403f-9829-74cc9443167c",
        "cursor": {
          "ref": "e9ef8e25-c710-46ff-8aba-ec41d26b4e25",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "86c91842-0f9e-458f-88e4-a770d0981b0f"
        },
        "item": {
          "id": "d52cde8f-3d76-403f-9829-74cc9443167c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0a14e7a-3531-4aae-b6e5-030f3e49899f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86c4e1b-8c64-4f1c-8784-fe2c113f2b9b",
        "cursor": {
          "ref": "258d71c6-04dc-4842-bb32-dd26aaa8dbfc",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b6b73851-469a-4235-a4b6-61df10f8cc06"
        },
        "item": {
          "id": "f86c4e1b-8c64-4f1c-8784-fe2c113f2b9b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2ff0c81e-b69b-4fc5-a165-809eeac9364b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765505b0-e14d-452e-b9cd-74dd948a8e59",
        "cursor": {
          "ref": "09f3791a-5861-4d31-ba21-00b4bfd77cc8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "47bd43b7-d47f-4f93-b590-b9be0c8cbf19"
        },
        "item": {
          "id": "765505b0-e14d-452e-b9cd-74dd948a8e59",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8219c7ce-8ac4-4160-bb4a-96326881d1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fb2fe6-5757-4914-99ee-af61375ebdac",
        "cursor": {
          "ref": "ff11cf18-6902-43a0-b69a-0284b73fec10",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1437b11c-63af-4b67-96dd-209c4848bdae"
        },
        "item": {
          "id": "78fb2fe6-5757-4914-99ee-af61375ebdac",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "652d2792-5477-47df-bdb9-d91beb874d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8a507f-2275-4ab4-b979-10a798ae73cb",
        "cursor": {
          "ref": "3b8b5ff0-242d-43a0-8873-8eee75f9e278",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "65868a5a-2e1b-4c25-8389-a8e22a498f06"
        },
        "item": {
          "id": "0a8a507f-2275-4ab4-b979-10a798ae73cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cd47ecb9-cdb3-4f48-8d41-10f2bee8de30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b19ff2-a389-458b-a8f6-80468dcbf9c1",
        "cursor": {
          "ref": "dcb7b63d-76cf-4faa-b296-8eae52de1935",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "93297beb-109b-4c66-a43b-dff5d87c024d"
        },
        "item": {
          "id": "28b19ff2-a389-458b-a8f6-80468dcbf9c1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7a19bfc7-83b6-418f-a945-434bebaf15f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e045b7-3527-4f91-8808-734d8174575c",
        "cursor": {
          "ref": "2c48bad0-347d-4601-a0e2-dab6370b5b98",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8c7059a0-a07a-4e29-9b74-63174c3fed6b"
        },
        "item": {
          "id": "68e045b7-3527-4f91-8808-734d8174575c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7efb2f13-c776-4a4e-a7fb-eca23ebab100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19284a7d-9256-4beb-a06c-583541b5bce6",
        "cursor": {
          "ref": "cc57c360-b792-4805-b86e-07da2ce46fee",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cf48b823-af38-43a0-a7be-74a3b7374855"
        },
        "item": {
          "id": "19284a7d-9256-4beb-a06c-583541b5bce6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "701cc393-e50b-465f-9aee-3e1202627b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c9906-95a9-4152-becb-ade933aec253",
        "cursor": {
          "ref": "75814723-3c82-48e5-8221-ca017c5908b2",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2810e3e4-220c-4c88-813e-62de2f1252c9"
        },
        "item": {
          "id": "1f0c9906-95a9-4152-becb-ade933aec253",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb647ea7-3e15-4569-b4ef-9d553e765ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc6d481-92d3-4165-98ba-f4e3dfa95299",
        "cursor": {
          "ref": "34fccbad-8320-4a9f-86ad-6e13fddbd619",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "40dee1d5-c680-4c96-8213-c9c785310306"
        },
        "item": {
          "id": "0fc6d481-92d3-4165-98ba-f4e3dfa95299",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7824df4d-6971-4b6a-8f5d-eb3c95e39229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cd1707-d87e-416e-9dd7-5f9c436534f6",
        "cursor": {
          "ref": "0c954b17-f7f0-4381-8644-9bbba51ad7d7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "301922d7-caf3-4c92-ab4d-218aeef205d5"
        },
        "item": {
          "id": "e4cd1707-d87e-416e-9dd7-5f9c436534f6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fa3e75a0-566f-422f-9551-2299ee6c9b87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f489e3b-c013-41d2-a4f0-fb574ea73a79",
        "cursor": {
          "ref": "9f361549-0d70-41ab-8d88-c41f9b4d9c5c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4b7d9992-476b-4559-9018-05a9db77492b"
        },
        "item": {
          "id": "0f489e3b-c013-41d2-a4f0-fb574ea73a79",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d3a73b56-481b-4287-84a4-f78f9470bdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86b55ff-c49c-4f70-90aa-973f2ed13b0b",
        "cursor": {
          "ref": "c7454a55-3293-4a85-834e-e505961db9fc",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "69a9accf-39e6-4b5c-979d-a6de98e73ec2"
        },
        "item": {
          "id": "d86b55ff-c49c-4f70-90aa-973f2ed13b0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c6e1ee6d-dc3c-4b7b-809b-65de2b85fa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680b0adb-ad86-4821-9227-5f11738da3b7",
        "cursor": {
          "ref": "8f11a5a7-2671-4fee-acc3-6876b2a1f557",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f3eb3223-697f-449b-bbc8-5165612e6069"
        },
        "item": {
          "id": "680b0adb-ad86-4821-9227-5f11738da3b7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ae843e5f-f844-46df-a85d-e246e1172feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d6a6f9-03cc-4cd3-8008-a0fba847eeab",
        "cursor": {
          "ref": "4fdf8b3a-a1fd-4e89-a7bd-4352c672da53",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee2e7897-cfb6-48cf-9217-046814305eaf"
        },
        "item": {
          "id": "f9d6a6f9-03cc-4cd3-8008-a0fba847eeab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c8e49243-37a7-4ff7-8267-b50257b88b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884bf6af-25e8-45bb-850a-318345c38d1b",
        "cursor": {
          "ref": "3ffd4a59-b529-4ed5-97ac-426b4714a1b9",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "27c68d2f-2d03-44e2-b632-1739ab2d6920"
        },
        "item": {
          "id": "884bf6af-25e8-45bb-850a-318345c38d1b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a1fbe391-e334-4031-a3da-a51a6a00d5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56739f28-8e85-47c5-9620-46751884f7b2",
        "cursor": {
          "ref": "ac256705-3f3b-402f-bd35-a30b4ad6ed23",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8aa5bb2c-2696-4b46-ae75-d84056d253d8"
        },
        "item": {
          "id": "56739f28-8e85-47c5-9620-46751884f7b2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "95b6ce35-9d35-49d6-836e-095769531a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e925a691-1d7c-4f9f-8d65-af876fa09694",
        "cursor": {
          "ref": "8dee5601-4747-49fc-a101-6bc852feb8e1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "003291c1-3693-4f27-adbb-04fc2d7c96d7"
        },
        "item": {
          "id": "e925a691-1d7c-4f9f-8d65-af876fa09694",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b78b43b8-91d8-40bd-b0d6-9f09dba52f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cad4b61-22e1-4665-bbac-4ae0b9307ee6",
        "cursor": {
          "ref": "46acc24f-2f10-48a0-9a9f-f92d197d4c06",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8704c9b7-16d1-468b-8d14-d35b11d62493"
        },
        "item": {
          "id": "2cad4b61-22e1-4665-bbac-4ae0b9307ee6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c39c7a7c-2b5f-4a38-b068-f87cfb41eb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d6f1eb-de9a-44fa-abe2-f23dc62fa997",
        "cursor": {
          "ref": "397814ee-8eed-446b-b291-42bdcccb43e4",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cb9f722b-321d-4136-a2bb-14f4f615c11c"
        },
        "item": {
          "id": "96d6f1eb-de9a-44fa-abe2-f23dc62fa997",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "55782443-1527-4001-bc14-8167ce2ba821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cc8914-b3b3-41de-b6e8-8157fffdc836",
        "cursor": {
          "ref": "d549ec22-355b-480f-9412-d4f4f9f12901",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7d39d9f9-93e9-4dee-9610-bbdd158fd5ed"
        },
        "item": {
          "id": "48cc8914-b3b3-41de-b6e8-8157fffdc836",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "72f6084d-ceef-4e0d-983a-865983fae14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fee641-b586-4635-916d-532ef1501ebf",
        "cursor": {
          "ref": "0422e9dd-2ff3-43d3-bd57-9e77913212e9",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fdf0fa02-ee3f-4dee-bac8-fde21ce84673"
        },
        "item": {
          "id": "85fee641-b586-4635-916d-532ef1501ebf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "04f7c945-8625-4bd3-ba45-837078a45030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4bccc1-7744-42d5-a2f4-3f6e4dbb0d7f",
        "cursor": {
          "ref": "83170711-3487-48b9-933f-2b1be07967ef",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9024ee7a-4602-4e63-94c1-5f758777c924"
        },
        "item": {
          "id": "9c4bccc1-7744-42d5-a2f4-3f6e4dbb0d7f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "de9cfea1-2bcf-4e71-8b91-7a0ddaf710e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a0a750-2059-4cb8-96d3-73ba04700f53",
        "cursor": {
          "ref": "5d153f2b-4af1-412d-bc5a-485f43a869f8",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3ea8b19d-cf96-4458-936e-0cb17131d37e"
        },
        "item": {
          "id": "e9a0a750-2059-4cb8-96d3-73ba04700f53",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f4ab9079-8205-49b2-8b4f-91658e24bd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47036355-a677-4314-832a-1d37f4225153",
        "cursor": {
          "ref": "8a7013dc-8a08-4898-99c8-7ec3bbeb33a0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "543d35b3-a52f-44b1-8f58-8dc89b60d075"
        },
        "item": {
          "id": "47036355-a677-4314-832a-1d37f4225153",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1da71ef6-157d-4310-aa7c-c3bbebda08af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c04390-a69b-4bac-a6d0-a48a37fc1e44",
        "cursor": {
          "ref": "b0793315-f18e-42f7-a956-af8f6ce92d6e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c305587a-9b7c-4676-ba18-bb01ffa3558b"
        },
        "item": {
          "id": "02c04390-a69b-4bac-a6d0-a48a37fc1e44",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7a728292-2b1e-422c-a2d5-58d5e2febbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737d4cb0-ac14-4e52-87e4-bb3618a3d8c6",
        "cursor": {
          "ref": "54bd56b0-503c-4af4-a92e-dbbcd12ac79b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "28650e4b-0f9d-488b-a6ab-2a2baa032cd5"
        },
        "item": {
          "id": "737d4cb0-ac14-4e52-87e4-bb3618a3d8c6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dde6f6a2-9889-4b04-9bfc-3fb6a4404786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27951288-f7d2-41b7-a7a9-a8723645d254",
        "cursor": {
          "ref": "1ae10de9-8e49-4f58-b4db-a9c5651d9e8f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a790961e-1d1c-4c8a-8032-814d972b1380"
        },
        "item": {
          "id": "27951288-f7d2-41b7-a7a9-a8723645d254",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "04728662-2b88-4b6c-97f7-e00a9345ea9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbde0d4-aaa5-426b-86d2-85f39142f29d",
        "cursor": {
          "ref": "b330e96e-cd65-4927-b98f-eb211e7bd330",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cdca07fd-be54-49dd-97c4-aa7d78bed61c"
        },
        "item": {
          "id": "adbde0d4-aaa5-426b-86d2-85f39142f29d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d30de512-a012-4763-b35a-3230e319c9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04737306-f2eb-4931-99cd-92a68805788d",
        "cursor": {
          "ref": "5c85bf03-7d49-4be7-b0fb-61c28d348514",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7c2faeaa-839f-4ec4-9dae-92c5f006f097"
        },
        "item": {
          "id": "04737306-f2eb-4931-99cd-92a68805788d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "416e4f1c-ff58-4d18-89df-b9cd03567e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42d98e4-345d-4766-8bf8-b4d8dc966e0d",
        "cursor": {
          "ref": "d2d6ebe1-cb48-4a17-8c73-2b99fadf8298",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9cc5678a-b185-4736-bca0-252059209768"
        },
        "item": {
          "id": "a42d98e4-345d-4766-8bf8-b4d8dc966e0d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fc68476d-fa36-48d9-b090-13ce67f23a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc4a25e-d6d3-4aae-9a92-18b369029749",
        "cursor": {
          "ref": "ab73bf89-c20d-4b99-b109-5f4fa22b6026",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5acefe05-895c-4038-8a40-ffa4e195a2c5"
        },
        "item": {
          "id": "4fc4a25e-d6d3-4aae-9a92-18b369029749",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cfff2d51-0998-40c4-9301-516098d6384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bbdbae-6dc7-4047-ac37-52763aeef53a",
        "cursor": {
          "ref": "90e32c79-1f45-4e25-9a63-110b59e74e80",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "13336be4-0996-42cf-bfc2-9e7a85f43f47"
        },
        "item": {
          "id": "c0bbdbae-6dc7-4047-ac37-52763aeef53a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "64fb93f2-f3d1-4682-835f-febc5142ab62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e398e5-1c2e-4d2e-80b6-6008e417c2be",
        "cursor": {
          "ref": "a3df417d-769b-4685-a8c6-97f9431aa305",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "471e5ae2-2069-4e09-a2cf-894e684bf035"
        },
        "item": {
          "id": "87e398e5-1c2e-4d2e-80b6-6008e417c2be",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c3337046-b1d8-4236-80a5-62c87e26f1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39feb7cc-5014-47e3-8f35-2fc42986132f",
        "cursor": {
          "ref": "fe8a3fc8-35fe-4082-82d0-724e15b06a00",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5184ee7f-73e1-44d1-9020-9c6908101459"
        },
        "item": {
          "id": "39feb7cc-5014-47e3-8f35-2fc42986132f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "732818ed-2c89-4e6f-b601-82dcbe7154f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1db0d76-d000-4d88-ace0-107a0d8acbfe",
        "cursor": {
          "ref": "1317880a-582f-496f-b440-feeff294fe81",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3a5a8b05-168d-44b4-bfdb-e11c0bec5cd6"
        },
        "item": {
          "id": "a1db0d76-d000-4d88-ace0-107a0d8acbfe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "42c5d01a-da53-415b-8b23-5a80d6958d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d15a77-58cc-409e-99c9-3cad1826f893",
        "cursor": {
          "ref": "6f68fcd3-81f7-4360-b5b8-6595a24b6227",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4e258649-07e6-450e-aeb1-61b3eb761cbd"
        },
        "item": {
          "id": "c7d15a77-58cc-409e-99c9-3cad1826f893",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6c02bd40-9013-4e8e-8e50-ef74d8415ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4962602-d1b6-4ea6-9db1-31331e071ee3",
        "cursor": {
          "ref": "e3d4d87d-15a6-4b4d-839a-1e9e95ce2123",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9550671d-81b8-40d5-8857-b5d230c52758"
        },
        "item": {
          "id": "f4962602-d1b6-4ea6-9db1-31331e071ee3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f5cd118d-a1d3-4b3b-8cf3-650ecb6fd695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fb2591-7501-4dd0-8b28-7483ff10cce9",
        "cursor": {
          "ref": "50a52f38-743b-4abf-b000-e91ed954eee8",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3f8a6315-0986-4589-b316-76e61504253e"
        },
        "item": {
          "id": "49fb2591-7501-4dd0-8b28-7483ff10cce9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f15b6cf1-ab7a-4f44-afd5-20d9d9714454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f86f873-8c32-4e77-9063-c80f93b67e3e",
        "cursor": {
          "ref": "9d1e6493-69aa-40c4-9647-59e3cf93f894",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b5a58f32-a38a-4b42-8736-a49b9e3591d6"
        },
        "item": {
          "id": "8f86f873-8c32-4e77-9063-c80f93b67e3e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "64f0b239-a236-4878-afa0-dcddcc64548a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982dde47-b704-40d0-bb88-5e30eea7f7f3",
        "cursor": {
          "ref": "86a6d881-29ab-4a00-9792-f4b5eb85c77f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "be769f7d-a654-45db-b275-097f79ece4c6"
        },
        "item": {
          "id": "982dde47-b704-40d0-bb88-5e30eea7f7f3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "42476cd9-a597-4d2a-a536-ca2853243b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0b3cd1-6e81-4acf-8bf3-5eb65c90faaa",
        "cursor": {
          "ref": "f05982d9-641d-44f9-a7a3-14d070fd8490",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "69bf29d9-b4c1-46f9-8824-e59e896193b8"
        },
        "item": {
          "id": "4e0b3cd1-6e81-4acf-8bf3-5eb65c90faaa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4ee56012-86f6-46d3-93dc-bd7e27e750ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9215e94b-90ba-498e-bf2f-bdc1e4054eff",
        "cursor": {
          "ref": "d44eba7e-0925-44ec-88ee-5c21e761ad01",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7b9b5b34-7d42-407a-9f46-feb1983a4092"
        },
        "item": {
          "id": "9215e94b-90ba-498e-bf2f-bdc1e4054eff",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1829b725-50f1-43cb-b88c-447fe366f7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6d6ab-4a60-4d4a-a298-e683eb615227",
        "cursor": {
          "ref": "c272e74c-9568-422d-bd2f-27246d9eafb4",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2a0534e7-8b58-4742-b334-28b1c0ff4407"
        },
        "item": {
          "id": "33b6d6ab-4a60-4d4a-a298-e683eb615227",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5db75a91-613b-417d-95c7-e4dfb70e39af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e594a86-6e93-4f7d-ae97-3709b0a7921a",
        "cursor": {
          "ref": "cbd60cb2-00f2-43a5-906b-b1d6a6e91667",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "997eaa38-482b-42eb-aee3-3f268071fe91"
        },
        "item": {
          "id": "5e594a86-6e93-4f7d-ae97-3709b0a7921a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1a8ae828-aede-4c99-8d8d-f06eae86b21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccf0a80-1755-4191-af0a-5ec37839b737",
        "cursor": {
          "ref": "208bc463-7245-4c38-8a14-08cebe9c22dc",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a2ba3bde-15e4-46c2-88b7-bcfdc8679e02"
        },
        "item": {
          "id": "dccf0a80-1755-4191-af0a-5ec37839b737",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4ce257fa-09b1-4b80-98cb-ee3a47ed93af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e7402e-d87e-4774-9d38-475942e74f88",
        "cursor": {
          "ref": "68009048-a9e8-4a58-a3e6-ebd5692917d6",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f824abdb-2da9-4aff-b211-0e58be341a17"
        },
        "item": {
          "id": "96e7402e-d87e-4774-9d38-475942e74f88",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "efb661f5-aacb-4d7f-8b05-efaa924f4cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53940f54-5ae5-4d2e-910d-6042c7ee2e93",
        "cursor": {
          "ref": "3afcc1df-c954-4c9d-9dad-23600b76e178",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "432b069e-1c74-4404-b847-5bbece3ccd7e"
        },
        "item": {
          "id": "53940f54-5ae5-4d2e-910d-6042c7ee2e93",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4a7aab34-59a4-4dfb-96a7-a90d8a032e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3db1565-c0b7-4317-854e-8c2d8910033a",
        "cursor": {
          "ref": "97c5e99b-73a5-42ba-9204-aef8febb6039",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "61280d80-54bd-4a9d-88f6-442356ebef2b"
        },
        "item": {
          "id": "d3db1565-c0b7-4317-854e-8c2d8910033a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc26f2c1-1ee7-4c0b-b34d-bdc0412c5a71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d002abfc-6f61-4356-8186-a32cc04a325f",
        "cursor": {
          "ref": "1dbd7dc7-b13f-4bc4-a426-d7d1ceece350",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d3e673e8-8c06-4d13-be25-1abf8c54e94e"
        },
        "item": {
          "id": "d002abfc-6f61-4356-8186-a32cc04a325f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2d2ebae2-6044-4584-86be-84b6e3149b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df209c06-12f3-4942-98a4-96e1fcff7edf",
        "cursor": {
          "ref": "423183c6-831a-4c0b-ab91-2e547e9dc2e3",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b31ec748-bd32-4b45-a420-7116d11d01c2"
        },
        "item": {
          "id": "df209c06-12f3-4942-98a4-96e1fcff7edf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "57a0fe19-71be-4cb8-9f6f-0dc6b6ad1d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3feaa28-92d0-4ee2-86f8-c3ee7d085d7c",
        "cursor": {
          "ref": "97836074-5dc4-4d1d-b9f1-4f65b1489520",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c77bce3f-133f-4961-bbfb-0ab70105b491"
        },
        "item": {
          "id": "f3feaa28-92d0-4ee2-86f8-c3ee7d085d7c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "12b77797-8b94-48c2-b215-a9a9270a9cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41652fd-70e8-437f-aee2-457630fcf4eb",
        "cursor": {
          "ref": "44d4f1ae-4325-4351-8d9d-6d819ccdf185",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3c4f01d9-c613-49fb-8f1f-fb823ce41ecc"
        },
        "item": {
          "id": "f41652fd-70e8-437f-aee2-457630fcf4eb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "98c99b8f-4bdf-46aa-811a-107d2090ae24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83ccf9b-8f3a-4e47-ab86-7d20728cc2e4",
        "cursor": {
          "ref": "25f54d50-32b7-44db-ad76-962e61fee692",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "552bf75a-1921-40dc-923c-f8651d56b93d"
        },
        "item": {
          "id": "e83ccf9b-8f3a-4e47-ab86-7d20728cc2e4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "98788d5b-a49d-4d7e-8834-cc708aa183a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5b8051-8dc1-4cef-9ce3-abc57e869261",
        "cursor": {
          "ref": "1341bb3c-c8d1-4c4c-b269-2caf09a9196a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cbfb9c0e-0dde-4ae9-b00d-83518042b993"
        },
        "item": {
          "id": "5a5b8051-8dc1-4cef-9ce3-abc57e869261",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b7297770-3443-4899-8b27-cf5c7e943100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddc8bec-e4f4-4b63-8315-69eec1641f59",
        "cursor": {
          "ref": "52595db4-8b12-4353-bded-1c9e263f84a1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "587c329f-ac3e-4638-98ec-5de8b32d630b"
        },
        "item": {
          "id": "fddc8bec-e4f4-4b63-8315-69eec1641f59",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3393a292-1e85-455d-b64c-f1cc1d0d68be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5ad8e2-cbc4-47b3-a5a3-63a7b4b99839",
        "cursor": {
          "ref": "29c510c6-6701-4f00-aac4-66855698297d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "057a8557-3194-474b-81c8-85f2ddff5d6b"
        },
        "item": {
          "id": "bd5ad8e2-cbc4-47b3-a5a3-63a7b4b99839",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab86ad92-a6a6-4327-a276-cd41185659a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acea297e-8742-4c16-9060-d494afee476b",
        "cursor": {
          "ref": "920aa0de-3b17-4cb8-8a83-20fb1a6c5a95",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "097b96cd-8a95-4428-b439-da2499db71bd"
        },
        "item": {
          "id": "acea297e-8742-4c16-9060-d494afee476b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3e33c1e4-9374-422b-85cc-7ab19cb645cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed9377d-f04a-4828-b2a1-f7988099b24e",
        "cursor": {
          "ref": "2a23fa24-60ee-456a-970e-bd37633e0e5c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7086b26d-c10e-4651-875d-851de2dd3835"
        },
        "item": {
          "id": "0ed9377d-f04a-4828-b2a1-f7988099b24e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9c11e51c-80e9-457d-8efc-feb09ccd1bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fe7d94-b0f7-4de1-add0-41e84bab9df3",
        "cursor": {
          "ref": "b1b25665-9fd5-4526-9304-9cfdfe15843b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b55c3801-0c37-47ed-9a56-274615797bb6"
        },
        "item": {
          "id": "16fe7d94-b0f7-4de1-add0-41e84bab9df3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1e1b3e13-e2f9-4faf-bbfa-60df88c5a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1c6032-6b94-4d3b-9d04-e65315d2b8f0",
        "cursor": {
          "ref": "b37d5412-dc50-45fd-9470-db3de20700e1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b4e42398-e710-4b13-8635-c0a34d9fc95c"
        },
        "item": {
          "id": "ea1c6032-6b94-4d3b-9d04-e65315d2b8f0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7a747eda-ff1d-4555-96d7-f26007028e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd0832c-d420-4ee1-bce0-a5249fef8a24",
        "cursor": {
          "ref": "2a2ac54e-12d4-4967-a457-70e3df2fbd5a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7621229e-3657-41de-9cd4-24a8797c0f64"
        },
        "item": {
          "id": "9fd0832c-d420-4ee1-bce0-a5249fef8a24",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c1c9941e-0828-4ba8-b82a-6e1d95959456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a3c37b-1350-4f23-aa8c-86a4db8b0c62",
        "cursor": {
          "ref": "db10cd8f-f623-45f1-ba0b-84c1b1d481de",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "85df9a4f-3c0e-4b39-a14c-105278e1ac1f"
        },
        "item": {
          "id": "78a3c37b-1350-4f23-aa8c-86a4db8b0c62",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ba5151aa-79c4-4e5b-a7e2-388a7050f0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8647f39e-a429-416b-be87-bf207e59a53b",
        "cursor": {
          "ref": "afc209d1-bec2-4bb7-853e-ed9fefc03f8d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dbd52871-e9d2-4923-bae8-9939f23004bd"
        },
        "item": {
          "id": "8647f39e-a429-416b-be87-bf207e59a53b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8adadefa-9c2c-46ed-a529-bd4a4eb62f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7cbf27-cf61-4afd-9b47-2dcc6948a292",
        "cursor": {
          "ref": "298544b6-8da0-4868-9e7b-378d4c57ded1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "efa2bbc9-2773-4756-87be-da1b3e04db2b"
        },
        "item": {
          "id": "bf7cbf27-cf61-4afd-9b47-2dcc6948a292",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "630de9f8-15ea-450f-8be8-a8355df29b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b50d649-520f-4c08-a4b6-a54e2dc91eaf",
        "cursor": {
          "ref": "cc26e0d4-213d-4ca6-b776-f955fc022e8a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2fc1dd9b-61e5-4085-ae24-5b78f1d457c0"
        },
        "item": {
          "id": "9b50d649-520f-4c08-a4b6-a54e2dc91eaf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ff56212d-a1ec-4016-8ffb-a5a0f108aec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa11fda-7edc-4ccf-a8f5-e48649728d96",
        "cursor": {
          "ref": "cabe11d2-8af9-45c1-aacd-5518ffe80d88",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0486bf6f-2952-48cb-80e3-40a72e6870ec"
        },
        "item": {
          "id": "daa11fda-7edc-4ccf-a8f5-e48649728d96",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "95555392-842c-493c-9900-0d7a5a2639af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dd5385-bd08-41e6-9066-52fddad5b781",
        "cursor": {
          "ref": "7a0074f0-7aaf-4729-812e-0a68447e667a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cb0683bf-0c52-4054-99e9-e8a1605daf64"
        },
        "item": {
          "id": "55dd5385-bd08-41e6-9066-52fddad5b781",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "483ee226-97d7-44c6-b246-a4e007d3f427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966fbd23-5e1c-4129-a41f-35cfd76d31d4",
        "cursor": {
          "ref": "5bc7186f-48ad-4e2b-8817-050f8a9b5e3a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "89cb4a1d-3b3e-4023-96aa-f95ca7d65779"
        },
        "item": {
          "id": "966fbd23-5e1c-4129-a41f-35cfd76d31d4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f721c44f-e7da-4c1e-9e2a-62e64de000db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ed8485-3ea6-41e4-b085-918f1e096119",
        "cursor": {
          "ref": "79297ffc-0c8b-4c40-b971-b1a82fc88f3b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b0abf53b-db86-462d-a82b-c33d7f7f85ab"
        },
        "item": {
          "id": "93ed8485-3ea6-41e4-b085-918f1e096119",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "19724ba6-a4ba-4fa7-9933-d1439ebc8307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6fd83c-0174-4b31-9e21-071758f767c6",
        "cursor": {
          "ref": "3f3ebc38-864c-42f7-87cd-de590a14bf87",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "19a4fdae-d682-4c1c-b381-aeeb53382629"
        },
        "item": {
          "id": "9f6fd83c-0174-4b31-9e21-071758f767c6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "531569d7-b340-4bfb-9aba-28f7dc6f7d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b2e8e7-b514-4334-a57f-b83eeefcf8d5",
        "cursor": {
          "ref": "06d3727a-2b56-4a0f-ba3f-fe2f96d51bc0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b4c786cf-761b-48e6-8a1a-6ad1c147f3d0"
        },
        "item": {
          "id": "63b2e8e7-b514-4334-a57f-b83eeefcf8d5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7d0d0b26-338a-470d-ae06-0a77f3245e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215d00f4-c8c4-470d-a8f7-a055188cff9a",
        "cursor": {
          "ref": "b29063e1-b78a-4509-b036-707349f30586",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "39466caf-66b6-47d2-9574-263d8383fef0"
        },
        "item": {
          "id": "215d00f4-c8c4-470d-a8f7-a055188cff9a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d0dae792-22eb-4539-b2f8-b9c6864bbcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca54776-136e-445b-a320-154bee47b46b",
        "cursor": {
          "ref": "3efbf0fc-8a18-41a6-a8dc-6009b087e3b2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a4f0a6f0-5318-4511-a557-0c239f26cb0e"
        },
        "item": {
          "id": "cca54776-136e-445b-a320-154bee47b46b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "167c0faa-f4c5-48f7-815b-03c9f4968a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b655a9ea-8715-4158-9735-156a2d3da8dd",
        "cursor": {
          "ref": "6b16e824-d3f4-459a-880a-00f4506ea9fb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "53adaa14-209b-4ab9-b276-37004f983129"
        },
        "item": {
          "id": "b655a9ea-8715-4158-9735-156a2d3da8dd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d7cbe23f-f3ca-43e4-91a7-499d7a32b509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c79a383-bc03-4f99-a51f-0adbfa05fbb0",
        "cursor": {
          "ref": "61de9e3c-ef08-481a-a845-b7dee2199f2a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bee471b8-7180-4fb0-81cd-3c6888c1ed6e"
        },
        "item": {
          "id": "7c79a383-bc03-4f99-a51f-0adbfa05fbb0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4199283e-5033-4d32-999a-7408608d7a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b7e448-a046-4b61-8b23-dbc8d24d57f5",
        "cursor": {
          "ref": "509de310-c0fd-4550-8bf8-820d131a4e47",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "11f48ca5-5ac2-4586-93e7-155108cabe5f"
        },
        "item": {
          "id": "75b7e448-a046-4b61-8b23-dbc8d24d57f5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b014f458-9bcd-423d-9cc5-91ea9c12f730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2bbfff-81fb-4b24-9b7a-a8ed817eb137",
        "cursor": {
          "ref": "b1167f0b-cedd-43a5-b903-dc709bd21ba7",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "01976593-755c-4220-9bd4-132a44ba13a3"
        },
        "item": {
          "id": "1f2bbfff-81fb-4b24-9b7a-a8ed817eb137",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "904ca105-93d4-45df-859e-27024bf87eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f99c41f-a428-4f21-a769-7d1b2d61dcb8",
        "cursor": {
          "ref": "011b2644-a9f1-40ff-8a1c-b6185679ca9e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3d107b5f-f0fc-4b51-999e-b044d0265883"
        },
        "item": {
          "id": "8f99c41f-a428-4f21-a769-7d1b2d61dcb8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e34f7ae4-1cfd-4126-9971-cf5e19ee7ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ed4e4a-5612-4d76-bce7-96511d1c5938",
        "cursor": {
          "ref": "8b6b9ab5-dbcc-4bfa-9384-44270b357b81",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dd491fb2-2093-4a87-a421-4dc09df42c48"
        },
        "item": {
          "id": "07ed4e4a-5612-4d76-bce7-96511d1c5938",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cc323535-f465-4df4-bb71-943c0f18fff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0256ec-082c-48cb-a56e-25683d689f2f",
        "cursor": {
          "ref": "da8a45ac-b245-43ed-aa49-c689c261507b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3bcf2b8b-bd64-4f84-b860-015172cfaa7d"
        },
        "item": {
          "id": "1d0256ec-082c-48cb-a56e-25683d689f2f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c162b125-09e7-465e-bfd5-34e463bf2b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0485c6cd-fdc2-40d0-a47a-6c721dabaff4",
        "cursor": {
          "ref": "3d304f7e-3fbd-4b09-b363-70bd6cb6ac65",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a7fdc115-055d-45b6-b97a-faec163581a8"
        },
        "item": {
          "id": "0485c6cd-fdc2-40d0-a47a-6c721dabaff4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a6ce9f09-d657-409c-8e90-9842e150b4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fee18d-7c45-42aa-ba57-37ccd8546dc7",
        "cursor": {
          "ref": "d5a3cc3c-51cd-4c4c-9d86-6a9eb8260476",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "485cb633-c481-4a9f-84b7-9f6db0edc052"
        },
        "item": {
          "id": "59fee18d-7c45-42aa-ba57-37ccd8546dc7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "52854b8f-c543-4b33-9201-55d1fc457bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac090a7-1968-4514-88da-34c29976b85e",
        "cursor": {
          "ref": "8381acd8-7d23-4a8e-ad97-c51f5bcea7e5",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9954928c-c076-4f5a-9c8b-20206e5006cb"
        },
        "item": {
          "id": "fac090a7-1968-4514-88da-34c29976b85e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "36647d30-1b39-40d5-ad42-7f6225f745d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea94295-2218-4c07-9ff8-89b862d94b9f",
        "cursor": {
          "ref": "4b6c7470-e803-444b-8a55-3e3501864aee",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d21e338f-2a04-4a79-8339-daa49fa21dd8"
        },
        "item": {
          "id": "fea94295-2218-4c07-9ff8-89b862d94b9f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9e5a89bf-37da-47dd-a3f1-6a13a4af70fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df31662-2ab5-42db-8ce5-da29cc833030",
        "cursor": {
          "ref": "48301804-efe6-438a-9117-cc66aad90af5",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9ae4f845-1c28-4bbb-bcb2-feadd74df9a9"
        },
        "item": {
          "id": "7df31662-2ab5-42db-8ce5-da29cc833030",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "af8a8824-7d13-42b5-ae41-b7d99238ab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f75eec2-2657-40b6-8453-b06d43404036",
        "cursor": {
          "ref": "73e9e774-838a-4d9d-a518-99d9d1083340",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c2c9a8fb-a73e-4fb7-8f38-7ed1dc9bc28f"
        },
        "item": {
          "id": "0f75eec2-2657-40b6-8453-b06d43404036",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a37895a7-19f8-401e-920b-881cb7d870c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3ac0cd-50fb-4697-b5d5-ae247990c054",
        "cursor": {
          "ref": "ab2e6f31-bc90-43a0-aa08-aaf0135fcf2f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1690cb62-8064-48f0-ad3e-f7e8a9352bd9"
        },
        "item": {
          "id": "4e3ac0cd-50fb-4697-b5d5-ae247990c054",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "54dd8810-d0dd-48b2-a4e3-ddfce501ee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302f6283-9d1f-4853-b4d6-9467d0b7f806",
        "cursor": {
          "ref": "618a4d61-4972-4a42-8937-17061fca8833",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d0b812f5-a81d-411c-b3bc-1d344aee7bb6"
        },
        "item": {
          "id": "302f6283-9d1f-4853-b4d6-9467d0b7f806",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fed6a216-a12b-4f5b-bcdd-15f2e3913cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6e5a3f-52b7-452e-a790-b8c71160ece9",
        "cursor": {
          "ref": "30833bae-591e-4dd2-a85d-13955be749a8",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "de17a4e5-7386-47fd-9749-49f8dee511dc"
        },
        "item": {
          "id": "df6e5a3f-52b7-452e-a790-b8c71160ece9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1a3b4cf9-0987-416e-b288-5c36e0a52b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016415fd-b943-4919-967b-6c6029bb9440",
        "cursor": {
          "ref": "1d71457f-3676-4ff2-b779-99c0c91836db",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d78e0841-a9ae-4f5c-a620-4cc021600f09"
        },
        "item": {
          "id": "016415fd-b943-4919-967b-6c6029bb9440",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e1d2c318-0007-481d-b099-bc645fd2286f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b79d38e-8217-4c2d-9b73-60d217e4ddbb",
        "cursor": {
          "ref": "beac6861-5a40-49a7-9524-26817703fb4b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4ddd0580-8251-4ae3-962a-2a3b368fe628"
        },
        "item": {
          "id": "7b79d38e-8217-4c2d-9b73-60d217e4ddbb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8bbda451-72b1-40cb-8200-2d94bece4378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca291f01-c14e-4edc-88c2-85e62d1ebecb",
        "cursor": {
          "ref": "e9622a51-e39b-48e9-af11-3ac9d437115f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "934160d7-5387-4b29-8ed7-4b9671a9c685"
        },
        "item": {
          "id": "ca291f01-c14e-4edc-88c2-85e62d1ebecb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5e60d196-13a0-4956-a590-f4f472506bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66d1092-f397-499e-99b8-cc26dbd9a478",
        "cursor": {
          "ref": "864fe33b-68c7-47b9-8f43-db6b36c29d6a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c3416b8d-1cd2-4f5e-94e9-08291cc56cb2"
        },
        "item": {
          "id": "e66d1092-f397-499e-99b8-cc26dbd9a478",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5e1334a4-57de-4ea6-9127-77a10cc645ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89f54b7-7e19-406b-b76f-9dd14c29c78f",
        "cursor": {
          "ref": "767aeabb-25ca-4873-ac9c-44d737a492a3",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d119d05a-5e37-464a-ae10-e535106fa227"
        },
        "item": {
          "id": "e89f54b7-7e19-406b-b76f-9dd14c29c78f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "00403ff5-7bae-4e68-9cbc-b992758dbc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f94e7c8-74ea-47be-91b0-adade515b34e",
        "cursor": {
          "ref": "5145302b-8609-49db-a176-42aca3a71d04",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "16e6d58c-dabe-4c9a-bb5a-d839ab0200ea"
        },
        "item": {
          "id": "8f94e7c8-74ea-47be-91b0-adade515b34e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "954a7ef7-3e74-422a-883a-a8ad9ce213bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81cf4ef-63b5-442d-a950-783b450239ec",
        "cursor": {
          "ref": "fdce5740-a7c8-4b4b-942f-8fee20791b7d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "169f2930-8d57-4d62-b7c5-e3814a47e341"
        },
        "item": {
          "id": "d81cf4ef-63b5-442d-a950-783b450239ec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7098950c-9c5b-4bd5-907b-be631c2b52a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf1b536-2381-4d5a-8c0d-2805843cd2f9",
        "cursor": {
          "ref": "98f397ee-5ed5-4365-a40b-2c319d4e9e99",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "56b1ff09-f323-4f8d-b15d-6e4115958ca5"
        },
        "item": {
          "id": "faf1b536-2381-4d5a-8c0d-2805843cd2f9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "696d214a-8dc7-4982-b6fb-74185f9e28f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccced13-b965-4657-a9fa-a652f429b06e",
        "cursor": {
          "ref": "7abc6421-bf3a-4c7d-beaf-8b23f9122d1f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f92da874-bf9b-4ff9-a02c-7eb4d15fc42a"
        },
        "item": {
          "id": "1ccced13-b965-4657-a9fa-a652f429b06e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "07b9bad0-342d-470e-8939-778672d3128b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aafcab4-2633-4612-9d79-98061d04869a",
        "cursor": {
          "ref": "b42ad94a-f5e4-46ff-857b-3d13ed8355af",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6ff72cfd-bb42-4cef-9c0e-544733757c1d"
        },
        "item": {
          "id": "4aafcab4-2633-4612-9d79-98061d04869a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fd175547-f788-4ddd-9a2f-2ee4771834e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563a0e7e-f279-44d4-bcd6-06cd8ff1ebfa",
        "cursor": {
          "ref": "d6d85f21-73c7-494c-b32b-54d5cda8f2d1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1d67142b-8892-4512-852b-fb9331fc80ad"
        },
        "item": {
          "id": "563a0e7e-f279-44d4-bcd6-06cd8ff1ebfa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "32424321-8106-4bc8-aaf8-7802ff9ff4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64549c9a-10dd-440b-b104-945f880cbecb",
        "cursor": {
          "ref": "b432bf1d-cb9c-4cc9-b663-b8dd585d9744",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "24339533-106b-409a-98d2-451150551aa5"
        },
        "item": {
          "id": "64549c9a-10dd-440b-b104-945f880cbecb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7b6b17b7-6493-47d5-9d55-e668fcec7806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17774e71-a069-498b-957b-7950e81e5e45",
        "cursor": {
          "ref": "1c716ed4-bbff-47fc-b74b-ea7e6755a537",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4b79c27f-5e4c-465a-bba5-aaf4075c2103"
        },
        "item": {
          "id": "17774e71-a069-498b-957b-7950e81e5e45",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "03f57ab6-79ea-4226-b3f1-0d9699e39f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be26689d-ada1-4d74-910a-e645a90fc846",
        "cursor": {
          "ref": "f32ffe79-5848-4f61-b120-694732485294",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3b76c41d-c0fb-4ed6-8b57-66ee8003337f"
        },
        "item": {
          "id": "be26689d-ada1-4d74-910a-e645a90fc846",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "185cc909-2486-4c89-93e8-bed828813489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea59dc3-ec5c-4457-b17b-f0d29f466e29",
        "cursor": {
          "ref": "ecd6b2e8-ec02-4c7b-9a1f-fc8d4540c5cc",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4cff644c-a719-4f4b-8402-afd853289717"
        },
        "item": {
          "id": "bea59dc3-ec5c-4457-b17b-f0d29f466e29",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "23ae0e6b-9450-42bb-bf00-081673250fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17bab11-77ce-4d28-85ba-35fac755ef52",
        "cursor": {
          "ref": "1cfd4c3f-1e93-4a5d-9ed9-c2320d916d7a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d40c6aac-30c4-471d-9001-7ff891311d6e"
        },
        "item": {
          "id": "f17bab11-77ce-4d28-85ba-35fac755ef52",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e89a2b8c-d07d-44ef-9f5b-4f255160dd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93b0e72-5837-4c39-99d8-5f1a4d64397d",
        "cursor": {
          "ref": "4e845e39-16d9-4e43-829b-a5da92049edb",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b73c5f00-ae3d-465e-a3b2-e372fba80de4"
        },
        "item": {
          "id": "c93b0e72-5837-4c39-99d8-5f1a4d64397d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d822a792-a8ab-43d1-bced-048071c013a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adda1c8c-7ba1-4d11-a0da-8028da0cd86b",
        "cursor": {
          "ref": "64804125-ed0a-4453-b1b9-c7fc14716ce2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f8eaa577-6a79-4594-b25b-89a95ad1ca8a"
        },
        "item": {
          "id": "adda1c8c-7ba1-4d11-a0da-8028da0cd86b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "083b9bf4-64b9-4f0c-ab3c-2f56ee9b3e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adb4251-a568-4212-bb35-a6d3045f9802",
        "cursor": {
          "ref": "cff85962-eee2-453d-8ab4-aa9d9c881857",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "803fd047-4c10-4ec4-a6af-23633c723f8a"
        },
        "item": {
          "id": "9adb4251-a568-4212-bb35-a6d3045f9802",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9577f5ea-692f-46de-8356-93dd47490032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c178029-5ce7-4a94-ab62-b5fd100425c2",
        "cursor": {
          "ref": "4bc92138-abfc-4172-99da-64e1d3c5547a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9148d2ad-693f-46bf-b125-2fc2addeb480"
        },
        "item": {
          "id": "6c178029-5ce7-4a94-ab62-b5fd100425c2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6a04eb17-ecf7-46b2-af90-b912a5508c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fb9a8c-a779-4373-93cc-6925bbdb2294",
        "cursor": {
          "ref": "ea0241de-3631-40b6-b820-0fb1ede00306",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8df1dc82-3121-4586-839e-25d8f6b9ccf7"
        },
        "item": {
          "id": "44fb9a8c-a779-4373-93cc-6925bbdb2294",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cba4fcb7-3aa8-4813-96ca-cc9097202933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ab6018-8946-44e0-8c0b-0c9210fb9c74",
        "cursor": {
          "ref": "d32c6b6c-c8b1-4e86-9e4f-5f3be96e61d7",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bf5d93b3-e161-4292-87f9-4b4ede18b35a"
        },
        "item": {
          "id": "78ab6018-8946-44e0-8c0b-0c9210fb9c74",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2328f156-7df2-48de-ad05-b170e0cbc60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8afe4ed-7caf-4eee-bfac-4261146f3d3b",
        "cursor": {
          "ref": "1a5526b4-2b6f-4441-ae38-c7d519dba4cf",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "596117e2-5e9a-4fab-9e77-ad81d233d028"
        },
        "item": {
          "id": "e8afe4ed-7caf-4eee-bfac-4261146f3d3b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "563617c3-ea7a-468a-b714-7131c2f0fd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247a3412-e299-4a36-ac75-b71f82c56805",
        "cursor": {
          "ref": "5f6ac023-da68-46da-91a9-6caa9188602e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d8b26ff2-5d0a-4b6e-8e50-34e4d518c91c"
        },
        "item": {
          "id": "247a3412-e299-4a36-ac75-b71f82c56805",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6db2cc54-251d-4bdd-a5de-41f5e36a993b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95224a82-f94a-4cd2-9164-f358efbfb497",
        "cursor": {
          "ref": "3f062243-fd68-43b5-96e8-8d4aa41bc95f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "437ef8ea-42b8-4649-9c2d-f9430700f72a"
        },
        "item": {
          "id": "95224a82-f94a-4cd2-9164-f358efbfb497",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8433e5fc-9e12-48a8-8149-4a06989ba0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5fff1a-51bd-402a-846b-f0780bf130a3",
        "cursor": {
          "ref": "83b20c95-29cc-4978-afc0-8cd5bb92ba21",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "944741a1-f788-464f-bda2-514d2b37a934"
        },
        "item": {
          "id": "0b5fff1a-51bd-402a-846b-f0780bf130a3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a0bebdbc-85d6-48ad-8c67-ed4937aaa942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cac601-e7cf-4031-af00-bc123a6c2b68",
        "cursor": {
          "ref": "7b6f38e7-805d-4999-9877-208da2ea6049",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3372eab0-b4b7-4341-b7ee-9b24a47ad8f1"
        },
        "item": {
          "id": "57cac601-e7cf-4031-af00-bc123a6c2b68",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cbb627f8-16d4-4ea6-ab51-3782ce84e197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7e311d-21c2-46c8-8b12-aadabf4de532",
        "cursor": {
          "ref": "1958ffe1-9555-43bb-8137-bb14302ce226",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6ae6f828-4efd-46fe-b686-b21d896a4852"
        },
        "item": {
          "id": "9d7e311d-21c2-46c8-8b12-aadabf4de532",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "90b544f5-9f78-4472-8fb5-d83113d3ab45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143a6a7c-e5e1-48a8-8f4c-fa535623ea57",
        "cursor": {
          "ref": "ba27087a-767f-4c4c-8c5d-f66753ab82f8",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "72fde2b9-6504-49cf-b8fd-1362767de3d6"
        },
        "item": {
          "id": "143a6a7c-e5e1-48a8-8f4c-fa535623ea57",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "da835624-7a0d-4339-ad2c-aeddbe827b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350caf84-b1e3-44d8-8e21-9578f55c2b87",
        "cursor": {
          "ref": "4e7c5825-d931-4898-8984-87a5426f77bd",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e4450e9d-fa23-442c-b3ac-cc8ae366c671"
        },
        "item": {
          "id": "350caf84-b1e3-44d8-8e21-9578f55c2b87",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "67d0a252-6a88-4f5c-81fc-16b00298606b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c76815-3637-41c4-acd1-420a65d7c497",
        "cursor": {
          "ref": "e97cb09e-06a1-44d7-8720-9c37e2442924",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e4a00092-895c-40de-a767-b8b9ca714f67"
        },
        "item": {
          "id": "89c76815-3637-41c4-acd1-420a65d7c497",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0d466eb0-ba9c-4fb4-8212-5bd30d0bad39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546968be-bd3b-431d-8f24-ff17987167c9",
        "cursor": {
          "ref": "2e601288-9793-4363-b737-835a539e18a1",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6595895f-5367-47ff-a53d-d98891e07009"
        },
        "item": {
          "id": "546968be-bd3b-431d-8f24-ff17987167c9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e6b12d32-0fa4-42b0-8eb4-da6f41519a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fef060-883e-4f15-8cea-ef82613e6236",
        "cursor": {
          "ref": "c52587aa-b262-49d8-a13a-a5358ace4ab6",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "80f00aba-864a-436b-87d4-f16b8aca85d6"
        },
        "item": {
          "id": "94fef060-883e-4f15-8cea-ef82613e6236",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e846f732-2a89-4a0f-8ffb-d863215c28f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd320367-591f-461d-9d1b-74f3158a4e02",
        "cursor": {
          "ref": "bc859f7d-4a53-48d1-b3b2-56ac969c863d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d89109f4-7fe8-47cc-9ff0-55fd696afec9"
        },
        "item": {
          "id": "dd320367-591f-461d-9d1b-74f3158a4e02",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e5cb995a-254d-4180-af88-63c4b29b3222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db067db-24e1-4f90-9d25-4389dcf6a788",
        "cursor": {
          "ref": "fa41590e-4226-42d1-9084-4f261bfc8c67",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f01d73fc-7fd3-4bce-bf69-4d262795a746"
        },
        "item": {
          "id": "6db067db-24e1-4f90-9d25-4389dcf6a788",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dd50c118-90a1-412e-833a-c64bee3890d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b5d69b-da35-4fb5-be7d-f2acd871fa9f",
        "cursor": {
          "ref": "9d163728-92bc-4562-ab0f-a03e26bb4b77",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8fefa5bd-e7bc-4e30-aafe-3597693dc384"
        },
        "item": {
          "id": "05b5d69b-da35-4fb5-be7d-f2acd871fa9f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1d353981-08ea-4590-9858-60a768a2ea55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14217a12-e3ed-4c32-bd1b-18032f4146a6",
        "cursor": {
          "ref": "ff8e38a0-c881-471d-97cd-cf1ee7d8a232",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f8ca0320-dcad-48f7-9ec6-20a67c6c2d59"
        },
        "item": {
          "id": "14217a12-e3ed-4c32-bd1b-18032f4146a6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ff7cefbe-20a2-4414-b137-bba6739b52b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8934ca1-a41e-4118-8cc7-14f0d8292ee0",
        "cursor": {
          "ref": "2942370d-7b06-45da-90a0-18a02dec9949",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "913f5ab8-96dd-4ee9-bf65-6d06ecc2ee84"
        },
        "item": {
          "id": "c8934ca1-a41e-4118-8cc7-14f0d8292ee0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1503e2da-1043-4c65-9381-72fc98639f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f0374f-0e8d-436a-a008-0d5b1ccec66f",
        "cursor": {
          "ref": "5a8781a7-9573-4ae2-a5cd-025c80401f41",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "24e41d9c-1c03-407a-8296-d55c5c5e681e"
        },
        "item": {
          "id": "d5f0374f-0e8d-436a-a008-0d5b1ccec66f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "50c53c3b-e2bf-46a1-9860-6efb09e52129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f6d13f-299e-402c-b42b-6d6f78f17763",
        "cursor": {
          "ref": "5a13f6db-22cb-49c8-ba26-3238dc1fc7a4",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "53249869-65e0-4865-8098-47858268c583"
        },
        "item": {
          "id": "c7f6d13f-299e-402c-b42b-6d6f78f17763",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3f6f748b-d4ca-4456-876f-2b0b46142754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d6aef5-62ef-4843-ade2-12cb18fc411e",
        "cursor": {
          "ref": "6e148efc-8c96-4e59-9809-4312706f3a95",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6d5ee480-0e9d-4b81-a679-3668510042a6"
        },
        "item": {
          "id": "d8d6aef5-62ef-4843-ade2-12cb18fc411e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "30fb9ec1-e6bc-4f6f-9951-9fc78e77bbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db49c71-d426-4d9b-9d6f-71b0b936b319",
        "cursor": {
          "ref": "ddcc14e8-c125-4f9e-ac88-149e210b690e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "774762fe-30dd-4cc5-80b8-c3dc3114ad24"
        },
        "item": {
          "id": "8db49c71-d426-4d9b-9d6f-71b0b936b319",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a1b22969-3f65-4e50-a94d-7b43fec4d3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08157bc-2321-448e-982a-f802c9bab5e2",
        "cursor": {
          "ref": "6473eafa-c3eb-43dd-aca9-768db2485cc6",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "02965038-242b-4964-b286-986a9a58dd88"
        },
        "item": {
          "id": "a08157bc-2321-448e-982a-f802c9bab5e2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b376dad3-921f-4008-8758-bac1079a7296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178401c7-cbf5-4567-a19d-440035c921f1",
        "cursor": {
          "ref": "8276fb4b-7a9d-4c19-bc0a-e1907da33a98",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "55fd42fc-2b81-48eb-9773-185b890d2b9a"
        },
        "item": {
          "id": "178401c7-cbf5-4567-a19d-440035c921f1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "db684dbb-6e40-48bd-8e6d-65519d0469c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0782ac9-7c21-415c-a8d6-bebf044825e8",
        "cursor": {
          "ref": "1a9a8de7-2dd9-41fe-83f2-85b6cbe3409b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bcbc8b8e-bd59-42c1-b328-a4b01921f390"
        },
        "item": {
          "id": "d0782ac9-7c21-415c-a8d6-bebf044825e8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bbbe7cb5-6825-4e25-8e41-c6e1aca315e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084a3d13-0fff-41ab-82d5-b6dd1dc6d78b",
        "cursor": {
          "ref": "4ffdae2b-1657-47ed-97e4-561706d5d0c4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b135f24a-d698-4eda-ba64-7bc9291f829c"
        },
        "item": {
          "id": "084a3d13-0fff-41ab-82d5-b6dd1dc6d78b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "940c4cd3-ca37-4b6c-983b-7a35809f5849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ff2298-4b68-468d-9e02-6b317af6029a",
        "cursor": {
          "ref": "d05f6671-de80-4060-b26c-9b1850201e56",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "88c67519-9276-4646-ac6d-6c5cfa807b88"
        },
        "item": {
          "id": "68ff2298-4b68-468d-9e02-6b317af6029a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3a8a0a53-7b10-424f-bcb3-1f218681fa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28528ebb-d591-4990-a837-a893135a5f3e",
        "cursor": {
          "ref": "ff0ce5cc-1f93-4859-bba1-ecfe461a5e04",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9b099af4-1db8-4965-8593-d2196535ef4f"
        },
        "item": {
          "id": "28528ebb-d591-4990-a837-a893135a5f3e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0f5a33b9-9e03-4d31-b587-e18f5a2192db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e05608f-2878-4e76-ae62-4d3d75473d2e",
        "cursor": {
          "ref": "c1b727b3-744f-4c22-bc14-91b3dd55a7c6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c7077f03-c9d6-4431-a064-a570f86d819a"
        },
        "item": {
          "id": "2e05608f-2878-4e76-ae62-4d3d75473d2e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "62b33d45-7b38-400c-90a1-a0446999dd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356271fe-9308-42f0-9061-211dcea775b4",
        "cursor": {
          "ref": "de4e2507-0e8f-4f6a-9357-557036f94791",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2d925fe5-50b1-4afa-8a21-755c97c15f35"
        },
        "item": {
          "id": "356271fe-9308-42f0-9061-211dcea775b4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8a696304-ab39-48b6-b22a-1941e0d6c7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a964272-d1bc-4836-9a34-829d996195cf",
        "cursor": {
          "ref": "79cea1aa-4b61-4fbf-b62d-435801979ce3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bb0a47b9-6031-4602-9bcb-16fff8e1aaef"
        },
        "item": {
          "id": "5a964272-d1bc-4836-9a34-829d996195cf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "db403c30-d5c9-47b7-9f2d-1f08c6111e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0547bb9-e28d-4134-91c2-58c48561f985",
        "cursor": {
          "ref": "b4b753cb-8e97-407e-8fd5-79486e798e2a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "de0e8441-9398-440a-8c82-93439c388c0e"
        },
        "item": {
          "id": "a0547bb9-e28d-4134-91c2-58c48561f985",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2f0390f9-c3e3-4fe1-b61d-764d27f9c448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981e9d52-703e-4513-b8c6-939cb3c5be73",
        "cursor": {
          "ref": "09de08fe-aa81-43d0-9d27-9321adfd1bdd",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d6d2dc7f-8034-4a01-9622-f1d11c7714a2"
        },
        "item": {
          "id": "981e9d52-703e-4513-b8c6-939cb3c5be73",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d2fa8671-eb1a-4885-8113-a2ec05b5cb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6be2005-7d43-453c-a832-757229cfa730",
        "cursor": {
          "ref": "a93247e8-0249-4ada-a017-d9233bff643b",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "79a79cb1-bc4e-4427-9a91-0ebf3d24c155"
        },
        "item": {
          "id": "f6be2005-7d43-453c-a832-757229cfa730",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9356d963-92dc-4cfb-aa06-84216f5773c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a8df9c-f8f3-46ac-b705-3a21839f85c6",
        "cursor": {
          "ref": "ffb1e118-a11a-4092-91a7-9fc4f3cf8e8c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a96b171c-4324-4607-b469-4ee21e3ec529"
        },
        "item": {
          "id": "c3a8df9c-f8f3-46ac-b705-3a21839f85c6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c7bd35b6-1dee-4fbf-8f9f-8d4639e6e1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775a3ab4-ba4f-4009-83d1-07fd4bd527e1",
        "cursor": {
          "ref": "1f02642d-f23c-4a9a-b368-973cb7f65bb5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1cc38a00-fc51-4cb3-a0b4-b020a2cc5330"
        },
        "item": {
          "id": "775a3ab4-ba4f-4009-83d1-07fd4bd527e1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2ac3d4af-52bb-4fc4-bd20-492823f6f3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de6440b-21dc-46a6-b5ed-b41d9e28bcca",
        "cursor": {
          "ref": "fe3e52e7-02c2-4611-ab05-10a1d30d9e60",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "de04d356-ce56-4632-89c7-261d80d8562f"
        },
        "item": {
          "id": "4de6440b-21dc-46a6-b5ed-b41d9e28bcca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ee6a15b9-945b-4ed2-a007-4c351ffd151f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0090ed60-49b0-423c-a43a-ee83672393e5",
        "cursor": {
          "ref": "61630c38-4157-4e47-ab15-b2be342700e2",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3f6cbcdb-3b33-4124-bf65-d11fbf4f3588"
        },
        "item": {
          "id": "0090ed60-49b0-423c-a43a-ee83672393e5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a060ca9e-d7fd-44eb-b236-27fea7a30bf3",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf116dd-4b32-41f8-9e90-99a77581c402",
        "cursor": {
          "ref": "7025d78e-2fbe-406a-a446-5fc89c3df6d5",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "de77ee6e-1e3e-4853-b658-83fe49d88f06"
        },
        "item": {
          "id": "6cf116dd-4b32-41f8-9e90-99a77581c402",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4dcd8a2e-65cc-47f3-a2c0-d9df74a563a7",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4a3242-190d-4916-828a-db3aa8bc502e",
        "cursor": {
          "ref": "eb083d2a-1c10-4947-9b30-9e5d51b63aa2",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "dc4c003f-fca0-4cb4-a633-d674056fe542"
        },
        "item": {
          "id": "7a4a3242-190d-4916-828a-db3aa8bc502e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "08f67ad4-9f36-45ae-b799-c8576c79bc2c",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c13287-b12b-4007-8c04-f91a812d2153",
        "cursor": {
          "ref": "3229aaab-c120-45ae-850a-af734d5848c6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ccbff2e7-7eee-4327-9588-709790d3927f"
        },
        "item": {
          "id": "d8c13287-b12b-4007-8c04-f91a812d2153",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b660e02a-296d-4733-88f8-69434a381eb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c13287-b12b-4007-8c04-f91a812d2153",
        "cursor": {
          "ref": "3229aaab-c120-45ae-850a-af734d5848c6",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ccbff2e7-7eee-4327-9588-709790d3927f"
        },
        "item": {
          "id": "d8c13287-b12b-4007-8c04-f91a812d2153",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b660e02a-296d-4733-88f8-69434a381eb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af5df76-fc4c-4f73-8bde-31059d356897",
        "cursor": {
          "ref": "9fc95b7d-8e5c-490b-a2f3-1eef4add843b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "27e80721-f7b4-49b3-b92b-d8377bfd415d"
        },
        "item": {
          "id": "8af5df76-fc4c-4f73-8bde-31059d356897",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "756dc57a-732e-4eeb-9fad-ab9f1d17bffe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e617ee-86c0-42f4-b55a-21c98c6b0101",
        "cursor": {
          "ref": "8c96f870-76eb-4afd-a3b4-851d08114044",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "882dd4fa-c0b3-4b90-babf-13c630973f6e"
        },
        "item": {
          "id": "83e617ee-86c0-42f4-b55a-21c98c6b0101",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8c5a5ec7-a323-4429-8c31-a61fbf5f59ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}