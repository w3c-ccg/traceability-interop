{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2015dd61-7df5-4e82-8bed-217179874b5b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a585a8ad-1063-4e24-9cfc-cc2e91222a0c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66bf40b0-a321-4df5-bd8a-1da59c527a68",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "88823c7b-0173-44fd-9c64-2c88049893c0"
                }
              }
            ]
          },
          {
            "id": "4fc5f007-9ef6-40a2-90fc-2ab24bd35ec8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da89431b-0a85-4233-9a0a-7daf7d6e8672",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f51db23a-d497-4ca0-983b-dd79397b6aa8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fbe1791d-d1ad-4750-a374-fe5441d5378d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a9c898a4-8061-4e3e-9d42-107e59ab741d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b464ce61-2a37-48cf-8032-98aa40b936e2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a144349-cd00-4e6c-95ba-f525ac08c3f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96eadbdc-97ef-49a1-8d50-dd5e95de602d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2f4357a-2bbd-4b00-80dd-8573221b1f1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fffab583-9324-481a-9163-b9047759322b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e4eb7c6-5c1a-410f-8d43-9234eb7af604",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fba3c58-033b-42f4-856f-55985a311626"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "535233c0-b607-4a28-84e9-9ab4cd70d5d8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1fe2a9bc-2d21-4f0a-b9ce-b7cdbad67948"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6f6507c-9cea-4924-8b7e-18cfe316423b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f785116-3b77-4bc8-bd95-4a377026dff5"
            }
          }
        ]
      },
      {
        "id": "11fff476-3ebc-479e-bc5b-1bd6fb5f42c8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1494ddfd-f0c0-4040-b488-a5dce8466c2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2424c8a9-ac04-4c07-929b-c1e622e5ef98",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "abc3e21f-2e1f-49ed-beb9-ac282e643f50",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44535505-41d2-4d15-bf03-379838762bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14643d14-4faa-4387-ae3a-722d7a41136e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303322d3-e007-47d3-adda-d41899a3a47a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f09dd4-734c-4b22-97ef-a4ec4831cefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1bb3157-8c87-4f32-acb2-07d66bbfc8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eb61a4-4e1f-48c5-a078-db550cf41f9e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3190939-7ce8-4855-8528-58bb3cf230ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23a56cb8-a736-40de-a333-db3e7c53e928"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b235eb2-8612-4043-96b5-8d01b0a9b61c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e006e63-2832-4adb-8785-85eccb55658b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c97333-0859-48ce-8f99-48136aac5c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "911eaa26-e069-460b-bd3a-2459ccae29ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa2a30b-e918-4e4d-8eff-77eca1284664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c69c9c2-bb1f-4684-ba58-93804b3eacc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135d3101-3df3-45d2-8f86-8e3eae28f5c2",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef81b97-ebf3-463f-9a7d-30b7f32b429d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed1e4ea3-faee-4fbf-b190-51c3686c0f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1449b6ba-d1b4-445e-b61d-e59475b20c79",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "08d81d1c-c339-4b82-97a4-23691ffb8fea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4dc7651a-a13d-49ed-a0d2-f35e495a0122",
            "name": "Positive Testing",
            "item": [
              {
                "id": "26ffe577-f184-4f09-b861-3c27b2491504",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c009f18-b166-4a3b-a085-9be6087498c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "aa91034e-e56b-4e2c-9504-f96f0dcd2467"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4854913c-2367-4ae1-8c88-45507463ae4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "283fcb3f-0e4b-430e-b51b-e30202bdd8bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19f9b72a-f8ca-43fd-9adb-457a9ea4729b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59ed53d7-b433-4930-9306-7e999b52b7fd"
            }
          }
        ]
      },
      {
        "id": "c92099f7-c067-4406-93d0-73eabc9e2e8b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "613e796d-adf0-45ee-aa95-57c4d156d04c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7862f441-cbdf-41f7-bda4-5789fda0c054",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "49f3dacd-b813-4476-8e93-07fe83a61fa6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06473a1f-2199-46f2-a026-7fdffe75feb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e56dc4f-99ac-493e-aad6-f2d9d3ec3c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac306a-c989-4d00-89bb-df2de04c644a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca8a1fa3-a077-49be-b73b-14b2406ed0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d803027d-0b12-4f70-8852-2c4ec56be96b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cab5fb-ae3c-4052-a2b2-3f1f1519a691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386df91c-c15d-4124-95a1-2eba4864e167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6be9e0-edac-4cb3-9341-928d9962ae48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f643a200-b0c6-410d-8673-c9a394e597f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772515bc-91ab-46f7-8110-2086742b698d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bf402c-e939-42c7-8c0e-7f1ecd9c2e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5945a6-0b8f-422e-bdae-5c9bc1eebda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b921cb-4990-4cd1-9118-6e46c54a891f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0345a141-997a-474c-a3b4-76d46ba06094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6dc2d5-0054-4d56-a127-7dfd1dac44e2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441f5f41-823a-4fc0-abdf-bd4194128a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b5a8c0-6298-43f1-8f76-fbb080ae85ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a319cf8-dc22-49c0-97ee-b7c7d7345b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aa0e18b-ccb7-48b1-a6a5-eb6016a0a373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fd8bf8-99d9-46c2-937b-1f2018145de3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02ebfae-b41b-4502-9af9-cf0507ab738b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6eb1df-d4b6-403f-ae08-d8b74beae550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d42412-e32f-4020-ac97-804712a4e285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee586824-1e9e-42ae-afa6-c803bfb24fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403bb8b2-4aa6-49d8-9e07-7588bbb37207",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f379826-0f7e-468e-a747-0eca5454b660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346326ec-7715-468e-8e72-98906ca46cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ee14aa-4859-430e-bef2-4cbe5dff0c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adedbfb2-1bd4-4105-895c-4bf854f0b0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e872476-0ff1-44bb-b12c-7a620a2a4252",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f64f180-9091-4619-a0db-9ea281cec14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a76956-4ed8-4c92-8e63-0bbb0eec7f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604e8e4c-06e1-4860-857f-431871d72ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9d05a48-f9b1-46ad-b1e7-2a963a0baafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8cd2d8-739a-4b1e-8562-341275f836ea",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb34491-f7ef-4bbe-ac3f-92b4c8eb0745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c7f2dd-54e8-48dd-97b3-9eaa244967ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6340609b-9322-451f-b316-94d6acf7a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c380464e-a651-4071-9514-02f6ec7cd2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed260b05-1770-499c-a724-c3ef33443a37",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47782ea6-4c35-4802-9c91-1eddee7b3974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc9b923-48f0-4317-a8b8-a8f2267e0624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8974228-ef23-46d8-9c54-4742c48ebcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c525ef78-d56d-4b73-bd04-6b686057c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cde1f05-5125-4eae-a951-45a63bd6fb53",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211914b8-229d-42bd-a068-ef8caba9730c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3535c6-724c-47fd-a9f1-323f4300b77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c2e557-25e0-4bb1-a5cc-89359cc293d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f080d99-6913-4c5d-ac49-e8d62c01c313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53608262-af91-49f5-90c4-d54541a0c6ba",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69825fee-fcb7-4450-8b7b-af3765ab05fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8a0e53-925f-4c22-b468-3643d03eb1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff2e781-d5c4-4b38-b940-601a9a6cb6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7632659-e7c7-4298-b050-4b0b0f0d23c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe45bb7-5d00-491b-8211-61bf09767b87",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6754d6a-3aa7-40c9-b22d-ac431aa0e673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d250f0-a82d-43db-bd55-479cf7a4b9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315d1bd5-d80e-49d6-bdda-084669742dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f8cdac6-b83f-4077-a169-abb859aaf7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d3ba35-4912-4fee-9d56-f9941aaab65f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965149dd-509f-41e7-882b-82b9f4dddfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf2a3d8-02a5-4865-b57d-64ffb9eb51b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c350f7c-5776-4b05-a151-aaddc4bfe00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e61adb02-f9d6-4776-8b8e-7df171706365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3c4b37-481d-4613-8423-3fbb2730dc62",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a62f34f-22f4-4fc0-94a2-5933fa2de4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2012bbff-e18b-4d07-8956-e929ec5ecdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9d78ad-756e-4e6f-8f88-a437b084d002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c5f3a82-fb4f-4fc9-b7d4-8b689e0a9467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b7757d-603f-453b-b801-972f4b1df8ed",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef285702-8833-4ad6-9830-0965f688450f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40fb363-bd7c-4e4b-857f-892d0cced00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f1370e-0506-4f7a-bf65-0bc252caa4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a34e3b75-8eac-4243-b3e3-8e104b0c9746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eabc49a-e426-4f7d-acf9-0cb952183d69",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d69841-24ba-412c-b0eb-740a1de614ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c55cd1b-2990-4972-80d4-22c890159a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7a4662-1e72-4a48-ba04-29307edf1e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24c6caac-0175-4fcb-aa4c-f53e0e26c868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d8f071-3a74-4a09-bd5f-e590506d2c4a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fb1d30-e119-4238-81b1-365b20dc1b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa11a8f-8b9b-46f4-888d-0e3aa1a0a8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c03fcb-35c5-4134-8fb3-d8c539324890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3661fde7-e593-4007-90da-f45e9469e65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fa3a87-fee3-4f9b-b8d1-d35db9eb5d7e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d7a70c-519a-4e58-8732-5274441c30f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740bed8e-e708-4dd2-aaa2-269858496c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b43b702-04fe-4cc6-8d22-b5701afe1488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aafade29-e006-4fb8-8781-45c713df7028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3c85fc-c898-4014-b98c-2e7cd97c9777",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d1c556-a976-4935-88ee-2f435ed586fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c38be84-9842-4dbf-9572-c3d2ec29f817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86a220c-a100-4e82-8acf-8637b8afd23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eaafda0-e593-45fb-bc0f-70cd863436a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9848b29f-b6fe-44f4-8f1d-bbeddee66e18",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c84d9ce-a245-4df6-8ca4-8d4f7c93d5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9142bd7-6016-4d10-a5bd-83be06c9b651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c5f45d-a8d0-44b5-850b-de84a8e87140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf2420e-a38b-4064-821a-ebb75c2318ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b294e821-44ab-497e-961b-d99545af12a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54de4993-706e-4e74-bd7b-cf31f695649f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564a5c9b-2923-4604-a611-1de1e46135e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fd6187-d393-4593-90d0-406741ac81a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ae0012-0715-4978-8a9f-525bcada5c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dec2c8f-a1c4-4c12-9529-51ec632f7646",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde30660-3cdf-4e8d-a8ca-792a665aa0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb62aa8e-68cd-4158-befc-bd1da8dc3fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daf093f-ab35-4dcc-b8a7-4775e0b2fcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2860a804-2efa-42ce-b6bd-092682ac232a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d5e69a-3dea-44e4-a26c-0a9a3e3c5bd9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613f1ab3-25ed-46f8-89cd-51fe275e3f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7ec3dc-db71-4398-89c4-d118f4cf351b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8760f8ea-a690-4950-92a5-4c5a17ab8e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20094fce-690c-417e-9c44-78066ef8b9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862fc733-2cd1-4de4-a8a0-3e2dea9d129c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9560306f-55d0-46e8-a534-03d754345621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdf0bbf-9789-4326-9fd6-38bbcaa20687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a802b46-8c0f-44d0-807f-afa3e950a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd38b88-55f7-4581-82fa-5b570cef8fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4427e91d-d0be-4dda-adfe-2c4147bcbd21",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caedb86-5380-421d-9dc1-3d062627d197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8916926-ce13-4f4a-a4ce-7d072e62cf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1391c4e-7c43-4a17-a37f-5a448943099b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e69a01e-29a2-416e-9698-9490ddde9733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a8c70-2e49-4b30-9631-658583dbda77",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1122420e-6344-45bf-bf30-748aa8f39b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ebf197-0ea0-40e5-9f83-0d5550a0cc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae2dfe7-f6c1-4e29-a35b-0a9147e70b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04101a60-9916-41b9-be21-b563aadb8912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a823d25-d4e2-4831-af92-a756c09376ba",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c1f4fb-da94-4863-94de-8f89609f24d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b206b6-63e6-4825-8a35-a1a08d00dbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e254393a-535c-40f2-82f9-81edbe8bb480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b9734c-cea9-4d20-ad6f-20f0f27315f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e948e33e-375b-4369-bac4-471da36d42f8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ac657c-1b6c-4054-b430-13dae9e83b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23162c5-5333-46cf-bd17-d3f95ba4f15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f4ea8a-4ecc-435c-98cd-1560274d5560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be54412f-1e82-41f6-a5b1-8d792afbb322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ca8f98-1f7c-4576-a876-88e83995f3d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56144f7-6521-42f1-86ad-f764e5811b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ae6e3b-6ff6-478c-8bdc-7449ea807b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8719391b-322d-4ca3-addb-caaf5ca9c643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71ad7ea8-d1d8-4ede-9081-c3604b777743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab4aa26-9c6e-436e-b314-938643e37357",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68c057f-8e3e-4911-8186-42229cfaaa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88c7b95-b9c8-43e2-b089-8928241771fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2415f1d7-4e97-42e8-9d95-404e61c043b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f748580b-ea63-45b8-b3e2-f0b19f64ae66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6f23e4-a42f-47f8-a6cd-b99469996969",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632df915-02c8-4601-acd1-5b6ad9d4c9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b4b800-55b8-4089-afbe-75baca5d159b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f44eb31-512f-4fbe-a513-a071cf7f943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0fa8c1-1f1a-4d51-8a0a-7ec6b3605dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1f173a-10bf-4ecf-bf48-51a75dfc422a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe06d9c-84d1-42de-b475-4f0cfa45a54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194503d1-16fc-454f-9c7f-0cfcccca4f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc325967-b2c5-46cf-b92c-b5f75e6ae272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5272ff42-70ff-4523-95f1-62367f8c495c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0b3fc9-3eab-445e-b611-3fe2897675b6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eaf9cc-7c44-4457-b946-3d08fdaded98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf66283c-6e81-4c18-bdf3-b26457a2de16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5258c3-bbda-4e2f-bbcd-48bb76c8c2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2df73061-fdaa-40c3-bdd0-a36adb9efc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36fbd7d-55f7-41dc-acb9-f5e9613da426",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb94f6c-0c47-41b3-a75c-ed67cfd013ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0e55b6-646a-4078-a140-9ea73d41b7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3e8fc3-ede0-4ccb-861a-aca255f720a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "134e0838-8645-4120-a822-5c990c48461c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05340b46-f84e-4832-93b9-2c0c6080cd52",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ca3942-98c6-4126-a870-edca5c53f02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6ca02e-69a9-4c6f-ae18-eca238a34cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791ad3a0-f672-46ee-b2bb-42ebc1a92546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2e1410-6d3f-4bd8-b5dc-f41db50ebb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b52f126-179d-4b2c-ad00-bd0a1bbbd308",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5139d6b-5dff-4547-86ba-298f2b5a1930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28a6d777-246c-4e2b-9ca4-d1135be224d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1df01c2-1b6a-44a1-8cd5-b625e3dc88fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ad1745-2136-44fb-aa4d-b339598edcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d428ae8-912d-4b52-af29-57e0d2cfe7ff",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91fc578-8027-4b0e-af49-cfdfea671154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd439504-d6db-483f-815f-6a4e67e92e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b242e40-e463-4fa9-b25c-80b900c989f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecaf8d71-9052-4d0e-9918-81338740599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b379aa5-3879-45e9-9566-8de5d3f672b4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8b6564-18fa-4e95-ba4b-54a4d966936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5b7781-ee59-4208-a869-6cde3704eb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd8454-9755-4886-be5c-538516d1afa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0732e17-a2f5-4d94-a6a5-323fb37a4d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ceae0d-e94d-46c1-a1d9-fa340aef4b15",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1275f3dd-f541-4985-a892-4f23ea32495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d3b43f-6d43-4f75-ae9d-0985fb8f085f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87918bdd-7d91-41bc-aa27-3006f2f79fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36b183f4-ed74-4370-b7b8-aab0d9f7b5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a30d32-c7a8-4f31-bd2f-712aef6b2348",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7da509-47c2-46ee-952d-ab3ea4c79169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99329da8-45df-4fe4-8c7d-5504591961f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00321707-f704-4b07-92a6-f2030c84e659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "095849bf-dec5-4b52-b8af-638af71ed276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee28935c-e3d5-41b5-b89f-37305be77de2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94669cd1-0b9f-42ef-8b74-e48fb57096ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a493466-2182-4e03-89ad-742fe9c9cf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f99f29-f977-44b7-aaa0-d9a20a0bd60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e329ec59-f916-4737-8c30-22155f522bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87012d8-e044-4db5-9969-2fbe46e4b1b7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2d5c42-40e6-4f65-a897-9c52b701d59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f96401-a361-400e-87de-f6a1bba73180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2626fc12-595c-4f81-9c40-7aaac74dc51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7f161a-bac6-4197-94f5-5eea7b42de07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf12cb0c-d1c8-44e3-b210-aa018e51726f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfea4a83-004b-45c5-9d9d-e8fdfd66c66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a278aee-ca2c-4c16-9798-61a603026244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c04100d-63bf-4d03-af0f-6fba6d08380d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c6250f-9df7-4d23-815b-a1681fb7f999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28db31b7-b2ba-4ffa-aea0-9d5487664bf8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c859193-5782-4af2-9193-94f78ee8d4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6374673b-70ac-4b10-8702-b29fd3f4e02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3f1ddc-6f23-465a-a0c4-26e879f1d9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae08a801-30f9-429a-9af1-4568c6afa0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e138f15a-6a65-4999-9cb5-0d4646fef02f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55134f89-0ca3-4ec0-8639-c9887cd694ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e1afde-7d70-4331-b31f-44dbaabd3064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f40cef4-d1e3-42eb-9df6-b8c53587b305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a29c8b3-4440-4220-a236-90b33c278f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fd5635-5d23-4327-a5e6-c9f8c2ea30f9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77545e3-74f4-4ac7-b776-8ecf74a1350e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7ddde2-7a5f-40ef-8b24-bac8381420ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9c32d0-d3f2-46d4-b371-e7f53df50752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9929a108-ce5b-4119-9d42-cbe56dae57bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88dc786-be22-42dc-aa23-6b4cb6994e3e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511cb370-a4fd-4d62-be16-85a9f0c4ea63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88fcdb4-b312-4dcc-b8a2-1e63c0f57615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb642c0-f373-44b8-b9c9-c4a8b306845a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63769584-353e-449c-a4dc-2517e5257528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4636ee72-c964-4ef2-bb57-390c1ff8cda8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b901284-4a91-4c43-a132-4fd81d29aadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea72098-7cc5-4010-b297-e6ef85d86547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d673de8-4a74-4258-b282-cb191ab94d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1677f0d-72c2-4411-90a1-3f6910eaa76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ff9e6e-1da1-4612-bed8-40bd13a40fca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f38ea3-a8db-48f0-b53f-3f53bc1cd0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39660f33-7359-41b6-ae16-eb9784ec624c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a14f7d-6b87-47a1-b784-475717bc595e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33514edd-73d8-4b28-b820-2ab386e79065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18599d34-5834-4bf1-9186-e42aaa95d0e4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce903b31-1b04-4b62-be78-4685de10466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998c790f-ea86-4448-9f1f-cb810ba1e206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d9818b-975d-4225-81a1-9a61a8697187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "406ca414-5984-4f2e-a19f-baf6a2582127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b261f03c-1405-4dd3-99e4-db0d8ab72626",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f904eaaf-4ed6-4dbd-a7bd-4486908e0838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2f6675-fc80-42b1-b6ea-4b25b684b020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e616ac58-6812-4584-8e61-d8f7c37b2ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d47625d3-f636-4e1c-ade6-8fba7ec20c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53c33e9-4358-4a5d-9729-03fd29e13fa5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cd0729-edb5-475c-a709-3c655c91d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b5b971-11f5-43ea-8be7-bef4ad1de2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb33376-df56-43cf-9342-f08716569d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "874a0846-c3be-41a8-89b4-34f921b4f2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df23d519-3337-4b65-9358-c672195d128e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e85fa7-f82b-461a-babf-75835926e9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd1cbca-8c36-4778-ba67-4a0a25902f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01d7ef7-810e-40c7-8ce4-7a1fecdcd739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e29621-e80b-43ac-ab98-16812591a3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9303e80a-591d-450d-9781-9a425c53bdf3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6016c3d8-15fa-44bf-ac38-d081f888b049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9502073b-3c1d-42a5-822c-ccbddaf527dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf169883-c819-4067-89d5-7a60d5281e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba89f9ae-5b13-46af-af7f-d665fcf5595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa74f0e9-cf4b-498f-a44c-bf5100de6c16",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eb91d1-de84-4063-975a-65076da118b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa74344-4a1a-4d54-9717-9b24022514c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebd1bc5-e66d-4455-83d0-a242b4accebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c71a7b-07f1-4637-be8f-7382ffbd420f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9b7b72-1337-4c41-ac7a-0498376fe008",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7894fe-9904-43ac-ae60-e8410f73e0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f4eff8-6dc3-44f2-af64-1146efbd299c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1739af-9fc0-44cf-bcb6-3bc4699e8741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d48b3398-8851-4662-ae42-a83661fd19be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03134899-310c-429a-9e0a-7dcc8de0457b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9573c6-bd32-4529-9ab0-d11c00d8d189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3810b363-e5c6-4759-8f4e-1c9b789e2b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a61ab07-845e-479b-b945-06b44eeab012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b3d555-f0e5-4483-a24f-57fd02383714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c257e608-f9af-4e36-8dc2-9453448ad449",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898494b5-e10f-4d56-8088-15124430e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5e5f08-3fbc-4620-a73b-0da006692ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d5bc78-bcba-4e07-84eb-ccda4708b648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89d99a94-4a6c-4909-9e48-891559d4d286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7abb145-89ef-4c45-abde-54bece43e9bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9457a3f6-60d7-413d-b762-28dfeb20012c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0481412d-4081-4795-ba19-92ce40834199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301bf019-9db3-41f5-a684-f85b73e54be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e782c8-c684-441f-9eb4-70ff08d018f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdee1d5b-61b2-4f9a-bcb7-bd5098ce751f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1516e951-2e9f-4a47-8375-9038ed79fb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01da2906-4d3e-4e44-914a-49e3922868de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13ac5db-c02d-4ebe-b836-2fdb0919edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1abf0620-d089-4656-91f2-d625bc281676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5df0d5-7e49-4851-874b-d3ae359b9b29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372faa05-b9a3-4286-827e-6e6f8270a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ae6159-cd34-400b-87b1-11b2f61439d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af350dab-1bc1-4145-920e-ea66999b645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7965f59-fd6d-4958-8ac2-682818f59929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba1fa9e-bf94-40d1-8895-d15ded38cc06",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40121aca-8bec-49b6-9233-c114f4d7448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966b4588-b646-45f6-b18d-8821b02e70e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456b94b5-4224-45d4-994a-8ddebce3cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4eed7a-ac02-40e0-a356-436a4c92d7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a2570a-59b1-4a80-baf1-a9c1d68e2b3e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c960df-bed0-4877-88ea-e223c1e119e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e13009-ed3c-4bc5-b2e2-97e7369eee5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8aa5aea-bd47-4c8d-9257-a2cbe655f4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5324d022-fd18-4282-9c03-5d2ad3346bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32b8aa6-e786-4500-bb8f-8f54d3bc38bb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753a4c34-5dbf-4a31-a6a1-cb8e3e1ccab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ac4233-af89-4bb4-ab0c-1127e470ef92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52288ba7-db6e-4164-bed3-1ef12de9b0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3c12f6-86cf-4fa2-8803-d0ee7cc43a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047dd485-f26b-4667-b512-4577f26e4fa8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23910b3f-4357-493a-9cae-d2419db24d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac715f6-dbda-4a64-be4b-5ca3c71fec10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a4c2d7-7a73-41c0-8ccf-fa4405ba8914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eee1b0e9-7abb-4fbc-b470-4464aaa53f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f4138d-8427-448c-9296-1397c83e097a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219c1ac6-20c1-4d57-8786-7fab6ded9f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788c7791-efaa-4d8b-bf0b-46e33f3813aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4899898b-cce8-4f10-a6e8-4533d792eb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db84efba-2bf9-468e-8bad-0ad533a20904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540a0ede-ccfe-422a-9142-3d2a1136dfd7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657aafd7-2a40-4962-a4cf-0c0d7db91973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b565f317-b6a0-47fb-8278-e89886a0d63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1576c4e-f190-439d-8a2a-13ec9fafa41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c94dc7a2-78fd-47b7-a9f3-a9b48e62e822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec63296d-c84c-4206-8bd4-727bc9bc28de",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7ad131-764c-4c6d-8a6e-2d93100859e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997a46aa-4d0a-4e12-82f8-0cba98b89a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2789720-4d62-41bc-b270-38792254502a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a81fc1-a375-49e0-9e11-0a3071d91d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2395ee05-4bff-4453-8e9d-732b6bcd1584",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529e21b4-908b-4fdc-bf96-17ffaa966b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c6c008-dab1-4410-a321-5d7e27bf9700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd2fc6d-c717-4e88-9ae7-2ea3ca76d0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc225990-ba4c-4103-8e2a-bbedb9368181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc12474-35db-4ff5-9116-52a23f281969",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54dfc3b-da09-43d0-9bf2-755a15d1303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbbab7d-c531-4645-948e-98f9b1fcdf84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94f0cf2-c974-46cb-b84e-0c09249cf3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6882ecb0-911a-426e-b2bc-3bac760ceefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29f5a71-cf3b-4d6f-83c5-98fb85eab742",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3f34dc-5eaa-4f27-8462-bdb5a0f17342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7960bd5-3902-4845-b1bf-a8214972695e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ae0fe6-d031-47d1-879b-7700c3dc8fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edf28328-e2f5-48fd-8297-9b522801b461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd71b13-c40a-440d-b2ac-65a6d77b4771",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71758251-d9e4-4cbc-8047-bb439a322fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4593fade-d97c-4e87-83b2-4847cb54442e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634196db-543d-4089-b1cf-93c568d93b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd7a703-c6dc-49b0-a000-10619a7eebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086853a4-1256-46e8-980a-514e727a2416",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772d036b-cc97-400a-8693-e791bc097d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f63effe-552c-4a8c-af7f-d56dcad3dab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48db53ed-7852-4696-9a55-e8c759a302a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "761bf2a4-780f-4e87-9e08-bff5c742b00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a590874-58d0-4f72-afcc-77413163ea76",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcda1d9-beee-46f1-922b-c9207932f69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98498694-0f01-4761-976a-b1dfaffb7425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894d85ad-4afe-431d-a1c2-9194ee451807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "249cca47-d98f-46e3-8f72-d6bf45fd6b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8561d1c8-11fb-4e50-8804-a4ad695e9436",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6ff8b4-eccb-47cd-aa32-8dab516e0166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1ebedf-118a-495f-966b-7a60a603382c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269e1847-31f7-4b96-bde8-802ddb1d71ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c9db12-8466-46ed-8d8b-0bf9c7f575a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8c2032-0aea-4ed1-bc33-8a32e00319d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd75214-63a9-4241-b924-f41b1aa609e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd33474-8338-4fbc-ad4a-331e747e2f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98634e4b-69fc-419b-8da9-6309f3ebc691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d26a0945-223d-435c-86fa-fdec104c9d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86339042-8cb3-48f7-9dd3-0ad22a4c6401",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d873fd16-e4f7-4b7b-b874-150025f9b966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecac93b-45a4-4959-a8a8-7324c6e7c5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0bf8ea-3486-4b0b-9227-f037988183fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0b1ee0-497c-4117-9039-9098c5c3f57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707d550d-3602-4c9f-93ff-7ef2bd61e3cf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482fad67-dcf0-4758-a766-ab8a2c22836d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524774c3-2e7c-473b-9cb3-911eee30fb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95de3114-3365-4f68-b470-e722790348cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf9ff45-caf8-40eb-a16c-d45111bbd53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982de4df-ef16-4a8b-be4f-9af4f131d361",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8c766b-0246-46b5-86ca-44dd7eb06687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1e4e71-9bcf-4132-ae49-c043aa5f9baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55dd099-8834-43f6-b382-5c56df8bdf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "407ae623-a905-4ebe-b250-96a5fb3cccef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480a7744-8bfe-4b2d-ba7f-dcafc2760518",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0fbf0e-b0c7-4060-901a-1f0c5f2f3533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f665f261-e0ef-446e-ab4a-736e331a7299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e9c849-e2c1-410f-92f5-ac21a7af4a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3da22ad3-6248-4787-bac9-fbf7e36ea810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac24bbfb-266e-4f4a-ba93-f4351a2fca9a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8173a015-3e2e-4600-ab02-76b53defdfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245be16c-f338-4dbb-bbd4-33e7b89e23d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168a975d-5f11-4bd1-80a5-12603f728c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a33dad-2996-435d-8e26-81f3c2c3928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35329496-2650-4c8e-9775-85aaefa5cfc1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d73451-8b45-4895-9f9d-ace0cf9a0307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aeb2c72-1865-4d7f-9fdd-f144387a2e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918363f3-f012-478c-a7ab-74a6db78a4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c837ceb-bf36-43b0-91b1-a6a9bacef09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b949ffa2-15d3-486e-b7ab-17a6c2056dfe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8c002f-d0aa-4c4c-8bb6-95195f16f523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2209cce9-f4f8-4cd5-9562-e2d90a458a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab259908-b990-47f6-aefa-cc8117d54566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb23319-fc6d-4a80-a585-1edbe728072b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ff5571-b1ff-423b-a572-319ed290bac6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2af4588-3c9f-49a3-b755-7e5f84a60ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e29df9a-60b6-48cf-856f-7f02f444f1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36615b2d-873a-45dd-a130-d207c2666ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3af1a05-aab1-44cb-bb09-d29860191a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21858727-dfff-4456-9d89-8ce035b293b3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c603be3e-c771-4c71-99e3-a46e28dedf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a89e327-8101-474a-a4ef-8b1d76de926f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcd3d34-53c4-44fd-96bc-8d9403e65a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38a96841-dedc-49b6-84f6-547d51500cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e574b8-015a-4b32-a34f-b8b8df52cb54",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619f3805-19b8-4624-86c7-bfe503ee0115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b108bc3-eb20-457c-b875-c90880eeaf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf52fa6-cb6e-4710-b8bb-f3dba6c82605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "348b000e-3e65-4610-9cce-fe3c18b2da2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2dd342-6545-4e55-a2ab-2d911b92ab05",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fa4da1-59e7-4231-8b52-44754b047edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6814eb40-42c1-4d88-b75d-c59176add701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd30f272-b043-459e-bd2f-8453f10f440f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d46ef634-e0c0-4785-b24e-01990e756b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e2c7db-bdcb-4f22-ac4d-e006eedd18e4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81a93ef-b5c0-4e22-b2e3-8110ee6cba54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00554b7-8fb0-4ebe-9ff8-28f272c9877a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69da656-ed38-45c3-b120-1d3c60f4517a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7691213d-f971-4b66-af99-ed627e8b13e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dbdd6a-8193-4116-99b0-e53b79ea1a8a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e123cd8b-2e26-4090-9768-ddba5b7d2230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0602b8-6264-4199-8b74-79bfff9e4425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eada6b94-7e42-4d9b-a5b0-f205419d0626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3375be99-72d5-4dda-b35b-838d44ef592a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629551a6-0dba-4779-a906-ce38bdd39f8c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0881199a-3d75-4b7e-8c53-fe621700bfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf055ac-bc19-45c2-b5d4-2c15a9747cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aefbd42-72fc-4cd0-a171-bed07afcf220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d285b4a2-68a5-4158-b712-0669ec2dee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd76b8d-4706-4b70-b266-f7d7a5392ee6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f05eba9-64d6-412c-b7de-328c587fc55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a515d778-5474-4180-8ae6-686c7d6afb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736656a0-926c-4186-8974-4347c16bdfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e71bc3-3241-4811-83ba-98a76a434f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2830f7-cf89-4e3b-bc1e-1aef43a2d80b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960a0a89-e8ea-4e68-a2c1-34fd94fc0736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9ce41184-b726-4bda-9f89-4f960441c60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fbf8c0-e9d6-47d7-912e-7f5190c99167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e78b89b-95de-4ce2-b6d4-85f1a483e69a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "807f8c1a-69e4-4ea0-bd94-9c22b677086f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f76679f-7da2-43a4-9389-c7acf45ff30e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78024b19-67ad-4eed-9cf5-3f17c27c05d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4056a121-a2e5-474e-b531-092d1520478d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18afb68e-f9ad-409e-8a7e-c1fb2a68c793",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10f4fe91-c85b-462a-aeee-47778c4728a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ff02ac-61ef-4c61-9ff8-04b490818d9b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86af72df-0554-4cb5-989b-acad9db3c5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa89f755-81b5-494e-9e0d-95ee2c2ef9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1546d6f6-4085-4e67-bad5-910bc655a86f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80251ce0-e3e4-41e9-a2f8-d71d9dbb4c43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4765927b-2b12-471f-b504-ed2525d4a025",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "256d8d17-4a14-4b88-b291-2c8ec248a1c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "487ccec1-2ada-4289-bb49-1a75d3d7900c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13aebe65-d1b9-444a-93d4-287e51ed1597"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d6adfd3-103b-4dc1-a379-ead7e46e5d36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a5bcaa4-1486-40c8-a99a-f5e8e7c0c1e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "49329320-6cf1-4eab-a989-37e248514045",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89626e34-9ea0-46d3-857b-f81ee9dd11f2"
                }
              }
            ]
          },
          {
            "id": "9bb05d53-fc92-4f2a-ba58-a569efde33e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a72c4752-e013-4491-b9e3-9dc949404507",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61d06032-a05c-47b4-a843-b593d81291f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bd32cce-9dd8-4b94-8287-eb0b8f3ecb06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21cdc105-fe44-4d5a-9cfd-d8b33f3cc74a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "708c1ff6-fded-455b-a3d6-4b90e02e95bd"
                    }
                  }
                ]
              },
              {
                "id": "7c38eb74-796f-42ab-b0bb-e9e70ff17e06",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2b8b4b9-4ba8-4702-9bc1-d0dc7c8ad0bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e462201c-b79f-489f-b3c8-82b3d5de81f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a1e0460-18c9-47ea-9c42-0f3485874448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4920fab8-f47c-4eca-a3ac-73fe8c934e3d"
                    }
                  }
                ]
              },
              {
                "id": "9d573bcf-11da-40bb-809e-c7d7f5ee3373",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69e1a009-e151-4e1a-adc4-f9f94e2510ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b6e56e9-876f-413d-95ef-5b83c67beedd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4417cf86-bcd4-44ac-8538-3d2a5c053039",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7bb91057-1093-453e-abf5-c7eff080f93a"
                    }
                  }
                ]
              },
              {
                "id": "d4940702-8b2a-4a4e-b03a-fd927c9b9fc1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59b51995-fb5e-434f-bf01-a3e908f6bd7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6eb9feb9-c40c-4089-bbf1-2a5ea8034bfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "097e0c50-1ce4-49f6-bce5-bc140385c6da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e7ebb03-c621-4f57-aa73-2742ee6ec549"
                    }
                  }
                ]
              },
              {
                "id": "47e890bd-19a6-40c3-8adf-8e33c94dca37",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93e6bdcf-efd0-4920-9e6c-5d2eb268e6ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7332242-f1e2-47ec-8788-60e126f691e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08ef23b5-94f3-498d-8e86-df63d8900b5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "889fb056-300b-4c03-932c-57caac3ef6a8"
                    }
                  }
                ]
              },
              {
                "id": "a4dbdb82-f21a-47e8-9ae4-5e240b69a74d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90d26712-3b62-4196-92dc-4d94822dde44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30ceb172-332c-4adb-b8ba-41eb09bfb359"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7203bb06-f869-42f3-935b-e239d7795ad9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3972e92f-91d0-406e-80ff-ecde23263fdb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "958faeb9-e9c5-488a-8f50-6a1c82cf11f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "600ecac7-1577-4aff-bcd3-db0a290ff625"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6da4dc03-c7b7-4ec4-887a-19715fd2d3a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "375fc3bd-9b75-47ca-9eb0-2a697a44a2d5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a52a7749-fff1-4f8b-ad05-fb950d5b0b8b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8d4fc1e8-b228-439e-aae4-cde4c50fd0d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "396c8dc2-73fc-4f4a-bd0e-de9367170da3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfd0cfe2-0fd5-42e6-be57-e1cba0f03725"
            }
          }
        ]
      },
      {
        "id": "01ab4bdd-eca0-4be9-b36d-9e3b7a7081bd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "81b4ea48-b15e-4d02-9a63-94d7860ccf71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a9bed9a-9b72-4f20-9aa4-555cb4eb5ba1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1579f877-976f-4695-8073-546fb69203ed",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e0b8ae-3314-485d-a5b1-e1cdef7d5278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac286521-2330-43c5-bd14-0bcd554c261b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9afd384-2e55-4e1d-a2a1-b09e61d55f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "36877ac0-2138-4110-9cac-a4c30cb9aa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fab7a14-22dc-401f-9f13-b21e8d8affc2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f68157-34c3-4207-91b5-710164677836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa5e3f6-887b-4fb8-8d15-eb780129e7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b19ddb-a8d7-4774-946f-5260172c435c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0abedcd-f6d2-4aa8-b268-cb67fb371609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1464295f-d463-4829-96ee-aee275d1bcbd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5d94e8-0419-4fa2-b3c3-7315df7923f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fae9811-189e-41ec-b1d4-de60b003b05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcce7f39-b88a-4c6e-b010-a4f4d17f889e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d67a347e-690e-4e47-b661-3e8860acab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b66234-0a33-4875-a098-5091921f4b72",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88436b2-66c9-4466-92ea-76a8839b8e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e15b05-a1bf-44d2-982c-47bab7452156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0d1750-e201-4078-ad18-8bb14404fbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af634891-6c06-4889-b815-14c6f0f1e01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0bd5fa-5ec3-4ea1-9ad4-3bff7756ae79",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a925e5e-5faf-43ec-9ce7-3ed013e1ab69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081768ff-f7e4-462e-85d9-62f4c8b6bba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb6f8ae-91c1-47d1-89a1-d256a3234bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a2397a-bbf1-41b4-bbab-35ee20aa514b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c75e671-590b-4149-8cf0-70d89dd95064",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f700efa1-434a-4437-a5a9-cf0b1f2b3d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2813cda6-37ff-4d4e-a08f-dfb64a2aca5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4007d7d6-8ac2-41a2-a95c-43545e60bced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0119903-1654-42e3-9e12-0c1146c20606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628a1d48-7aad-4535-be50-d07bc24f302a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4bd1fa-3f63-43b0-875b-09ed4a0b0a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0869b6ca-07b9-4b91-b826-80bafeed22f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d54943b-9927-48e7-9c31-a0b9cff2cd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d8de15-e10a-4f48-8fba-f2ef0d2c61cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d27f37b-23d3-4906-8f50-b1882db94237",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03beb733-e7de-4ea9-b9f7-ab2bdeb2c441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82e5aac-37d5-4151-b54d-70fd12140612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975dd964-696e-4bae-a0ff-d6a9bb5b258d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c279816a-c3e8-4834-80da-e646f9ea10c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e8d947-c1df-45be-8fcf-42c5f77ca568",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14197ad4-39ac-459e-9f4c-9d1c456063e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496b8fea-4d6e-4726-b753-9177b97008ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1159cbf-14dd-4769-8ed4-cc85a216da6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5797b57f-5760-4d15-9e1c-8428e73d705c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4999f826-5c07-4e3e-aeba-5d6de81d5d14",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101e278e-ad59-42bf-b782-ae2d8d1afebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d2f509-5b8b-4420-ad27-45ee7e4f9c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e78c93-4249-4a32-ace1-12fa0ea8e9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5becb2f-5113-4417-b336-a39ae527674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c017e65-5466-4295-a471-2cde50b6eed6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d8774a-1764-4c47-902b-fec32f22f70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310beb58-5c1f-4d9a-9a0d-5911f98f6ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2a69bb-d607-4de1-8409-acea2cc55bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c810fa2f-de62-48ab-b45c-96ab198bcaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d91194-da3c-49c4-9c06-fa0bf76fc641",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e14fda2-1e21-460f-a105-5a95a3b7e38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3102e0-5379-4fa3-9ffe-8aab685f54fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047624b9-af81-42ca-8b97-3015ca8ec898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e290d3d0-70d7-4256-abe0-1c92c1a2cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84775449-5325-4efe-8324-aac434103fb6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccfe0ba-fe76-4469-b29a-68f835f6fd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e110068-fc58-4fc7-b5e2-7961f02c8946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1107c9cd-9dab-4058-a2bf-36b52993e8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cd9413-b997-406e-8390-5f130e8881d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0df05cf-52ba-45c6-b2e6-f1b42a79f439",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcebdd79-428c-4a01-b5a0-efdbfeccef7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d94456-e06e-4682-af0b-5984da748663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b48c3d0-37ea-453d-9120-75baa5d3ea9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc31b601-cebf-4e97-b31b-948551e42df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59a25f5-499e-4348-b8f2-e5a90e15dbc3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b077dc-35d2-4e67-8e19-1f4a953cc1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729e037d-031c-470e-aee6-3a5bbf2b13dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defa8806-0a8c-4608-a6cc-dea6035adb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfd5eee-2d00-4d97-816f-7e19f33c78d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda22b3d-5971-4642-92ed-169c1aba8b98",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd741c2a-82ce-493f-a78a-b4bd9d9bff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558f04ea-d3af-4013-a676-5b12c58dbe5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01873b39-6127-4997-be3f-9441f19ec3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c99f421-f341-44fc-b73c-d8be4387677f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6dd11b-dcba-4c12-9a1d-642b23f218e6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5422447-50db-40e2-9242-d68a764de6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5c532f-e6da-4a0f-a1f7-6732be21da36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaa378c-7a42-4917-ac1c-9fe87460aa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6e64b4-fbfc-45ce-a979-0d41c03b9f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdf2a78-eefb-4064-abe9-2e1d78203ac5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d863a756-ae6c-4150-8805-9d5a483aa867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8612cf89-3d55-45b6-8eb5-c4510993c577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b5e7fe-70e6-45dc-a6d6-10aeda949981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63e6301-b5ea-4a1c-9e19-79128aa13a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee6cb00-3ccf-4e67-8e50-e8bc9e3b9ab2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b30fd43-fbb2-4b03-9d2d-82df8978bcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2bc1c1-e547-4f74-8a2d-1e1e87343b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130e7d40-be4e-445d-9f35-838a71ad1697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40eb90c3-8ef4-4757-9f95-4b85cf5e79cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056ccc6a-b66d-421e-b569-b5c86c5421f0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430b4873-2e2b-47f4-ad11-f8ca772cbd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4f9556-2372-4119-b89d-b70c843c38fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b718a5e2-0593-4078-8e60-3b99f27a0300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "092f244c-2cce-4798-993a-f340ee14ef65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea652ac6-6cf8-4a0b-a993-03dcbbdd6e2b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe29c14f-6b9b-4cc9-98cd-d76b89c8445d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287f2338-df5a-43e7-9011-f7c6dfdd8516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d7d368-d0be-46a5-a02d-d895b3498307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fbb1bd-c2e6-486e-8c58-58e144f1753f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b0676d-cfa3-4d08-b0cf-066b9340cbdc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7479375c-f91c-4ce5-b2f2-6c5acc9fa961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c10038-b484-48c6-9c9d-9276a1992290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5981fc29-b895-4082-86a5-8c4e16f63510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd18144-f975-4167-ac05-b703fd77165a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8f1e1f-2f3a-46aa-800b-d755dcb8326f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a72655d-7ead-4553-9fe0-8d893a82c507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b6ffd1-f762-4246-982e-7a025c563a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9ed926-e64b-4fb6-840b-5d7b05708dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fba5474-79d1-4fd4-a12d-00f19a9ac257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86070b8b-307b-4ab4-a400-9a2a3aca1888",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03bb61d-7ee5-4cee-9ce1-70e3b707f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4acaad-03eb-4cf8-bce1-6998fa9594a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f1c41a-d0ea-4227-ae9f-ce44685266b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ac784f-0f13-4783-a386-249f89b3250d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe473bc0-8648-431a-bc5d-2e8cd347d032",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8370375d-3954-4b36-a081-2dbbfb8a6844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cb013c-231e-41c2-9acf-7d6bfdbd0746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa63c409-5a5e-4d41-bb72-75c385eb2ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e26d7d6-f0af-438b-9c56-a73d466ea53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348c152f-668d-40ca-9622-311392a966eb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aec9a2a-826a-4434-9884-0648a174e42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb4bd13-0906-4ba4-a271-2c1bab18321a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3061d0f-2500-4312-8d02-36437249ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7163fddd-0c95-4e38-82aa-1aad7063417b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ce343b-b8f8-41e3-8bca-74ce673bf84a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e85e7-8674-428a-914d-ccb8ea1509a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3cdd81-8628-4083-9fb0-09cf946ea4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5750d6da-71b4-4a1c-a079-90d073748e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e831a01-c304-4030-8e29-3353dbf0c696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28886cd6-c492-4491-85da-4de6a8b8b31c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0698b3a2-743e-44bd-b5e4-53ad112907f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cde561-a15a-43b7-a3b0-0798a82fcd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c22f9ae-2e06-4d58-b991-c2efff9f1787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a8a573-2499-4ad4-9c18-6d7262ff3711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77968bbf-ac95-457f-b342-3bc2ed29cead",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b13285-8c61-44af-9d28-f0c98a89346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3bd56b-eacc-46e0-95cb-5b29b7ec5acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a957d7-1404-41ab-8d3b-6f30d7eccc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81247bc4-1219-401b-a0fc-40fdfafd686c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebdf21a-344c-4829-83ec-d405f7490f51",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4965fa7c-5436-492b-9f65-9e519d377d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7d8ce4-8298-4afd-949c-4c1a0f5bbe85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6360979-1a72-4ab4-ac7e-a4f331c7d9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd01983b-f2b0-48ae-ad7b-fdd93e840e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caf1628-a193-41cd-8e80-ee70c6e0e3cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5ebe0f-39e2-4079-9459-0004331cf9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29677cfd-663c-41b6-8872-1ef823e6bbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7c2db2-d2f0-4ea4-bc90-247057dd06c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f163b577-457c-4fd0-99c5-fa7cf8b89f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ddb7aa-c822-4463-a3aa-044ff546dedb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7bb149-8fe3-4ba0-83b0-48bd8460505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b425d5c-df7e-42c4-b28c-9b7e071593dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eb2e7b-ce29-4c65-bba8-4e936859f5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2608815-1b1a-4f9e-adc5-b7c6a1531946"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc1515a2-a555-470e-8f0e-2ec49b9636e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c9148dc-d8a6-4733-9b27-077301c6d8c6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17238a1f-a7cb-412b-b09f-43c040d1ac26",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0be218c4-99ef-44d9-a41a-8e581aad23d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455cb07a-6e72-4cf8-acc0-dd4fb6dc94fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d6c3c8c-2ece-43fe-a648-52d9350098bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b0b31d-0267-42b4-87b5-6d7cfcd622a4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b0f3b2-4d9a-4e23-b367-33b067160e9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1143da7e-0779-4d7e-a292-65d644fe7aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d674c357-f3b2-4c19-b164-49c6ba69d47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b12a1b2-3b96-4f2b-bcaa-1b1e30fdb64d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fea4ed9-d638-4e1c-a454-8b71ea4c0dd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15aa02e2-4094-44a9-873e-113e4be6a36a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcb3c6ec-c12a-4611-b49a-ed70e2147caa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79bb3dde-6f73-4c85-afeb-fa8ae030f3af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57ca56ae-22c5-4523-a15d-19ae7c65a9e1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a3411891-8e8d-43f7-8937-90f88d9c6933"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "259e3624-8178-4d32-960d-426c1453b881",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37d28f72-fca3-4ded-a74c-5faefb6f07a6"
            }
          }
        ]
      },
      {
        "id": "4e0c97ca-40d0-42bc-b799-57c830072fcc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2dc18bef-74e1-4841-8270-5f718d6bbd3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b48b670c-97d3-4cd2-be35-be94ac0839c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aaa0a310-3529-48d9-842e-95ad55e5b8da",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10753ec1-b4a8-4769-833a-e0f520f593df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef9e0e8-869d-4527-ac16-984b255676e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52ec65a-018a-470b-a1dc-6fc0f5019f8a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb9bf3c-392c-407d-bf4d-dcb2a64d2401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2eaf899-54a6-478a-b25e-8b7b9ec40adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33abf987-3ee0-4309-80a6-4c4aa5e1f4e6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b57164-cc83-4afd-9276-7aa03b680143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615a22e9-106f-41ee-899f-2cb1274fabee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac15e8d1-c035-4d50-ae9a-6861b159ca3d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f511f2b-b821-415d-87b6-8d3343b1fdf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3530bf7-9f6f-44dd-a6ac-7da121b84fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a1973e-ba7a-44f1-9066-8073378290da",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b82402-9792-40e4-97de-f81d69879c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54b0fea-6bd2-4711-9994-7ab7734d23ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d21ef8d-5f41-4862-94db-73351b6e4432",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd38071-912a-472d-8a32-c5791a393abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014cb266-f5b0-45b4-b72d-8eb54aca69b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5b1e22-eb83-4f77-a089-e7d5ea44d636",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dceb216-3636-4446-b773-93a8b2828fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e10f18d-4f08-4bc2-b5cf-d09e281f5f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddcbea1-73ff-4b59-b465-2334f2e9029d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3252b2-0465-4e0c-882b-e14ef7cc32e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f85442-f158-4069-bdce-54b6623283b0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6205797c-d6a4-4d02-9047-02f9328feeb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6daa4943-bbaf-4d86-92cc-3c0d832c9f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b46773a-1416-494c-be38-987fb2301332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8729d7-e772-408d-a72a-ef3353d01e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ee2138-9e78-4175-a36f-c22de003ed18",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046e8bf6-d34d-4934-bac4-75f2f2bc9a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9648fa-a102-41b7-bd2e-95fc51b77da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6622233-869a-4842-8bce-f03c5fc1ac2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2149e438-9cee-4a59-a512-a474ed9fe5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e07f36-a86d-40cd-ad39-b321c84b1f2b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4b3d2b-33c5-47b8-91b3-4ac25f6f1a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9835aab1-828d-46a4-ae4e-918336eadccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0cc574-9ee2-42ad-b59d-d6fed7d2ae78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb4ce7d-464b-4cc4-bd5a-0afcd8ebde89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d82efec-49e3-4f12-9bc8-9ce440aa1266",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d1714f-1b9b-432a-94fd-325b17afb54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654a04ee-aecc-4214-9fd1-f076d6da60d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec5a8a1-ed59-49b9-b2d0-5fe96bf41385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fb09a5-4802-4d92-b572-5ce263a242dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055c552b-04ac-42b7-9991-72773c9abd92",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb93b17-7ad9-4808-b95d-ccb3a1764aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a4740e-c2b8-4990-8989-f59484916d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52146402-004a-454b-885a-79314b2077fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8005d66f-ee96-4943-8840-086e56cd6a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0b42ec-433e-4dd1-8914-85b75bae57cc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8411e5-557c-46ca-90da-904507159322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1dd667-70bb-46e7-b59b-935b46accb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f08d244-c38b-4735-b432-9a0c9b0a6674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f22bea8-bf51-4f29-bb41-838a935f7bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95801b13-4f17-4924-aaf8-c1a2b29f303f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3506fd19-db3b-4c3c-a255-ce915b762b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeb733b6-1eda-4f81-a364-41dcaf03b60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2c6cf6-d105-4b77-8825-8dd0557ed3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b990424-592a-4802-9d5c-ec8a69e071ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b94914c-10ca-4cca-a160-21300017b37b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b76c0d-5083-4381-b4f4-65c2a5463f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b104605-7e19-485f-8a61-8504ce30a21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b631f3c1-99ce-4b1d-a51f-dcf2bd576fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f5ef8f-aa5c-4851-8cca-e656d5b7e600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96356537-3f28-4749-8f78-48d828a1a51a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9161f2c1-d0bd-40e7-a8db-e579ede95686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a31755-cd5f-418e-b0a5-77b0d2daf32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8edbc0c-5770-4c4a-983a-5e762480bc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef438cc-776b-48db-9e24-670e098d9c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985f8c62-e34b-4856-8c16-b5f6498c8fcb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b014eeee-3621-4629-a986-b37f06000357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885a600f-3509-4101-9dd4-a9f5c61c22f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0118ec-042b-4829-86d4-dfd69f35ba20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd7c173-ced6-469a-a97a-761652e55967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827eabc4-6182-46dd-a3d9-945c69fafeab",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2c71c6-dca9-4e7c-855a-6c7a585da7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d41633-a6fc-44ed-b0f2-a140f6d63c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112bbca9-853b-495f-b953-bafe2a7eeb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980aa21e-a83e-48ab-b5dc-c21603573916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9dcc3d-e0b7-49a8-9c54-8b30a3e012bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9140c0-3789-4cc4-9039-5ccebee18f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f586decf-512c-4bdb-b393-9f02b2f361ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39ce2d8-f494-4fd3-afd5-ef5b71f73782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f54544-a65f-4f43-9964-db5ca3662986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491c8b59-0840-4972-a9d1-1b13bab27d31",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55048b7-a448-4b10-8a72-605c3299720c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88e614c-010f-48c8-87e1-d90785762bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b62d42-f6f6-4670-97cb-250414988a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7ed397-4b07-4868-af00-77cdf8c5fa58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae0b463-5f2c-41ed-ae9d-014d45428bcf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bda40b-9153-40ee-bca9-8b4e80bd45ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695e9470-62a3-4645-8d0c-2b98ad5358e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79d41ec-eba9-479c-ad2a-781e80d26ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91276b2a-dd80-4775-96b7-e2e164a9d9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d27566-6f3b-4d56-a298-fa9e6eecdd9b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9447e13-f9b1-448c-bb25-6a30f7361fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55d6c5d-e18e-4821-a4e9-e565177811ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a1341c-8084-41b7-9e36-edc2257b709e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b4a7ff-8593-4b07-bb76-9b1223fc97c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34d9213-a240-4cc1-adb4-578b4476efb5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5cdb42-3cff-4d9b-882c-aec7f8926288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491f04c9-b70f-4bb8-a250-2f63902b3111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396c9f20-3144-42fa-9b9b-56b7ded67636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bba3deb-61a6-4e9d-befc-29ed96d68a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef005392-fb90-464d-8260-12820f50361e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bbcee4-249a-422a-bc70-2a79e754930f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada24c11-2605-4a1a-9dd5-b431621f28d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eb9de0-dab5-4222-af0e-3becbe3faed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0381aa-cc6a-4956-95e7-c3fdf6ef07f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fa612e-e7ae-4563-8aab-187dba028c63",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8761ef-3580-4787-862f-c42fd61e0d43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0ca910b-22e0-4eec-b043-3815cf2fa8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cd985c-4694-4b73-bf91-f9b07efa4081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6c8c84-b34b-4b5a-963a-1b53ec3880b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f53884-51f9-4e86-8604-bef0cf2bdf51",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfa35d7-de58-4431-8244-cc4d45aa0fdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2882f0c0-eb6a-4640-8245-ddc099cd735e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955625b3-396f-43b4-bd71-0a7d6070f325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2682376d-670a-4d54-958d-93ae6c1b5e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e59b80d-3ed5-4d7a-8900-1d9a61d305fe",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d69ca-cefd-424d-990a-2ae7120df09b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e56fb8-9602-4336-9810-1576bb18bdbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee960ce-0712-4525-936e-7fc0c077d57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9393026d-d238-46bc-94bc-365ae9fd0d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8272ece5-f70f-4855-bbcd-3759a60f334d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4206ca-8cc0-446f-8edb-87806798db58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fbffa2-4946-4d48-9788-b11a5f181876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdee5d8-71a5-482b-b360-8f5522ccf6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d41dac-0d12-426c-a3a4-e1665c12ab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcca423-2e2a-40f0-92d1-b4daea072296",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b47bff-b7d1-4b09-9664-80a27154f004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f3ef37-cb16-413b-a4d6-8008600c595c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71359f3b-1701-4dc9-80b1-a22e077220cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7941f99-3976-43e8-86d5-e57b9b4cf812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e8830f-333b-432d-a624-07efe8857a50",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bc33d9-1080-4bfe-b0f1-8a79eabcf357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c914875b-6026-41a8-8dd0-b9b9a4acf666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f676d2f2-b4b1-4d15-ac87-89187479b66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e103b3ff-1b11-414a-98f4-530ac00aa250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d74f7b0-69c0-4e43-957c-1c13e76d7f37",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d814b6f-faeb-4ecc-902b-0d9d7b0a232b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5adc7a6-aee1-46e1-aae9-6e39267314eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c9fc0b-5b37-4d72-b040-00164d02b027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4320399f-1c18-4fb8-9e3b-0d548f639b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcbe57f-46c0-4333-be3f-395d5a21b70e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278b6c26-2d2a-473c-9583-cd8c8ce95780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bff0b79-ddcf-4a29-acd4-9748f8cffbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de60617f-2460-4c33-bc6c-d547b8a0371c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb79fa6-caae-4568-a2d4-f20e2b54863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ba7ed4-a278-4b55-a942-c591875b3d95",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b764ed6-514b-48d9-86d3-03a59f08f250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8faf4ad5-8972-44d7-8b01-1624edf477c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f6bf85-2093-4990-b5b0-f5be3d5a31f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f1a06d-48bb-44be-a84f-e42f51607b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ff1b92-87ec-4a6b-ba55-c9ca9f7e68b7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9477a91-4176-4d93-a402-b8e661dca933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c2b669-30e0-4e63-86d1-57c3ee702119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6dd446-abcb-4741-9507-141ca3a4ff27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be41dbe0-e911-4e1e-83d8-d65c177bc87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33acd1bf-2ff8-4f97-a3ee-dea44f707390",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1444bf3f-0200-425a-a7dc-f5318d5f3838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340ed3fa-06c1-4b60-8061-d23058c821df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f61eb0-b8a3-489a-b7b6-4489c219a34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd830a2d-cbb1-4416-afde-8ede1804b137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347001d0-b0b3-404d-9b47-03c0b34447f6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5852e24b-8805-4259-a0f0-f1c8ddb20979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37613b4f-ba05-4265-9cee-0278c6d72efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6895ce-be33-46aa-b818-1289f72e4964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627f1f5a-74fb-4362-852c-53012dab0446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a03877f-6c5b-401c-9470-2516699a11f8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d19afe-7389-4d40-895a-4fd05d965c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214c55d1-96ca-4721-8b44-ab6afe3825c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a6be15-1f57-4fd3-bece-bd460628f66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7bfe79-6af8-4ebd-a7a3-004a450a60c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdf1db3-c04f-42f2-b80d-f785f5e7e5e9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f2d7db-1966-4ab9-b3bc-03aef4f07360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82aa998f-a7f4-4198-bf7c-e92dca129c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc9a0ec-c159-4e82-94be-c42f307899c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3688f85c-7427-4568-a4af-2b2d369952de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ae10b2-fe47-45e9-9d1f-6185359e6d9a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868c89f9-503f-42da-bf25-c72e63b47b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5199d81a-88b3-44dc-9131-9520a7b8c471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5171b3-d7b3-45f4-9bd3-e4c19901efe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6c053f-7654-46b6-b633-09cd62fdf88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792a5773-f49d-474c-b64e-1bc5620a421e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31604b54-b1df-4cc9-88da-d337677eda32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b617d134-dca1-4e27-b15f-9534d4e27564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69b51e2-b968-4541-b7e3-e9b64c6c0d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03348f91-9aa8-4353-a17b-d5f2a4cb8096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2eadc9-2e04-4aae-9c65-5576f5ca764d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994747ae-26c6-40fa-a539-579b6dc9afdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d4b986-54dd-4565-b73b-14221b8ee247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f1d4c6-8f31-4532-8f3e-9464463df784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de25719b-8464-47fd-bbe5-acfa351930a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcf0863-7545-4b06-9ee0-155795a43d1f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcbacc7-91ce-49f9-9cff-40fb5960b564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9251b804-73ee-4fa6-a9b3-e1bc105dbb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1478085-963a-4d79-b0ae-7f256d502e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fd4fec-fa33-4102-bb3a-6c7e2fe8b6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644ab920-1533-4dba-a2a5-b7c125934932",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b3edfd-cd92-40c3-9945-72e350b71cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375eefa3-bcf5-4c2d-8836-cc1d7cc695a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc999756-ecf7-4845-968c-3b040680d2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3dba51-b27e-47f6-b1c1-9b25785184a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922e6041-70ce-4886-9a83-337175f3fe84",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd2b614-c10b-4afa-a116-02fc5149d6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d7e82c-1390-42f9-9216-f2cbdcfeb58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6a8937-c63b-4d81-9494-73e379515ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5213e2c2-9b46-46a5-930a-ef26af9df674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565ef954-660b-4be2-9bca-02793b37c113",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e101a600-298d-4297-9fcf-3ebd46e84ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530f2d99-7f89-4cba-8b48-1af498b62e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068ab2e2-c0b1-467f-aaef-11815f7ab304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ea41f5-6d44-4494-af38-5c833994af75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a83bda9-4b33-44fe-b614-36303c644aec",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c980160-5527-47a3-8571-8aa3b52f0904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b654b6-3c00-45fe-95d8-a1eb55a4151c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ff0c92-d3d9-4406-bc0f-9a2e133860fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5456f0c-c923-4b6d-ae2d-08a0f4c1c590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ea04bb-ac06-4590-96e3-0a5f5286b744",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4852a3e4-7246-4636-918b-4730ea936b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48745a54-33cc-4d02-82bc-85bb83e47b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b9ac2a-1c00-4a0b-9380-fc1c046d3698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6172dd29-1f79-4134-a515-53057bace28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5946ef3-3090-41c4-a19e-dee5138a110a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a205aff-a7f8-4aaf-bb0a-90653e0ad12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21bf1e7-b062-4c32-a710-b7fc9a468685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5bf147-779d-460f-a7ae-8cc99af7ab7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d61bf1-492a-4210-a933-c0068763dfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182c8ddb-aca3-40e0-9e91-42dd84f51168",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43d5382-7de5-465a-8e34-940f01b68fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afddfbec-f9f4-49bd-8556-26c7e0a272ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d3cd01-44a6-4db2-a37d-959efe491edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad744e61-bbe7-4f44-a96d-64589e612b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24dfb3a-6349-45d4-8bb8-853624068d1d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8cbac0-0713-4fc2-b488-261e1e1d000f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa45a10-9b82-445e-aca0-ebd8264e0f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2e6989-e682-4c7f-a569-39d4ead88cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a51c974-5316-4264-afd6-da1d25ebabf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f09d7b-41ac-4509-bf3b-217b66f372a9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab5fa19-eed9-4d46-b03b-be7949f9b3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86374ce2-a19e-40a2-a7e6-f4897c35737c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2dd04a-c77a-4b82-824d-0a98d859d7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2eaf58e-772a-477e-a5e9-4dab093afc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1132450e-c694-46a0-9863-12cb0590282d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3d4532-e8e1-4e7d-be9c-cbdf28f7d7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7368d04-7b0d-4d4a-bce9-db2c63090691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efde054-1ded-4ee9-9bc5-3bcc4da22e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8374f054-6e35-4a27-a349-0bf8adea63c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20311f6a-dc01-45d0-ac99-14bc7308b22a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b3bb27-44aa-4edd-9abb-a8cd9e131cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06da1385-470b-4dcf-9605-5a32dd2a333b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817ecd12-4757-4986-b128-a14452c91eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0362fc7d-4eb6-4d5b-bfba-f1bda3e58fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d300361-18f0-4e12-9278-2e845a57605e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a1c5cc-8b19-482f-9552-42301ed78e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeda8e5b-e83d-4519-90b2-ca9989ac2243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b398207-cd40-4f6c-8f5a-79956aa4119e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6d9e6f-4b01-492d-96c9-c67224115c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ce6a6d-4bba-485f-8590-26eba66c8a95",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cac1d7-377c-4e21-b1ff-ec8163e85d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc9de07-9034-4525-9d65-91d12ba99b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c37123-40a9-48db-9c9f-32a9c8b20c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e89857d-8090-4819-9a78-3b62a126fbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73c635d-3cd2-4d6b-8424-cae4d59ce4ee",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf14207-c3f9-4b34-84d5-44309237b04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b9e665-b974-48ed-a7ca-1b54867d21f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e7116e-6389-450d-9cea-868f62ed27e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a92df5-351c-43a8-a862-26220d8f2398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a3e9d7-c0ba-4fa2-ae89-47f9ea14990f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf859a8-ae14-4afb-9b7d-fd5499673dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc3b0ea-e015-4e44-8964-1fd9155c2e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bca2d4-c03c-40cb-a5a4-85860d18db21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1c84cd-261d-43f9-b0d2-f0ecdce26d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62c6b85-44d9-48d3-9b06-71634ab9bbe5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba152cb-c89e-4fb5-a970-5c3ba93102d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6eaf8d0-c8a3-484d-929c-434ff628d9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c01fe7-3ede-4b59-b9bf-a83a5dcb6dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1537e421-aba0-4459-bb88-c8d80573504f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34b4135-52f1-4c42-a3a6-3046ecfff114",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d35fc9-2fa5-4ca4-a810-6114fdfa1d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd25c409-a945-47ca-a445-653642b34aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c854df-d5a3-4b61-b479-7ee34c863286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5fe147-ef39-46e7-a543-48c87015e855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9585468b-db29-4cfa-aa8e-9ecb42044661",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932aa658-2c0f-4454-927e-a004ce8b899d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10740b6-c47c-44c4-a134-cc63a323c8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a660a862-f0db-48d0-b9d8-768f2625b7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bf9fc6-cd81-425a-944a-c4c3804967ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0106f5ae-edfc-49cc-a0bf-552dfc75700e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896a0aec-fad5-4047-99f2-be0a46bff6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb090ba2-d37d-4ead-8d64-8c3fb9e1f55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0f9e35-fdb1-48b0-b1a1-5010a457d156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66086d4b-eb2f-4b9e-82e1-fb18a889431f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc45e90-e379-41c9-b540-cab6c474d4b7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a442e6-2fb4-4fcf-b8ce-b11a08aede6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b836e1-da9a-4ba7-b14e-a2465673184c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc706a25-92d4-4225-8e5b-3eeca45f96b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72ffb91-e32a-4d52-9729-1e651cac2bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7732fb-f15d-45f7-bdc6-c3e478e9946b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b2b5d8-99b3-4335-9168-06b2f65f97ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba97495b-164f-43cf-a44f-4793d04cafc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e853d756-5186-4364-947e-4217d45fb7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1decadaa-be27-4dfe-9a58-f69ddd4e4343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1a1fd3-56c1-442e-945d-b47164740462",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e3ba99-86dc-4a91-8a3a-e5c96a3f7df7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c14311-5d87-4557-8d78-f17e8441ac31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add9dbba-58ea-434e-8a29-53acf498f6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84c255e-8150-4f50-bfe4-5fe22102c910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bacecdb-539f-49d6-9c92-54c9304efd35",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb62ffa0-5f7c-40d6-821c-6e96d697928b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59670fc9-40c9-4d1e-8fdc-eafdcca30ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c992c3a-1afb-4939-8905-ab9b813ad4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f92416-59c6-4d9e-b05f-00684ee7aa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff83aece-e314-4217-9816-e999562fb402",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567a0482-5818-40aa-a8ce-c389d68df732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d1d423-855c-48fd-9889-fd0fc6b1bf6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10407d15-9c46-4377-b12e-12a642077781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6ea775-0e7a-43f2-8843-6e3d0218c2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5dcc4d-60b3-4231-ad2d-523cf212aa1c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937f29ae-7c1c-437e-98eb-8f25512b5056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a16607-293e-49c8-babe-35e5208f1e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02e7ab3-142b-4866-8460-46b2b9865098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7296f9-18fe-403c-a6a0-e5cbd5de1455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e48168f-b4ba-4d78-931c-a381b1c8d118",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac98881-ab04-4d1d-82e1-2f13d3b1a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5608ebaf-e6c5-413a-98e1-e8da8604c240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7bf680-824c-4d8f-95a6-343a791533e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18d20cf-febc-4b2a-93ec-1ed55734857e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a39a46a-730d-4c82-a486-da097d9567f0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34326f9b-5b5e-4251-be0d-d3bbfefa3b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57c5a36f-096d-46a7-a85b-8387f0e31297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e50289-81f5-48ee-95fc-8381754816dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02a5bf8-dc1f-4c65-b1cc-f5ead161be24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542ec20c-cf34-43f0-ba92-b161d3dc80e0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8c48e0-36a2-46a0-98ad-b370653ec943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319f620e-03a1-40a5-9ab2-d7990ecec629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b047933-fa59-4f44-96c2-23334cf50665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6aa001-838d-4f92-9821-bf9de60d4c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9bcb76-a3b1-4050-86b1-b5962918dd4e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381b450b-a6bb-452b-a42e-32dbcd5b0a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb739f49-604f-4434-ab53-de0a40f1bb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842699c2-bc42-4621-8125-e9e3967eea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eac4382-44ea-4765-8498-9a312233784a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0308e902-2d2a-40ff-8ac9-1e9ee6f656a2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60f92b1-20e7-480d-b060-69c8723b042c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78bf8243-5437-4221-b74e-4dd14caac399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b575934-a1b6-4f4b-96c3-d45c81b11df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5739192c-ff4f-4040-9c3a-2effd215f5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc74ff3-1a81-4841-8592-5b37adcda76a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ac6bd8-f9c6-4ed1-874d-d20171e2ec00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76317c32-ba55-4878-8261-692dbdc31a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aa27a8-2bb8-4b63-8eb0-df4b86e7e6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42e5ee2-dcf7-4983-acc8-077f9d61e3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa4176a-6d20-4627-802f-174c66287265",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e94a603-8229-48c3-8adb-ed66618bf2f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce8f434-fad5-481e-a7e1-b611f1ded71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca13b4d2-7ed9-4f59-8301-74e49211ab3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87694f71-8df9-49f8-853c-5eb0084b50db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef86617b-d2bd-4e88-aaef-80e2f190b884",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82db69af-cb28-48ce-aab5-1668cc1f27c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d118ff58-30ad-4d9a-bb76-98ddcda1e72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ef52e8-b0a6-46f3-87cd-785e74c07b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af18655-f627-4aeb-8c28-1fb555d797e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0f0098-ffc7-4eb4-8c02-da0c57c86cf5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314e69d6-2c82-4df0-9ae2-50e33cc01689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3740761a-e6d2-4052-844a-3f024d557eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c078c71-f6e9-4757-86c4-5fb30ed6daa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490960ea-8fd0-4a07-8a29-ede243b2b10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fb9970-6555-4da3-b5e4-d35fa28d559d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23e1bb0-31d7-4431-816b-2914b7a2e0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bda8988-2895-4fd4-91c9-827c4b4065a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf28ce4-c9b5-4b5e-bf40-b8a25420e6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7477aaca-255e-464c-a26c-b36c8f419cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe21ef27-1604-433b-8716-d24dfb2b63f0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0220ff-151b-49f6-aa03-46824c9fb697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c67180d-70b5-42c2-9f2b-48639c62d400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc305b71-ccdb-4ca8-9ac6-8fa5ae302400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003d0b6e-616e-46e9-83f2-e22730dc7ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39bf737-9ba2-42ab-beac-c72ea69fda97",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee395e98-54e4-403e-aa8d-0894c06848ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec0b56b-d104-4887-b3f1-c9495b5d45e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a01599-9c2f-416f-8343-eb5bf48413f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634b3e09-cf87-4a40-90e0-1fb694b7fb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47123ea2-964f-4c41-add0-3862017eef76",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e48443-5396-4ce6-b108-e46b5483a0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061ff28a-f9e1-4028-be97-d6cc73ad8b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddc2ae2-ca06-40d9-91e9-0071caa898a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0931ca2e-1854-43c6-9457-c6bfd3c13031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a98fb4-44ab-4733-9e41-794c102d9c34",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76f7813-38b3-4d77-a90f-5deb864cc59a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6044687-c329-4ae3-a248-07ca85fc901f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61daba7d-077d-42ff-b69f-a4c5e41862d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90332678-b682-476e-9770-50c3f682a73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe10c3fa-5642-4c8d-89b0-f46533098215",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b5cdc8-7698-447d-98ff-01f884998deb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26471d75-e471-4f7c-9c2f-1c9e36e00b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad0101c-89a9-48f7-87d3-69782a07cdbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1745112-ec15-4279-8a9a-f5dd634ac686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d9b3fe-3ee2-434e-9587-068c5eb946b9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16950b63-6ebe-4065-bc6e-3cbf9243ed49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd9d2e9-0fd9-4e2c-a501-94848d0dbb81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4e0fcd-9595-4705-ad52-b21f532b88bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebbd407-f41d-41a3-8338-2356e9c5631d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78cad0f-4b79-495f-9753-9e92f99a244c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0c973e-bf86-4076-86a4-f1033d73c4f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "027aeb6f-9a51-41e0-b7e1-40173fb6bbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc3ecdf-1397-4872-87c3-eed4069512e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bddc26-cb7e-4def-9bd8-0d4ee6025e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f92b6a-4601-4b5b-9624-b171b7b93bfa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c5b8d0-1eda-4578-99e1-3b02ac88e8df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70794ecf-da0c-442e-a18f-d7931a76db5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0c25a5-85b7-4945-a25a-9ab42459a04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b60e04f-ab19-40e8-82cc-90109f31944a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3100cb98-3936-4e4f-9b5d-21caec42614f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb30bc07-5b28-4eb8-95e9-8e5cd68dc4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58c1114-5502-4d52-b8a6-48950d2b65be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c75a0b5-f54c-4c34-9133-10a6e5c6a944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab659f57-dd29-4b11-b919-5593ff085f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06dc3f1-3fcc-4588-81be-a11cb752e1ab",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e3bfc5-f660-4275-8da6-faa35ec9a9a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354168a5-444d-408b-8ab0-ebb90db5b702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5345a9f-0868-4e27-8c4f-913299f83b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b9caaf-f3b7-45ca-b7d8-8b7a40a53875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b30f3d3-3341-40fc-b82d-91c3ebfa79a8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2d8a6e-bf5e-4a84-b0c9-58e88d5836a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecb0618-c63d-434d-81ef-508035942474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82274805-a77a-4fa9-90e1-1897d431c1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1b5a5b-2635-4f11-b5c8-5bb4fa1df73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cd4702-dc2d-489a-8353-bc32d08a9443",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe613df5-cab6-4235-b7a6-9a179696c967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc29cf8-2fd5-41ea-8148-c31b8987326e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f03edc9-952a-4de7-bf52-a8ffe958a1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d573bc-b87b-4d1b-90fd-cd79c87415e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead9d7f3-cb32-4d66-892b-4f73ac774c26",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97737af3-3dcf-45a2-8588-b8532fe38723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d939357c-8e55-4a55-b7ef-f8ba7259c8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68175005-07a8-4caa-a6cb-2472c000d355",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f91943-c784-488e-a1b1-ddf1ee31e8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ee4a7c-bb37-4c8c-a20a-36caa3f7f130",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f063b3e-6f4e-462b-82a7-84046635975a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec4e247-737f-4cb1-b5e2-558eb10b756a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4581cc1-6893-4e86-a328-6347485573e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1db2598-1642-492d-b457-69bef05690b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605f76cc-eb15-470b-9c17-148f1b771399",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e477e4bc-60e7-4513-b6be-4121505618fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97276e5b-054f-4992-8ee8-d91ceace80a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ee75b6-e12d-4a18-8fdd-5e170a919cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce2fb92-ad61-464c-b49f-df9ef69ce47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84cd538-89b9-48f9-9009-13f18dfeeaa0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c877268f-0bf4-4dd1-85e7-b53c6857f141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ede3ae-0366-4d3e-a4e6-a7f063c5986f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8135b38-33fb-4ac7-b8e3-170275b2cef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed4a8de-8f2a-4958-aaf4-ffdc38ae8cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae80b82-32c6-46ed-bc89-fac04d7e942a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5111a7a4-f524-4e80-b5c2-1e0c84f4c7fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5192edaa-8f20-45bb-ac8b-0a874047e68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d9426f-54df-452a-8fc0-820ca15edc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd697007-da58-40d0-be13-44f326558b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28c34ac-420b-4bb1-a6e4-84d435ddeddf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23f9994-b6e2-45fd-b534-9f141a60bbc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8daf195-327a-4999-9c74-cc17d725dedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473a0f75-c1d0-4821-893b-d6cbb6c67ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f95d0f-ef51-4a5c-8ede-83868f249467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081400ad-df79-40bc-ad84-f42a6bb418bf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220f8772-6b64-414f-bae2-2928670e418d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6196a7e3-91e4-45af-be20-740e2cabbc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eda8a8-90a7-4b1a-ae39-a5d352916e8c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6f1c6b-d210-48b1-9cc2-cf8b727d6aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f05f95-3af3-4c2b-adc0-bf46dbec7987",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f74987c-aa86-468f-9a09-3221a33168ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a02df5a9-e110-4c08-b5da-6c6d68a509db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfea24e-99ec-4f71-a7b7-1745dbe1bedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450244ed-e570-4e50-9085-dfa7ed46d3d8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81d53431-90e5-4eba-b51b-43f2bcc09404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebf71ca9-9880-4874-b625-d5a7f2bc91ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "647c4084-4c31-4f60-beac-45c0a843d912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c8ff8ce-2e11-4eb4-a1c9-669abd2a9923"
                    }
                  }
                ]
              },
              {
                "id": "0586f954-0d26-47c5-8b3b-24d29112290a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c717cd0-edb2-456b-b53c-6c7bcdc165d4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c95fd4-4dba-4d31-abdd-8f69e09343b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d3857575-836b-4095-9b77-11606cf882d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6753095e-d1bb-40f4-8761-762319ff23d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d3ea33c-2ec4-410b-a0d6-b706afda43dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2947defd-26d4-402e-b64f-c7f3c8a31a10",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2aab70d-f511-4947-baf9-14dbd4e5560c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "db06f2c5-4b17-46a0-a8ed-15fb0ade2223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4e5e31-038f-4748-ada5-d8dc8f1c87ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba828288-7e74-4c87-b790-b917243ebc53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "790aa2ed-7990-4ac4-8229-ff8bd6c76cab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d3c445c-dd81-4bbc-8a98-8a2f74f94d09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4c92abc-539d-4809-bb4e-1d5da8dbce10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1e40529-d9b1-476a-ac82-4411696ec806"
                    }
                  }
                ]
              },
              {
                "id": "5fa5a0a9-f0e1-4f9d-a8eb-16cea9a63208",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "04f89442-acf2-4437-b732-254300b538c1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0e7f1d-2fdf-470f-84f2-3d7179fdb272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d0d1f294-6575-4896-8b61-2fcb76476238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cba537-3fdb-4602-aaea-c7ba0bcac1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1829db4-460e-40c2-a946-2adf89d16dd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "41a829f7-8d34-498b-a53d-7f6e82c90cb2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ef35856-9c16-456f-a13a-c0f43dfd9fae",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95ec7a17-b39f-4d3f-9e41-f43d13b27120",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2f7048b5-d0e6-490f-b2ac-33c50b754d26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ab38bb1-9e08-4d3b-805d-a48a2f358fd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c42c523c-2a56-45bb-a0c2-2017269b89de"
                    }
                  }
                ]
              },
              {
                "id": "8d249145-64c1-49ba-89eb-e2ab79721d34",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2e50479-7def-4f7e-8786-4bb67c3b1652",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c5b9faa2-e905-4e1a-a98a-49dbae84a583"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f2410ca-6eac-4438-8d09-298466692327",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "134df87a-07b8-4b7f-88f3-ad404791254f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5eb6ba23-d4e5-4a6d-99f5-f639899abfc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9dfa6604-07e6-4664-a890-13f52e63ccc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be99adf4-16d7-429b-b5f3-19cbc82fcce3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bdf655a-c9c7-4d59-b807-f2e74d18c35d"
            }
          }
        ]
      },
      {
        "id": "df111edb-e12b-402a-b3f7-59ead88f997b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "27008728-a878-4421-86a0-6d6ecf2e77b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "489d0afa-6a44-40f9-a206-566d43c7e7fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a34c12f-1fa7-45e9-afcb-35b6870464c1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2936911-96e2-4b46-a4bb-38bfe281f2c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0ff7be71-8b78-4951-af25-bc1483f24698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffc6110-9c61-4a6c-b7d3-2682922aafec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "576d861c-4763-4be5-a36c-2428e636b22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9a9b05-8031-45c5-8e5b-c286b7d33d61",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5549e7ff-91fb-40ec-932a-01c316a4fe8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9d61a1cc-12d1-4245-a0c5-70ce0d58d974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408845c3-b86d-4e1f-9491-983fbeb7a1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb87e597-eee1-4817-87f2-80725d2f0190"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d41d0e6-f389-41c3-89e7-d5d0575152af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5abcf4eb-2dc6-43b1-944b-c4d72fba8c17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88684ecb-e812-4cc1-ae37-6c0de74f741f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6682959-ceec-4a28-b330-e15b98cdc083"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ace1c4a5-6b26-438d-af7c-6c3eb43ebbaf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1fb7a49a-e43e-4288-a563-9109c049471f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ee4ad93-3e02-42b6-ae6b-7769edd1bac0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b99f7277-ce0f-43af-a9c0-59d517dff582"
            }
          }
        ]
      },
      {
        "id": "77ec5c00-bb27-4636-a4c9-2fb225509bce",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "40c66bf5-a7be-46f8-800f-e2040b586d87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8694afee-300c-49f6-959b-27c06f5bb34c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da634f39-2d31-415c-8870-574e13a42b99",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd8da6c-8ef0-4f0c-8999-c402008cbb61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9476afd-d70a-4c82-8e3e-b28ed0f47646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7309cc3-70a9-48d2-9cf1-f06f10ff6724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27e1e2f9-3bf7-46c6-b12c-599d9d633b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f2a0aa-755f-414a-bcac-d1e04b736bc9",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ec54de-7cca-4cc4-b0c3-881e0e1d7a43",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a49c9277-caea-47e3-ab60-7d7db0ccc2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3646f00-165e-43e6-b4a2-d0a9cfb1a001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "363a9fe4-1d1a-4e73-ae39-b1273c5bb35d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95718ba1-65ec-4505-ba26-28f84d54adf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce267f6a-5bd5-4eca-95b6-4fa3d938292b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9451232-4cf6-4156-98d6-7ac5a8490087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb400dd6-143b-4a9a-a816-1220ab5daa57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d84d520a-0c44-4e03-8004-5901e4b38c07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3b62202-79f6-486e-ac86-063096c5d26e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0489b42-1757-40ac-9d9d-547df2053f08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "256bb7ee-c65c-4329-a2e3-624ecc7f95e8"
            }
          }
        ]
      },
      {
        "id": "0622a768-1203-45a1-b4e3-0b23dcf2b31a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "efd540e0-9628-4268-a59e-72658ef9704f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38622775-6279-4fc8-87aa-2383cf8ec4d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33469d3e-65d7-47d6-9768-60a86bc395a2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1230c5-65c0-4eac-83d6-52516938bec2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98b6f9d4-c7ce-4b01-b986-f6ae82b4cdfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440d7564-39d3-4c7d-9553-adc11a9b6df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1f0a0ad-1676-451c-8f41-c3d99cf7e9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35d7fa6-4765-42cf-9289-0837194a124d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfc6852-3aa5-4f4e-bea4-ccf9d838afc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "054204ae-9587-4f4c-bb7a-c8c8146f2ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2aa3f0-82ba-48c2-a9c1-99348ce27d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c3e161a-6a30-4ac8-9bad-a2523a82c29b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7a69df9-fcf9-4871-bf0a-6a592f0828cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc6f8ed2-9eea-4f99-98ca-fbd26aeb9a78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be85ecf0-4f74-4159-9bd2-cf9f2f47e9dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67ca89ba-e346-4f6d-9518-2aa47fcecab9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3166ce4b-49cb-4079-a06d-9dba3af5b69a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b599e7f4-66cf-42e4-8c8c-cf6b0d9daf6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ed6a550-ab3b-4550-88b1-79ea8e522d1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b48a0c6-2a79-4cc3-9446-43620295f136"
            }
          }
        ]
      },
      {
        "id": "46fdc8a4-d216-4421-aeb4-d26d0c53cea9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2e6c04c-2a56-45a2-850e-51f43aa0d2f7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3843f717-4ae6-4bdd-83f8-083d36015e31",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "17e7f5fa-612a-476c-b949-5faa1ee551ea",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac311cd1-4219-477c-82da-96106c5d0973",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e364a047-ba8b-4f6a-ac47-19bf50bd8389",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.63076923076923,
      "responseMin": 3,
      "responseMax": 398,
      "responseSd": 41.99828539751788,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683160591282,
      "completed": 1683160605392
    },
    "executions": [
      {
        "id": "a585a8ad-1063-4e24-9cfc-cc2e91222a0c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e25b5f1a-2aee-4cee-b515-745ef9ae7542",
          "httpRequestId": "55c2d80e-f227-473d-afc7-dbf36dd4773b"
        },
        "item": {
          "id": "a585a8ad-1063-4e24-9cfc-cc2e91222a0c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fd56a196-1779-415e-bbfc-24afcc9935bb",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "4fc5f007-9ef6-40a2-90fc-2ab24bd35ec8",
        "cursor": {
          "ref": "5dee725e-6c6f-4432-a349-f4ff2cfcffbd",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4ae7a7a3-0f86-46a8-bed2-5eb81bbf808b"
        },
        "item": {
          "id": "4fc5f007-9ef6-40a2-90fc-2ab24bd35ec8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c1c3a8ae-faf8-4d19-8a01-329b80ad8b9b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "b464ce61-2a37-48cf-8032-98aa40b936e2",
        "cursor": {
          "ref": "3e2d85b2-6a29-4b07-9452-1cab5773ceed",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f0e2fb76-eaaf-4da4-8eec-89fe83d4f734"
        },
        "item": {
          "id": "b464ce61-2a37-48cf-8032-98aa40b936e2",
          "name": "did_json"
        },
        "response": {
          "id": "15d93d96-a45b-45ff-bad0-d5beaf5bb72e",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc3e21f-2e1f-49ed-beb9-ac282e643f50",
        "cursor": {
          "ref": "0148160c-7e88-44cd-acce-81e8d5da07ed",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "02d899ff-b898-40b2-b787-a23c82a0cfed"
        },
        "item": {
          "id": "abc3e21f-2e1f-49ed-beb9-ac282e643f50",
          "name": "did:invalid"
        },
        "response": {
          "id": "f67cfb51-8836-45d3-a144-98e3f30030d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc3e21f-2e1f-49ed-beb9-ac282e643f50",
        "cursor": {
          "ref": "0148160c-7e88-44cd-acce-81e8d5da07ed",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "02d899ff-b898-40b2-b787-a23c82a0cfed"
        },
        "item": {
          "id": "abc3e21f-2e1f-49ed-beb9-ac282e643f50",
          "name": "did:invalid"
        },
        "response": {
          "id": "f67cfb51-8836-45d3-a144-98e3f30030d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303322d3-e007-47d3-adda-d41899a3a47a",
        "cursor": {
          "ref": "339b5266-b505-4ada-9cf3-f1d8ecf432f8",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c229d9ab-33bf-4cd3-82a4-e0a675cb7039"
        },
        "item": {
          "id": "303322d3-e007-47d3-adda-d41899a3a47a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dc39c828-9042-47d6-b8bb-3310312d0cd2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eb61a4-4e1f-48c5-a078-db550cf41f9e",
        "cursor": {
          "ref": "eba6ff5f-7c83-4a75-b63f-12c3eaf5996a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2894be24-0099-4235-916e-e7fc55615e63"
        },
        "item": {
          "id": "27eb61a4-4e1f-48c5-a078-db550cf41f9e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "133f5062-7759-49ca-8570-fa861e6385b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e006e63-2832-4adb-8785-85eccb55658b",
        "cursor": {
          "ref": "505a0c00-1873-41ce-bb0a-82b16fa4eb8f",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "020092f8-a873-4728-82e0-8f48c512671c"
        },
        "item": {
          "id": "1e006e63-2832-4adb-8785-85eccb55658b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3a730325-1ab9-4cbc-a779-26cf7883e869",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135d3101-3df3-45d2-8f86-8e3eae28f5c2",
        "cursor": {
          "ref": "7cf18295-874a-41fd-a7a4-064cce493953",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5bd99591-143b-46ba-abfc-fd5b96739e98"
        },
        "item": {
          "id": "135d3101-3df3-45d2-8f86-8e3eae28f5c2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c6182b0d-4739-402e-bf99-86ce17fd4f72",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135d3101-3df3-45d2-8f86-8e3eae28f5c2",
        "cursor": {
          "ref": "7cf18295-874a-41fd-a7a4-064cce493953",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5bd99591-143b-46ba-abfc-fd5b96739e98"
        },
        "item": {
          "id": "135d3101-3df3-45d2-8f86-8e3eae28f5c2",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c6182b0d-4739-402e-bf99-86ce17fd4f72",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ffe577-f184-4f09-b861-3c27b2491504",
        "cursor": {
          "ref": "bd0840c6-b617-44f1-b604-84ead5425b4e",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b2904474-af83-475f-9ef2-12722ac0622b"
        },
        "item": {
          "id": "26ffe577-f184-4f09-b861-3c27b2491504",
          "name": "identifiers"
        },
        "response": {
          "id": "d8bc271d-e3be-405c-a4ed-4288f0a3fa0a",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f3dacd-b813-4476-8e93-07fe83a61fa6",
        "cursor": {
          "ref": "3a88abfb-4e09-49e2-b83d-c9b0b61f8e30",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dfb1b92f-b5c3-47c1-a878-2d87d20b42b7"
        },
        "item": {
          "id": "49f3dacd-b813-4476-8e93-07fe83a61fa6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e5ae8e94-e813-417a-b4a2-e9f65261162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f3dacd-b813-4476-8e93-07fe83a61fa6",
        "cursor": {
          "ref": "3a88abfb-4e09-49e2-b83d-c9b0b61f8e30",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dfb1b92f-b5c3-47c1-a878-2d87d20b42b7"
        },
        "item": {
          "id": "49f3dacd-b813-4476-8e93-07fe83a61fa6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e5ae8e94-e813-417a-b4a2-e9f65261162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d803027d-0b12-4f70-8852-2c4ec56be96b",
        "cursor": {
          "ref": "6cbe278c-527d-426d-941d-9afc3b8f2880",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0acec146-8fe8-4669-9468-5602ce5a147a"
        },
        "item": {
          "id": "d803027d-0b12-4f70-8852-2c4ec56be96b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "59fdb5f7-7304-4346-a2f8-e78df74d7a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772515bc-91ab-46f7-8110-2086742b698d",
        "cursor": {
          "ref": "00bee40d-49ca-49e2-9f6a-648ccbc2c94c",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6f964d3d-2b70-452a-b181-f19cac4ddf3f"
        },
        "item": {
          "id": "772515bc-91ab-46f7-8110-2086742b698d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "da2e9cb2-3fca-4d1a-a647-51d3110ff259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6dc2d5-0054-4d56-a127-7dfd1dac44e2",
        "cursor": {
          "ref": "44604aa8-9c74-491f-a054-f803d7a18b4e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d71cc3a2-0334-4ef8-ab52-0839ef0b8942"
        },
        "item": {
          "id": "dd6dc2d5-0054-4d56-a127-7dfd1dac44e2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9c7ad91e-008c-462c-b4b2-d1230c96bf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fd8bf8-99d9-46c2-937b-1f2018145de3",
        "cursor": {
          "ref": "78e1e633-1658-439a-8773-b8f28dcc5648",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c6d238aa-5eaa-4c41-9795-9f74ebfb07f7"
        },
        "item": {
          "id": "41fd8bf8-99d9-46c2-937b-1f2018145de3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "023eacbe-c4fa-4b14-8b39-c990796e218a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403bb8b2-4aa6-49d8-9e07-7588bbb37207",
        "cursor": {
          "ref": "05e1417e-f45d-4338-96c9-b2ccc8c7ccff",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6ce5f99f-5f06-447a-a937-5ce27aa7e35e"
        },
        "item": {
          "id": "403bb8b2-4aa6-49d8-9e07-7588bbb37207",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2315d791-b0f3-4fea-8aa4-981ccbe7d15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e872476-0ff1-44bb-b12c-7a620a2a4252",
        "cursor": {
          "ref": "7684763f-beb3-426d-8872-d220e8e568be",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6fe43d69-e134-4747-b8c2-5d1f16184398"
        },
        "item": {
          "id": "7e872476-0ff1-44bb-b12c-7a620a2a4252",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4cf30f90-ac5e-4c0d-9c2a-9a505a4c23b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8cd2d8-739a-4b1e-8562-341275f836ea",
        "cursor": {
          "ref": "473beae6-c825-48ef-9e1b-15c3c1d3e763",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b8c6e06a-2f34-4a61-a860-a079a0c450a4"
        },
        "item": {
          "id": "fb8cd2d8-739a-4b1e-8562-341275f836ea",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9a4117b5-1198-4b30-a7bf-e8b7a315778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed260b05-1770-499c-a724-c3ef33443a37",
        "cursor": {
          "ref": "ce098c24-5ce0-4319-bc2a-8accf1e96050",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a0313507-1ec5-4b6d-bf0f-329a5275327a"
        },
        "item": {
          "id": "ed260b05-1770-499c-a724-c3ef33443a37",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d39550ee-4701-43a0-9cb6-f05fc815d5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cde1f05-5125-4eae-a951-45a63bd6fb53",
        "cursor": {
          "ref": "f6976d6f-5503-4d40-b798-cc74e06a5dfc",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a4bbbcbc-ef80-441f-954f-c6a254a30b74"
        },
        "item": {
          "id": "7cde1f05-5125-4eae-a951-45a63bd6fb53",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5d4de5fa-a099-4dc8-9e18-0e5fdabbd2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53608262-af91-49f5-90c4-d54541a0c6ba",
        "cursor": {
          "ref": "15dfa1f7-8ff4-44ec-a28d-40368f8a30eb",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "51d751c1-aef9-4f73-a20e-bbe5b0f67a03"
        },
        "item": {
          "id": "53608262-af91-49f5-90c4-d54541a0c6ba",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2a08d880-ab79-4e93-99fc-a42d741fe07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe45bb7-5d00-491b-8211-61bf09767b87",
        "cursor": {
          "ref": "85c1cec8-2ae0-426f-a9af-a417656d401b",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fac1a734-a052-49d9-ab37-3a4f474acaec"
        },
        "item": {
          "id": "ffe45bb7-5d00-491b-8211-61bf09767b87",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e7d22e31-d0ce-48b0-835d-1d14f223c131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d3ba35-4912-4fee-9d56-f9941aaab65f",
        "cursor": {
          "ref": "cebd19aa-9dde-43dc-969a-77a872c5f0fe",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4f047b27-c781-4edd-a402-83994226a3f2"
        },
        "item": {
          "id": "e7d3ba35-4912-4fee-9d56-f9941aaab65f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "64169fd1-4f00-4982-875e-ba5d9459b6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3c4b37-481d-4613-8423-3fbb2730dc62",
        "cursor": {
          "ref": "2d5b4c29-6cbb-4a29-94bb-3e2f1e20f534",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9f996712-a641-46f5-a39f-c8d5d474cc13"
        },
        "item": {
          "id": "8f3c4b37-481d-4613-8423-3fbb2730dc62",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8b624935-30d0-4b77-9f48-b431977a9455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b7757d-603f-453b-b801-972f4b1df8ed",
        "cursor": {
          "ref": "c55e7f58-d062-4178-a7b0-54628269c429",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5d83f7b2-01b9-4e0a-af69-2131f2d86065"
        },
        "item": {
          "id": "26b7757d-603f-453b-b801-972f4b1df8ed",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "56b9397d-e217-46a1-9dee-bc85fc8ef39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eabc49a-e426-4f7d-acf9-0cb952183d69",
        "cursor": {
          "ref": "0c4c32ba-f8de-4946-9cac-b96458fbe26f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "28599638-550c-447e-b992-fa131e27e758"
        },
        "item": {
          "id": "0eabc49a-e426-4f7d-acf9-0cb952183d69",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4e564c34-fc08-4e80-abaa-b720077265f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d8f071-3a74-4a09-bd5f-e590506d2c4a",
        "cursor": {
          "ref": "2a99ef86-96ff-4c74-bb5c-ff227c03cf6e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c63d8070-9186-4720-8296-bcd876023bbb"
        },
        "item": {
          "id": "65d8f071-3a74-4a09-bd5f-e590506d2c4a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "387ea107-f819-47c7-8074-4109e236fdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fa3a87-fee3-4f9b-b8d1-d35db9eb5d7e",
        "cursor": {
          "ref": "f9b530bd-992e-4ea8-8ad5-5577e21db87f",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "029a679c-7e5a-418b-b9b2-0623c222cd8b"
        },
        "item": {
          "id": "78fa3a87-fee3-4f9b-b8d1-d35db9eb5d7e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0fc02ebd-673a-4eba-837a-367f9afb9327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3c85fc-c898-4014-b98c-2e7cd97c9777",
        "cursor": {
          "ref": "fe9b01a0-b4d0-4ee0-b744-a6bf5d99c714",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "87f9d294-0158-4568-bbbd-df6ec964b374"
        },
        "item": {
          "id": "2f3c85fc-c898-4014-b98c-2e7cd97c9777",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "833c81af-e74f-4103-9f05-a1b6f9968c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9848b29f-b6fe-44f4-8f1d-bbeddee66e18",
        "cursor": {
          "ref": "550e9200-e208-454c-b8b7-e7585db9bd41",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "da366f9c-538b-4705-aabc-9fc9978b34e0"
        },
        "item": {
          "id": "9848b29f-b6fe-44f4-8f1d-bbeddee66e18",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6158548d-b0d8-4b58-a635-7d1912d64047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b294e821-44ab-497e-961b-d99545af12a5",
        "cursor": {
          "ref": "b8e7739b-b6cf-43a5-934a-dc59d334b7b0",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9c543e00-7da8-4321-b422-b0fd7dbbe21d"
        },
        "item": {
          "id": "b294e821-44ab-497e-961b-d99545af12a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8f15b86b-deee-4182-b78b-96bf4585c805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dec2c8f-a1c4-4c12-9529-51ec632f7646",
        "cursor": {
          "ref": "8caa3607-6db5-47ff-88f6-9be5c310db76",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "65901d07-7b02-4e10-ae7f-ba8cda95e9bc"
        },
        "item": {
          "id": "3dec2c8f-a1c4-4c12-9529-51ec632f7646",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "62ce8d10-193a-475b-8188-3d75ba24c4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d5e69a-3dea-44e4-a26c-0a9a3e3c5bd9",
        "cursor": {
          "ref": "87ad0e9b-ebb0-4d01-8b80-8604bacccf72",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6259f769-47cb-4db4-9e3b-1626356e69bd"
        },
        "item": {
          "id": "f9d5e69a-3dea-44e4-a26c-0a9a3e3c5bd9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0f0d7779-48c3-425e-84d9-7e99d6e3bdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862fc733-2cd1-4de4-a8a0-3e2dea9d129c",
        "cursor": {
          "ref": "920842e5-3805-459a-9aca-2ad176ffccce",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "509f4c63-0366-4d14-ab7a-4295b0c0d42e"
        },
        "item": {
          "id": "862fc733-2cd1-4de4-a8a0-3e2dea9d129c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bdf26312-e79e-41d1-8804-c925bb0b82c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4427e91d-d0be-4dda-adfe-2c4147bcbd21",
        "cursor": {
          "ref": "aa59df4c-2a4b-42e4-a817-bb13dfdd8789",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ff09485a-3243-41e4-9b3e-4d6dc255c016"
        },
        "item": {
          "id": "4427e91d-d0be-4dda-adfe-2c4147bcbd21",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3cb39b4c-9c99-48c0-b259-eef22b962e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a8c70-2e49-4b30-9631-658583dbda77",
        "cursor": {
          "ref": "90dea55e-5971-4a8a-8cbf-8277a697fa43",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a508bc23-ce74-4dd9-9407-211c97358c72"
        },
        "item": {
          "id": "396a8c70-2e49-4b30-9631-658583dbda77",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "951befa0-e382-46f3-bea8-3af8c79f313f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a823d25-d4e2-4831-af92-a756c09376ba",
        "cursor": {
          "ref": "f5c74453-dbfd-4ac1-9609-e21ed9f8fdec",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f0d688e7-623b-4766-955f-413018d12bbf"
        },
        "item": {
          "id": "4a823d25-d4e2-4831-af92-a756c09376ba",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "721a2e4d-bd05-4f4f-94ba-6104ef9f4482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e948e33e-375b-4369-bac4-471da36d42f8",
        "cursor": {
          "ref": "29a20a55-544d-4a46-85e0-605f1afb2fa9",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f32c04be-4ab6-4bbc-8cf3-fa3008fc1161"
        },
        "item": {
          "id": "e948e33e-375b-4369-bac4-471da36d42f8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f93bd8de-144c-4d11-aad7-8e3e69207f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ca8f98-1f7c-4576-a876-88e83995f3d1",
        "cursor": {
          "ref": "9350421f-4c52-4a5d-a4b7-25eb9c87e4de",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6f1c75a4-b546-4d73-bb4a-47c0069bf729"
        },
        "item": {
          "id": "97ca8f98-1f7c-4576-a876-88e83995f3d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e9554442-7fef-49d5-9dce-82177d79b207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab4aa26-9c6e-436e-b314-938643e37357",
        "cursor": {
          "ref": "3b3cb984-c3b4-4f2a-a036-912ba0086d01",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c9adac70-a882-4ef0-8e04-efaf6f51a9b5"
        },
        "item": {
          "id": "1ab4aa26-9c6e-436e-b314-938643e37357",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "69d1bb49-1135-403b-9353-3c2b6a4a6e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6f23e4-a42f-47f8-a6cd-b99469996969",
        "cursor": {
          "ref": "120f5cd9-ab99-492f-a895-f327c874c1b3",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ffc4645a-26e4-4fd6-bb75-f2e2ea225ac8"
        },
        "item": {
          "id": "5c6f23e4-a42f-47f8-a6cd-b99469996969",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6763fd2f-0bea-41f6-87d6-4a59ccdaf3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1f173a-10bf-4ecf-bf48-51a75dfc422a",
        "cursor": {
          "ref": "305e8be8-e6a7-426c-a1ff-dffc141b4458",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "76f7092d-dfa7-4a01-8240-54685d8b7730"
        },
        "item": {
          "id": "ee1f173a-10bf-4ecf-bf48-51a75dfc422a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fea4f86b-846f-4997-9328-76afbd758cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0b3fc9-3eab-445e-b611-3fe2897675b6",
        "cursor": {
          "ref": "1c5cdf49-f363-4450-8eac-347ed67061dd",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8071a996-d50f-4eee-b215-eab95bdfb020"
        },
        "item": {
          "id": "3f0b3fc9-3eab-445e-b611-3fe2897675b6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e9a93992-8c43-41bb-bd20-93d8e7b77029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36fbd7d-55f7-41dc-acb9-f5e9613da426",
        "cursor": {
          "ref": "31d0d1fe-3086-4b7f-8681-8db9f34c911d",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7224f6a5-02d9-4c17-a7b7-3b8fbaed7748"
        },
        "item": {
          "id": "c36fbd7d-55f7-41dc-acb9-f5e9613da426",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e4e420d6-7447-47d8-8744-b9186680de90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05340b46-f84e-4832-93b9-2c0c6080cd52",
        "cursor": {
          "ref": "b7b97ca5-bb9c-4869-a2bf-52c58ee3fed1",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3f41e722-d104-4a69-ac47-736430472e50"
        },
        "item": {
          "id": "05340b46-f84e-4832-93b9-2c0c6080cd52",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a4a78fcc-bede-4a60-b11d-21f49bb05237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b52f126-179d-4b2c-ad00-bd0a1bbbd308",
        "cursor": {
          "ref": "17847fe5-4d61-4bed-b5c3-e7d257677b47",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "93aea039-f726-4389-89ef-072fcbc4f1bd"
        },
        "item": {
          "id": "3b52f126-179d-4b2c-ad00-bd0a1bbbd308",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a5d62233-7408-4c1d-8e3d-452dd153a079",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d428ae8-912d-4b52-af29-57e0d2cfe7ff",
        "cursor": {
          "ref": "e9bb21c1-af25-43c6-8c90-ac002c2f19eb",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ae20bd4d-e70e-4217-ba2b-b23466de4db4"
        },
        "item": {
          "id": "4d428ae8-912d-4b52-af29-57e0d2cfe7ff",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fc81cab3-351f-492e-8fd2-4d01cfc4df34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b379aa5-3879-45e9-9566-8de5d3f672b4",
        "cursor": {
          "ref": "2e09f366-c9ea-41f7-83b0-7e05f5ba576d",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "70bd1575-7f50-4dd2-ae0f-41ad11066ddb"
        },
        "item": {
          "id": "5b379aa5-3879-45e9-9566-8de5d3f672b4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5780fa7c-9d3b-4251-919f-e8cb8b0bd6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ceae0d-e94d-46c1-a1d9-fa340aef4b15",
        "cursor": {
          "ref": "0a02516a-fa16-403f-af5d-7035de91eb26",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c17b76c2-9815-4d83-84ea-60304241a22b"
        },
        "item": {
          "id": "09ceae0d-e94d-46c1-a1d9-fa340aef4b15",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8c90422f-3d2a-4125-808b-a48980794ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a30d32-c7a8-4f31-bd2f-712aef6b2348",
        "cursor": {
          "ref": "4b082d0d-3adb-4c85-bf28-50e5f0b909b5",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a82c3f28-ca12-4776-a936-667885cbcf86"
        },
        "item": {
          "id": "35a30d32-c7a8-4f31-bd2f-712aef6b2348",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7d4845c4-adc8-473f-8c4e-f2a6b92739f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee28935c-e3d5-41b5-b89f-37305be77de2",
        "cursor": {
          "ref": "5a9c8abe-30be-47d1-8f1e-ff7924ee8bdc",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a07e7e08-79f0-4e30-84cc-589359de9cd0"
        },
        "item": {
          "id": "ee28935c-e3d5-41b5-b89f-37305be77de2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f272ced1-c1fe-4da4-80d9-96df9f382032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87012d8-e044-4db5-9969-2fbe46e4b1b7",
        "cursor": {
          "ref": "c6be9d0a-c841-4006-a9f6-e6afc6bfaa9a",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5c3a7f4a-34f0-4c84-9a52-5bd10c586527"
        },
        "item": {
          "id": "f87012d8-e044-4db5-9969-2fbe46e4b1b7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bbc3e23f-84d9-4e27-8422-5e2ae098b873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf12cb0c-d1c8-44e3-b210-aa018e51726f",
        "cursor": {
          "ref": "c33728b6-f230-4094-909d-a0e92e1875fe",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0d6624b7-ac38-438c-8486-2b9ac542b96d"
        },
        "item": {
          "id": "cf12cb0c-d1c8-44e3-b210-aa018e51726f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2e43baa5-7f55-48fa-9b5a-bae0611dd1c4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28db31b7-b2ba-4ffa-aea0-9d5487664bf8",
        "cursor": {
          "ref": "0502a9a0-a8de-4550-b3c1-e66b8b571d43",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5683c450-c47f-4664-899f-4965a5280635"
        },
        "item": {
          "id": "28db31b7-b2ba-4ffa-aea0-9d5487664bf8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "af120c5b-258a-4950-9e1f-ea28be2da0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e138f15a-6a65-4999-9cb5-0d4646fef02f",
        "cursor": {
          "ref": "13fa576b-caa7-448b-b03a-9586c6e9d6f3",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ccf027dc-121b-45df-a9fd-1a302dffec82"
        },
        "item": {
          "id": "e138f15a-6a65-4999-9cb5-0d4646fef02f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1428b591-4205-47dc-a5dc-b5ce376b919e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fd5635-5d23-4327-a5e6-c9f8c2ea30f9",
        "cursor": {
          "ref": "81e8f1f4-09f4-4465-b579-c83c12632d9e",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7e9e9cce-bee5-4be8-b1d0-644ef1c5ec65"
        },
        "item": {
          "id": "91fd5635-5d23-4327-a5e6-c9f8c2ea30f9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ebc705af-518e-4166-abe2-55ad97598f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88dc786-be22-42dc-aa23-6b4cb6994e3e",
        "cursor": {
          "ref": "8f9f1d30-85f7-4052-93f5-d05416c15d9b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "47f50d2d-483a-4e77-ab52-dc79abfb5b54"
        },
        "item": {
          "id": "e88dc786-be22-42dc-aa23-6b4cb6994e3e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b1a5d4a6-d9ec-48d9-bca5-2bb7b790c6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4636ee72-c964-4ef2-bb57-390c1ff8cda8",
        "cursor": {
          "ref": "d6c26837-11aa-4192-a9c3-4eb58b09f180",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2268bb7e-8147-47ad-886b-1ad88062a84d"
        },
        "item": {
          "id": "4636ee72-c964-4ef2-bb57-390c1ff8cda8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a60f6c34-1aff-40cd-b05d-87ed82af491f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ff9e6e-1da1-4612-bed8-40bd13a40fca",
        "cursor": {
          "ref": "af98d9bd-2329-4d99-9e6f-0c8f40e15b50",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1e2b51e8-4c9f-47c6-92e6-dbe9d4da144c"
        },
        "item": {
          "id": "f8ff9e6e-1da1-4612-bed8-40bd13a40fca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "034f5352-e058-4762-ab20-6c7e04a454cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18599d34-5834-4bf1-9186-e42aaa95d0e4",
        "cursor": {
          "ref": "f04fc8e3-6e45-4859-b807-ef35b8ab2746",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "edf72c0a-b5c0-4efc-b491-c4138ff26161"
        },
        "item": {
          "id": "18599d34-5834-4bf1-9186-e42aaa95d0e4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "45cd14b5-1b5d-459b-ac39-f735ea1b85c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b261f03c-1405-4dd3-99e4-db0d8ab72626",
        "cursor": {
          "ref": "2adae37d-3068-41d2-87f2-e7fdf3275a3a",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cac46acb-1ada-44f8-b590-8bfb06ac786a"
        },
        "item": {
          "id": "b261f03c-1405-4dd3-99e4-db0d8ab72626",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "47fb7797-64ad-4458-9ff5-acf140b4b5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53c33e9-4358-4a5d-9729-03fd29e13fa5",
        "cursor": {
          "ref": "9ff0b8fa-3443-4dc8-b511-e5de84f85972",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "195a1388-da49-47ae-a9b5-ccca809352b2"
        },
        "item": {
          "id": "e53c33e9-4358-4a5d-9729-03fd29e13fa5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "261bedd9-9047-4389-9068-0f57f4e6fbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df23d519-3337-4b65-9358-c672195d128e",
        "cursor": {
          "ref": "05debf61-bddb-4687-acd8-e940638fb78c",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c62594da-9722-433a-8564-461c78defc6d"
        },
        "item": {
          "id": "df23d519-3337-4b65-9358-c672195d128e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e97dd134-5f87-4813-810c-ce3e4de89352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9303e80a-591d-450d-9781-9a425c53bdf3",
        "cursor": {
          "ref": "c12de581-1e7d-41db-be46-2aa7c3acc58b",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "aec441ed-3c0f-4869-9c6c-a828a2dd2e68"
        },
        "item": {
          "id": "9303e80a-591d-450d-9781-9a425c53bdf3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ce042956-0ee6-4644-bf69-48651177676e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa74f0e9-cf4b-498f-a44c-bf5100de6c16",
        "cursor": {
          "ref": "3544db5c-8292-4e48-b140-07105a791030",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "29e43bd4-4f89-419a-904e-67616654b2c0"
        },
        "item": {
          "id": "aa74f0e9-cf4b-498f-a44c-bf5100de6c16",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1a2e2f93-38b4-41fc-85d3-2378bb8dfc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9b7b72-1337-4c41-ac7a-0498376fe008",
        "cursor": {
          "ref": "a3b9c65f-696c-4ebb-af6b-00d39916d76b",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3b9ede8e-3bf1-4af8-9e62-34ed848dd360"
        },
        "item": {
          "id": "8a9b7b72-1337-4c41-ac7a-0498376fe008",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ee569b20-ef11-4ff3-b048-2b6a3f05cdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03134899-310c-429a-9e0a-7dcc8de0457b",
        "cursor": {
          "ref": "81ce97f2-de4b-400a-adbf-50d1d163eaac",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7b946894-3399-4f66-87af-257171d748d6"
        },
        "item": {
          "id": "03134899-310c-429a-9e0a-7dcc8de0457b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5c3d26bc-fe3e-4540-a822-481a32680cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c257e608-f9af-4e36-8dc2-9453448ad449",
        "cursor": {
          "ref": "76330b15-6dce-48a2-9016-40263d52cb46",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e6bd6f4f-684e-4b44-aa86-890c10cedc3c"
        },
        "item": {
          "id": "c257e608-f9af-4e36-8dc2-9453448ad449",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4aa1dfed-9966-49a0-9926-1383fb1242fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7abb145-89ef-4c45-abde-54bece43e9bf",
        "cursor": {
          "ref": "aeaa8531-a93b-4691-84d8-40db27e62379",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6c129143-3f88-434b-aa0d-02c07f2bf219"
        },
        "item": {
          "id": "c7abb145-89ef-4c45-abde-54bece43e9bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "79a8b933-6430-45b0-b524-339b44f3e497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdee1d5b-61b2-4f9a-bcb7-bd5098ce751f",
        "cursor": {
          "ref": "b4def268-1d45-4d9c-9388-27ea544bf04e",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bdbc20dd-b856-432d-992a-8038dac6dbac"
        },
        "item": {
          "id": "bdee1d5b-61b2-4f9a-bcb7-bd5098ce751f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ad4db58e-1417-4354-8669-f5a849336716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5df0d5-7e49-4851-874b-d3ae359b9b29",
        "cursor": {
          "ref": "42da7982-172c-4efa-9aec-c27da22fc1e5",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d22e1dbf-66e6-4764-8790-1478d132ba70"
        },
        "item": {
          "id": "da5df0d5-7e49-4851-874b-d3ae359b9b29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "af4a8e6f-4692-42e9-8cf2-6b1fc597c97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba1fa9e-bf94-40d1-8895-d15ded38cc06",
        "cursor": {
          "ref": "d7763506-db2d-4aca-9598-afae53e24414",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "aa75abc6-74d2-4519-981d-1a0542e86926"
        },
        "item": {
          "id": "3ba1fa9e-bf94-40d1-8895-d15ded38cc06",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e59fd0f6-414b-4d68-9b50-0dc02a57573c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a2570a-59b1-4a80-baf1-a9c1d68e2b3e",
        "cursor": {
          "ref": "8e3f4290-e1ec-408c-bc9f-ad5b29ba664a",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2281fca9-d861-499f-9d93-959f2e029c29"
        },
        "item": {
          "id": "75a2570a-59b1-4a80-baf1-a9c1d68e2b3e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d351b774-f1f4-45b9-b885-800152fd3c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32b8aa6-e786-4500-bb8f-8f54d3bc38bb",
        "cursor": {
          "ref": "34d48599-3d05-444b-85e7-281df18d43c4",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3d3b130f-06e5-444b-bae2-d351cf875e97"
        },
        "item": {
          "id": "f32b8aa6-e786-4500-bb8f-8f54d3bc38bb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "90ed74f9-8951-47c3-9f6e-5a61776adee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047dd485-f26b-4667-b512-4577f26e4fa8",
        "cursor": {
          "ref": "6c8bc927-8768-4f9c-9ead-9d21a3a1fc22",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bd073f2e-5281-45ea-a32c-f711376d1468"
        },
        "item": {
          "id": "047dd485-f26b-4667-b512-4577f26e4fa8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "740f75f2-7222-42bb-a617-83dba363811c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f4138d-8427-448c-9296-1397c83e097a",
        "cursor": {
          "ref": "366c2d31-c3fe-4855-9b08-8e4009520909",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5e16b95b-d4ad-4850-a173-0879b8eec489"
        },
        "item": {
          "id": "e1f4138d-8427-448c-9296-1397c83e097a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8837df06-3f09-4ca7-9be0-ea3d1f19c52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540a0ede-ccfe-422a-9142-3d2a1136dfd7",
        "cursor": {
          "ref": "5623435a-533f-4ba0-a5f6-d8f38fbf1df1",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0bdf0276-7e69-4582-beb2-2766f0efb2b6"
        },
        "item": {
          "id": "540a0ede-ccfe-422a-9142-3d2a1136dfd7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7852ab23-5e3e-499d-bdf1-c53d39492e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec63296d-c84c-4206-8bd4-727bc9bc28de",
        "cursor": {
          "ref": "874672d3-4c5a-4903-b75e-9fb737d0c269",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "63473b6e-6074-4c91-a586-feb1a23bf495"
        },
        "item": {
          "id": "ec63296d-c84c-4206-8bd4-727bc9bc28de",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2c7b4fff-f9bb-4932-a000-56d6fada2fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2395ee05-4bff-4453-8e9d-732b6bcd1584",
        "cursor": {
          "ref": "5db72600-14f4-4ff3-806b-9a9710b628e1",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "198aa328-3383-4592-80db-558845d401bb"
        },
        "item": {
          "id": "2395ee05-4bff-4453-8e9d-732b6bcd1584",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0088b014-69b7-4fa1-ab94-4d1a60597d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc12474-35db-4ff5-9116-52a23f281969",
        "cursor": {
          "ref": "2d04ee8d-704e-4565-9ead-873ca35709d1",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e1c2cedc-948f-4087-b954-f805390779b6"
        },
        "item": {
          "id": "8fc12474-35db-4ff5-9116-52a23f281969",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "52ea8d87-b68c-44c5-b6a0-b3ed8386c568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29f5a71-cf3b-4d6f-83c5-98fb85eab742",
        "cursor": {
          "ref": "32a53648-b63c-41ce-b739-19e4a14358dc",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0f25ef3a-1649-4c03-9c03-d0c1c5e184ab"
        },
        "item": {
          "id": "e29f5a71-cf3b-4d6f-83c5-98fb85eab742",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8b9ba290-633c-4cce-a6cf-f0b6a8b7f3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd71b13-c40a-440d-b2ac-65a6d77b4771",
        "cursor": {
          "ref": "457bb56b-0add-4619-afba-74f1721bd67b",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "956140b5-fe5a-48b7-a86b-a7f56a86d0f6"
        },
        "item": {
          "id": "2cd71b13-c40a-440d-b2ac-65a6d77b4771",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b198be40-0a0a-459d-85f8-2f30edabfca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086853a4-1256-46e8-980a-514e727a2416",
        "cursor": {
          "ref": "b3f57519-7dee-4e66-bfe5-63903c4619bb",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8c706569-799e-4a22-9a37-9f0564b5ca52"
        },
        "item": {
          "id": "086853a4-1256-46e8-980a-514e727a2416",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "710f6a19-4a99-487e-b217-7c2016e722f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a590874-58d0-4f72-afcc-77413163ea76",
        "cursor": {
          "ref": "13c08ef2-4c6d-468e-b902-47ad28a1f1a6",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8951d311-3b6e-4668-be42-4589a940aac9"
        },
        "item": {
          "id": "7a590874-58d0-4f72-afcc-77413163ea76",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "63072ed6-ab9f-46c4-abad-d605b3813be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8561d1c8-11fb-4e50-8804-a4ad695e9436",
        "cursor": {
          "ref": "dd7f1445-56cb-4ab8-bbfb-1a3196a149d1",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "def37aa7-0e9e-4eb1-8eee-02bf4780209d"
        },
        "item": {
          "id": "8561d1c8-11fb-4e50-8804-a4ad695e9436",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "49d9a432-f980-44e9-9e0a-3bcb378b78d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8c2032-0aea-4ed1-bc33-8a32e00319d2",
        "cursor": {
          "ref": "2151023f-a93f-4f99-b698-49e72457bf6a",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "97b23f3e-c9d0-4c10-a330-b3df92496d4d"
        },
        "item": {
          "id": "9a8c2032-0aea-4ed1-bc33-8a32e00319d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a41fdc05-16da-462b-a409-2a24fbd35a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86339042-8cb3-48f7-9dd3-0ad22a4c6401",
        "cursor": {
          "ref": "eec6edd1-d4f2-44d6-86eb-d7bdf14d8dc8",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "907665f8-0c90-4aab-be6f-58799a4bbd31"
        },
        "item": {
          "id": "86339042-8cb3-48f7-9dd3-0ad22a4c6401",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3653c3c2-d163-488e-a5ba-c11fcd14fdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707d550d-3602-4c9f-93ff-7ef2bd61e3cf",
        "cursor": {
          "ref": "5bcce7a7-ac64-4acf-b480-6d3dd8655569",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fd834abb-b5a6-48da-9c35-dcb4daccfe77"
        },
        "item": {
          "id": "707d550d-3602-4c9f-93ff-7ef2bd61e3cf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "38874d72-cc2f-4846-80fa-05e8a3f659e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982de4df-ef16-4a8b-be4f-9af4f131d361",
        "cursor": {
          "ref": "68fcf261-41d9-4954-a1e9-8a23833f50b2",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1bed8e7d-c008-49de-8b7b-b5b48661854f"
        },
        "item": {
          "id": "982de4df-ef16-4a8b-be4f-9af4f131d361",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "83058b9e-c910-4b16-aee0-519c2c9b5d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480a7744-8bfe-4b2d-ba7f-dcafc2760518",
        "cursor": {
          "ref": "b7f8a13f-ff9e-4848-aa7e-07b4d1668fdb",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "129256a1-22c8-4c70-992d-fae9409edf9b"
        },
        "item": {
          "id": "480a7744-8bfe-4b2d-ba7f-dcafc2760518",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a037f7cd-e581-4b42-8b9d-6ef818b42721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac24bbfb-266e-4f4a-ba93-f4351a2fca9a",
        "cursor": {
          "ref": "10635790-aa45-48d7-bf4f-1dd83720550c",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d6701bf6-9edc-4b9c-b1c1-5b15a350085f"
        },
        "item": {
          "id": "ac24bbfb-266e-4f4a-ba93-f4351a2fca9a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "59c1589e-59da-45bc-b49c-a82771f0faad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35329496-2650-4c8e-9775-85aaefa5cfc1",
        "cursor": {
          "ref": "ae23aa58-1f62-4ef8-9c3c-67e26c653f5c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "826f2c43-9896-4cd5-a6b7-a1ffbd83a752"
        },
        "item": {
          "id": "35329496-2650-4c8e-9775-85aaefa5cfc1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1a06fbb9-028b-487c-9c10-9d792be5e349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b949ffa2-15d3-486e-b7ab-17a6c2056dfe",
        "cursor": {
          "ref": "e1c71dcd-ce7f-4d8d-9538-a38165e5d68e",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2cc14d4b-f19c-4ab5-a324-9ae85c15b2e4"
        },
        "item": {
          "id": "b949ffa2-15d3-486e-b7ab-17a6c2056dfe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a8df04a7-5954-40ab-aaa6-ee3c659c8bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ff5571-b1ff-423b-a572-319ed290bac6",
        "cursor": {
          "ref": "929308b3-26c3-41e0-a85e-b108e339f861",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "215eab3f-8bc1-4030-8d24-ae681eb1ffc6"
        },
        "item": {
          "id": "61ff5571-b1ff-423b-a572-319ed290bac6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cfed474e-e891-4136-b6c0-e3aba44d56b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21858727-dfff-4456-9d89-8ce035b293b3",
        "cursor": {
          "ref": "0925e2ab-7843-4225-8be3-05e8ffd5fa8c",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2ce70f5a-5666-4cdd-b1dd-fe77bd7e43a0"
        },
        "item": {
          "id": "21858727-dfff-4456-9d89-8ce035b293b3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ce7b69fb-e23f-4edb-89fa-87e08c739b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e574b8-015a-4b32-a34f-b8b8df52cb54",
        "cursor": {
          "ref": "d248b88f-700f-4499-b927-ec71e9142006",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "88bbbdc0-f261-4f3a-aaae-46cfd96a2ae9"
        },
        "item": {
          "id": "32e574b8-015a-4b32-a34f-b8b8df52cb54",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "60226d25-1aa2-4a8b-a4cd-d2d4f1f91774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2dd342-6545-4e55-a2ab-2d911b92ab05",
        "cursor": {
          "ref": "a2cfb945-3457-431d-b4b5-f903b0f7a4f8",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e2c4416a-2849-49eb-a934-3fc22c5127bc"
        },
        "item": {
          "id": "ca2dd342-6545-4e55-a2ab-2d911b92ab05",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5809860e-9de4-42f1-8a76-60e0e750a3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e2c7db-bdcb-4f22-ac4d-e006eedd18e4",
        "cursor": {
          "ref": "5609d70a-1422-4b82-afe4-c30b38c74ea3",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b0931643-b7a8-40a0-a9bc-e007dffbe182"
        },
        "item": {
          "id": "c8e2c7db-bdcb-4f22-ac4d-e006eedd18e4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a324881a-156f-4bb0-8e94-99d1085af409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dbdd6a-8193-4116-99b0-e53b79ea1a8a",
        "cursor": {
          "ref": "9da1e7d0-6ab1-48b4-912a-e375db9ada6a",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "14728bfb-97f5-4a79-9719-1b83c1adf945"
        },
        "item": {
          "id": "d0dbdd6a-8193-4116-99b0-e53b79ea1a8a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "536db8db-caa5-47ae-ae1b-985f6c807528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629551a6-0dba-4779-a906-ce38bdd39f8c",
        "cursor": {
          "ref": "13d37953-f8e0-48db-946f-585869035b59",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "994bac6d-0504-4000-a611-ce76f3a56b51"
        },
        "item": {
          "id": "629551a6-0dba-4779-a906-ce38bdd39f8c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2498e45b-9934-4420-8fe2-5ea1f49a39d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd76b8d-4706-4b70-b266-f7d7a5392ee6",
        "cursor": {
          "ref": "35c40051-627b-4de7-8e5e-5291c8793876",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "154b33bd-e282-452c-a602-23cd8d752744"
        },
        "item": {
          "id": "3dd76b8d-4706-4b70-b266-f7d7a5392ee6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9d5560a5-1dd1-4d58-a785-16f51a9c89aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2830f7-cf89-4e3b-bc1e-1aef43a2d80b",
        "cursor": {
          "ref": "cff2887b-611d-4760-8541-b7be2b2e2475",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c8cc527a-6c53-4b9b-934e-0633a8de7644"
        },
        "item": {
          "id": "8d2830f7-cf89-4e3b-bc1e-1aef43a2d80b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9c1b046f-ca5c-49a5-bd34-495a09db62f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f76679f-7da2-43a4-9389-c7acf45ff30e",
        "cursor": {
          "ref": "e045f896-6b4a-4950-b595-b646a69fb758",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "12cbbb57-1a0e-4a75-b9a3-86d862b5756d"
        },
        "item": {
          "id": "9f76679f-7da2-43a4-9389-c7acf45ff30e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ae90dc21-1ebb-4161-80c3-0e15fc023c8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ff02ac-61ef-4c61-9ff8-04b490818d9b",
        "cursor": {
          "ref": "6cdf4fea-b558-4659-8cf9-c7e7e6ac9153",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3086dbfc-f831-4eef-ac1e-a28c9cf0010c"
        },
        "item": {
          "id": "23ff02ac-61ef-4c61-9ff8-04b490818d9b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "920df3db-25ea-4a10-936d-ee01c130f4d7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72c4752-e013-4491-b9e3-9dc949404507",
        "cursor": {
          "ref": "80946eee-7816-49da-af99-708ec218af77",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f3db7795-d339-47a0-9b73-43a58b85a57f"
        },
        "item": {
          "id": "a72c4752-e013-4491-b9e3-9dc949404507",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ee8a9a8-d7e7-4ef0-baca-81d03b9a3dfb",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c38eb74-796f-42ab-b0bb-e9e70ff17e06",
        "cursor": {
          "ref": "08226f7a-d905-4b81-aa80-2bd5f848eda9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "786260de-f94a-4762-b0ce-41fc536452eb"
        },
        "item": {
          "id": "7c38eb74-796f-42ab-b0bb-e9e70ff17e06",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c492b14a-fb3c-4ab9-b567-86cc469198a2",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d573bcf-11da-40bb-809e-c7d7f5ee3373",
        "cursor": {
          "ref": "fb3f3cd8-6286-4b65-b511-9af6b92a5663",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "85c2c3a9-2010-4bc4-bf6d-58d7d127f08e"
        },
        "item": {
          "id": "9d573bcf-11da-40bb-809e-c7d7f5ee3373",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c1fe12b7-c09e-44ae-9d71-576af0ba14e7",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4940702-8b2a-4a4e-b03a-fd927c9b9fc1",
        "cursor": {
          "ref": "0b212fa2-d9bb-4ffc-b351-e8834fa35578",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6448be9a-b9b4-4e06-8472-12c1425b461f"
        },
        "item": {
          "id": "d4940702-8b2a-4a4e-b03a-fd927c9b9fc1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1ec7e497-9a9a-4edd-9098-dfed3207806c",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e890bd-19a6-40c3-8adf-8e33c94dca37",
        "cursor": {
          "ref": "9936ef4c-b4fb-4e44-a258-4654bcf1f06a",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "229fcb00-e8ac-4b88-9f8f-4ddf3aff2e1c"
        },
        "item": {
          "id": "47e890bd-19a6-40c3-8adf-8e33c94dca37",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "76879916-de87-4b8c-a3bd-c6a6acd4834b",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dbdb82-f21a-47e8-9ae4-5e240b69a74d",
        "cursor": {
          "ref": "5b3cf196-1b6f-44d9-9631-5b4d7e16de3e",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0b3bbad8-9d2f-484b-8dd4-321e50b45da9"
        },
        "item": {
          "id": "a4dbdb82-f21a-47e8-9ae4-5e240b69a74d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "472c1d0e-c38a-4d1a-a8d2-c049cfcb67ed",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1579f877-976f-4695-8073-546fb69203ed",
        "cursor": {
          "ref": "97746845-b4fa-4dd7-923f-9ffa6b44d9a3",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9c71b361-15f9-4172-ab79-201cbdab1d8d"
        },
        "item": {
          "id": "1579f877-976f-4695-8073-546fb69203ed",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98162854-5992-4821-a1a2-ec61e873342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1579f877-976f-4695-8073-546fb69203ed",
        "cursor": {
          "ref": "97746845-b4fa-4dd7-923f-9ffa6b44d9a3",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9c71b361-15f9-4172-ab79-201cbdab1d8d"
        },
        "item": {
          "id": "1579f877-976f-4695-8073-546fb69203ed",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98162854-5992-4821-a1a2-ec61e873342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fab7a14-22dc-401f-9f13-b21e8d8affc2",
        "cursor": {
          "ref": "d7668c44-b89b-4021-a255-437858d10b21",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c7c03a0e-61a0-45b0-b307-f59c57152f01"
        },
        "item": {
          "id": "9fab7a14-22dc-401f-9f13-b21e8d8affc2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6368abd9-af8e-4b4d-885d-173ac9c4a279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1464295f-d463-4829-96ee-aee275d1bcbd",
        "cursor": {
          "ref": "73774ec2-8eb5-4105-b9ea-c5ebd216aa65",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6e5f4001-9e4b-4b30-95ce-9061a5337615"
        },
        "item": {
          "id": "1464295f-d463-4829-96ee-aee275d1bcbd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4742975b-61a6-4144-9e80-7600b5fe7aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b66234-0a33-4875-a098-5091921f4b72",
        "cursor": {
          "ref": "b139bc6f-896e-4822-b811-5cb42730ac65",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "85f579b7-12d7-4666-a8d1-ba6e272474b0"
        },
        "item": {
          "id": "f7b66234-0a33-4875-a098-5091921f4b72",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "300fb6a7-0bf2-4d7c-b4f2-c239ca2369e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0bd5fa-5ec3-4ea1-9ad4-3bff7756ae79",
        "cursor": {
          "ref": "a93c8fac-3410-44e1-9e1a-1ab6f12b4bb2",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "beef064a-991b-4302-a15b-6eb5cd1b806c"
        },
        "item": {
          "id": "8c0bd5fa-5ec3-4ea1-9ad4-3bff7756ae79",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "23972d80-c3f7-4dec-98df-a88141cd7d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c75e671-590b-4149-8cf0-70d89dd95064",
        "cursor": {
          "ref": "7adb663a-6375-471a-a0b2-2970f59988a7",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c7f5e0b6-babf-4312-b2cf-745881f2cfae"
        },
        "item": {
          "id": "5c75e671-590b-4149-8cf0-70d89dd95064",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ad67d75c-ee1c-424d-be1c-ac738230eb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628a1d48-7aad-4535-be50-d07bc24f302a",
        "cursor": {
          "ref": "4f0136f7-7406-4287-8b55-5c5cbd21bfb8",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2bf2f73b-ee41-47d2-896e-f6624658939b"
        },
        "item": {
          "id": "628a1d48-7aad-4535-be50-d07bc24f302a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0346dfee-172c-495c-9cd9-81de1a0eddc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d27f37b-23d3-4906-8f50-b1882db94237",
        "cursor": {
          "ref": "bb20fd55-75ca-468f-ba7a-2bbeb269aeab",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "099b9c78-d523-4f10-b2e0-8e2ac764b55f"
        },
        "item": {
          "id": "5d27f37b-23d3-4906-8f50-b1882db94237",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b00487eb-a79f-49c7-8edb-72fa6e98c545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e8d947-c1df-45be-8fcf-42c5f77ca568",
        "cursor": {
          "ref": "04331c1d-a47b-452b-a0a3-662abc43f278",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "11b6449f-0c66-4a47-9e47-ad87aa7f7b7f"
        },
        "item": {
          "id": "d0e8d947-c1df-45be-8fcf-42c5f77ca568",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5726434f-56d3-422c-b21a-d50350effa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4999f826-5c07-4e3e-aeba-5d6de81d5d14",
        "cursor": {
          "ref": "c6e42f91-6701-4b17-b6a8-28a6ca581968",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9b9be372-7979-42c4-8749-01e995bc22b9"
        },
        "item": {
          "id": "4999f826-5c07-4e3e-aeba-5d6de81d5d14",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8dba4581-f73b-44de-a32c-54d9bb01130b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c017e65-5466-4295-a471-2cde50b6eed6",
        "cursor": {
          "ref": "93f7507a-a5f3-4bd7-9408-78bfca7305b6",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a7c406ff-c8e0-4bfa-be99-d1676b891eca"
        },
        "item": {
          "id": "6c017e65-5466-4295-a471-2cde50b6eed6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f382fd00-98aa-4379-a9bb-59956b15a0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d91194-da3c-49c4-9c06-fa0bf76fc641",
        "cursor": {
          "ref": "82259630-3060-49a8-91e2-6d88c0a435e8",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "373a28f7-29b9-4080-93ad-d7d324e3d945"
        },
        "item": {
          "id": "f7d91194-da3c-49c4-9c06-fa0bf76fc641",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3d20f5a-43d5-40d7-aad5-9c875e24a297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84775449-5325-4efe-8324-aac434103fb6",
        "cursor": {
          "ref": "cad30163-97b3-4443-bfd3-864baafaf150",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "187d7073-b881-4dbe-83dd-b11a6fffce60"
        },
        "item": {
          "id": "84775449-5325-4efe-8324-aac434103fb6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bf0e0bda-a9cf-4dcf-830f-05cbab910b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0df05cf-52ba-45c6-b2e6-f1b42a79f439",
        "cursor": {
          "ref": "b16065e5-6ed3-4df5-bb73-e2be5ab6fb2d",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0ba2eff1-16a2-4ff9-973a-5f2379658c6e"
        },
        "item": {
          "id": "f0df05cf-52ba-45c6-b2e6-f1b42a79f439",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "727a3932-516f-4ebb-a66f-c3e1fbd2d292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59a25f5-499e-4348-b8f2-e5a90e15dbc3",
        "cursor": {
          "ref": "29160764-ccf0-4057-a142-adac6aea0fe4",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "386b81cc-19f7-4d9b-8d1b-c24a16089224"
        },
        "item": {
          "id": "c59a25f5-499e-4348-b8f2-e5a90e15dbc3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3618279a-45b2-4b46-a213-0bcbcfc9b580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda22b3d-5971-4642-92ed-169c1aba8b98",
        "cursor": {
          "ref": "3633a5b7-90d2-497b-943c-fabc63594a91",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5fa73821-b096-4bc5-948a-5a68d3de7096"
        },
        "item": {
          "id": "fda22b3d-5971-4642-92ed-169c1aba8b98",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8c3d2725-7f70-4979-83f0-e83d61a78168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6dd11b-dcba-4c12-9a1d-642b23f218e6",
        "cursor": {
          "ref": "939e05af-7ad9-4bec-8a3f-f041f1d43f54",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2d241d21-942e-4303-a805-994723716f2c"
        },
        "item": {
          "id": "fe6dd11b-dcba-4c12-9a1d-642b23f218e6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d66c6c23-2aa0-4801-a872-dcd7baf92628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdf2a78-eefb-4064-abe9-2e1d78203ac5",
        "cursor": {
          "ref": "ae137668-4961-4d63-85a3-18c9c5772a9f",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1bea8453-2700-442d-aa79-5f0886d0809f"
        },
        "item": {
          "id": "ebdf2a78-eefb-4064-abe9-2e1d78203ac5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ed5bff20-d2c6-4923-9967-2b41fd31f8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee6cb00-3ccf-4e67-8e50-e8bc9e3b9ab2",
        "cursor": {
          "ref": "80296d32-0d17-41e1-a6cd-b9f69f0e0fe7",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c5ef0714-87d3-4a0b-86e5-b8869f5dcbe9"
        },
        "item": {
          "id": "aee6cb00-3ccf-4e67-8e50-e8bc9e3b9ab2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b858ffc3-4072-4ccf-aa1b-c96eb877eede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056ccc6a-b66d-421e-b569-b5c86c5421f0",
        "cursor": {
          "ref": "33feff01-80c5-40e7-b8bf-b645a2705b99",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2e5baeab-8964-4a09-b33d-a4a02cc245e1"
        },
        "item": {
          "id": "056ccc6a-b66d-421e-b569-b5c86c5421f0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cdf62bd5-39d1-4b50-a077-05ce3a2335da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea652ac6-6cf8-4a0b-a993-03dcbbdd6e2b",
        "cursor": {
          "ref": "008ddcfc-8f7f-46cc-9299-3cc121179b0a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9d4068e6-9417-4d11-9672-ce7925c17736"
        },
        "item": {
          "id": "ea652ac6-6cf8-4a0b-a993-03dcbbdd6e2b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "74e7d658-0276-45f4-a229-06286de4f567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b0676d-cfa3-4d08-b0cf-066b9340cbdc",
        "cursor": {
          "ref": "d987a571-8a31-4bdf-b735-973bf701b3d3",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1c4e78b9-80a3-4cae-9440-391e3dca1e18"
        },
        "item": {
          "id": "68b0676d-cfa3-4d08-b0cf-066b9340cbdc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "02ae2d2b-701b-4335-88fe-234ce39851ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8f1e1f-2f3a-46aa-800b-d755dcb8326f",
        "cursor": {
          "ref": "6b54498e-315e-4395-962a-ad348657057c",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a095d473-8b39-4179-9253-c8b4df2446e5"
        },
        "item": {
          "id": "4e8f1e1f-2f3a-46aa-800b-d755dcb8326f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5b9ba923-69f1-46db-90d8-fee2627c8aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86070b8b-307b-4ab4-a400-9a2a3aca1888",
        "cursor": {
          "ref": "e4d9b7da-fe04-42ce-a196-4abb10e91675",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1044c522-3644-4ce3-82e5-411bd1bf6949"
        },
        "item": {
          "id": "86070b8b-307b-4ab4-a400-9a2a3aca1888",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8c5503a5-1de8-4959-bf3c-63c3840ba7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe473bc0-8648-431a-bc5d-2e8cd347d032",
        "cursor": {
          "ref": "550087d9-a8db-46b1-b003-4e73af362de7",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f6ee2585-42ab-44a7-9a90-d1f0f125aef7"
        },
        "item": {
          "id": "fe473bc0-8648-431a-bc5d-2e8cd347d032",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e14d5041-667b-4f33-9bf1-30ce0058f719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348c152f-668d-40ca-9622-311392a966eb",
        "cursor": {
          "ref": "4162fe46-ab25-4d98-a264-eea362d06db4",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "74eed1e8-84b3-496a-b18c-09bb5bae8aae"
        },
        "item": {
          "id": "348c152f-668d-40ca-9622-311392a966eb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a059b69a-79fe-496f-a253-c2cd53273272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ce343b-b8f8-41e3-8bca-74ce673bf84a",
        "cursor": {
          "ref": "be18d18e-843d-4852-ab11-5020119ff135",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "10b3f205-3948-46ce-9c94-abe44080d153"
        },
        "item": {
          "id": "32ce343b-b8f8-41e3-8bca-74ce673bf84a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "82eca539-0a7b-47e4-8ce5-cd58cf0ab081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28886cd6-c492-4491-85da-4de6a8b8b31c",
        "cursor": {
          "ref": "7f55d3a4-0628-4f64-bbf5-d61b0ae44dc3",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "08f72ea0-aefe-4c97-9e95-92245b2a8b7d"
        },
        "item": {
          "id": "28886cd6-c492-4491-85da-4de6a8b8b31c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9a454932-4400-45e4-92e8-c12f3cd80714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77968bbf-ac95-457f-b342-3bc2ed29cead",
        "cursor": {
          "ref": "a26e928a-3986-4b71-8abb-9af23900af11",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0bc2df52-3ad1-41b8-b59f-1b68e8f78443"
        },
        "item": {
          "id": "77968bbf-ac95-457f-b342-3bc2ed29cead",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3b79d5b0-7fb1-4772-989e-c06c1bc719bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebdf21a-344c-4829-83ec-d405f7490f51",
        "cursor": {
          "ref": "5e141cb0-58fa-43a0-9831-33360ea22ebf",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "14ebad21-02d5-4a84-894f-d65c897294b4"
        },
        "item": {
          "id": "cebdf21a-344c-4829-83ec-d405f7490f51",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7305755-7b3a-4785-b1ac-5db2b9279d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caf1628-a193-41cd-8e80-ee70c6e0e3cd",
        "cursor": {
          "ref": "34a5e6fd-6e28-4877-b682-79fefdb1059e",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "59e97220-6503-4837-a67c-41fe2b7d41dc"
        },
        "item": {
          "id": "2caf1628-a193-41cd-8e80-ee70c6e0e3cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d89414d7-de84-4a48-9dd7-bf1e55288a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ddb7aa-c822-4463-a3aa-044ff546dedb",
        "cursor": {
          "ref": "0ac7b297-d3b7-4591-b74b-ebc3cfbef895",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1d3f9624-2d1b-4b55-9a7a-54d343c2af53"
        },
        "item": {
          "id": "32ddb7aa-c822-4463-a3aa-044ff546dedb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e686ed26-ef4d-4197-bac1-4274e05ddbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9148dc-d8a6-4733-9b27-077301c6d8c6",
        "cursor": {
          "ref": "5a04999b-3a3c-490e-8894-acf67e376c06",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5929510f-5dae-4ffe-92db-44d3132d13b7"
        },
        "item": {
          "id": "6c9148dc-d8a6-4733-9b27-077301c6d8c6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1a8a8851-8e6a-4a6f-8490-846c9330869c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b0b31d-0267-42b4-87b5-6d7cfcd622a4",
        "cursor": {
          "ref": "958b38a1-eb7c-4c23-aaf5-910d2b056bf6",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "656fd91a-c633-4d76-9cf8-ab5bfe559820"
        },
        "item": {
          "id": "63b0b31d-0267-42b4-87b5-6d7cfcd622a4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "24204974-07c7-483e-b954-75db637a14ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa0a310-3529-48d9-842e-95ad55e5b8da",
        "cursor": {
          "ref": "ff2f67c8-afcc-4ac1-9a2e-d27163484ecb",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fc51ec54-5f22-4212-ab73-49abbd91ae22"
        },
        "item": {
          "id": "aaa0a310-3529-48d9-842e-95ad55e5b8da",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "50d735e2-052c-4546-a8f6-a87641e597ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa0a310-3529-48d9-842e-95ad55e5b8da",
        "cursor": {
          "ref": "ff2f67c8-afcc-4ac1-9a2e-d27163484ecb",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fc51ec54-5f22-4212-ab73-49abbd91ae22"
        },
        "item": {
          "id": "aaa0a310-3529-48d9-842e-95ad55e5b8da",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "50d735e2-052c-4546-a8f6-a87641e597ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52ec65a-018a-470b-a1dc-6fc0f5019f8a",
        "cursor": {
          "ref": "fd6d16fb-6736-4576-9c70-f396f7449dfc",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "33dd86e1-557c-4399-bf6b-39db174dea7c"
        },
        "item": {
          "id": "a52ec65a-018a-470b-a1dc-6fc0f5019f8a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1fafba3d-9a6b-4b66-9871-8ed4b95ed4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33abf987-3ee0-4309-80a6-4c4aa5e1f4e6",
        "cursor": {
          "ref": "b829e88c-7d9f-48fa-9c2b-9639436aa9f1",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "35907479-06a2-483c-bd9c-3b53b98da86c"
        },
        "item": {
          "id": "33abf987-3ee0-4309-80a6-4c4aa5e1f4e6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f1bf22c9-e40f-47d9-8a15-d90fccc15193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac15e8d1-c035-4d50-ae9a-6861b159ca3d",
        "cursor": {
          "ref": "733ad230-fe75-45e6-b82d-d807b93c8409",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6eac9ea0-bff8-4a5d-9031-744ecb166af8"
        },
        "item": {
          "id": "ac15e8d1-c035-4d50-ae9a-6861b159ca3d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5ce6b11e-ad28-41f9-b870-61973d97d00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a1973e-ba7a-44f1-9066-8073378290da",
        "cursor": {
          "ref": "bde43e51-4300-4049-a630-f9f8ad5bfe91",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "59d0adbd-b819-48b2-b826-9f0f5f2494b3"
        },
        "item": {
          "id": "11a1973e-ba7a-44f1-9066-8073378290da",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "eee79b40-a716-488b-8668-57a0ba2edf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d21ef8d-5f41-4862-94db-73351b6e4432",
        "cursor": {
          "ref": "f3826ef4-4abf-474d-b090-9f98552930a0",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0ae7b41c-d152-4922-8f5c-962243bb7bf9"
        },
        "item": {
          "id": "3d21ef8d-5f41-4862-94db-73351b6e4432",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "791248aa-84df-470b-bf91-fc555f729cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5b1e22-eb83-4f77-a089-e7d5ea44d636",
        "cursor": {
          "ref": "de36dd73-9b2f-4ce5-afe4-f0517203d53c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "33780453-4863-4c5c-ad69-e2cb188581f8"
        },
        "item": {
          "id": "ba5b1e22-eb83-4f77-a089-e7d5ea44d636",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8c954bb2-137d-490a-8b7f-b5c17aba6091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f85442-f158-4069-bdce-54b6623283b0",
        "cursor": {
          "ref": "1ec7d1f1-17c3-4ab4-bcef-63c486e71402",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "841e7c1b-a5cf-4140-b63f-967b7bb07e6a"
        },
        "item": {
          "id": "c2f85442-f158-4069-bdce-54b6623283b0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ea15d0b7-70c1-4aff-bbb7-9878e780322d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ee2138-9e78-4175-a36f-c22de003ed18",
        "cursor": {
          "ref": "d4f2118f-0965-4175-9d8c-82ca662d9a73",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9f9615e8-1acf-4eee-b84a-c1961764e488"
        },
        "item": {
          "id": "88ee2138-9e78-4175-a36f-c22de003ed18",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ef48dab4-7ea5-4b84-a4bb-2d364614cfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e07f36-a86d-40cd-ad39-b321c84b1f2b",
        "cursor": {
          "ref": "6a7b1a13-def8-474d-96aa-ad9f6a3ab2d6",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5922ca1e-8174-4976-b402-729d9cead770"
        },
        "item": {
          "id": "48e07f36-a86d-40cd-ad39-b321c84b1f2b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a58c708a-3961-44da-ac1e-dab436ca7f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d82efec-49e3-4f12-9bc8-9ce440aa1266",
        "cursor": {
          "ref": "25bca24c-eb71-48f4-9ca4-4a2cc6103129",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8c4ce54e-4ec8-4e52-b58d-af202399a8b5"
        },
        "item": {
          "id": "4d82efec-49e3-4f12-9bc8-9ce440aa1266",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9b9a07ef-b514-49b2-8b1f-9abe6e0d5e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055c552b-04ac-42b7-9991-72773c9abd92",
        "cursor": {
          "ref": "2121a740-74ab-42cc-b943-128124b6acf4",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "78acee59-3540-4a46-ac5a-b18a94c60f58"
        },
        "item": {
          "id": "055c552b-04ac-42b7-9991-72773c9abd92",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2103a88d-771e-4b7c-b3e2-384666573134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0b42ec-433e-4dd1-8914-85b75bae57cc",
        "cursor": {
          "ref": "79333b02-910c-4497-b770-07b53a7c372c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c390ebb5-d39e-4f8b-be19-fcd060a6be9f"
        },
        "item": {
          "id": "6d0b42ec-433e-4dd1-8914-85b75bae57cc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0133e963-425b-4615-99f4-5428c43097c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95801b13-4f17-4924-aaf8-c1a2b29f303f",
        "cursor": {
          "ref": "a38cab76-70d7-4023-9740-0d10c6ecc82d",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "315c2cc6-c9ec-4b13-ad65-64accfdf66e1"
        },
        "item": {
          "id": "95801b13-4f17-4924-aaf8-c1a2b29f303f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "347b43bc-65ed-420b-b456-1bce9bd4c7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b94914c-10ca-4cca-a160-21300017b37b",
        "cursor": {
          "ref": "f709dbf4-ca4a-4b49-81b0-c7ef61d87c0a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4924803e-6ba9-4525-a295-935c9914e476"
        },
        "item": {
          "id": "9b94914c-10ca-4cca-a160-21300017b37b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3dc16d13-912f-4f54-9777-747d5ef65b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96356537-3f28-4749-8f78-48d828a1a51a",
        "cursor": {
          "ref": "3de03098-15ea-4a30-8dbc-003ad7bd2d02",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b9e3f9a9-6a8f-4128-941c-4000a78a203a"
        },
        "item": {
          "id": "96356537-3f28-4749-8f78-48d828a1a51a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dcf85cd6-84c8-42e5-a15c-18335bb576ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985f8c62-e34b-4856-8c16-b5f6498c8fcb",
        "cursor": {
          "ref": "439dd261-c0cd-44a2-928b-4baf0b59d1ea",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7f281ced-04f6-486a-b9ad-afc5b64d7272"
        },
        "item": {
          "id": "985f8c62-e34b-4856-8c16-b5f6498c8fcb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5ba866e4-9783-4227-9882-25ccaebc398b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827eabc4-6182-46dd-a3d9-945c69fafeab",
        "cursor": {
          "ref": "7df0d7bc-2ead-495a-9c6a-e9f73a4ee6ed",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dec802d9-ad13-4b4b-8270-cab133383bf4"
        },
        "item": {
          "id": "827eabc4-6182-46dd-a3d9-945c69fafeab",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "29fbcef4-b1c6-4519-bfac-8826779c3f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9dcc3d-e0b7-49a8-9c54-8b30a3e012bc",
        "cursor": {
          "ref": "98c9344e-4139-44c3-9d21-062b1aec93e0",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1d911cb2-b775-4e06-b77f-9df6a7e3e330"
        },
        "item": {
          "id": "bf9dcc3d-e0b7-49a8-9c54-8b30a3e012bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f1a7da26-0b98-4af2-8cae-414bb60b30c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491c8b59-0840-4972-a9d1-1b13bab27d31",
        "cursor": {
          "ref": "ced3ad19-8980-4d40-918d-b9e5f9168a07",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "72ac74d5-b324-4a57-8e62-a0cfe255aace"
        },
        "item": {
          "id": "491c8b59-0840-4972-a9d1-1b13bab27d31",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eb3bdbd5-efe8-49a8-bdfa-4689e7ad44f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae0b463-5f2c-41ed-ae9d-014d45428bcf",
        "cursor": {
          "ref": "df3123fe-6514-45a8-a144-55474ee5d136",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2bddfe1c-7343-41af-bb41-157d17ba0175"
        },
        "item": {
          "id": "5ae0b463-5f2c-41ed-ae9d-014d45428bcf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6d670e26-11a0-4cff-a3cf-bfd177d77fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d27566-6f3b-4d56-a298-fa9e6eecdd9b",
        "cursor": {
          "ref": "cf83a352-f3a5-4b52-b731-01ab8a43eb62",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f3cbba5a-98ec-47aa-8763-81e2d4b59a3f"
        },
        "item": {
          "id": "68d27566-6f3b-4d56-a298-fa9e6eecdd9b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3c2e3462-eb37-4f66-b3fd-af4990585331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34d9213-a240-4cc1-adb4-578b4476efb5",
        "cursor": {
          "ref": "aeca37b9-ddfa-4449-80ab-fc2fd7c9cc0a",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eaed691f-74c1-4ae3-9dc1-42c2ff2a8dc7"
        },
        "item": {
          "id": "d34d9213-a240-4cc1-adb4-578b4476efb5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8560e275-328e-4ebf-b394-69412c2218c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef005392-fb90-464d-8260-12820f50361e",
        "cursor": {
          "ref": "04f03f03-090e-40f8-9532-5eb19dd92431",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "33c25aae-9321-4107-90ee-308c78b8e83f"
        },
        "item": {
          "id": "ef005392-fb90-464d-8260-12820f50361e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8a3b4de0-95eb-4776-8c95-53e01dc4223d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fa612e-e7ae-4563-8aab-187dba028c63",
        "cursor": {
          "ref": "3b971a12-9d3f-4fa0-bfeb-ee98b6c72bed",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "61f987a4-09e4-4cd5-8692-654fcdbf801a"
        },
        "item": {
          "id": "81fa612e-e7ae-4563-8aab-187dba028c63",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a46d4f45-10bb-4550-b359-3173ae4a52b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f53884-51f9-4e86-8604-bef0cf2bdf51",
        "cursor": {
          "ref": "dd2c04d3-9d4f-4c84-9c44-31b8629fbb08",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "144f88eb-4a12-449b-9a63-07ed7278a308"
        },
        "item": {
          "id": "09f53884-51f9-4e86-8604-bef0cf2bdf51",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f837cffd-5f99-41ef-abaf-9ce1ea31a848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e59b80d-3ed5-4d7a-8900-1d9a61d305fe",
        "cursor": {
          "ref": "f3ce8f6b-b675-4758-b1b5-29c912a5bde3",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b6a0bf13-4646-421f-88a3-28fd32a78d73"
        },
        "item": {
          "id": "4e59b80d-3ed5-4d7a-8900-1d9a61d305fe",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c7541408-1a0d-44c3-94e1-f4067620caf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8272ece5-f70f-4855-bbcd-3759a60f334d",
        "cursor": {
          "ref": "d78e1981-00bb-4e26-9d49-14a21503d55b",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "51097f55-290f-4ef8-bbc0-43f3aec54975"
        },
        "item": {
          "id": "8272ece5-f70f-4855-bbcd-3759a60f334d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "82c31ba1-fc93-44ff-baf4-e64cf5c1cd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcca423-2e2a-40f0-92d1-b4daea072296",
        "cursor": {
          "ref": "b993109f-09df-40ba-804c-fc07bc77daf6",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c1091a2a-5726-47d7-8898-89bb55dd32aa"
        },
        "item": {
          "id": "3dcca423-2e2a-40f0-92d1-b4daea072296",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e0a574b4-657a-44fc-81b6-76946cec553f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e8830f-333b-432d-a624-07efe8857a50",
        "cursor": {
          "ref": "762afae0-3d2d-41d0-b9ee-cc133a27d1de",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8bec458e-8c31-4acc-9571-0a2115bdfdbc"
        },
        "item": {
          "id": "f1e8830f-333b-432d-a624-07efe8857a50",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "80ecb068-cc44-4885-806d-ae43da6eede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d74f7b0-69c0-4e43-957c-1c13e76d7f37",
        "cursor": {
          "ref": "ed607fe0-ac6c-4506-9526-d8bfb23c4807",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "09e5d6ac-2245-417f-816f-3aa69e506064"
        },
        "item": {
          "id": "0d74f7b0-69c0-4e43-957c-1c13e76d7f37",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2db7417f-c935-4d6b-a1b1-fa2239bc5f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcbe57f-46c0-4333-be3f-395d5a21b70e",
        "cursor": {
          "ref": "3e01e75f-840d-4ee7-83ad-6a64269817b7",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "08337249-5353-4489-8fbc-e4c60a4445e6"
        },
        "item": {
          "id": "dbcbe57f-46c0-4333-be3f-395d5a21b70e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bce8ad4a-0f26-44d6-b113-463e28a88297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ba7ed4-a278-4b55-a942-c591875b3d95",
        "cursor": {
          "ref": "7822573b-2a18-4ff4-b20d-b8cd0afb53a4",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0cbf8d4b-9846-4758-99cd-24697f7aae47"
        },
        "item": {
          "id": "c3ba7ed4-a278-4b55-a942-c591875b3d95",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6ee67293-fc85-48d8-9091-0b39ac215160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ff1b92-87ec-4a6b-ba55-c9ca9f7e68b7",
        "cursor": {
          "ref": "24f61e32-91d8-46d7-ad55-f3ab5e6d1259",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b3f5d03c-7c4a-436e-b3b0-42088a2621a4"
        },
        "item": {
          "id": "d4ff1b92-87ec-4a6b-ba55-c9ca9f7e68b7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3634eed9-4ffa-46f5-9c46-05151398eef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33acd1bf-2ff8-4f97-a3ee-dea44f707390",
        "cursor": {
          "ref": "a6ad2934-cccf-4358-a806-0553a85ed4bc",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "24431e35-b868-47dd-9bd6-ffc386aeec3b"
        },
        "item": {
          "id": "33acd1bf-2ff8-4f97-a3ee-dea44f707390",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a77e7b3c-6745-4efe-8548-9555fb7dff6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347001d0-b0b3-404d-9b47-03c0b34447f6",
        "cursor": {
          "ref": "711b1a22-e757-4176-8364-c7cffa30dff1",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "76d0a5bd-c7bd-462a-973b-e40aa1d49d30"
        },
        "item": {
          "id": "347001d0-b0b3-404d-9b47-03c0b34447f6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4ef478f5-fa0c-4329-8c64-eeec6ebaf33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a03877f-6c5b-401c-9470-2516699a11f8",
        "cursor": {
          "ref": "8d9b4a0c-1ceb-4201-8c4f-ff90250cb180",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7518b50f-095a-4170-bee3-ad04a2b6d15a"
        },
        "item": {
          "id": "9a03877f-6c5b-401c-9470-2516699a11f8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "13b1b983-2a6b-4f28-b4d6-dc99cb88f569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdf1db3-c04f-42f2-b80d-f785f5e7e5e9",
        "cursor": {
          "ref": "f58c0069-a75f-4c90-92df-cc6179ae8c29",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "da42dca4-a9ff-4ad8-8826-507920512076"
        },
        "item": {
          "id": "8fdf1db3-c04f-42f2-b80d-f785f5e7e5e9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e390ef0c-8dbc-4d03-a9e8-e4371f33df85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ae10b2-fe47-45e9-9d1f-6185359e6d9a",
        "cursor": {
          "ref": "a3130a0b-f1f8-4f96-a3d4-c05178b56e4b",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f1e91fe2-89b7-4ee0-be82-9a9bdd49de9d"
        },
        "item": {
          "id": "22ae10b2-fe47-45e9-9d1f-6185359e6d9a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3a704ab9-5dd7-4cad-869b-0438b1f38802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792a5773-f49d-474c-b64e-1bc5620a421e",
        "cursor": {
          "ref": "4f58f346-5238-45c9-8287-d9469ddf3083",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9272a250-f992-4457-97b4-80902f44688f"
        },
        "item": {
          "id": "792a5773-f49d-474c-b64e-1bc5620a421e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "edeec572-0a8b-45e4-afd8-ba7c3fcb8a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2eadc9-2e04-4aae-9c65-5576f5ca764d",
        "cursor": {
          "ref": "afca8740-284f-479f-91b6-9c96a99e4508",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a0013a3-60e4-4ca4-a481-3cbd3efccf14"
        },
        "item": {
          "id": "9e2eadc9-2e04-4aae-9c65-5576f5ca764d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c3e9037a-c03d-4716-b336-58886e77011c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcf0863-7545-4b06-9ee0-155795a43d1f",
        "cursor": {
          "ref": "762fc932-8774-4820-b4c2-d81048fa6552",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c7bd6fc8-b76d-479c-8664-e212e69a200e"
        },
        "item": {
          "id": "9dcf0863-7545-4b06-9ee0-155795a43d1f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5a31204f-25d6-4acd-bf20-cb31532733e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644ab920-1533-4dba-a2a5-b7c125934932",
        "cursor": {
          "ref": "56d3290d-38d9-45a6-82c6-bb42836fb520",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "37ed89a4-2598-4e88-8411-1848eb4a9bf5"
        },
        "item": {
          "id": "644ab920-1533-4dba-a2a5-b7c125934932",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5ed61acc-4082-44f5-8f95-66d6f27b5183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922e6041-70ce-4886-9a83-337175f3fe84",
        "cursor": {
          "ref": "31a62855-5590-4daf-8571-5992e08c447a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0a09b4f3-35a8-44e7-bdab-6a5144db8f77"
        },
        "item": {
          "id": "922e6041-70ce-4886-9a83-337175f3fe84",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "650f2005-2cfc-4fce-a35d-040b7d171d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565ef954-660b-4be2-9bca-02793b37c113",
        "cursor": {
          "ref": "4a7e0687-a1c9-4657-be26-7665758301f4",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9054c857-f162-4b88-9021-d2a2c474c7d0"
        },
        "item": {
          "id": "565ef954-660b-4be2-9bca-02793b37c113",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a6cd1b42-442e-4ba8-9042-7cfc9a21c29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a83bda9-4b33-44fe-b614-36303c644aec",
        "cursor": {
          "ref": "95dacb4a-58cf-4506-aec4-3a2c61fa2c6c",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "51a5eb78-3fff-4659-9f12-47219b710868"
        },
        "item": {
          "id": "0a83bda9-4b33-44fe-b614-36303c644aec",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b4bcecd6-b0f3-4db2-9bbe-140ec4b45f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ea04bb-ac06-4590-96e3-0a5f5286b744",
        "cursor": {
          "ref": "78478227-3cb6-410a-aff1-f7409877d733",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "67158805-fb88-4229-b42c-e390253fbdb8"
        },
        "item": {
          "id": "24ea04bb-ac06-4590-96e3-0a5f5286b744",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "46501db7-5424-41b8-8503-b359f98d6060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5946ef3-3090-41c4-a19e-dee5138a110a",
        "cursor": {
          "ref": "dbd14fa1-af37-40ab-8577-905cfa24371f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3ba3df85-e67a-447e-b719-e9f0b08777ac"
        },
        "item": {
          "id": "f5946ef3-3090-41c4-a19e-dee5138a110a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "af443b6f-3b5e-4cd8-a90f-2e3ac6111a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182c8ddb-aca3-40e0-9e91-42dd84f51168",
        "cursor": {
          "ref": "6d089431-119c-4234-ab42-8ef2cbc58689",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "50d3f819-41bd-466c-b515-6d2bf54eb130"
        },
        "item": {
          "id": "182c8ddb-aca3-40e0-9e91-42dd84f51168",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d045ac93-ad4d-49ad-85de-e40ced973839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24dfb3a-6349-45d4-8bb8-853624068d1d",
        "cursor": {
          "ref": "b6eb6989-c840-43ef-931a-dd6232f10f0a",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bf75bfe1-b547-417d-8c39-f49c609d7206"
        },
        "item": {
          "id": "f24dfb3a-6349-45d4-8bb8-853624068d1d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b57c9d86-f221-4c9c-b616-23174e4a7bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f09d7b-41ac-4509-bf3b-217b66f372a9",
        "cursor": {
          "ref": "c585d0f9-900a-43ec-b963-b808193b2502",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "88f2e202-4397-4126-8bcb-efef89ff5a17"
        },
        "item": {
          "id": "25f09d7b-41ac-4509-bf3b-217b66f372a9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f6cd4658-949b-43f3-86b7-d8ca1e8dcd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1132450e-c694-46a0-9863-12cb0590282d",
        "cursor": {
          "ref": "f1f44d25-83e0-4bc0-836d-ec630b5ee78a",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a80b77bf-3bdb-4bc7-a6fd-4b91693beaa1"
        },
        "item": {
          "id": "1132450e-c694-46a0-9863-12cb0590282d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c9d4e39b-92d1-4754-8d6e-45231cf2b00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20311f6a-dc01-45d0-ac99-14bc7308b22a",
        "cursor": {
          "ref": "21e553fc-c84b-4704-a398-86e2dea6fb51",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "448bae3a-e34c-47db-b826-14957cfa5864"
        },
        "item": {
          "id": "20311f6a-dc01-45d0-ac99-14bc7308b22a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "45eb93f5-70dd-49ad-b2c2-33786d072343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d300361-18f0-4e12-9278-2e845a57605e",
        "cursor": {
          "ref": "4f0781de-7eed-4b50-8424-d72ff1fad5db",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "60d38d9a-113a-47ce-92d7-7c71ed41a86c"
        },
        "item": {
          "id": "1d300361-18f0-4e12-9278-2e845a57605e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d7b86d6f-5170-4979-a82a-a77e155466d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ce6a6d-4bba-485f-8590-26eba66c8a95",
        "cursor": {
          "ref": "415fed45-0a7d-4020-a204-6ad641121eb9",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d49fe91c-0819-4dc7-bd14-3eada498d9f7"
        },
        "item": {
          "id": "20ce6a6d-4bba-485f-8590-26eba66c8a95",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4ce31fba-6d92-444f-aff9-40b13611e093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73c635d-3cd2-4d6b-8424-cae4d59ce4ee",
        "cursor": {
          "ref": "e68d2ae4-2701-4c16-a4d1-6f9dda574533",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ef489582-4dbb-4bb0-80ae-0953681bca90"
        },
        "item": {
          "id": "a73c635d-3cd2-4d6b-8424-cae4d59ce4ee",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14a8f232-bb46-4111-9d17-887b540c6026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a3e9d7-c0ba-4fa2-ae89-47f9ea14990f",
        "cursor": {
          "ref": "563bdfd1-6811-4bad-a877-93282e7b9bf3",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "05aea9d9-f6ce-47a9-8d78-281574c9788d"
        },
        "item": {
          "id": "00a3e9d7-c0ba-4fa2-ae89-47f9ea14990f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5a014d19-e078-4375-9a1b-77014040eeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62c6b85-44d9-48d3-9b06-71634ab9bbe5",
        "cursor": {
          "ref": "ff4ab099-f2c8-479c-b000-dc6bcfee25c3",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "32d0f31f-0dda-4450-9d6f-4f5a7165a667"
        },
        "item": {
          "id": "a62c6b85-44d9-48d3-9b06-71634ab9bbe5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "66b8d012-d087-416c-929f-5eec6d11526b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34b4135-52f1-4c42-a3a6-3046ecfff114",
        "cursor": {
          "ref": "46354c0b-7b5c-4e8b-8661-c929f1776c8f",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f103935f-f592-45f6-9497-2d85c79d7532"
        },
        "item": {
          "id": "b34b4135-52f1-4c42-a3a6-3046ecfff114",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ccd496d0-e9de-4396-a357-50461131efa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9585468b-db29-4cfa-aa8e-9ecb42044661",
        "cursor": {
          "ref": "c5e93453-643b-4714-a9cd-d3f54799f684",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3b499174-7a7a-486b-8f44-2e3fb3acd21b"
        },
        "item": {
          "id": "9585468b-db29-4cfa-aa8e-9ecb42044661",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "82ec6803-7a90-444c-b808-a340bfc7120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0106f5ae-edfc-49cc-a0bf-552dfc75700e",
        "cursor": {
          "ref": "88587ee9-a743-4192-a0eb-3e77e89b2728",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6a96aef1-7811-4e16-b3de-5a97be78c21b"
        },
        "item": {
          "id": "0106f5ae-edfc-49cc-a0bf-552dfc75700e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1d40af14-90b4-48e2-b2d5-1e8f93b759e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc45e90-e379-41c9-b540-cab6c474d4b7",
        "cursor": {
          "ref": "33e23a17-8016-48c2-b5dc-0a4cdc963548",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "03fdc243-96fc-45a5-925d-4a9a7d528986"
        },
        "item": {
          "id": "cbc45e90-e379-41c9-b540-cab6c474d4b7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d12d6951-b144-451e-af2a-8c2f685ad5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7732fb-f15d-45f7-bdc6-c3e478e9946b",
        "cursor": {
          "ref": "a9a8298d-5531-429e-8f29-5e01fdf6e95f",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ae7ae31d-65a8-434c-9729-2d340bb04969"
        },
        "item": {
          "id": "4f7732fb-f15d-45f7-bdc6-c3e478e9946b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "911d3a72-5ecd-4ac8-8952-e71efa507b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1a1fd3-56c1-442e-945d-b47164740462",
        "cursor": {
          "ref": "35c038c4-38e0-49ad-8dfd-1f4877165d90",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dfacaf39-a22d-4e74-b757-2c0e6e9d0518"
        },
        "item": {
          "id": "ca1a1fd3-56c1-442e-945d-b47164740462",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3dc47507-b8f9-4298-a293-8787da71bcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bacecdb-539f-49d6-9c92-54c9304efd35",
        "cursor": {
          "ref": "5f5ce89b-5d8b-449e-88d3-fa6a6f3c38c2",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a9a101e0-8c9c-4566-8e5d-7c917d70fe0b"
        },
        "item": {
          "id": "0bacecdb-539f-49d6-9c92-54c9304efd35",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b5eef4da-4abd-424f-976f-0b12918aa3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff83aece-e314-4217-9816-e999562fb402",
        "cursor": {
          "ref": "ee9ed8fd-332f-46e3-926c-1e465ff9df13",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e18fb7fd-2adb-4454-9afd-4f4b1359b330"
        },
        "item": {
          "id": "ff83aece-e314-4217-9816-e999562fb402",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c371a14-8d41-4403-b649-54b80a4719cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5dcc4d-60b3-4231-ad2d-523cf212aa1c",
        "cursor": {
          "ref": "76079261-eaec-438d-8a2f-7825bdf3d0ae",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "36681d06-76be-4355-b1f8-1a243333eb90"
        },
        "item": {
          "id": "1c5dcc4d-60b3-4231-ad2d-523cf212aa1c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "591125cd-d3fe-4d7a-9f4c-14b06c732592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e48168f-b4ba-4d78-931c-a381b1c8d118",
        "cursor": {
          "ref": "41e9e705-fe97-4fab-b636-316ea0f756dd",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a0f6c021-5707-40c6-a00d-9ce4dd4f677c"
        },
        "item": {
          "id": "7e48168f-b4ba-4d78-931c-a381b1c8d118",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "53f6949f-f055-4b11-9b5c-1f437a89d807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a39a46a-730d-4c82-a486-da097d9567f0",
        "cursor": {
          "ref": "62a3676f-863a-4e5b-a2cc-127c083a339e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "35e00882-fc85-41c4-88fe-9ab75ba67175"
        },
        "item": {
          "id": "0a39a46a-730d-4c82-a486-da097d9567f0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d19c8e96-a43a-42c6-8190-934aaa494d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542ec20c-cf34-43f0-ba92-b161d3dc80e0",
        "cursor": {
          "ref": "2bb40893-a59f-4cea-8094-5553c7bc6210",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "53317161-0509-49a9-9006-641765c3d79c"
        },
        "item": {
          "id": "542ec20c-cf34-43f0-ba92-b161d3dc80e0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ef97672c-34c5-4a58-bf1a-760a6ff3e3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9bcb76-a3b1-4050-86b1-b5962918dd4e",
        "cursor": {
          "ref": "3fdd6e3f-133c-4851-ad8d-f0ea8560f96b",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c9194799-2c5f-41d4-ac19-16402cae6bb7"
        },
        "item": {
          "id": "0d9bcb76-a3b1-4050-86b1-b5962918dd4e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d0abadcd-30cd-469e-877a-ea00ba15715b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0308e902-2d2a-40ff-8ac9-1e9ee6f656a2",
        "cursor": {
          "ref": "df828f69-2bdf-4a92-8b52-8c4823aac2d8",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bfd1a1ee-2c28-4e7a-a706-e94c5d992265"
        },
        "item": {
          "id": "0308e902-2d2a-40ff-8ac9-1e9ee6f656a2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a9ae6ec0-4338-4771-87e8-8d2514845cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc74ff3-1a81-4841-8592-5b37adcda76a",
        "cursor": {
          "ref": "1a87c5bb-f95f-4eb1-8394-c6b8a82b42e2",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1a4e4fc4-415e-4f4c-9ca2-d2f457e817c2"
        },
        "item": {
          "id": "cdc74ff3-1a81-4841-8592-5b37adcda76a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dbbcb33b-ae45-4da8-bf9a-26336aa3aa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa4176a-6d20-4627-802f-174c66287265",
        "cursor": {
          "ref": "8706e991-e9ec-481b-a8af-102db13fb730",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "15524bc1-5a3f-4139-ade7-8b1bcb605b58"
        },
        "item": {
          "id": "afa4176a-6d20-4627-802f-174c66287265",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a9401c25-c2d6-4eb5-ae49-390e90bac8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef86617b-d2bd-4e88-aaef-80e2f190b884",
        "cursor": {
          "ref": "f0b62578-c4a6-475c-8d44-346dce6bcded",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9c9d289f-2f09-4cdb-a149-9c803241aa6e"
        },
        "item": {
          "id": "ef86617b-d2bd-4e88-aaef-80e2f190b884",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "72deece4-19e0-432e-90c2-f7cb5c20a072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0f0098-ffc7-4eb4-8c02-da0c57c86cf5",
        "cursor": {
          "ref": "452f6d81-4b6f-4b23-8884-a3d7093f90bf",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a702a95c-edf8-430e-8dad-0d98efa72065"
        },
        "item": {
          "id": "1d0f0098-ffc7-4eb4-8c02-da0c57c86cf5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a67e1d3d-de29-4135-b535-8cd85dd3b9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fb9970-6555-4da3-b5e4-d35fa28d559d",
        "cursor": {
          "ref": "a8630154-b009-4d5c-8342-09928b5660d9",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "203cfb3f-dc00-4b6b-ae78-6b7ab959df1e"
        },
        "item": {
          "id": "61fb9970-6555-4da3-b5e4-d35fa28d559d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f768c93e-b20e-4e48-891f-9938c9ad8c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe21ef27-1604-433b-8716-d24dfb2b63f0",
        "cursor": {
          "ref": "0d5537e2-a669-4fca-9700-a0b6e4054d1f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ced4f258-00f7-4819-8a9e-634a63cb32a7"
        },
        "item": {
          "id": "fe21ef27-1604-433b-8716-d24dfb2b63f0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "53fbe30e-51ba-446b-abe9-8157698fbfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39bf737-9ba2-42ab-beac-c72ea69fda97",
        "cursor": {
          "ref": "95e9081c-448f-41ed-ba7f-ea199bcee046",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "61d425d8-b736-48d8-815e-5b9393bf55a5"
        },
        "item": {
          "id": "a39bf737-9ba2-42ab-beac-c72ea69fda97",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "422db4f6-a307-48e3-aaa3-33ec0458f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47123ea2-964f-4c41-add0-3862017eef76",
        "cursor": {
          "ref": "da8b4a2b-6c83-4abf-ae15-346197fc3147",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a5072a68-45f7-4faa-a59d-64e4082fa3d2"
        },
        "item": {
          "id": "47123ea2-964f-4c41-add0-3862017eef76",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bc68346c-276b-4e2f-8156-93b27732cae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a98fb4-44ab-4733-9e41-794c102d9c34",
        "cursor": {
          "ref": "cc099808-490c-4bcb-a9cf-d4cb391214e3",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "91146a92-c62b-48b0-aab2-382881d47099"
        },
        "item": {
          "id": "e4a98fb4-44ab-4733-9e41-794c102d9c34",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7e05131c-ea78-403f-a925-368fadc87f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe10c3fa-5642-4c8d-89b0-f46533098215",
        "cursor": {
          "ref": "ce35c3f8-623a-4a2d-a00c-005c4faba3e8",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "19b1549f-5baa-4071-974a-7930f2491043"
        },
        "item": {
          "id": "fe10c3fa-5642-4c8d-89b0-f46533098215",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "66021b4d-b073-4ed8-aed9-e4cbaf3c3eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d9b3fe-3ee2-434e-9587-068c5eb946b9",
        "cursor": {
          "ref": "8e52ea07-e5ce-4e8c-8333-cac28dff9f13",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b04f0b8c-04f1-41ed-9a9d-c96fe02348c2"
        },
        "item": {
          "id": "f7d9b3fe-3ee2-434e-9587-068c5eb946b9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "23901f94-170a-449a-950f-3a3f19cdf73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78cad0f-4b79-495f-9753-9e92f99a244c",
        "cursor": {
          "ref": "0a8c4ec7-8034-49b4-b3de-8c7dbc19fc8e",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5bd736d6-879f-4109-8504-757669fa74d1"
        },
        "item": {
          "id": "f78cad0f-4b79-495f-9753-9e92f99a244c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7d231d9c-70d9-424a-9c50-1eb7e4cf9036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f92b6a-4601-4b5b-9624-b171b7b93bfa",
        "cursor": {
          "ref": "626eada2-9603-42fd-b39f-a53d882f92e4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "66082fec-66e2-4cc0-8cc2-5c9e697ce581"
        },
        "item": {
          "id": "e5f92b6a-4601-4b5b-9624-b171b7b93bfa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "75ae5856-6737-4354-84f1-d6fd3e24e215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3100cb98-3936-4e4f-9b5d-21caec42614f",
        "cursor": {
          "ref": "3b49cd7c-046d-4e62-8f7f-d94281d7bebc",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2fbd5e39-7b55-4af3-8e4d-ab71ff45b34f"
        },
        "item": {
          "id": "3100cb98-3936-4e4f-9b5d-21caec42614f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ceb1bbb6-26d4-4845-898e-9fc5f8719ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06dc3f1-3fcc-4588-81be-a11cb752e1ab",
        "cursor": {
          "ref": "53e24522-b4de-4013-8d00-5496413ddf44",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "49899a93-b95f-4e85-a673-efe54855a3d0"
        },
        "item": {
          "id": "d06dc3f1-3fcc-4588-81be-a11cb752e1ab",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "79439339-39c1-46ac-bc80-196933178792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b30f3d3-3341-40fc-b82d-91c3ebfa79a8",
        "cursor": {
          "ref": "3cfe5bba-b779-4fc5-a43c-ac623cb1c3ac",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a729d678-b464-4978-9d6b-40aa80e9c1df"
        },
        "item": {
          "id": "8b30f3d3-3341-40fc-b82d-91c3ebfa79a8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e4e6e0e8-e094-49d9-8b57-483eec1e9b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cd4702-dc2d-489a-8353-bc32d08a9443",
        "cursor": {
          "ref": "eddc1c40-fe64-4c0f-91fb-a8c3e06c5c17",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "237668d8-c916-43a0-aec4-44c5ad0b5960"
        },
        "item": {
          "id": "f8cd4702-dc2d-489a-8353-bc32d08a9443",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f3802544-360d-4f67-8aa9-707a7ea91250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead9d7f3-cb32-4d66-892b-4f73ac774c26",
        "cursor": {
          "ref": "07e0ad7f-2cca-44b3-994f-779243c5b095",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "86209b32-2212-4680-bfe0-7eed7329e6fa"
        },
        "item": {
          "id": "ead9d7f3-cb32-4d66-892b-4f73ac774c26",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "342adfe9-b54b-483e-951c-b925313357f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ee4a7c-bb37-4c8c-a20a-36caa3f7f130",
        "cursor": {
          "ref": "96d4a6f7-45d6-401b-a3d8-974436c62c04",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "77fc0720-4202-43b9-8f36-1beadd788608"
        },
        "item": {
          "id": "f6ee4a7c-bb37-4c8c-a20a-36caa3f7f130",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9d1a12c8-384c-49ba-ace5-85b10869ae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605f76cc-eb15-470b-9c17-148f1b771399",
        "cursor": {
          "ref": "5f806c89-1fe0-470c-8093-03918bca38f3",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "360a0669-f82c-4e02-8f9b-d82b388354ba"
        },
        "item": {
          "id": "605f76cc-eb15-470b-9c17-148f1b771399",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c3133116-7d28-4b53-8f96-8456c4f436ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84cd538-89b9-48f9-9009-13f18dfeeaa0",
        "cursor": {
          "ref": "eb1608de-bfe2-42c9-b5bd-833e62aa71d0",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "40ebf1d1-ea8f-431c-8ac3-9f14c0bfceaf"
        },
        "item": {
          "id": "d84cd538-89b9-48f9-9009-13f18dfeeaa0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "920578bf-d8a1-4290-821e-1204a83906d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae80b82-32c6-46ed-bc89-fac04d7e942a",
        "cursor": {
          "ref": "d5339c46-4e2c-481f-9dcf-1b74aceb3f13",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cd2721e8-6ae2-46de-a873-fe551ceae549"
        },
        "item": {
          "id": "5ae80b82-32c6-46ed-bc89-fac04d7e942a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c8c44a8d-da95-42f1-89aa-4f8c9eb502d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28c34ac-420b-4bb1-a6e4-84d435ddeddf",
        "cursor": {
          "ref": "ecedfe31-6206-454a-9cda-6716abcfadae",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "56f87d33-378e-4264-a599-c93a968ba340"
        },
        "item": {
          "id": "c28c34ac-420b-4bb1-a6e4-84d435ddeddf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ad512f52-817d-4ad8-ae62-840100eaf47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081400ad-df79-40bc-ad84-f42a6bb418bf",
        "cursor": {
          "ref": "20bc8125-8f39-458d-b66e-8c2fd7961300",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be715744-9713-4406-9e56-d327a795e300"
        },
        "item": {
          "id": "081400ad-df79-40bc-ad84-f42a6bb418bf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "30c913fc-4eaf-4011-ac5e-29ff1f64d5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f05f95-3af3-4c2b-adc0-bf46dbec7987",
        "cursor": {
          "ref": "97ccc9c5-7be0-42dd-b43c-4040095d120c",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d290ae65-7d56-4d44-ba0e-0633a57a9b03"
        },
        "item": {
          "id": "d8f05f95-3af3-4c2b-adc0-bf46dbec7987",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bba0d0d6-487e-4818-9c29-89c0d1a60479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c717cd0-edb2-456b-b53c-6c7bcdc165d4",
        "cursor": {
          "ref": "decbe3b6-9510-48c9-8647-c9d12af540b4",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4b15c8bb-3814-414d-a053-71cde8de59e4"
        },
        "item": {
          "id": "8c717cd0-edb2-456b-b53c-6c7bcdc165d4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1b2ea38d-cf9d-4259-8c18-0f6c6b569716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2947defd-26d4-402e-b64f-c7f3c8a31a10",
        "cursor": {
          "ref": "a6442619-70c4-42da-a2f8-0fad8afafed1",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a6b489a8-7f83-4277-bc3c-c047e8ac3eb2"
        },
        "item": {
          "id": "2947defd-26d4-402e-b64f-c7f3c8a31a10",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "12fad205-aa24-4fd2-90d0-b06c9ac337f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f89442-acf2-4437-b732-254300b538c1",
        "cursor": {
          "ref": "1720f308-fb8a-4ab9-a8a5-bdd470ecee4d",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "26c090f5-931b-418e-90c9-a6f1b6c71465"
        },
        "item": {
          "id": "04f89442-acf2-4437-b732-254300b538c1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "249bcf26-eaa5-43c6-a6e5-2b223d0e7989",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef35856-9c16-456f-a13a-c0f43dfd9fae",
        "cursor": {
          "ref": "6f6b9583-fbdc-4159-8a25-f58bcfc05c38",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e84d798b-cebd-4ef4-b0e6-ae6ada922622"
        },
        "item": {
          "id": "3ef35856-9c16-456f-a13a-c0f43dfd9fae",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9a4ae3f6-88ac-4eef-9fe3-cdbb656415d3",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d249145-64c1-49ba-89eb-e2ab79721d34",
        "cursor": {
          "ref": "c8b929fd-e2e3-46d9-a116-3ade877047b0",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "63eeacaa-069d-4b86-9549-9c493d072560"
        },
        "item": {
          "id": "8d249145-64c1-49ba-89eb-e2ab79721d34",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "477a912f-a909-4f29-ad15-5aea4a27ab28",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a34c12f-1fa7-45e9-afcb-35b6870464c1",
        "cursor": {
          "ref": "e55ef33b-8bf8-4791-85b0-b9e3d19c8c9f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f057e488-7102-4426-89cd-87e25ae4f15a"
        },
        "item": {
          "id": "0a34c12f-1fa7-45e9-afcb-35b6870464c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e62ae6c5-7e0c-4065-99ed-8eec3f432156",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a34c12f-1fa7-45e9-afcb-35b6870464c1",
        "cursor": {
          "ref": "e55ef33b-8bf8-4791-85b0-b9e3d19c8c9f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f057e488-7102-4426-89cd-87e25ae4f15a"
        },
        "item": {
          "id": "0a34c12f-1fa7-45e9-afcb-35b6870464c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e62ae6c5-7e0c-4065-99ed-8eec3f432156",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a34c12f-1fa7-45e9-afcb-35b6870464c1",
        "cursor": {
          "ref": "e55ef33b-8bf8-4791-85b0-b9e3d19c8c9f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f057e488-7102-4426-89cd-87e25ae4f15a"
        },
        "item": {
          "id": "0a34c12f-1fa7-45e9-afcb-35b6870464c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e62ae6c5-7e0c-4065-99ed-8eec3f432156",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9a9b05-8031-45c5-8e5b-c286b7d33d61",
        "cursor": {
          "ref": "f770cec9-6a6a-454a-99b9-7f33cdcb9870",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "25e1c753-2b32-4597-b5a2-50e0954e54f0"
        },
        "item": {
          "id": "7d9a9b05-8031-45c5-8e5b-c286b7d33d61",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ab1496cf-6bb5-4e87-94e8-e34e437556dc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da634f39-2d31-415c-8870-574e13a42b99",
        "cursor": {
          "ref": "8cd0b111-48b9-448e-8355-9f43abf9b0d5",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc02a41d-6883-4a0e-a735-806a8b2998e5"
        },
        "item": {
          "id": "da634f39-2d31-415c-8870-574e13a42b99",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3c50182-b51b-4e4b-8854-045c9797c257",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da634f39-2d31-415c-8870-574e13a42b99",
        "cursor": {
          "ref": "8cd0b111-48b9-448e-8355-9f43abf9b0d5",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc02a41d-6883-4a0e-a735-806a8b2998e5"
        },
        "item": {
          "id": "da634f39-2d31-415c-8870-574e13a42b99",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3c50182-b51b-4e4b-8854-045c9797c257",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f2a0aa-755f-414a-bcac-d1e04b736bc9",
        "cursor": {
          "ref": "7cfe96b4-93a5-4f40-bdbd-f855edebb44a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5e281ca0-d673-4646-9a40-5ff7a5940015"
        },
        "item": {
          "id": "f8f2a0aa-755f-414a-bcac-d1e04b736bc9",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0c4e8c7f-d1fa-44a4-b908-e71219394976",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33469d3e-65d7-47d6-9768-60a86bc395a2",
        "cursor": {
          "ref": "7204e10d-6084-4297-9c9d-94851b6fb0ea",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d76f78c7-d4ea-4025-9dee-ff8d0c896f1a"
        },
        "item": {
          "id": "33469d3e-65d7-47d6-9768-60a86bc395a2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f86dce78-ece7-46d2-915a-9ee571d83da3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33469d3e-65d7-47d6-9768-60a86bc395a2",
        "cursor": {
          "ref": "7204e10d-6084-4297-9c9d-94851b6fb0ea",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d76f78c7-d4ea-4025-9dee-ff8d0c896f1a"
        },
        "item": {
          "id": "33469d3e-65d7-47d6-9768-60a86bc395a2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f86dce78-ece7-46d2-915a-9ee571d83da3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35d7fa6-4765-42cf-9289-0837194a124d",
        "cursor": {
          "ref": "01d23e69-e1f7-4f06-a022-bbb09819c839",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b4c212b6-92f6-441c-8c63-03e13bd567b7"
        },
        "item": {
          "id": "e35d7fa6-4765-42cf-9289-0837194a124d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7527a9e7-b649-4dcb-bb7c-d4600f7da361",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}