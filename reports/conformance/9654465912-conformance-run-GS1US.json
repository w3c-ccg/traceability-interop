{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2e1c6c71-66b3-4ae0-ab43-a05fbc8bbe10",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0c4c4e09-9388-4748-93cd-7da8d3fcc086",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91af0b75-28c2-4c55-b43a-49e771ba3419",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0226901d-a49a-4765-abb7-7ed395bcc7fe"
                }
              }
            ]
          },
          {
            "id": "00f7dfe6-eb0d-4080-93b8-81a161fec36b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc11d39f-16de-451a-a154-df0a20679888",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f5a13f44-3f93-4ef5-92f9-9b0a917c47ff"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e79e1ca6-79dc-4199-9af5-ea6789bcb3bf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "36da557c-256e-4a81-b8ee-997a1f851446",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ff23f25-14c2-45c6-88e0-257576671664",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfbb9180-59de-4c8f-a567-523fc1f80b5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29544b16-a4ec-4ca0-8155-9703b2578132"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e17ab050-ccf7-4bd2-90b1-f18e8b75c6cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab4921f9-3000-4e91-8cd9-48d6a65c54df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ed17fe9-1418-4aab-8f7c-123b4cb68f1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2f2e67c-b1b5-4867-bd6d-600e5fea276a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cff8f8a-abff-4750-aeff-0fb17ad47818",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ed5afb85-4903-4c86-be26-d8d822b12a97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5301cd56-0bfb-4654-ade6-650704be25e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4477f06c-1c56-4608-ad54-50480aedb461"
            }
          }
        ]
      },
      {
        "id": "f3994c1b-391b-4b24-918f-0279bc45dd29",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b300ce4c-1500-42b7-ad7c-25551ac5f91e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2ae667b-2386-4b3b-b447-7fa0d7ce5c7a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d799c3d-3b40-4a82-9373-bf0d45f42fd6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7329ace9-3cf1-4eda-8313-5f63c58f8b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bc7f32b-b0c1-4f7b-b455-cb00bf0b2dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed81759-4d14-4c81-961a-877ce9d1ec3e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6229ac-bbf5-439a-9bb6-4f74eba446db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1df4259-47e1-487a-826f-058859e55454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f5c5fe-fa2e-4819-a749-3d70c7b19cc6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4db8b8-f667-47e3-b84f-5d949ad2174b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17dec2e1-f200-4dd1-bca0-b5ac958f2767"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a60f9590-250a-4671-ab5f-f9ce5001c92e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c8768c7-3d74-4c89-9171-423c3a4a449a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d172adf-578f-48fc-8956-c55e41ff078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80bc9945-7480-4341-a073-7728e99a15ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa06e04c-69ee-4197-9086-a991eba93be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e5cf31-7fbc-4558-8cea-864a0ed973d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9a24f778-e98f-4c72-82f3-8e93ab9a66c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19a07f0b-4890-4193-88fe-6b22cc1c8f43",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95d0f75f-01aa-403d-be37-c361334c730b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fb97ae85-03b2-4442-adc7-fe64dce7b581"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c3a7fdf-2519-485e-8f00-dd9ff31c9d7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d3f398c7-a89a-4993-8371-6fe76c481654"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38d88f79-54ea-40e7-ad23-d2deacc03fd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e065d0ca-dfdd-493b-8f28-db7c06662cfb"
            }
          }
        ]
      },
      {
        "id": "f522768f-39de-499c-9524-bd58262e7f05",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "84f9832c-df2c-4faf-b2f5-5955566ea42e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "071aeda1-fed6-4fc9-8001-de393d7bf589",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "209f7dd8-0956-4455-aa28-e6f22adf8f7c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f2b85f-32ba-40e5-bfd7-7fdc5d7ea227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff5cb51-dccd-4654-844a-9b8b5335b05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60033ec-267d-4c63-b319-00e7a6e4c00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e97f4dfb-c48e-42c0-bf6d-361dea02fbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff2a318-f020-4393-b82b-6afcdd9d6571",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f85027-be36-421f-8f0e-85cc440388c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2fc4a8-f9cf-4af0-90eb-26fc36c00d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61588814-e193-4aa4-8d0b-48a31978b6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c8f1474-a3b9-44b8-95d2-cf8942afc344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce6c25d-fb9a-48c6-9589-c3c6d0153ccf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22ae14b-c735-4da0-bc1d-accb900dca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050f94ef-7c41-430d-bda8-c98b4cdcc5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4be8feb-ea9a-4de0-ac40-34b398d5163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88048af1-57cd-487e-b25e-7b76a98b2664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27b38ba-33db-49a9-b63d-d12ee4585e66",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287a5d67-9acb-4dc3-bfd1-4216651be813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5020bdc8-525e-4d7b-9fa7-4f22b023ac86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4db4873-a74e-43fe-9a34-df9514a97733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e96a8360-60d3-4b5d-900e-55f2ce7d96ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f479c7fb-931f-44d4-b14d-5167597cf2d8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ecb8ee-2a75-4516-9975-532a40c939a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ba14a9-df75-482f-9930-390f03a84637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9824aa-0806-4fa7-a38d-21b19ae0724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81267b85-c6f3-4f0c-a410-c16d8e7b2796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b7a7a5-54e8-4f14-98f7-2ccf91504657",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b423cefc-71cb-4fe8-8a9e-6ab82003ad81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3658fb3-2727-4972-b250-cea0b0c3bc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb9b911-6e8a-4bd2-9058-b85979ca03e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25c4350e-534e-4056-8f18-1309ab72d042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aaba42-b01b-45d9-886e-afb7559475f8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94878ad6-9250-4533-8db4-484b73b87d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0acd7e9-965b-4636-91c7-1980e51c6036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92606dce-15d1-48d4-a1b7-dac85640bb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eca7baa2-cd2a-479e-b213-ac7cde72b1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450dc7ad-d939-4608-a33d-ec32c83447bd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daacceb8-a084-4151-8629-06cd0f7cbf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697d1b00-887f-40ed-9e52-f4ddfae93d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985c9aed-c6f4-47e3-a857-f4835c7991cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5579c6d0-92e8-408c-ae1b-da31767d8a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be187de6-5abe-4010-b272-6dc8e66fbaa3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccf57f9-55ea-4af2-ada9-3ba20840f437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6b4cf6-9865-43ef-a14b-294c7e918090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9437547b-3c80-4b08-a6dd-e374a614fa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2af1dff-b55e-48c5-9efa-e32908239332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6467e6-1b21-40fd-a055-8767c26572df",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cacd54a-a65d-4261-8b34-d4b2c1c1f47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d089946-285b-4f91-bddf-d354435f8457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e441a225-2bc8-4325-9a5a-96d030f88ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e914c78e-8744-423e-a9f3-cd93f45e8bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b16227-c8a9-482a-a5bc-ce84989a64e4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113162af-4cd5-41ba-a7d6-223677e8fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e840d761-df27-4b64-a2f9-125ed97d70ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9103d16-1c4b-4e15-9429-38a77063205e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "394b6f4d-f767-469e-934c-e90775726379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bec7d8-0e7e-4b57-9981-4e8bab22fc65",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3a1b14-9993-49a7-a2d7-a47b6ddfac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045bbf0f-2dd5-4183-baa8-f899824ca4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8497b6-3968-4d7a-8509-0c7f383896b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7112d4fc-59a4-4dba-a122-99325e70910f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0039b92-67e2-40cc-9b38-b329320ac8a0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de2d5f4-0e24-4154-aca3-b7bd6ccc80ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e18052-2718-4a3e-b5e6-635bdbe68fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5364112-c3ce-4d0d-bd86-45a4fe994e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dafd335-b26a-4549-9ec9-7905aee54e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08081815-c3a0-4129-b0c6-b91854f84cb6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea928c5-f739-49a9-bf2b-7e7b80f98b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c8b4f8-9821-4d75-8867-1cbbf0b0c62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a82867-7940-4470-bcef-f5b10dc5367c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e30c39-972e-49e6-a7c0-97677a2b98ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0a8123-bbff-4461-a83c-a45159622ae4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825d918f-e1d4-4daf-9126-915e903f16e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a937fed-0ed1-497a-b43f-4e93c8877006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4955716f-5897-4a4f-b40a-37ba2bab0cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d083d4ca-dc24-48a8-aa15-0a71a51437a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a55ff93-0a32-43f0-bc2c-6495ee990e37",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1d0ca3-578a-494c-831b-f098c3167547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9db3b1-788f-499b-845f-0661c9c9d428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d45584-0605-4f13-bb25-e8e88fbd3548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f26e2b-f6b9-400b-844f-723e206e0eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e058a40-8ac6-4304-bfae-42005d0d51d1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d85aff0-a049-4148-8d0f-11650c6a3f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1310f8-58d7-4047-8c2c-380d13f5488d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8812a18-f2ca-45eb-b247-9688273d853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cbf8ddb-ab71-4734-a35e-37aa355162a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5dfde0-e7ae-4c26-a280-a7973af8818d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c2411b-49a9-4cbb-9b70-97f61544f550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b653fde8-0604-4c31-a1e7-b6c260007c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65326ad-2114-4b1b-81f6-c44641b6fdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aed82ed-b820-4f7d-aaca-05d9b2accd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb379e98-7c37-4c62-b2be-402e88eeed37",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e914c7-7810-468a-8d52-9245829a5ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652fed8e-b78a-4820-9f9e-aaf39c280d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f04cd0-25ac-4e3b-8e78-fa76f1c53e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73531aab-52df-460e-8135-b839ce87c306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1393f1-2f7a-4cad-94e6-609f5a9e7042",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1417ba-449f-4285-9afe-b755c8b91888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04574b6d-9b99-4e9d-a59f-a76b449c6940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76eecc96-03e4-4b68-a7ba-c074a5538205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad2ec1d-6d65-493e-b0c5-5a660cdf3150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8cd07b-b147-4bd8-b84f-e5acd534a661",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2fe771-a8b2-4388-89a6-0e08f390c447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6ab0b0-bcd5-41dc-bf1f-e0909fb8571c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7342b395-734a-4ddb-9bc9-18d4ef6f1b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd61e7d2-1b7f-4495-a965-764c9495d14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038f94bb-8ead-4db7-8ffe-d8c61ff2bcc4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9788fad8-222c-4d90-93b7-3dd31c27fb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad3e769-9895-4087-a1a6-cd76da7702d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2f14ff-180c-4ea4-957f-ee37ff480bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22a79281-27d3-455a-bac6-c56517b39412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b550f482-e8e3-4c50-bbbb-8d318da62375",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe18aa9-12d3-4657-a35d-18e95cdba0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb144493-cd07-45a2-8ded-e22863aec017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4569dd-d3dc-4b21-998b-9f3423728a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e95699f-094e-46c9-8b10-b56ce7fba417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dc9eb8-a922-4ad3-be98-5b2f1d929987",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081e4d4b-76ae-4c92-9a3a-a668f358649b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83180db-c99c-4421-ab23-2d92559d35d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c5dbfd-c78b-480e-9a09-9683ae8bde2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d68a826-b7d4-4bb7-9682-f0bdcc8d3edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d39cec8-9a30-41a6-a0a2-0cd4748eddd2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77329ce0-668d-41aa-8bd3-6e1646ade0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c0657-650b-45af-b93d-15199e757eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba67b58c-bf3c-4391-bc6f-9debb2ef2f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecad1528-26ab-436a-a212-15331fa01cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b108c8d7-e696-429b-b6f3-acb8677851b7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e56b57c-091a-40c0-bf75-2be0f97de0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c971bdc7-657b-4344-8255-3262a8b83cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45f4b93-78fd-4b41-9dcc-066a094410e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4eb6390-8edf-4d52-8152-674fb6816bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05b3200-9f5c-4341-a785-3cc1dce38a42",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f267179-f055-4b53-b62d-e9cb418c0442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5611364d-81e5-42c5-a904-3af677ddfb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5875bafb-be3e-4116-9129-07b4184ad151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9a443b-e1fc-4f20-90ed-856a0baeb873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e39e9f-e5f0-4fab-b385-e78a9be711c4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2e1255-e49b-4f9b-bffa-46ddc1935dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3d27c9-b301-4ea1-b9cc-ab020b51a4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed86494-72cd-4c2e-b056-ec957451e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fca9e89-dbaa-48cc-b9dd-8cdd8f91e4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fca9201-67b5-49db-90e1-f565b14c6fad",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b284ac11-7a64-4f0b-9dc7-d9d6ca808ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806f433f-13c7-49f9-b21e-59fc5e215355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaea92a-0601-4b50-a2fe-78e173f5f8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f06a6b5-99a8-481f-93e1-d3ff2929a08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419fde9b-38a2-4361-9c0e-405c1d88f782",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27669e4-178e-42d9-ad86-db22e45f350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ea6ab6-987e-4178-baa0-9b381cc11206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc282df8-e790-490e-9f7b-20ccb4f42deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ba4032-58f7-456f-bd13-9ff07ae8a47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e01b148-52ef-4881-8950-931e69c4089d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e25092-aed8-4c16-8f3c-328206d25fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631f002a-cdce-407f-a08b-3ae1e1ed9163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b09f6f5-d03b-4ab7-b652-fc2315bdeea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7216489-52ef-493d-b522-119867e24863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bb9258-6b46-479a-aec6-f11a6f60b9ea",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0985ef12-4089-433b-a187-1b6e1cd2998c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb704e3-939a-45c9-8753-be9ba7922e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6707ef6-9db0-4f87-835d-e8ce20e974ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c627ba16-9fd6-454f-b2cf-d77ecdc168ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bae65f7-c1fd-4444-ae9a-ea457713d558",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddaf9c3-e7c8-4c38-a699-72d8e6ab5e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f604c2b9-30fb-4480-8d9e-6ffc7665a52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf961301-2130-4a76-bf22-f279ce132eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbe247e-47bd-4016-bbfe-5cc6901bbf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a57bd67-ddf4-4952-9fa1-cc81930b9f39",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb8e01a-4c12-4b46-93b7-0f767c7fa195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfc1d94-da5f-4df9-8d3b-fc7c59532aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1765b975-c5db-4623-a9e7-29946034eaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1461f9c6-40b2-4a50-8674-e839aba5cf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03f9281-5e0b-4136-b5a5-f89659c2f3dd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db29d5a-ecc8-41f6-b27c-80e45a2c933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35816be6-ee17-4923-8539-364e3c4eb8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834daf85-e2de-4c66-bd7f-a32674ac8110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d85474e8-b1c8-4247-acf3-44c1ab0bc424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c0bc2b-90bd-477d-b607-51dedf1abc63",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3c90e2-92aa-420f-8abc-a9e3a62b2067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "759295c7-eece-4947-91c6-1a8e66c4f148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c31251-050c-4639-94d1-e6a24224e0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "468b7e54-e7f6-4198-8b1f-32d5c959af2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f2ef37-8fb8-4c68-adc2-7c3b8302ef52",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a3c5ad-23a8-4ac1-8410-afc68bb1dead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99991026-e721-4a31-8a47-94d015491ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61eb270c-7183-415e-9734-19665bfd6d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "626bac8c-d980-47f7-9666-386c0b563bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a480947e-6e53-4837-89e7-e3fcb0d46376",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1249bd47-9441-43a2-96e9-ae87c1163e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49146ce-046a-4aec-a480-db8cbf0bdabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c59faf2-2da9-4a49-ade8-7416886b4f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27842cc9-d991-4b8e-a4cb-b3e7cddf188e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6158c96e-3d84-440c-854c-82c95f53e2f1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a4de67-3de5-4546-aed7-b27bb620a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74d4b1b-3514-4e34-90dd-5b3c78c90c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3affcc0d-b100-4d60-8947-1d389127d336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9edbd9b3-8291-4c76-835f-4f56989fe07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba09735b-8f2c-4cc4-93a8-649880e36b6a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fe160b-f547-4103-97fd-6100bc717e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416171d6-aaed-4cd5-ad34-175c19328b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5a7bd4-36fa-4779-a951-4a8534a26784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef5e439-d890-4396-907f-999b3b1caa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865822a5-17e0-41e1-9934-d9f83bd77922",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7145ad4-9eeb-48fe-9d24-c6886d80cd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6029c22-ba8b-4b11-82d6-b6e82fb87b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9036a4-ad6a-4f3a-bc03-ddf0d16f54c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf39c9e-77f5-471c-b5ee-c5345fb8df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3ae3b5-cf8b-49f5-8ec4-5e52b8bdeb6a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3aa1182-2c42-452a-ac9a-2161333fe111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90c311c-868b-4177-b0d1-a92d1cf0aa65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685017d7-a0a1-4521-aa1f-b6a4d51daf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4df1a806-d118-40fa-9598-6ab03b25e88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122c5494-ccb6-44fc-b9fb-f05befcb4454",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3e4c10-eeb1-48a5-9c91-17eb20243baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994b745d-bbb5-4cc7-98a1-c92de7963671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544765a2-be54-4bb3-95d6-21ffaf904859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "be1355f6-0b34-43f6-a517-1b22b017c30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc956e8-69b4-4406-972e-8adf1a473381",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c81c7a-067a-4e9d-bc25-451e0e500c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082e229d-e3b7-4b8c-bee6-b503693cb18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38d7fbf-58f7-4ba5-8db8-6ac1b0bad732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f350b2cd-091c-45ac-8af7-7fc6ced7e9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47a1b12-30bb-4a0a-a472-82605fddae19",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20aa092b-bf5a-418e-b7f3-077e9b308314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aba2f93-ade7-4a1e-9573-75c4fa2fa4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf177071-0e7e-4d50-9e94-7c0397db8a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6f4557-ca83-4cf1-bbd8-3f9132b7c302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6a42b0-c232-4e0d-af1f-54537344da75",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63ad19f-1cc8-4bd2-bba4-276b06284ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374704e2-1ac4-40b0-aa25-5a201eb0f04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ab0b54-08a9-41ca-b9b0-ae1889035aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d664e1e5-0f7d-49da-b551-3c2a68d7b9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52b67b9-2d2b-4535-a2d8-43748084ec8f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63e5065-8333-427c-b73e-473ede0a2b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45edef40-7636-41c4-adda-a45564d02ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87621bf3-17a0-4c77-945d-ff980101f20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6fbf7e-627f-425b-8cf9-0ba65f3f6e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17e6f87-786e-4962-9040-c87d075e3f43",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d814bbc-3542-4353-aba0-5ce6279f3c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d945f7f7-0117-42d0-8fef-74b7a30001ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65855fd9-3bbc-430d-9d06-5d37ab3a370f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d90492-0ac4-4e26-9ab7-bc7e40f5f798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1c73f2-b492-4b17-83ae-71d54123a65a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdfecd4-f0e9-46ab-bc8c-4ab8745fafcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50adca56-197f-4fe3-b19c-6fd6d427b0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735ca6a2-3819-4b7b-98a0-a87b228dc14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf8308e-e72c-43f3-b523-fdcd588fb45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da299ed-5358-44e9-a891-9fb2bdbcaddc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb07f5b-3df3-49b6-ba9f-d215ff510571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108fee38-3582-456a-bb27-4898db5ef95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248b721b-aeb5-4e16-9560-4c52d28d0e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12746ca0-9751-42ab-8ea8-509ec94376a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e31c6c-b29e-4e42-aaf7-80bbc98e8cb8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20565711-1339-4790-8c36-dd1cff81ec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8cad21-b724-473d-91af-6de660c90f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90976623-4dfa-4a33-aba7-f8cba35c5a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6ded00-7fe4-4fe6-bb7e-259310304c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d1b326-851a-4f2c-999d-a7b32346539f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03540ece-3d15-4f4a-b1cd-725f6accdfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb6f357-ab64-44c7-bee2-d9914f9809ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb7fbd5-6a3d-42b1-98ee-660c94912970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "930b2c40-ebbc-471f-9ca1-e8e1016b3ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148b50e6-858b-4c4b-8af6-0e1285c51944",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17db9535-f217-4a74-9f9e-34a1c879fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc754b25-e14e-4584-a144-14d6d7e3ac5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5155528-f24d-412b-b586-8d0805c1eaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d60533-3166-43e1-8740-6efe8b87ac33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70328bec-6e8e-4535-90cf-776650dc025f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0d9851-040a-48ce-9d09-7bc19b5bc39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da084a01-ba36-4b3b-867d-452427cd583c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48f8463-d26f-40f8-b873-677c708af227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a30cba05-f2d9-4ca0-9be6-d20529c219fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fdf7a3-24b1-4565-a0a2-51e7b53a8a00",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea160c1-cff0-4524-872d-7d42ae43f892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c27957-9293-43f9-96da-c6c3973cb1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202df475-e672-40f4-8985-db6e871a95bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a287e1ee-a88f-490f-9d4a-b75bb3111b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47682519-2fa1-4fd8-aa65-89edfa7e71d0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af3062a-2011-4b49-a0eb-7329fc7759d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a3c058-8400-4e5c-9135-1cbc363b4ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea03b207-e204-4647-8a7c-32ae82c359b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cde66fc2-3eb1-417d-b0e6-3def275f064d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45edcebd-43e6-4c84-b8b2-a8fa0f2096cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36576de-73be-48ba-8d83-dfe88d1663cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a741ca4-e794-48f5-b8a3-9c3e9feecb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3334ecf7-f2d1-42ae-b445-b756732e0876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "685935f6-4b6e-4e42-81aa-0fb9adf8cda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b9c2b0-bde9-47bd-b876-a4d6323804b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e423114-4470-4377-a034-750f57a7a4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da90b30c-5af5-4f8b-99dd-e3a11fe310db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f06dbba-8ab5-4694-bb6d-66c8cd681f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5934dc-43ad-4df4-a5cc-a65bade2e670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22996489-976b-43d4-8b51-20510d62a20d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77384c65-03c9-4006-bd4a-4bb8cece1987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ad04f7-eaa4-4f9c-8969-61e926fad199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2b980f-bbd5-4413-8d95-0d3a0a477281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de1223fb-bb46-4786-8879-64c1938b2451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2b325e-5afa-467c-b139-a16710590851",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3458b732-3952-44b9-980b-47b870621527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c81be3-b06c-4659-a548-3d457449db4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fef46d-614c-4de5-bb3c-1a084051c1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b64bef-7e72-4ed3-964e-ddaa0fbc3b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ff2f82-8f5c-4171-be08-8330f26cec21",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef09738e-8888-4875-82c1-451accfbc190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beaa5e20-9ec6-485a-b094-01bd5ac893a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8665c843-16c4-48e4-a0d2-66e4bf3b4d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "323fd853-2bc8-4e16-85bf-c5e8f0150c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a968cdc-f984-4ada-8773-6852494d1c0c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf90186-1367-447e-b595-89b359c75301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e327b70-8dac-4820-84f5-64dcb990e04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d9e6ea-eea4-42f6-bde2-ad170e4924b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "898afbe9-8978-46f3-bd35-e820434b51eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2b29ea-68e0-409b-b49e-8e7f79259623",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283791bd-f1b2-4f4c-95f2-52e1a03a34ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021e66bd-1699-4d94-b190-5e422662d6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855c4e41-3f90-4ffa-9f99-e3b09cbac485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4eb5387-ad2e-400a-bc97-6307e0b5e08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d093286-f7fc-47cb-8883-294c34116a1e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4c5f6e-7e2c-44cd-b1e5-ff502d37eed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b9141c-f58f-4877-99c2-f893a147857d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de2c224-97de-4aec-870c-2ab3fdae6f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfd5dda-2144-43ec-8805-09e37c2e93f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3719cd18-ea3f-4a4a-88d8-827e82104568",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578a0441-ff76-441c-bbce-9a0ce6a34442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474626bb-a07d-4c39-a005-2f7ba408dae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46650054-d8c6-4cf8-9294-3ee7db09c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2523326d-933b-49e1-9c85-49a7f079d5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dc9965-8fda-4be0-b9fc-1afbe560e10b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded40605-941b-473f-b07e-a5433f3deec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1282687-f47e-42ac-8486-996a693bc26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079a62c6-d278-4d54-a459-213f4bd47419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1abc10e-9b21-4939-9aa5-39f35d0b8143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caad89fe-d236-430b-83e3-773b6c456bbf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb982d5-e147-41e8-8431-d55b95032b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97698cc5-96f4-4689-a391-c44f2d4c6617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2d6c03-d34c-40fa-88e3-7268be6367dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c43790-dcac-43a8-bedc-da6e18ace803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b2a4b3-0c55-41be-bc60-d938850f3df8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4590b47-e850-45c6-a686-668b81a08c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd10d75-be4e-4bb4-80d8-5f72346cce95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80997400-9387-4526-ad79-c457d160c6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f4ecd4-579b-4830-b5b9-df3fa5e84d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2824806-b930-44d6-bd88-dc8bee668e0b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59952609-0e44-497d-bb06-ac8cbe2acad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785c6fe3-c7d4-4e47-9b50-cd5f677d7e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219e4191-a55e-49d5-bcdf-f841cf6894a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d9407a-9af6-44a7-afb7-a0779918e4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a65bd2-1c31-4a99-8a25-159c7dd955e7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5f2dac-121f-46e5-97ed-947a17f25ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97350b04-3bc1-4c05-9d54-8a154c9a638c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3db3b2-7cd2-463e-a3a5-7b65a9f84b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17fb4bf3-d60d-4215-8d90-3807de480957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f683050-4c3f-41d2-92ee-3a272f9a641b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350a984e-726b-4e23-b757-d04d38a247c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3b7a51-ed98-4c24-939d-af495e899ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f82f438-88ec-4f95-817d-25ecd886f695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df735564-e352-46e3-aaa2-a5dfe2dbb65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89fb380-0ba7-46a8-845d-3cba59f6cbfd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c60aadc-bfaa-49fc-8ac7-622be95323db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507d1e74-6cc0-4c1e-a0d1-7ff467865642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649d6356-8eab-4fe5-a4e5-59f4644e32c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1f2b22-9569-4c11-adc5-6e6b696a23d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c382f283-ea4f-43f3-a1b4-c9c6021e643f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed935ee-b286-4675-9f23-cc09c6fa5e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6c9dab-b4c8-4171-9cd6-1dadce4cc570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a57031d-fb47-41d9-858f-756c23e479f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eef8665d-3ed0-4a74-99f2-c7469c6e5396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8ae621-83a2-45da-b812-6437ce3a6c70",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdac326-5e86-43c8-831b-fbd5236bd82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8c315a-359f-4eff-b398-59c51e5402a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5641ba-64fb-46ea-bb92-8235748bb0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "262ea1ea-ca96-4a24-aaa1-48ecc1117fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4355538-d7d7-489e-a8a6-b6abc31cd072",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d94c340-7790-4784-ab29-986feec9e86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fc822c-ab11-4e16-8433-397134ad346d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235b916f-24c3-4cbf-ac81-fe0846fda905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb746da-c180-430d-9ab1-ac15ddceb614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13b4535-f6b8-4d7f-b775-dfa320dac650",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d521c456-071a-433d-bfe5-fbd7ca7b8e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e0c4e5-c3cc-4bd9-b1ad-0d847a224d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a1a8ad-3c25-4369-a8af-032094f9ae7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f768d734-6bc4-45d8-8dae-ab36dfae760c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef997b39-01a1-4ab9-a834-acf8bdb426ae",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b17155a-b7c8-4b72-bd37-d1dce932ef85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b0a42e-2ba2-4946-8bb4-8d00475abf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6764e6-6e54-42a7-8108-37da41f0c748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1166ba1-1daf-4c68-9632-b271087b7993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a88a8e2-9b33-4af4-9437-8f2fe18bccc5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddbb8d9-27ab-4793-a0be-bc0bf045dcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa833ddf-fa81-4943-a537-5a55b0aa1ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b399b2a5-905c-4bf2-b808-adf94ca25dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a359562c-e561-4e60-8dde-0ce461165ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c03ffa-10ad-42cc-b950-ccd861e6d016",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca35fa6-9b35-4ac7-bbc3-806411ffddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083fb42c-a0c5-4a17-b7d7-0bc872680230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bdc309-b9e6-4ce2-9fc8-c205b5b61212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0288411b-2d6e-4fed-986a-38cef116b7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e9e971-f33e-419a-bdf5-f67491d4a657",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9924559-5f5b-4806-a69a-83b31b24317f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15645b6-6993-43a5-9128-391f7083c23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d110da0-97d1-422b-a5ae-126902fe552f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da811d29-714e-4f08-9b0d-c3cff6ccba18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b188f2-7b89-4668-860b-fafda67b392b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4967b911-5461-40bf-bd2c-057908f573c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e1683f-dfb0-409c-96fa-ce891214f96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee33e8df-74d7-4ac6-b16d-e7b3b0567701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e79e91-9e09-495d-a962-a624c427c424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b11dde-de79-4dd0-8f40-c53cc8bb553f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c55794a-5d7c-42cc-ac8c-ca9a98a97553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc807658-72ab-43de-80bf-dbdb48a137d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22f20ea-83ca-4b7c-84bc-94fa77047a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b93817d0-9591-46d1-8313-2e2336b207e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c5e7fa-633e-4a63-bf8c-54da3946d740",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca487b-bf7d-418b-8609-2b1258e88a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7a7789-8b6a-4a54-91a9-5e8101ecfbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e4d9e4-96de-4bbe-8d85-6b91b340959f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e525652c-8acb-4140-96c7-a1a231b6c448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0349ab8a-7ed9-40bc-8ab3-35a16ca00fc9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aa4e4a-a81c-4234-b62e-8dac1bf9cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b85c5a6-7b5d-434b-bc42-728cecd48b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de187ac8-807a-4adf-bee9-d4ee2b972756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "272f2460-f61b-475d-9fad-bd20aabdd889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4644a6-5c0d-42a0-a9a4-2f3fd7803a21",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0510511e-39d5-4242-aa19-7e9d6841d980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bb4d8e-6c6d-4db3-a18d-d120536a816f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab6ad3c-1752-4d5a-8c27-3be81d5e0ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e389f63-856c-48d7-8546-cbc174178315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13814aec-191f-43ab-94e7-3f4ee2ea1765",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13afad2-cd5e-4fb9-a6b2-043d126e4928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a353f3-2861-4fa7-9c0c-a66a6848e1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc51b42-74f9-4f8b-8f9d-c5ea97d2d69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61e4e306-dd2c-4c60-a9c9-cf9bef9b0925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6887ee-36f9-4343-b1d0-7c24887d538f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ae6945-1c28-4d68-be27-3e0a29d7f26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f65dd3-b34f-441b-9cda-ebabf774bf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7127391c-3196-4d3e-8796-ad1f99606b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eabd6db6-03da-42dd-b804-95e336d1a379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df650f74-3efa-453a-abbc-534664f9ab3e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9185636-aeb9-4414-bd7f-f8967a3507ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a874b8-9c00-468c-91dd-f00bc12c19b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95dfc25-4ce2-4a01-ad08-e48352a924a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "836fb116-4d80-42c1-8a37-e530228ec87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9f59e7-6621-4eeb-92e6-552907ddab31",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61cc50b-5f45-49b8-84ee-b369047a2bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4ccf3b-eb48-4a3f-9607-3a5c1e8968be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbd6edc-6d28-4001-b558-b53ed28c4c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "189f7221-ec7c-4b9d-a5c2-012e82f395d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3a97ef-2e10-4270-8ea3-096b22792c03",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dffa699-7eb8-42fc-85ff-1cca1844cdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ead60d-6689-48d3-85fa-dc258f052b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f9596a-b016-42b0-a8d8-b24f3a36af44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "674cc467-3014-4d1e-936e-78cb634a21ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464053c0-480e-428a-849c-e21c379f110b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b53f384-cc4c-498f-859f-789de46f42dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cdc104c-10b3-408e-9998-1411a699a0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13feaf3a-86f0-4e1a-a8fd-8c8cf6193ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9352a094-fdf1-4d63-9fa6-594672e3ac51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d6317b-82a8-472c-856d-0722e41e43b5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ee0a16-fa6c-4e5d-9f9f-947de7c950e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "075126fe-3433-4baa-87f3-981fc56f0f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb136d8-ffb4-46bf-8033-be627665313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b48c029e-a7a5-4733-b351-2f35b206ed35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e694056-06ba-4864-8705-e8aaf9c553f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0954b527-69d1-4ac0-a617-1afef9d3169a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce4044d-a1c7-4bc5-a8a2-4e6734ce0e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bc0e041-7074-4952-ae30-d731b8507b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae22255-9168-428e-a95c-620f4ab50811",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf8fa1c3-c765-48ac-ba63-0010d716ddb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75254707-f81c-41df-863f-8c140f865d32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32d2bc04-20d7-4a46-a6dc-69c7c03f31c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2fadda0-e174-4acb-bab3-b4251f4410ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "599c5fff-65b6-47a4-ad22-fd9c3769da02"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c297cef1-fa0d-4f60-8989-93668a975c29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ae516eb-0f42-4690-8885-99fddfdcb33e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df1fadb5-e58f-471e-923f-b3e0575fac71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7806a0d6-fa85-4385-a30b-549df2c85690"
                }
              }
            ]
          },
          {
            "id": "830cdee3-76cb-4785-abc7-35d49fed3292",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d8d2036-1789-4b9c-a7ae-9e21d585f087",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6916b42a-f643-4dee-906a-4eeacb8aa186",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8894f940-a1d3-4379-9f56-68ba5398a689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7b6110fc-ab36-47b8-9f36-1c0fdcebe456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1f1697-54bc-490a-a6b6-058a54b316e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508c4338-a49e-4065-9994-a70be1877f1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0767682-ab62-4e2a-86ec-5292b71122bb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "091f012e-9c5f-47cc-b32c-eac725ec34b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04a8e612-032f-480d-b880-685d55c84a5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "898cb057-73d3-46db-9b49-534fc2c7df74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8cee825-2f94-42ef-bdb3-cdcec718cdbc"
                    }
                  }
                ]
              },
              {
                "id": "d7c2aa97-9091-4461-bbb2-95461795e2f0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5102b68-5967-4a2e-95cc-566808b0e2cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c681d57-fcce-41da-9a24-760fff30cd77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e74335f-4765-42a4-b55f-84a92bbca6f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7b74dbb-5833-44a2-888f-ed70c49444bc"
                    }
                  }
                ]
              },
              {
                "id": "5035766e-acbd-4c10-8dad-75e14fb70c5e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14d36c26-8abf-473b-bedb-245adbcb1108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c110fa9c-2e85-4792-b334-cc51c5a7ffcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e467ddf6-99fd-4b80-852c-5899eb428534",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd59dc21-a17f-4d22-ab50-a57271acab3d"
                    }
                  }
                ]
              },
              {
                "id": "b3167764-4391-4da4-bfb3-8a1ef659c968",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5e9e445-3ebe-4a50-9b45-d3919a60a149",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f176fc9a-1be7-4708-89fb-64b5563db0e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "871ccea5-fe12-4912-86bf-5c4cc4ab3ea5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5f733db0-a173-4fb7-9d2f-d3e8b43b3a06"
                    }
                  }
                ]
              },
              {
                "id": "c4689ec1-2724-428d-a99c-3b01c2028ad8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a666106-1660-49be-98de-fabda76e2158",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d810414a-bdb5-4871-a496-73eaacfa55e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a4f8ff2-f448-431d-a565-3f1d527f8846",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "be88d388-e519-487e-908f-1c00f68bc666"
                    }
                  }
                ]
              },
              {
                "id": "73bec552-d834-465a-b8ad-f11b617cae2d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc3dfe14-aa47-46ca-b31b-e8f7edcee693",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ebb2ea7-a894-4e3c-86d4-fae453427ad4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80aac1ab-c2fb-4772-80f3-96058a852ebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dcf54b20-e409-4500-af0e-0351127e3522"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2901734-5fda-41d5-8907-22a423aa2c0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "617c0342-94d8-4943-a4c3-5d729ab4e113"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04330b0f-3f9a-4e66-a087-36a506499cb8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f57baecb-b1f2-416f-a1f2-9af4b80e51df"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c63c0ce5-e695-40f5-a0c5-46c86a429b74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0ae6afea-60b6-48b1-a11c-c4151300442b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7397b000-0fe9-4f42-99c6-90a62b00f022",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4063b575-f3e7-43cb-ab59-9daba110f008"
            }
          }
        ]
      },
      {
        "id": "082201e2-51dd-463d-8dd6-df873d53d7c2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3681be46-d27f-4674-8068-465910e7d538",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e336767c-861e-44e7-a33f-e37a80062f8e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b50a0a06-b7dd-4982-a9c2-21f2e661cc2f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da31f39-890b-47f1-9deb-4091d0fae09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69409cfd-084a-4ec1-9fb1-381b86051b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecff2ca2-afcd-453f-b682-0184d0ef99c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a083159-b43c-4909-b449-2f3b590f20cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010f7a17-99d9-4c18-a77b-b93564966f18",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bc354b-79d1-4a4c-a532-e73999a10336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbdd1ac-b4e1-418e-a42d-41e7f7c9b7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ff0fb8-2acb-4456-8457-6b4a0b36a407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0cd712-b3a0-4ede-8358-1dbbc0f24e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4049720f-4523-4a3b-b500-4fcbff5c2dc2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be820669-2764-4fd0-bb4b-550c01950d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71877fdd-7784-490c-b4fa-f0f3df2dfd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614e07e0-21fd-489e-a93c-73eee137710d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8603b760-eeb5-410f-9803-7dfd47f1f35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61b1c3e-b37b-4ecf-84ea-e7c8764d5cd2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1c25db-76f4-4f8e-a0d9-7c98c34f0409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53243b7-6396-4732-aa4e-d5d307cf2430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c616d0b-f38d-4014-8974-d9350af5b968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3f612c-97ae-42b5-abbe-80049750bba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9829e8-c230-4c0b-9b4e-7b4eb1cef264",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4dd8a3-62f5-423c-b51d-0f4bc37df319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f980939-8fc0-4fee-9866-65af2fb5759f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229558bc-1947-45b5-ae6f-9b1ca9994c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f5043f-0ed8-4051-8a27-5ac6302aa91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e11c68-bdf1-468a-adc4-91d2fc0a7236",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8032aa2-89e7-43bf-9f48-4f6ed46b2404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1589702-0ff1-473b-b416-d2fbe60b31e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80d0f6f-a3b0-4341-99b7-b67fd2daace7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30df4486-c9dd-458a-a9fe-f81334f62bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a60769-6de7-4cbd-922e-67ede5d341eb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617ae78a-d032-47d3-83c4-b410a87c648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc29458-9597-4842-94c4-311f1aa25474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fd4e81-a2fb-4326-a872-6dd3e346701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7859293b-be19-487f-abb8-7738ed0b84bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801ead67-fbb7-4803-95c9-9d4ca825bca2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f2b068-544d-4774-bf95-0eca66e1ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5dc2498-aff1-4416-8a1b-e4e92e1bedf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f0835-a199-426f-a842-85202b61eeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f177c4e4-27bb-4d07-9e2a-bcf80e740eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca89e8da-55df-48aa-9f71-5962d9487aea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b388a29-acaf-4e64-919c-98949fa676eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf686e91-5187-44f1-8aaf-3766f23a755c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e3afc4-a73d-47f1-a92d-e7fb8d398cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be541903-1c86-4279-b7d1-d854c2fdf33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda7619d-3ec4-4511-8c4b-a56869a4074e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f60315-0fd1-464c-be7c-d294639498fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9e0f0c-366f-4479-8014-26ca4d5805a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb03a97-beca-4818-909e-2ddbe2eabb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46b43293-c189-4523-81f0-fd78e5bb71db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbb66c2-7a12-4830-b75f-44a1c7bb1ccc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142b618a-08fd-41cb-9df3-ff639e57316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448f9116-47f1-4311-93d5-ee1cae586b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b1934b-a661-45d5-892a-959a54e47d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "930b28cc-13ad-47a3-98e3-86f0ebd6914b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8464f2-49c4-4c83-8504-5889c49f8054",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77666eda-649d-4b0d-a1c5-8fe71f64f808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f60832-fe4e-4d56-9307-729564a0ec23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e158dff7-5365-4226-8597-7ff33234d0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "382dff98-25fa-4ae9-99a9-ec1936a393b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67632b1-9a27-46f5-8249-481221e3cbf5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926f85f8-3ead-44f7-8f94-210515a078d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aceefa-f985-45b0-8a67-17f34d26c566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b180f5-1991-40be-b346-6b2b57feabe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6447d17-3eb4-49f4-a037-6c0e5e7e723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928fcde7-ef25-4ec0-875e-c5dc754b1a01",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4adf578-8474-42fa-afbe-5266a8d07882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a76d527-e8a4-4b7a-98f3-a7f8461dfddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cbbe87-de32-4f88-a8d9-455decf5cf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74503555-518c-46e4-8a98-86e10e936d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70c81b9-56fc-4230-b2c8-1b1e452c8ab1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee492ff1-b17c-4da1-8ace-6bd8715e673e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc1e6e7-f334-4535-94ce-1c0caec8f9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7b5379-d718-4d1f-b5f7-13b07eabc866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0098c3d1-b778-47d6-9d07-c8ce6ee66a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8e2100-ed1d-4df1-92af-ad665e68cac8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b609916-31e9-4baa-9109-ab2a2870f682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7259b1-0c20-4090-b044-cbd0a6643ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e201649-0c91-48da-a05a-fd352f70bd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8723f68c-2c72-4675-8b2b-c33f8ea739e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3dd9f7-c10a-40e7-8452-3553d2faef65",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2007dd76-a5b0-49d2-a152-223b2be903cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbb3937-bca1-42b3-8ff0-9b14cf359848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52166fea-a80f-4e00-84b5-de7f310e8148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b7cafe-284e-4284-8f09-24859387261d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bdd348-73db-49bc-8554-0dc337393d77",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b346bab2-766d-4289-a2dc-c2e1ffd59092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e48c899-42ca-4c2e-9412-c8140558a447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d915a3-1a5f-442e-84df-dcc6702e6599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4a0268-7672-4f7d-a9ed-47e44d917ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d8ea7e-19a9-46d3-85b1-31c50f1a8352",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eee7993-246a-47c2-84ce-a409e0526116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6588c73-33c0-4d5b-b2f7-75133c26584c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2bd6df-d9a5-488c-8710-cbae0832df0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b355c5c-24ed-469a-8484-97c1b05e132e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b28489-c19d-4538-bf6b-e14ddb0a110e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affcc5dd-eea0-4827-8889-70fa5e002976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4c7d3f-1c8d-4753-9231-5c012cc82c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b12d95-5bec-472d-befe-6324999b3169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5d1777-682f-43ed-acdc-c26f8160de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ac12b5-c50d-4e3e-9d88-b2f33e3a5947",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aff620-987b-4d92-9199-ec4de0bda2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285d8724-86ee-4fd6-8a6f-68409fbdbfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbf078a-9078-4f11-be77-ea2550bc6365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b82c3f-ab6a-4d89-9582-98aeea45d257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c67ede-005d-4bbd-b474-b090d7521e12",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14357af2-dc1e-49b4-8770-29f4d9a01f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac99dd9d-2b28-4653-9058-491eca5ed1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c69b987-5069-484e-8362-43e3e5dc6cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ab4b24-87ca-4057-b936-32c54e3d34bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d234b7-86a1-4909-acab-34fed3d25c5f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217a8a8d-8cc3-4dd8-bcdf-5baf11d12b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f9e23b-9d4d-4067-a6a7-cd0944babd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef5dd42-76ef-4dea-b3ff-7b34b2021662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aae1618-0410-407f-ab0b-e89f6e55b8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8f146f-37a4-4009-b193-d2ff791c8a9d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4907569-2d72-47a1-9457-906e9df8932f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87d3c77-e38a-4c46-b8ef-234fe7e19cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce925ad7-e4d5-4812-937e-60d04f75c07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a9e93c-7a60-4692-a9de-73ee6c95274a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326a6fc3-5ebb-4497-9ce8-835484898ce0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5458ec9-1a3a-4b5e-8b4a-2fcb711b1fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643959ee-8974-44fe-8d07-8b225cb413d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb6dc30-f199-4623-906f-0a407e764aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d88061-dc17-487c-9e72-f56d8ba05357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db744b5e-047f-4686-a33e-d867c831226f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4671c48-2084-49d5-9aa2-b411e43bbb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f11da1-bdca-441e-a094-16a14839f570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c990c63a-b687-4598-a4a0-0b10586ea81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea1356e-b199-4e2e-87a0-5ef9a680df15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88318a55-0596-48b5-bc53-d3802b186ffe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c204c66-b835-4d85-8441-25ed07d08759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a69130-0e9b-405c-8f86-169e111e7a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd4c528-b54d-4903-9840-1560a38f4ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c899d4-3fed-416a-9f31-42de597fc126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd1b9e9-cfb3-4815-9f28-d0683328bafa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd1e5d1-3574-4f62-a177-131758e346d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8b2b03-af45-41eb-af53-7f54d8161954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d82eb4b-70ca-483c-b199-da626d90ecad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30752989-83ff-4de7-b731-edcad607bf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c822d97f-af8d-47be-bad8-b8b313476588",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7044c4-b28d-464e-85c7-31be19b85eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a7a829-b581-4406-ab60-f4c543ec26e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab22ef9a-16ad-4dd9-811d-b0a6c3d52d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2e45b5-f80a-4148-8c3d-efe17d5ac1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5132cf65-133b-40ed-bc77-233f6171824f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd7333b-cada-402a-b7ec-f8268c08e063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a4c04c-0735-4a43-9fb2-483a99c75dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2727a9-8874-402f-a4db-f68f1e8ee1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab8198b-bb14-46a4-aa0b-575bc5c45ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b3ca7-68a6-49b5-8d89-e326f301258e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a58b267-6f7c-4f2f-ab35-df3be6493c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7d1ad0-a3bc-47f2-b4e2-f9ed6a881ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15278685-cc89-4311-8cfc-f898beae6405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc251573-f927-4656-8741-4bc5449656fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d76183-c788-40a6-bfca-cda9d8fde2d3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bfcb53-61eb-4002-b808-b566a1ae2241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35594edd-a022-44a8-ac0e-0e4bf9351c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b56d194-9750-4ab7-946a-c3ebf8bfe997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768e43ba-c4dc-45b4-8425-0abaf59621c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e93b2f7-8ced-4164-a029-8cb002420b41",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5032af65-e998-4ff5-8a1b-27d1203074d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5511a74-4405-4e05-a743-0e2f70e14c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b67b460-d384-4647-a39e-3bddb018a014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5085b7a-d009-4f5d-8bf8-c9f8bbd4aa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7750a28-f892-4deb-b583-c7a397a2ceb0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0372af2-6284-4472-923a-9508706d54aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed380eb-f94f-42c8-80d2-3848aa2ab8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af124f6f-4988-4120-ae91-2bcb7d8d22d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02f5c5e-7c07-4219-b6ae-34e68ffa87f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5ebec9-9e35-4695-b6b3-a65e1d50fc85",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec00833-720f-4d45-93b1-e20940a69f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d930e925-8936-4a2c-ab9a-4f7625c78139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288dd381-a11a-43d9-a593-d2dae4808933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c405c852-0f68-4624-90c3-799e1a93f439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5269d52-2323-4758-9712-a595399b7861",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416c3846-3f7a-47d8-8d65-1252a914ffb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587c8244-0273-4c12-9ac1-dd1c67bbeac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010a4062-cff6-4b3b-90b3-fc7ec77e3ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8539ecf-bdad-43d9-a460-fc7830d10487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ff8edf-4647-4009-b7b3-a3797965bd18",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e75c30f-e2f2-4d43-b3be-c20e4a092289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0515b0c0-7ce7-419b-beb7-b123156e4732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8227c1e-1608-40c9-a81a-d163d57c60f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba4baf5-3821-4db3-8d07-47a576d12065"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81a6fac0-464a-46da-a0ad-c3755e73ae11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa5b5635-cb61-485e-b204-e5a3fd44accb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c8b694-f35b-44e7-bf51-bcec0da694a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38d7df20-d702-4a28-9eba-b4ae38d890f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20232a49-913c-485f-bbff-cabfcab9453c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26382d50-7b40-44d7-bb37-4c1459cefb38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f13ee692-0e33-4dce-b542-35c40cd0cdc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "409128fd-f44f-44e8-8a08-ad164bec1d3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1587b314-6541-40f6-8d26-edcc50fbd765",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2017a198-325a-4a09-8acb-20e76bf6ce5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21b3d274-7466-47b3-926e-d8c466b737c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36e5c451-7c46-40f3-adb2-bdc1fa69135f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7a5d584-194e-4004-8671-dc22b4a83297",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34b2552c-4ec1-4970-a21e-7eac7c569fee"
            }
          }
        ]
      },
      {
        "id": "790ee984-1f6f-44a1-8b1e-6a09a8524fbc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "39d9e6ec-8585-49d8-9572-70b32ab42ece",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f5aa04b-5b37-4dd7-88c2-cc4c24f64380",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ddcd004-5d69-47c6-b166-d27b6a802f82",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0b0ca8-c042-4512-9818-15d1dde5b9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39585f43-ca23-4803-8fed-b050851e83d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a133a3b-14ff-4728-9368-34c428f5d27a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2072289-7e92-4031-93b1-6866fcb30abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3ba398-8b11-4d4d-99a4-6bfd787b0b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa293a7-9e7a-49b2-83cc-98f77218d069",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bb2e68-a214-4a07-b5a0-807613690146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d20939-000d-4c85-8fbb-7bc0a5f44293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b36c22-c2e7-4b06-814d-8e4fc611095c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54150c6a-2332-41a4-8faf-6731ebaaae6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f854538-72d2-4c0c-a6c6-39ce3adec09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012dd7c1-f7a2-4c98-a07f-449896f2897b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81554895-6fcd-4efe-bfb8-51f9f837d703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fca05a-5598-4819-94af-582ee7d07707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1101ac-d275-4731-ac22-7cc12ddeee8c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4bc900-2517-4935-b56c-0a20f19e7098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9db55e2-295c-45e2-aaf1-f40e80feaffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034e07e8-9275-4fd6-9ac5-5ab08d3daf15",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7fcc0e-b133-4e4d-a807-672b911f8e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee85479f-a154-4c2e-bcef-9f8b23071fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876762e3-f4f0-415b-af45-9c3b6b2c9dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d3f1fd-9193-46c1-b12a-c2decfc3d5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4080958-eb10-459b-bd96-f55890b3c01c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f043c7-125e-4b5d-adef-f2e4c5a77e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6efac0ba-bf1c-4132-8702-0ff0117266cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129e8360-b791-4e32-891c-04d7a199cd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9fdedd-660d-46af-a718-2f7b7a132278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2351d96-ecc0-4bd0-bc61-d7cadb0689dc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadf3b70-6664-480e-b671-1270edb5bab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fefdbd8-0883-4a81-ac42-9bb32a8ce350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909d0b65-9966-4f29-afdb-552987c087a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01c7f2c-555f-47ec-a38e-7392adb86968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dde688e-485e-4529-9575-0febae328bb9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d53fee0-5930-4081-b5ff-ce220febdac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a484f5c2-4b5b-4a65-a0e8-2b7e904a5456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7dbc7d-1c34-4974-a839-3355e8d0e00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271a2316-1ed1-42c4-bc71-140e99308a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c7f7db-8b7f-4220-ab49-699714e1e9b3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82321c65-63d1-44ec-a075-67c0036b3916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559184ff-66ff-44bf-a637-36f7e7bb9eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc8ae48-5859-4325-bf68-81ce9efe530a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4848aaf7-3c80-420d-b1c7-440020d06329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94bd839-be0a-4d04-a420-55b35af06c5f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a197b8-a090-4960-85a2-a229cd2a14c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebdbcde-9f0c-4af4-bd27-7a312dc61849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5a1505-01e5-4447-b24e-fb0100ac3496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa6ca3b-4bc7-4e08-8e26-f26c4a48d594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a9c20f-ab23-4388-83a8-6be60e8f0587",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a813a886-ef2a-45b8-b90f-f7b4d82b5935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ac34d2-9a42-4b73-9db7-56e18a881d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55fe73c-cb63-4d2f-9125-eb6d255b1b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3f1001-fe02-4bb1-96e1-284024c8f13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e0b807-d097-46bc-af15-2a8a62ed7d8c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9b83b7-9ff6-49c8-bd7b-49e73366500a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef948b37-e2dc-4722-9637-2ab63368cec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d15f383-acf5-456a-8e87-a81f97cc932a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a201a5-db8a-49cd-8421-617408dc6107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9810ec-a230-49c5-ad63-e6ddb0236821",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5700dac4-8cc2-4149-97ff-0eaaf0606439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d80a90-0804-4645-9b35-c15802b88bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532f044b-cfe7-4b18-913d-fad1255e4373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56539d0d-efea-4cb7-9573-27be45501e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5959f793-03da-42e4-886b-9d76b2b06063",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a8d5df-055b-4292-88c3-93cc9e5f61fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a824f136-3904-4dd5-9539-c2a98b6fa034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2620fae-cbe4-4fb7-a6f3-de84e57bf573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c83973-ef23-475d-9949-5e32c6441101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b96527-783d-4cfb-bed1-7a581736b569",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b611be0c-c07e-4025-9f17-42e50c4c0bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d86a24b-7261-447f-aaab-716f9b830282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2097ceca-6366-4b56-a00c-a9256f70a3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1716a1-6f28-463e-b094-1d21eb98899c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef13685-f7d9-4bba-a04b-6b263a5db662",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b16294-2597-4d38-87a9-1a3ec041553a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be178a41-54a4-4047-ad9e-1749bcf39e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b53ade-86d2-4ef0-bb2c-a72b19885bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd9c174-f780-446e-bbfe-67bb28df6f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce3caa4-9443-4e9b-b272-e19d4ad03139",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225ddd32-80f2-4196-881d-761c41c82560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb5e3f3-44ee-4d1c-ab19-a908c3b00038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448fe2ad-f270-4150-bbf1-73c6086657c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cbd543-5e88-4e3a-8f1b-d53ad44aa192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2968e1f3-bf97-40fb-9287-d7c24a381edc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33df306-8bda-427d-a760-5291a778b087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3240d4f2-f494-47be-9f59-5c06c9b68b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3eb774-c53b-49bd-888b-bd5df44fa5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13e0101-23ef-46dc-9fe6-903401e01196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f090054f-e180-4444-b7da-c39abfaf95d4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0fb502-cf44-4227-ad6e-3254bcf2996a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4803c44e-3281-408c-b43e-dc918db46b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbc6c65-67ca-4f53-aee0-57fdbc4553b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81672cd6-10e6-4e19-a60f-e98f15a0897b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08060a6b-2be4-4a13-b075-b1241f9571d2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9294f880-af8d-4ea3-8fdf-a7a4b4d037c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d5ffbf-ada6-4cdd-bcb4-e9a56196ee62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "346f6092-9339-4c35-a9b0-d82db1c61697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ada0e9-7b40-4fd2-9f33-386b84927c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cadbb2e-c9a3-4416-8cf7-d4edfb6ad293",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd7ea9e-cdf1-4c6c-b322-8b656bd1902c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc0cf93-0b87-412a-b4ae-937d0516ea4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c014ceb9-b0de-4f81-ba35-85196aca06b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6f04ad-3b4c-4eca-8a37-66eee69d0d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10753178-8e05-4810-8a49-330395a0d8ca",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2fd51b-27df-4650-9bc1-1251e0fedaf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4cf84f-11be-42b5-b30f-4aa0eb71a963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c70a24-072f-4367-bf34-eb94a472b9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc9b88a-9b08-457c-b6f9-fbc483b48d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25436999-17f8-4b42-9946-f953fb18d1a1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cf80d3-acc8-461d-825d-f32eb9b39c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9fd97b-7d3b-4210-abf6-ca976128212e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06773088-1dd2-4f27-9c30-9ce790d0b00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34bce79-380b-4a51-9e21-90e5b6e94e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e201c2f-4bb6-402f-a8b4-199a90c17b5b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80f31b2-41c9-4297-b794-55d71cf7fa58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cf6375-c569-4086-9829-bc46f8f66caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e615f7f5-8bc8-429c-aae4-cff60055270d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acd725d-4475-4162-8e39-35b38da38110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141b6047-286e-4116-9544-e0323ca104af",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9793c4-3571-4f77-be8f-1e8e856b5863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cda8021-b6f0-4449-b5dc-813e3d76e6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88312ecd-0d86-4bb1-aa9c-afb7c203803c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51bccad-6957-4fe2-ab55-aad1025689b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c022a7f-fdfa-4af1-b56e-5265bbb0a9e7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253cefa4-9251-43d4-8182-8b234f124afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745c8249-f239-4de0-b1c4-8df5a8b5495c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea7adea-fcc9-408f-a121-5cb90e9f6bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2275d5f5-ee84-4792-8066-eb034e69c6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad73941-b194-4993-8ce9-7cca959bc9e3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c71ee80-046a-4ebd-aa2c-bc218e8e9ff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1683ec90-d3c3-4932-9fb6-eb0ab58627a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a540e0c-5789-4e1d-8e24-b222175543a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913631eb-5edd-4e0b-9bd8-5d7f1f5a80d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b924d6-4aaa-480e-837a-d85b19b27c3d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e24401-0a5f-4534-af33-94e8d088222b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9680262f-fc02-486d-a4d8-5b01f33c5e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8013f88-59aa-495c-8900-7f5344173b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60345833-2f7d-4d79-8f21-920cee1c90d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ca494e-c7de-4bf1-b6f8-618fdcffc947",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f262bd1-07bb-47ba-ace9-7106f046e5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56cfc6a8-f821-4094-8d9a-f1070b860ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db975cbf-a642-4b8d-aa91-357d3d8a0fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7a5629-1255-42f3-aa6d-bb8d32670533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bb2dde-775f-40d6-965f-ab382202e063",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a69e17a-7da6-4e45-b66f-e46d2e09aa7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3f7b6cc-24a3-4f28-b878-0725fdbece8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac2f51b-c282-49b0-b18e-e6dc11cbdb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0c12c8-63fa-4a03-9579-cf83f640be5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc251c3-26f2-42c7-aedc-f8777eacdc54",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3adb6f-e91b-44c9-904e-391331b5fc6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4938c3-7a50-4a62-909e-0cb194ec382d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ccf260-38c6-4c64-ae2d-609f310b091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4723760a-8f79-4205-9fdf-17030510a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab45ceb8-b9cd-47bb-afeb-b16769567e17",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4a64c2-caed-41f7-abdd-fcd3f3f7433d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae67eda2-6a70-42aa-a0ba-bd7a33ba8b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebd7048-ad5b-4542-9768-1c2d4013ce8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587ecb9f-d208-47ba-abb7-e668939a53c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680f411b-2c51-46a3-9c35-acf13c4b7c7c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce3d72f-4dab-4b29-bdc3-8210352cbbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c66e3d-78c5-4ccc-8077-3aa5d0ad7b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def1c5b2-d0c9-49bb-9032-b2d470547674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0e2f37-3444-4de0-ba67-2b84b5c9eed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96154b7-1e31-415f-89c9-d80f7469d90d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf672a4-f127-49ba-a359-4c4b5953ccfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef85010-f169-495e-91b4-a61cf1e3b9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433c7507-8200-47c4-b453-9753f9cb9d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9383eedc-0c8d-4d81-9d42-f03ca9587102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88932aeb-a8b7-462a-987f-83bd4e2b2d71",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63f2ad0-12a5-44f8-bfb5-880d7a42c660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e05b46-85f6-4cd5-8aa9-ad57da369611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832ef7b3-af6c-471d-b07a-328edbfb4fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8b3503-38e6-46e3-afae-ee2fb71caf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490a0c03-54b0-4d58-9dea-477a41da1ed0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0331ecc-31e1-47fe-ae43-44fcc5ca2ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dbe7b5-ca31-47ae-b665-dc0752aa19e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753ae422-9e78-415d-8792-ab6588894cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c7999e-8071-42d0-94ee-6d124259ea41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbe5c21-67e6-487b-8341-fd3ced57f80c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e948fce-85a2-4e63-b562-c9727a934dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8416f399-3624-4d12-863a-0f8694d3927a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b86316-21c2-46a1-860d-1791d1746fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185f5007-82ad-440d-a8c8-d81d5b4abd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88206847-3816-4e05-8498-e97d355b9939",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23b269a-802a-40d8-927b-2221a59cf0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3650e441-e4b1-434d-8745-e1bd194079ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bace25-3ead-4ec8-a71a-f203e179b210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61c056d-59f9-4f42-9757-51526bec913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5033276b-5976-4546-b4aa-655ce8943fac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3d5efc-8be3-4cac-b06b-33dbc18ffaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436b508e-7cb7-4f1d-8865-bc9c08b4f63d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eddc50-0b92-4b27-a99d-d4fa0d97e12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9f8526-da3c-4dfc-903d-62c81271d7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afacd95-1668-419f-9b40-492615f38cc2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987e0d2f-7f1f-42a1-b078-dbce3e308350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb9483f-344d-42ae-bd8c-fc3c3720c1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58ebd57-bb28-4e97-a3f5-98319a991fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fe2898-177f-4f68-bbfe-edc203197679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5463b4-be33-4226-8324-42379977b887",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa14ffa2-fcd4-4449-9aaf-3804cd8cd040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f901aff-d6ce-4398-ae1c-ef55961e4b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625c4fcc-6973-4968-9b83-aa6163ceb43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be26f5ae-1cb5-40e7-8cd2-55eb9b11ed63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9edaeb-2837-4bb8-b4b6-9f46c6e725dd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394a89f1-66a5-45b7-8c55-d66a17da80f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ef84cc-8d3c-4f4b-8588-f2c56169b5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a79daf8-b7a6-4233-ae89-684a4c5d5596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e69500-a2e4-4be4-abbd-cf0350ed8ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8eab45-c3c1-40c4-b309-a8fa987223c9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b830fa92-056e-44a5-8257-b2a97c4f18d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ef055b-9248-4a8d-b886-a0db9c1b97da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015b023e-a0c8-463f-9421-96745a61a948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c62a36f-e16f-49f5-b020-5dff0384bdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571b7d8c-5af0-4272-b96f-4b8a46e84d6b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375ec19a-0a60-4bd0-b7f3-d7153e1df59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e23b889-26c8-4f2b-a815-027c06bb5280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da19322-f3e7-452f-b9f7-36fd4e3e621d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21058793-5de2-4e17-b330-c8802bb99f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef08d7b4-e285-4972-a711-d86fed271cba",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd122bb-ab85-4800-8a39-7b7ead8f1b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a479f751-89f7-42a9-b994-0bb9ba539de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a7a377-2ac0-4607-a78d-3c558ee3e940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb90a8ef-9938-47cb-814f-45af4d47acf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57bb576-ceb5-451a-a8ec-39f8d5a45f17",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ca6c07-d6cc-4d00-b98b-4ff2941cbcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b510dcf4-084a-49a6-92a5-497019b83f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f554676-4921-48c8-a517-f339e2ce4b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8302e2-115a-4d18-8500-926c701f61f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19ece10-3aad-441e-8a9e-0a413efe6cb2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60fe289-fe21-4dcb-9865-a67b268e971b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a749f4c-3b43-4bcf-8a64-460bcab6b48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951e7c1c-f3db-488f-8fe6-38db73574047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c649b7-035c-453d-b2b2-fbe9e72b42cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a3f9b0-47e6-4050-b16e-08efe364d276",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb6530b-5a0d-4051-8e20-e7c09690fef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ba3796-f742-40a4-87d4-051e4b395710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ca598e-42f8-44e8-a41b-16533776a9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff7023e-a49f-4134-9588-284bcde007d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c44623-58ce-4304-8795-37552723976f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662a6502-b010-4586-9aa3-a18cd9292ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93307278-c529-49db-9bb8-6ff0ac1b99bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c5ae76-5920-45cd-aad3-b63dc1eaf0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5b9363-8bb9-46e6-963f-8931d61b6ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5648fa-0f47-499c-8fe8-fd705459e536",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1e3429-2176-428d-83d7-d918c159c2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a970898-4eea-4ad0-bf0f-44a3da935e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5163f4f-b8dd-42fd-994d-1c5ccacc5323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0278e4-c1c3-4911-a261-9d1b1fd7eb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65c249d-d8b8-41b4-b53b-a17c1ca73534",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206241f2-bbc4-46fd-9621-1f17d34e4192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6543f7ac-06ae-4c31-843e-bcd0ca87a19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e04308b-f6ed-450f-a62c-9f56592c9467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a34495-857c-4772-95a7-66a2d95072d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8252bd42-a468-4c31-9d37-54fec8d22f2f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94d65dd-ca5a-434f-8dd8-cae991665524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd649c7e-a2e0-4420-abd4-b72af7c18e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212b82af-bffc-4f7f-9868-6168c993a061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c7991c-67b8-4c9b-8b9a-b16a9adecbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d0969a-caa1-4b15-ac4f-f701054c23f1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b59f06-2547-4555-9360-5c49e89539c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82afc4bd-f755-4656-a994-ebb21b94c71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4392575-0fb3-475a-a382-5b40773c2873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ba9cbb-77f9-4c54-aa95-6eb24a97221e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29106781-ecc3-466a-8e26-379868cd3ee3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3f5aa1-a27b-4245-b413-cfe1711cc187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c335ae-b770-4598-8489-c5758e6dc14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3401edf7-fb1e-4ba0-b077-7fbd3e268204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8f56f4-5691-4d28-be08-4ff353a8fde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2465fa-52f0-4161-ba3d-43d69a97393a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d94344-694a-49cc-9f66-01922bdc44f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2affbeb6-638f-49a2-9066-32479851a327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496cd347-2ac5-49eb-89f2-6b5a196af961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc4612d-ee0c-4fac-8191-b1959b47c7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff953a5e-4842-4578-8a2f-caf9120b8cc3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e64cbd-8686-4c88-8397-230c4c23d8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26efea84-9e78-4fb6-8058-10a1bce8d06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79a5fc0-c2ce-4cd9-aff2-b9d9c79d1632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e44c453-b715-4907-b7f9-6abfa5691bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd7d58a-e6fe-4ecf-965e-d7c5d0446024",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a122b2b-45fa-43b1-a208-8c50a8c5949b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d224a622-48c6-4331-909d-76151175cc21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dbdb75-5196-4b31-936d-8c7a7e7c7ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b46ad4-01a7-47bb-90c3-48faec75af31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e530f45-9855-4d3f-a831-67d2915a4a58",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553d76e2-f021-4be8-961d-c47f630fd32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05192257-f3b8-43c8-98db-e46041d6bbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cc41e2-1ec3-4575-ae58-201198064c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57be7886-b1fc-4369-ad89-adf6ef4d47f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735f8dad-5be2-4593-972f-288e3fd7900b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd6cf54-3b5b-4264-a490-7b2f2563ba02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4066fed-a291-4fcd-a778-1a37eb96f9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c907be1-e5aa-4a42-8eb9-97e18e7e771f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f458c9-16e3-4451-b63e-f14cb1632a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcea6c0-d63f-4714-b171-7895ef0d855b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199e8a12-7c66-4d9d-9a1b-3ccec6ba91d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3559b271-9ab4-4cb1-bae7-871e599ada6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f312f95-23c5-4d14-bbb9-aca17ca034ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f30a4a-9b4b-4f72-8e7e-5573f5bd2c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa4a327-6610-41c5-8e69-df1cae6d8134",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d666f962-816b-4bb1-bd82-cdbe1d95eadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e658fb-f0d9-4894-8b67-3d884ea0cc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6916437c-a3b6-4067-8a21-d263502fd91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bf34bf-8aaf-4a50-b24a-214f2eee0c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32910eae-ff9c-4019-8a8e-3505f63f1ad7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eb83e1-9601-4daf-80c9-36ae1ea32546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484be007-eea1-4004-b830-cc3a80b526f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad62de5-1d54-4deb-9d12-fd29718b8e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f1b5c4-2ac2-4543-9d4b-8332101656e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccfe71d-6b1c-47eb-baa0-dae622836d6c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7644fc-fbd4-4fa0-87ef-14b03f0611c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f500519b-575d-4b33-be99-24df9b24c383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4354c9-abec-4218-905d-36d0c095361c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b6a44e-d5ef-48c3-884a-34fb583a1f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4775540e-1218-4e7e-a996-38a01e997756",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f844e4dd-69b7-4aaf-bef3-e29d88ac7faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb44c0f7-4383-4c88-a523-42412963b109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af15363-0935-47d7-84f1-00bb9766b160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e48596d-e5e6-412d-8b83-6ae3465f4c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc37f6e-88d2-442d-b4e0-d25720978b76",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711b3659-758e-4537-8a9d-d95cffe8f0c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b9b54a-3953-4f39-830d-470e2582a585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810250fb-72d9-4c6a-9ba5-851b42e277c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91382f8a-a6bc-4d24-aa35-e3dd14e917fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b374b5-31c7-4e07-949b-56afb0690581",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a12e05-87ac-4b07-887f-e21f8a58696c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd4e3af-b357-4792-84d7-c33a866724b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ea2ed3-3b78-4b15-a017-961833dd091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57794ec9-96c8-40fc-a23e-7cbe56db5867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5371c7f0-3672-4008-a6c4-7a172cc9d530",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97827bb-2ddb-4ab3-b780-7bf94b704b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccf3d88-df68-4544-a502-9c4350cf5c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7a85bf-5194-4ecd-aacb-dfb740cc87ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0c371c-d852-4507-9be4-57c876020799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6500fbe0-602c-4eb4-bf65-cec8fcf9a3be",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0817b09e-a014-47f8-8fff-4b69c8dcd68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3d0ae2-e400-4e54-9f6c-bde33c7ca108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965dd934-e09f-49a5-8925-4c9325f0a8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37c826e-1636-459a-9891-3fa2cad09cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e06df25-a6e3-4477-80cf-1692ee31bb79",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cc7d4c-edcc-4c95-b800-07347e376734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd2de5a-104f-445e-bf9b-6f2b7d69ce81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7910f4fc-e3b8-4809-9356-aa65a42b8699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c08ca40-a096-4aa4-a5a6-e2b184ea682f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29de747-7d90-493e-a269-ddfb12901f70",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ae12d-a2ff-47aa-b6fd-ff2d258b1253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98e216ea-c3be-418d-b379-79dab4580de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7a232a-c081-4b28-be08-d346c7dd3145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f24dea-817f-4765-90a4-76c6fdde4718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d193263-6935-4dd5-949e-a8f3f216ac5a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb95431-385d-4224-9609-8965f337e1ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "082f9e75-5853-42fe-849e-e4c98831c0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dea0fe-8b6c-41f9-8afd-7bad51239832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9cf325-27bd-4f0b-9cc5-d859005ff2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c07ea79-28ec-4a8f-bb71-9a923d808393",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6570d33-fc03-4b76-b2e7-cb0b70211667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c279c899-0fca-4e09-aa63-33e631e91f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf550f9-4d3d-4bc9-88a3-588d4a0eab3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a815ecd-d911-484d-9e6e-58776de2aa33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25f3750-00f9-4174-aae6-e38d127fe599",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa49135-dd4b-4b45-ad6e-745e6a8ff0e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a90ac7d-a6fe-414c-8f5e-32983f652eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629dad5c-8aa8-4dde-a910-959523a71e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1a3b78-d14d-4477-b2d7-7b22b8441716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5e4fda-077f-4b79-89bd-568476b14fdc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72437da6-ce67-4af5-a9c7-1514215197c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b69e993-fc41-475f-9e72-0516331de802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4360e0-19ca-40f2-ad7e-5c90b21a6489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ff706a-99b0-4543-86d3-01857d98c4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe638fe-d568-4cf1-9cd4-a9664092c186",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc908124-b2a0-42c9-ad9d-205b521e4315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7663e734-4c81-4a8c-8440-370fa27ac26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013d7938-efa5-4ff0-8c6b-304076047ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554febaf-b1bb-4bc4-8b6c-6ba3c96a5b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cbb6ac-be4e-4a6c-8438-dd8ff5b1621c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99984f61-76de-4170-aadd-d58c7261b413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c8ae74d-c5b3-4aff-84ca-b2475959c2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8116c4-879d-49ac-9c3d-8cc62a8af667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345c0fb2-0ea7-43c8-9a2c-5c00ced95206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64143874-c56a-490d-8da4-366843b1ee3a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af62cd2-7287-45be-9be1-2c68964f7443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "143c5b73-08e7-4c9e-b673-0d8df1bcf1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dafefe-8999-4092-adba-91c29923a1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df11a57-edd7-44ef-b8f5-30999628e072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4315143-8883-4026-a4c9-0062adf71626",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5ded77-da37-42f1-847a-0c251a93be94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee707bb-7f46-4fb4-ae18-0d8332139280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a6f16c-2df5-4080-a72b-4e6f02d3cda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf37d50-6945-4423-b5fb-debd6c7403a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1355738b-a617-4d3e-af16-157a3c6f194f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52642c5-6bcb-4de3-84b4-4b46e1d31da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f924d7b-9423-45cd-9d48-06aa8c4c9575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f94cc8-0add-4e9a-aa6a-bc545be63f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3414646-ab7e-47c8-9e3f-7c50c03b2b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcbae69-3b93-4bdb-9d32-8aef06e6e12e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e646e21-017c-462c-8ecc-1479ac2fba48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4f9b62c-e830-4847-80fa-9dec46dd9182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf63a37-86c9-41d9-b7e0-683234eac378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7bacbd-8e71-4837-b13d-acf9b40d4806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2564f4d5-6652-41ff-a42f-3cca8b092633",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935aa33d-ed91-424b-b70a-3898b581a736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ff060e-376a-4f05-abce-f3d335ff86e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619f77ce-9344-47e6-b01a-1c1dcdc8bdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e4aca0-a25a-456d-98fb-d6ed49e20206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9576cb3c-1145-46a5-bca8-b7932614875a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb130e0-947f-46b7-811f-6df55736a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89a16736-1945-4491-91a4-c32d6972645d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f8727-a1d4-44d8-8432-bfa895af276e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2d5faf-8044-4def-9acc-4c7d8fc96995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f85192-95b8-45b1-8f83-3b8d7b5c3e44",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8512aa54-81be-4971-aea4-54b3a1a81142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fdc8e9a-5d97-4cf0-9de4-b80deee6fe1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74d52c8-bced-4c9e-b4c8-bd6525d6152d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56a1cdf-7c01-4704-8553-bf9714ed514e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3742281b-cad1-4fe4-9569-4fde45263fbb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa589ff-a338-409d-9486-7e2a799c95eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40fcb8dd-9beb-4796-b04a-3f0709e7b0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86539a3-a425-4434-8aaa-41ea87994156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b06511e-52b6-4042-bf12-fdb36d49a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d95841-d31a-4468-9a39-42c05075e901",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3573b677-b301-49c7-b1ef-97832a324640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6de388db-185e-464d-8165-8ef7b231f3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c273a61-ff66-42c6-b5d2-1386ad7d90ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5599b62-b06b-421d-9c94-73231a44b5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a34dd7b-ef32-47fa-a92c-46bdf06d308f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54819148-b4ac-4001-bab2-ce4beae37282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62b1e4a5-8c33-448b-85f3-2a9628eec4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f904957a-a163-4b6f-9107-e72ec6e5f47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67c2952-195d-4fd5-9a87-92dd0d86e26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18755e1d-871f-4339-8e69-5685936ae0b0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83e95f7-bda2-4f49-ac5b-f1a4d4e79228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11a4cc8-189b-47b1-9693-b2956311d126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4a5ad5-27fb-4026-af8a-4c704492de44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5808206-469b-49f8-9eb2-0975f13effab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5258cfe2-d72b-461d-a14c-9cc17cacc320",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b442a0d8-6b7b-4e1b-994f-bfa34eedeb91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0801992d-3618-411e-ad3f-30bff8f03a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7c7fd9-2072-4489-a0b3-5ba2b20db421",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f268e5-de75-40a2-aa00-b9438d1fb616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe5faf8-e68d-491a-8909-a5241bf994a3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500fc3a7-25d6-4755-ac19-c10aabcdb38b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372dbe59-6564-455e-9cbf-8ed28a0521f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e21fc54-c3ea-4e2d-b472-3ebcbf989d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c772821c-e17c-40bb-9dc1-c2e0eba037d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f49a359-f474-4909-a6c1-2ec163df8a76",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e192063-e9aa-4c4d-88de-d6fee8404bc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "513d1859-259a-4836-8768-4de235f48fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e530afe1-48e6-4874-bf06-4ff372a0e285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8d4dde-22ff-4ce9-86c5-5bee1fb34de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bab26d-1573-48b4-a504-a7b033451fdc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1a5fab-0de8-4264-8db5-4664583dc858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccaaba4c-852c-4e4d-9b0b-8286ee7bdedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e41594-a08a-4020-9478-1d881cef2ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e87236-00d3-4324-9689-29c7b50045c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0dfd78-d3ff-47c5-801c-fad36489e6a1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bb45f2-5b53-4e89-a598-1b7ffa378d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c2857c0-777a-4404-92b1-d21ab3bc6e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a73f3c-6b21-4942-9747-4739290db3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fa3559-9355-4829-b658-370bf6cb246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f7c593-6f32-489f-89f5-bdc0c242a80f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09dacd8-f3d1-4806-b9e0-85ac145f4989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b3b7c3-1e8a-48ff-9fa4-be5836804e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ad97aa-a0c5-4567-ae94-4c1fa9931b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b23875-abee-4111-8306-da52c0b8f6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c7066b-976c-43a7-8575-96455752e3c6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da3cb55-6898-4555-814c-fc7c1b0bde98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d12fa60-a4fa-4f83-97dd-00b686d02a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d027cc6-f32a-4abd-a419-e3155c3c68bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c141011-fddc-42a3-8f1b-3e1e92d712cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56ab933-6477-4bac-b664-52d041de1249",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2d214c-21e6-4573-9fe7-1b0d70a3636b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66b0d87-41f1-41eb-891a-cb62f4176dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933c88eb-50a6-4eb1-9a42-217507a2441e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cc877e-400c-4d16-af95-6d35aadb396f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "069a8b0b-9017-4db9-9a1d-d02a6b9dd9d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76623f1e-5d59-4c7d-b13f-d32dbfc97bff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d20a831-1870-44ca-ac9b-cb0cf33db4c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "192d5157-a43f-4fbe-a994-b36717780734"
                    }
                  }
                ]
              },
              {
                "id": "bf15ae33-a1bf-4810-937a-f2c21cc30369",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6aead499-50ae-470a-8cf0-000c2f5778f8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab593822-5cb8-4f61-91da-378ccdf2eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2a2d6222-23e0-442f-8b31-7c96d576302c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17c4314-87fd-45af-a047-857662c38c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08129636-b883-45f5-9389-75b2891993a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d39a14f9-a482-4ce6-9dd9-7e6c607c4b9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09e7bec7-5ab3-4af8-92f3-97d9c2738aca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0ebd094-cdcd-42d9-b933-fbcac4d0d6dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "437c3d20-b615-45d5-9be1-e1430cc707bb"
                    }
                  }
                ]
              },
              {
                "id": "0fc7a8b8-85e3-40f6-8fdd-7ac69c905dc3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b53635b-0816-42ab-bfc3-adcf36d81a8f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba6a485-b5df-4a16-8ce7-08cac6cfcecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "528fa7e7-2f08-4c86-924b-d3317b45472e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6674cc9d-a370-4a75-82ac-7be9cead7bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ed74fb-db57-4811-8987-3bee9503d3b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9aa40484-1792-44b7-bc8d-a6c428b85cda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "103bbc66-80cd-4bb2-b842-7eb757c39c80",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af59b4e4-ff80-4874-91d0-b875e2ab80a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "241cca27-a48d-412a-b236-01ce1a03f434"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6376f20f-27d7-4683-aaa9-2a82516eb21c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a096d879-dfb8-4119-9f35-5a1ded3657a5"
                    }
                  }
                ]
              },
              {
                "id": "581b4fb6-4eba-4362-a331-eca0582f1073",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "174c7451-d287-49af-8962-f86e68f77417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fee6df54-3b3f-468f-8a8f-bdcf986b9d10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7288479-2ae4-4670-9f04-f4d814a357a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "076f7d4b-21f8-49e8-b2a3-23c0c88878a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76f27555-aadf-479d-807b-5ec85c90492e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "76cd7f23-0860-4a2b-8302-2fe86a688e50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c07d42f-26c8-4d12-b9ec-cf539484e88c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "398e6ce4-508a-43cd-bda0-059553679f45"
            }
          }
        ]
      },
      {
        "id": "b4d1850b-3bad-4057-8bfd-1ef00dd78e65",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4e7214be-06ee-4eec-9e8e-aa5d339a63b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d66005cb-7210-402c-9937-1f969a3f8832",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d8b45dc-abd2-4536-a4be-e52346e7666a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86abbaa-83f8-46e0-a874-03453cb14c8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ac19f097-043a-4e7d-9f3f-afe2c5b951bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02fc7c2-afdf-4053-8ead-54f298ebd597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b819a12e-8951-4924-8b45-2431fcbca535"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5225e347-e38c-4c1a-a3a6-aba9518e1ff8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30f0c144-e639-4f3d-bb31-0d9e8ba22a32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f90d6ed9-7791-48ba-8e90-1406c1c7e6b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d88ba2ec-d5b1-4840-8580-7c4cefb4563a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c37d2cf5-458f-4e85-81fb-8234ee37191a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "19c490dd-981a-4d05-8748-4524c0ab17f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a63e590e-f0db-4831-a484-34bb00c193c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93752d7a-ab24-47be-a020-4e4ace729223"
            }
          }
        ]
      },
      {
        "id": "a5dcf9b2-93e2-4035-a613-fcfb3dbe499f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8d90c491-b520-499f-a48e-6de11ea6e7e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bb11ac4-1ee8-44af-8315-43412afa4cf1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ac7964f-efe9-4894-91a3-cb9a09034e3b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3770ed-48b9-4632-a4c0-5b122b99ac24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f764fac3-96b3-44dd-af53-81f99612f53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538ec50d-81b3-4e19-a2b3-74e87755aa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "691125a1-a877-47ca-afa8-802835f7837c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "393aad1d-aaf6-4089-908f-ccc7fc0d78d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fb5d76f-e14e-4822-8d80-a75f5a98ef72"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dc36a4b-4cf6-44cd-9c61-7d1a28438292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "974d3e15-dfa1-4360-8074-214bffe07ef5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fde3be0-adef-4372-8ed1-5a3477bc7ced",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7474978-596c-404a-b53e-8f0b43d900ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fefb54e-2d3b-471c-a77f-89e7ed4d7a6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e362972b-479c-48ce-8ef3-019a5984a6cf"
            }
          }
        ]
      },
      {
        "id": "1f7d01d9-862b-44dc-9f2f-f6878c29369f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6797c8eb-9c4b-4943-bd40-57d6180477bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "783fbee7-97cb-4152-956a-e94797c0b63b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c2a60d6-dabe-49e3-a65e-a73b08a6ecc4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554a04e8-78b2-409d-bd25-60f48cbbaef7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a04e0e87-053b-426f-9af1-7f68a094866b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ea6a9f-a7ce-4cda-b6d9-9b4891233287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31ca1441-c4a2-49c4-b18f-565f8cfd8ad0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c610bbb4-7814-4a52-9cf8-b4ce3f8a248e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "389ede6a-48f3-4a3f-8cd6-005fca55767b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1509cd7-e7ee-40ff-bc47-44f18371051c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0fbe1a2-34dd-478d-bbc5-f65bf3d26c36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1db4002-c0b1-4c09-9aa3-ab8ca8cc33c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fafbbe9f-185b-4391-8e78-f8a19a712d5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ff5c45b-8abe-4267-811d-7661c73d14c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9d27ece-c169-4d95-b2f2-92ec21cdba1f"
            }
          }
        ]
      },
      {
        "id": "3ca2c205-56ee-46db-9188-f606bb87d12e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92af0f30-9fe8-451f-bd1d-172c2474d42e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3196af80-a025-4e5e-ab72-9dccb96a2dde",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f371d737-1319-4a86-bdf6-1773df47df1e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cccbcdf-a632-4c25-919d-d3a4ff45fd44",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3203de4e-c6d4-485d-81de-0179dad450a3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 119.0912698412698,
      "responseMin": 7,
      "responseMax": 6234,
      "responseSd": 458.2923397286307,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719275883089,
      "completed": 1719275921579
    },
    "executions": [
      {
        "id": "0c4c4e09-9388-4748-93cd-7da8d3fcc086",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "66f1bc04-b617-4c16-b379-b76d7378c60f",
          "httpRequestId": "458d645f-085c-484c-a422-90e615dbfb79"
        },
        "item": {
          "id": "0c4c4e09-9388-4748-93cd-7da8d3fcc086",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dbb494a0-c412-4939-bde4-76d9895a9cfa",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "00f7dfe6-eb0d-4080-93b8-81a161fec36b",
        "cursor": {
          "ref": "c92523f7-c0bc-4237-9e05-ce2ce594571d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "52c8fd56-c5cd-49ab-8d2a-4c261387abff"
        },
        "item": {
          "id": "00f7dfe6-eb0d-4080-93b8-81a161fec36b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "be9edc09-d28d-4c36-8986-be7e3e05195b",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "9ff23f25-14c2-45c6-88e0-257576671664",
        "cursor": {
          "ref": "0de747d3-2472-4396-9419-4610964fef09",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6b2e7123-1e5a-4a95-b66e-06479a859790"
        },
        "item": {
          "id": "9ff23f25-14c2-45c6-88e0-257576671664",
          "name": "did_json"
        },
        "response": {
          "id": "b1f6ecbb-e743-4c05-9332-44c28880b872",
          "status": "OK",
          "code": 200,
          "responseTime": 272,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d799c3d-3b40-4a82-9373-bf0d45f42fd6",
        "cursor": {
          "ref": "a4db5f1e-cc6d-4d96-8686-070548702d90",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4514b644-c50a-47e4-b250-4f46cd885f65"
        },
        "item": {
          "id": "9d799c3d-3b40-4a82-9373-bf0d45f42fd6",
          "name": "did:invalid"
        },
        "response": {
          "id": "93fdd0a3-a2fc-40eb-9c4a-233882f1ccd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 295,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d799c3d-3b40-4a82-9373-bf0d45f42fd6",
        "cursor": {
          "ref": "a4db5f1e-cc6d-4d96-8686-070548702d90",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4514b644-c50a-47e4-b250-4f46cd885f65"
        },
        "item": {
          "id": "9d799c3d-3b40-4a82-9373-bf0d45f42fd6",
          "name": "did:invalid"
        },
        "response": {
          "id": "93fdd0a3-a2fc-40eb-9c4a-233882f1ccd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 295,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed81759-4d14-4c81-961a-877ce9d1ec3e",
        "cursor": {
          "ref": "d04f35ba-cad0-45d6-be12-1b2535e0cbf6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dfed7171-05a9-4b89-ba44-9ef0de839fd5"
        },
        "item": {
          "id": "aed81759-4d14-4c81-961a-877ce9d1ec3e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ac6d5738-536d-4073-ac66-9b23a2e9e383",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f5c5fe-fa2e-4819-a749-3d70c7b19cc6",
        "cursor": {
          "ref": "69cf07c0-d523-4ac7-86d7-c02aa0365b3e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "99ee0fc9-c841-4505-a6d5-8ecf4227e363"
        },
        "item": {
          "id": "f7f5c5fe-fa2e-4819-a749-3d70c7b19cc6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "288078f2-6e63-4ae5-abea-a52ce6fe6bf7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8768c7-3d74-4c89-9171-423c3a4a449a",
        "cursor": {
          "ref": "833ef4ac-e9fa-44a8-8b59-d8019d63582d",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ca291e7b-d528-486b-a523-fb16d24e0b41"
        },
        "item": {
          "id": "2c8768c7-3d74-4c89-9171-423c3a4a449a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cc67cef3-ee2c-47a1-904f-bf418525abdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a07f0b-4890-4193-88fe-6b22cc1c8f43",
        "cursor": {
          "ref": "1e75bb0a-01f5-42aa-8068-210f9ac04157",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e5c3b449-8e4b-4a00-9cb1-b5c477761456"
        },
        "item": {
          "id": "19a07f0b-4890-4193-88fe-6b22cc1c8f43",
          "name": "identifiers"
        },
        "response": {
          "id": "fc8ac85a-e0be-4da9-996c-1c78a8ee4aa2",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209f7dd8-0956-4455-aa28-e6f22adf8f7c",
        "cursor": {
          "ref": "e05060e0-aefe-436c-83b1-c5bde52bfc9f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a8475141-9980-491a-a5f0-2d46220b4d7c"
        },
        "item": {
          "id": "209f7dd8-0956-4455-aa28-e6f22adf8f7c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5c07f2da-39a7-4ab4-87db-d2fd157f50e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff2a318-f020-4393-b82b-6afcdd9d6571",
        "cursor": {
          "ref": "8e945027-fec7-49d6-907c-561ef4b7bb1e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "256f340f-19c8-4cf4-a805-f53634579f46"
        },
        "item": {
          "id": "9ff2a318-f020-4393-b82b-6afcdd9d6571",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f9f8f6cb-673f-4089-8079-53b1dbfb0549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce6c25d-fb9a-48c6-9589-c3c6d0153ccf",
        "cursor": {
          "ref": "564fcf97-b022-473f-84c8-3f99821f9bd1",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ba16b30e-8070-4ba0-89c9-f72b7498b10c"
        },
        "item": {
          "id": "8ce6c25d-fb9a-48c6-9589-c3c6d0153ccf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "99150227-a255-414a-8aeb-5c4c5e78a043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27b38ba-33db-49a9-b63d-d12ee4585e66",
        "cursor": {
          "ref": "a65255ff-00f7-4745-81f1-66adb57f2d98",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1be8bfea-1726-4ee4-b884-42d08bdd7fb6"
        },
        "item": {
          "id": "b27b38ba-33db-49a9-b63d-d12ee4585e66",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e76983ca-b3ec-40bb-b4d8-472a7410bafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f479c7fb-931f-44d4-b14d-5167597cf2d8",
        "cursor": {
          "ref": "5bc29bae-4fca-441a-b8ed-53889d2feb0b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a85ff586-ce81-4723-9d42-ef29a6293074"
        },
        "item": {
          "id": "f479c7fb-931f-44d4-b14d-5167597cf2d8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "367af8c5-fe6a-4194-8fa4-e6482137c916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b7a7a5-54e8-4f14-98f7-2ccf91504657",
        "cursor": {
          "ref": "4d4b6633-b2b4-42fd-8b2b-3ac0a58a340b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0bfe9396-86af-41c1-92e5-00e624e0ff2a"
        },
        "item": {
          "id": "52b7a7a5-54e8-4f14-98f7-2ccf91504657",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "134d0e45-422f-4050-9f60-112159ae9d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aaba42-b01b-45d9-886e-afb7559475f8",
        "cursor": {
          "ref": "375e35b0-5e1d-4956-bf87-0074c39c707a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e91e8dff-bc80-4a5e-88ec-c8745f5f7f18"
        },
        "item": {
          "id": "37aaba42-b01b-45d9-886e-afb7559475f8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1703cd05-218c-4bce-9d3d-f57d0c24a8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450dc7ad-d939-4608-a33d-ec32c83447bd",
        "cursor": {
          "ref": "e41aa30d-2308-473d-923e-ad9c5e3f452e",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b61fd6a1-6fcc-4035-a45e-b2e527290cbf"
        },
        "item": {
          "id": "450dc7ad-d939-4608-a33d-ec32c83447bd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e656dfa3-d5c5-46c3-9597-bda099df1620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be187de6-5abe-4010-b272-6dc8e66fbaa3",
        "cursor": {
          "ref": "ae6c71fd-5564-46dc-bafb-2afaf772ef48",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cde43a00-f09c-4d92-a7ea-e2745aa8c7ba"
        },
        "item": {
          "id": "be187de6-5abe-4010-b272-6dc8e66fbaa3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "11d5f660-3b15-428c-812e-284e26b06b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6467e6-1b21-40fd-a055-8767c26572df",
        "cursor": {
          "ref": "8062d859-5278-46ba-84b8-dbf8275112eb",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "54f5dd5f-a2e4-49d1-87b9-c8203a6c9911"
        },
        "item": {
          "id": "fc6467e6-1b21-40fd-a055-8767c26572df",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "12790e5b-1447-4339-a559-71b5765ca6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b16227-c8a9-482a-a5bc-ce84989a64e4",
        "cursor": {
          "ref": "d9a94dae-f51d-4fff-8010-5fd8b3d04e6b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81db86f5-6d3c-41ac-acb3-e28a40cfe4bc"
        },
        "item": {
          "id": "90b16227-c8a9-482a-a5bc-ce84989a64e4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f5eda701-f832-4151-b3cb-859096efb275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bec7d8-0e7e-4b57-9981-4e8bab22fc65",
        "cursor": {
          "ref": "af69ff75-b1d7-412f-84a1-a575898f59b5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "35c1d63c-126a-41f1-82c2-2c831130eddd"
        },
        "item": {
          "id": "74bec7d8-0e7e-4b57-9981-4e8bab22fc65",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0d57fab7-4f9e-41f3-af90-991e563808f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0039b92-67e2-40cc-9b38-b329320ac8a0",
        "cursor": {
          "ref": "d7a75dcf-28fe-4e47-b7ba-ef73ca2e7a6b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eb298b84-7142-46fb-a0a6-547f0dbb7fbc"
        },
        "item": {
          "id": "f0039b92-67e2-40cc-9b38-b329320ac8a0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f331e057-6acf-44d6-9beb-74f9e46491ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08081815-c3a0-4129-b0c6-b91854f84cb6",
        "cursor": {
          "ref": "3d06fcb2-7cea-4d77-a376-e4b08e74b773",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "89540cb4-5593-49e9-a1f3-614093463530"
        },
        "item": {
          "id": "08081815-c3a0-4129-b0c6-b91854f84cb6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d698fd48-00af-4f4d-9906-acdb36fee892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0a8123-bbff-4461-a83c-a45159622ae4",
        "cursor": {
          "ref": "017cb66f-87f9-44f8-9a98-5bca30d4a960",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e298ebb7-38d6-493a-9880-528412eccfe2"
        },
        "item": {
          "id": "2b0a8123-bbff-4461-a83c-a45159622ae4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0371a960-e6aa-4a3b-b3ab-810d06112ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a55ff93-0a32-43f0-bc2c-6495ee990e37",
        "cursor": {
          "ref": "39063258-45da-4000-bce0-37b1f27c31cd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c55b80db-f585-4299-b4f8-7a387634649e"
        },
        "item": {
          "id": "2a55ff93-0a32-43f0-bc2c-6495ee990e37",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "de4effdc-52b6-4d29-bb71-96bd4914c5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e058a40-8ac6-4304-bfae-42005d0d51d1",
        "cursor": {
          "ref": "36c12710-4bd0-47f6-a2c3-16c038b72f5c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "13c35eba-307c-4403-bd1d-6ef02d112525"
        },
        "item": {
          "id": "0e058a40-8ac6-4304-bfae-42005d0d51d1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "64f9ced6-7c52-4421-a32d-ff72abe334a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5dfde0-e7ae-4c26-a280-a7973af8818d",
        "cursor": {
          "ref": "71235cb5-f621-459f-bff4-cb68bbdabda0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c984cacd-5ea5-47c7-a5b3-760794234070"
        },
        "item": {
          "id": "7e5dfde0-e7ae-4c26-a280-a7973af8818d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c80b578e-2b22-4f46-b86b-768b7fd59b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb379e98-7c37-4c62-b2be-402e88eeed37",
        "cursor": {
          "ref": "f9a3b2c8-a6a4-4155-8f6c-5b9cead11d09",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7c79b9dd-07ed-40da-b3ee-52027c786f4e"
        },
        "item": {
          "id": "cb379e98-7c37-4c62-b2be-402e88eeed37",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ffbd984f-8b15-44bd-8681-4b12a5dd0aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1393f1-2f7a-4cad-94e6-609f5a9e7042",
        "cursor": {
          "ref": "700b7238-9906-4587-ac48-8982bdbed051",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3a046cba-9ecf-42ff-86ef-480b1354ca46"
        },
        "item": {
          "id": "3d1393f1-2f7a-4cad-94e6-609f5a9e7042",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e0aa74e2-2dda-498f-9ea2-ea832b57a18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8cd07b-b147-4bd8-b84f-e5acd534a661",
        "cursor": {
          "ref": "dd3c7c24-83d5-4ed3-8470-f438ee4c0e89",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6f2313e-5992-44ee-8cb9-0c8fa9e5578c"
        },
        "item": {
          "id": "0d8cd07b-b147-4bd8-b84f-e5acd534a661",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5bbb7723-d0f0-4e46-b152-8001f5a16d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038f94bb-8ead-4db7-8ffe-d8c61ff2bcc4",
        "cursor": {
          "ref": "aefec580-0207-4e51-aa3d-5386b023ba71",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b2b7f5b5-1018-437f-9b27-ef46f2560f83"
        },
        "item": {
          "id": "038f94bb-8ead-4db7-8ffe-d8c61ff2bcc4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b2a1e0ae-98fd-4f8b-bbc3-5645554bd774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b550f482-e8e3-4c50-bbbb-8d318da62375",
        "cursor": {
          "ref": "078f4385-aa8b-4744-bf19-b8d7623d48bb",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "833132b8-2135-44aa-83a4-9611edd2d100"
        },
        "item": {
          "id": "b550f482-e8e3-4c50-bbbb-8d318da62375",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fe4978a4-3e7a-493c-9ea5-44e270ca6e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dc9eb8-a922-4ad3-be98-5b2f1d929987",
        "cursor": {
          "ref": "ba1999b4-ba49-45ad-9984-e731f7491867",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ceabb17b-fa41-481f-a632-e0c9666f3fba"
        },
        "item": {
          "id": "00dc9eb8-a922-4ad3-be98-5b2f1d929987",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "90d478cd-2bc0-4896-98df-2b61c24c2208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d39cec8-9a30-41a6-a0a2-0cd4748eddd2",
        "cursor": {
          "ref": "662521c9-f718-4392-8658-5d109bb30d51",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "da1b4651-25fd-4f30-aeef-3119bd27f070"
        },
        "item": {
          "id": "5d39cec8-9a30-41a6-a0a2-0cd4748eddd2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "79ec8d1a-1766-4876-99a3-c35084f0e53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b108c8d7-e696-429b-b6f3-acb8677851b7",
        "cursor": {
          "ref": "d66f721c-b730-4aa3-8f64-715369cf959c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "69e23e0d-970f-4d1f-9d25-555251a3c195"
        },
        "item": {
          "id": "b108c8d7-e696-429b-b6f3-acb8677851b7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "eecf6f62-aae9-466f-86c0-301a91735571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05b3200-9f5c-4341-a785-3cc1dce38a42",
        "cursor": {
          "ref": "5cb5e138-1c25-481e-ac0e-c37b2cd5fda8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4624bd5d-5f26-4671-a86c-c4040e64f5e0"
        },
        "item": {
          "id": "d05b3200-9f5c-4341-a785-3cc1dce38a42",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d8165d52-51b6-4a44-b538-0459e08e27b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e39e9f-e5f0-4fab-b385-e78a9be711c4",
        "cursor": {
          "ref": "dc3b7acd-6534-428e-a7f5-743e760bc9d7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "414b399a-d26f-4f85-a952-b7e1153b2ec0"
        },
        "item": {
          "id": "13e39e9f-e5f0-4fab-b385-e78a9be711c4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f151a947-6597-424a-9bbf-f9f8e3eac637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fca9201-67b5-49db-90e1-f565b14c6fad",
        "cursor": {
          "ref": "c362d072-1bdd-4846-ad65-13c90079a544",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9fa65c12-c922-4905-8b89-4313bcdecc24"
        },
        "item": {
          "id": "7fca9201-67b5-49db-90e1-f565b14c6fad",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b913bb16-ec4f-49d9-8e2f-8d344a1a424d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419fde9b-38a2-4361-9c0e-405c1d88f782",
        "cursor": {
          "ref": "d8849826-6187-4761-895b-8643907276eb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dc99abfb-ecde-41d5-b55c-7d909b207bbb"
        },
        "item": {
          "id": "419fde9b-38a2-4361-9c0e-405c1d88f782",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bccb75f0-83ab-4880-ba39-52fdc6cb1442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e01b148-52ef-4881-8950-931e69c4089d",
        "cursor": {
          "ref": "6f397edb-1cab-4ccd-9d55-1fbf47f1d17a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ae60dffd-1045-4d88-ba4a-62dd72839b9f"
        },
        "item": {
          "id": "7e01b148-52ef-4881-8950-931e69c4089d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "58baeb0d-a4b7-46c2-8029-ce1878ad8bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bb9258-6b46-479a-aec6-f11a6f60b9ea",
        "cursor": {
          "ref": "fca3a068-55e2-4f82-ab66-20d9d16ec337",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "58a5932e-9fa7-454d-87e0-7f6852903eb0"
        },
        "item": {
          "id": "d0bb9258-6b46-479a-aec6-f11a6f60b9ea",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c8aab355-7aad-4d58-8f51-b64a051feebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bae65f7-c1fd-4444-ae9a-ea457713d558",
        "cursor": {
          "ref": "a391d44c-87dd-4dd0-8724-47c4930d5b47",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d9b36507-fb3b-4bfa-bbe9-55e86f750b7e"
        },
        "item": {
          "id": "0bae65f7-c1fd-4444-ae9a-ea457713d558",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0f5fe61c-9212-476d-8a38-cbb16908af09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a57bd67-ddf4-4952-9fa1-cc81930b9f39",
        "cursor": {
          "ref": "25f1a07a-8139-4a14-8d71-3619aae9181e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dbc8366f-34c6-439a-8f3a-239fe53e34fb"
        },
        "item": {
          "id": "5a57bd67-ddf4-4952-9fa1-cc81930b9f39",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a12f9e4e-2029-4dcf-aad6-ef3f19c59bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03f9281-5e0b-4136-b5a5-f89659c2f3dd",
        "cursor": {
          "ref": "32910d44-5bf8-4406-ab92-41e4e7e5c0cc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "270b21b8-6112-4e35-9ff1-dba4eac25998"
        },
        "item": {
          "id": "c03f9281-5e0b-4136-b5a5-f89659c2f3dd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "32c1b96b-78e9-48b8-b8a6-82c95f71c0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c0bc2b-90bd-477d-b607-51dedf1abc63",
        "cursor": {
          "ref": "86517a7f-b761-4aa8-b27d-236ab562765b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6208e909-039f-4d30-917a-3ca1218ad7ad"
        },
        "item": {
          "id": "d4c0bc2b-90bd-477d-b607-51dedf1abc63",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d2ba7a45-43fa-4d63-96a2-f463eb9f1add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f2ef37-8fb8-4c68-adc2-7c3b8302ef52",
        "cursor": {
          "ref": "7f9a82f9-6adf-431a-ac9e-2065c4aae5d6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "75458dfb-4f5e-47c1-8f9a-e0b6c0448f20"
        },
        "item": {
          "id": "10f2ef37-8fb8-4c68-adc2-7c3b8302ef52",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6154278a-200d-4437-bd86-6ed6388caff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a480947e-6e53-4837-89e7-e3fcb0d46376",
        "cursor": {
          "ref": "b0a76578-0790-4f22-8ee5-a345f40a307a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a7217a1c-e099-4714-b659-35122ac01b16"
        },
        "item": {
          "id": "a480947e-6e53-4837-89e7-e3fcb0d46376",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8d11d75f-761c-46bb-a0a1-ad1ac05a3fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6158c96e-3d84-440c-854c-82c95f53e2f1",
        "cursor": {
          "ref": "4f177af5-49df-45db-8e77-d84b216a567b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "195727fa-0fb6-405a-8326-5141d5a50410"
        },
        "item": {
          "id": "6158c96e-3d84-440c-854c-82c95f53e2f1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f874cb2b-3abe-4c1d-ab67-e1c8e09c62a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba09735b-8f2c-4cc4-93a8-649880e36b6a",
        "cursor": {
          "ref": "e237dc89-9414-4737-abd2-852f7cbd989d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a3be5278-1ae6-4261-9ab4-7cf23ff4054f"
        },
        "item": {
          "id": "ba09735b-8f2c-4cc4-93a8-649880e36b6a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b2b42321-16f9-4f0d-aace-76604441ea37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865822a5-17e0-41e1-9934-d9f83bd77922",
        "cursor": {
          "ref": "3d22e44e-f070-4194-8db1-77b207cd52e7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f433a327-0b07-46e4-9fc8-9ec9b4d8c06d"
        },
        "item": {
          "id": "865822a5-17e0-41e1-9934-d9f83bd77922",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "43a1fcff-2a15-4fcf-950e-2e971ba90b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3ae3b5-cf8b-49f5-8ec4-5e52b8bdeb6a",
        "cursor": {
          "ref": "9ab1db56-c456-4938-88ef-26ee118d24b5",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "39d94ff6-ee74-40c9-9fb2-dff3f246d49c"
        },
        "item": {
          "id": "0e3ae3b5-cf8b-49f5-8ec4-5e52b8bdeb6a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "340b06d1-3bd1-4608-baf7-24a3fe5fc488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122c5494-ccb6-44fc-b9fb-f05befcb4454",
        "cursor": {
          "ref": "709ec700-aa9d-4199-b7f5-bdf0cac915c2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9acc29c2-e7fc-4185-9dc7-681a5ccb7622"
        },
        "item": {
          "id": "122c5494-ccb6-44fc-b9fb-f05befcb4454",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d4526d9f-5f5d-4b60-870a-8872ff0060bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc956e8-69b4-4406-972e-8adf1a473381",
        "cursor": {
          "ref": "e092bd99-748f-4f35-8dc4-c0432fede7b6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "284e8fd2-4d5b-4ae5-985c-ff36ec5fac0e"
        },
        "item": {
          "id": "7fc956e8-69b4-4406-972e-8adf1a473381",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "35e4f501-21a1-42ec-8024-6fbb48ffada3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47a1b12-30bb-4a0a-a472-82605fddae19",
        "cursor": {
          "ref": "fb06b35d-b221-47be-a508-4705fbb78246",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b78cf97c-27c7-47e0-9184-5f09c5589349"
        },
        "item": {
          "id": "d47a1b12-30bb-4a0a-a472-82605fddae19",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "733b4251-80fd-42e6-9c07-06d153e892c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6a42b0-c232-4e0d-af1f-54537344da75",
        "cursor": {
          "ref": "ccab3164-a14f-4057-90cb-dbdb6eb82cac",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1d6f4464-c59e-4958-b90e-c691bda15f7a"
        },
        "item": {
          "id": "0d6a42b0-c232-4e0d-af1f-54537344da75",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "769e5046-30a4-40e2-bfcd-221d30027724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52b67b9-2d2b-4535-a2d8-43748084ec8f",
        "cursor": {
          "ref": "1126a8a7-01c4-43be-9696-d31116e4c546",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "41bb6cc9-523a-4b01-bd9f-025de92631f9"
        },
        "item": {
          "id": "f52b67b9-2d2b-4535-a2d8-43748084ec8f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0f05e251-f491-4507-b097-ffd1c1e3b1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17e6f87-786e-4962-9040-c87d075e3f43",
        "cursor": {
          "ref": "716f43af-52a7-40a9-8168-6c72939fa968",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bbcbba4b-1dd3-47e3-a423-09f7a91d437e"
        },
        "item": {
          "id": "a17e6f87-786e-4962-9040-c87d075e3f43",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c9f2725d-aee4-42b1-9334-da9d424cc87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1c73f2-b492-4b17-83ae-71d54123a65a",
        "cursor": {
          "ref": "fbf1a60c-9117-485c-aa0f-1f805b69cb13",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ab98b971-66ff-4ed0-91a0-d193f02925d8"
        },
        "item": {
          "id": "bf1c73f2-b492-4b17-83ae-71d54123a65a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a6eb21c3-1e54-44e4-92c6-78130c2d20e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da299ed-5358-44e9-a891-9fb2bdbcaddc",
        "cursor": {
          "ref": "c6abf828-9822-48c0-aad0-791260136151",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "42222394-783f-47a2-9b69-59fd71c58c36"
        },
        "item": {
          "id": "6da299ed-5358-44e9-a891-9fb2bdbcaddc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7654dbd0-a32f-4547-b89d-e8413991535a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e31c6c-b29e-4e42-aaf7-80bbc98e8cb8",
        "cursor": {
          "ref": "4a0777bd-883c-4e18-b548-086504a88967",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dc15acdc-6b37-48ab-bcc6-e5c5189281bf"
        },
        "item": {
          "id": "29e31c6c-b29e-4e42-aaf7-80bbc98e8cb8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0b3becb7-dd23-4281-87b0-5dd43b086818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d1b326-851a-4f2c-999d-a7b32346539f",
        "cursor": {
          "ref": "4cbeb3e1-f921-47e9-9248-585a4aa8c671",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1310e3c4-ec8b-4788-812c-e497c2d0da84"
        },
        "item": {
          "id": "d3d1b326-851a-4f2c-999d-a7b32346539f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "533417ac-184f-4c07-ab34-4d1c7badde10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148b50e6-858b-4c4b-8af6-0e1285c51944",
        "cursor": {
          "ref": "c6bf0c60-cd47-47fa-8835-3ed90141cbea",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e5557d12-6d62-43f0-a163-d3bb3fa8b6ae"
        },
        "item": {
          "id": "148b50e6-858b-4c4b-8af6-0e1285c51944",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6095aed2-d352-4565-9714-15dd74e7de35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70328bec-6e8e-4535-90cf-776650dc025f",
        "cursor": {
          "ref": "95ae2388-2044-40db-95f7-3c9eb0d37ba8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "20a5b4c9-a67a-45e7-b2a2-52ee3548b46f"
        },
        "item": {
          "id": "70328bec-6e8e-4535-90cf-776650dc025f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9fb0742a-ab53-4bcf-a1bb-d8a5b2b1d7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fdf7a3-24b1-4565-a0a2-51e7b53a8a00",
        "cursor": {
          "ref": "3de3f406-6419-4a05-a552-dcf42652477e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ec5ee599-059a-44aa-aeb6-3fbef874bb60"
        },
        "item": {
          "id": "e4fdf7a3-24b1-4565-a0a2-51e7b53a8a00",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ef1e9cfb-2d86-4542-9ce9-b40d4c419f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47682519-2fa1-4fd8-aa65-89edfa7e71d0",
        "cursor": {
          "ref": "601955f4-71d4-4619-b276-a8474f9e11c8",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "be9ed431-627f-4250-9844-19771c495dfa"
        },
        "item": {
          "id": "47682519-2fa1-4fd8-aa65-89edfa7e71d0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "06292088-8756-43b2-8aa7-8aed9bbd7b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45edcebd-43e6-4c84-b8b2-a8fa0f2096cf",
        "cursor": {
          "ref": "5a0d03f7-ca7a-4e9a-a80d-f0db8f9199a6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "583f473c-3cd9-49f9-b6cc-bc651b3efd94"
        },
        "item": {
          "id": "45edcebd-43e6-4c84-b8b2-a8fa0f2096cf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ebc2adcb-7ebc-4194-8a74-b14d0d5b5cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b9c2b0-bde9-47bd-b876-a4d6323804b9",
        "cursor": {
          "ref": "93de6d3d-5627-4ac5-9ffa-430e35e1c088",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "01477db2-4a96-4706-9206-8cefcee41d41"
        },
        "item": {
          "id": "81b9c2b0-bde9-47bd-b876-a4d6323804b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f1099f6a-1b46-4959-99c8-60eaecf48e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22996489-976b-43d4-8b51-20510d62a20d",
        "cursor": {
          "ref": "1cda33df-b2e4-48f8-b069-1a3c3d833677",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9563b78a-9cd4-4115-a4eb-a31c30a5e6b6"
        },
        "item": {
          "id": "22996489-976b-43d4-8b51-20510d62a20d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cab218be-b13e-4bc6-a7a5-5ef0efd40d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2b325e-5afa-467c-b139-a16710590851",
        "cursor": {
          "ref": "90f0e951-1358-4fb5-89bf-1fa73fcae25b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bba9a72a-4a5d-46ad-bfe3-d9e49ed4c18a"
        },
        "item": {
          "id": "4d2b325e-5afa-467c-b139-a16710590851",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "68ad865c-a949-45f7-90d4-1030b1039ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ff2f82-8f5c-4171-be08-8330f26cec21",
        "cursor": {
          "ref": "fbf80ff9-a7b0-405d-a3b7-fd51afc759c7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2086fed-65ed-4d95-a667-4e97bb5e8974"
        },
        "item": {
          "id": "f1ff2f82-8f5c-4171-be08-8330f26cec21",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8e8f49c4-9b76-4bee-961f-fffe3320d1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a968cdc-f984-4ada-8773-6852494d1c0c",
        "cursor": {
          "ref": "3d01662a-39fd-4ba2-96d9-d86a42dfe515",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "98d2117e-0940-42ba-90fa-223e489910c1"
        },
        "item": {
          "id": "0a968cdc-f984-4ada-8773-6852494d1c0c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2c60a4a9-f168-428a-8440-e5bba706b24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2b29ea-68e0-409b-b49e-8e7f79259623",
        "cursor": {
          "ref": "6055fa73-f71f-4218-93fa-67f64ea50960",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2b0ca1b6-d296-473a-8af8-4275eac154f3"
        },
        "item": {
          "id": "cd2b29ea-68e0-409b-b49e-8e7f79259623",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "28a3016e-626b-4335-9b94-11017257e0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d093286-f7fc-47cb-8883-294c34116a1e",
        "cursor": {
          "ref": "8bd2fccd-dcf9-41cc-a0c0-ab31ff18a0dd",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c97493a4-78fd-4f8f-8ebd-0447c6bcad82"
        },
        "item": {
          "id": "9d093286-f7fc-47cb-8883-294c34116a1e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9ef0c199-8bd7-4775-81ea-3c0ebd127ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3719cd18-ea3f-4a4a-88d8-827e82104568",
        "cursor": {
          "ref": "3ededb02-687c-46fa-b325-8867549b959e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "21727021-84b3-4279-9fde-72e1f0c6afd4"
        },
        "item": {
          "id": "3719cd18-ea3f-4a4a-88d8-827e82104568",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "481cb472-f9f3-4f8d-bc3e-9dad48c5b928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dc9965-8fda-4be0-b9fc-1afbe560e10b",
        "cursor": {
          "ref": "17c8f5ba-a2fd-4b4b-8eeb-905be0239997",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7af29faa-a973-483d-b40a-b31a87fd2f1f"
        },
        "item": {
          "id": "f5dc9965-8fda-4be0-b9fc-1afbe560e10b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a36e59ca-05e8-499d-92da-3943b0f2ab76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caad89fe-d236-430b-83e3-773b6c456bbf",
        "cursor": {
          "ref": "321b92a7-c79c-4176-9082-7ad323b1f4a1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "650f04c4-c608-40b3-a678-8873a8be63a5"
        },
        "item": {
          "id": "caad89fe-d236-430b-83e3-773b6c456bbf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a999fd67-f107-4dee-b57b-e85bf8769942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b2a4b3-0c55-41be-bc60-d938850f3df8",
        "cursor": {
          "ref": "8bf1b486-a146-47f2-a8d8-4ee387d3e1c2",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d9a97cf1-dda2-4329-bdde-d2f6a5215b81"
        },
        "item": {
          "id": "d8b2a4b3-0c55-41be-bc60-d938850f3df8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6962a0a7-7fbb-420c-90fa-c313fa3dc2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2824806-b930-44d6-bd88-dc8bee668e0b",
        "cursor": {
          "ref": "1904804b-f453-4086-bb65-6effcafbfb10",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3f9c503c-9317-4227-9c53-4082e3162790"
        },
        "item": {
          "id": "d2824806-b930-44d6-bd88-dc8bee668e0b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "795d646b-a674-465c-8df9-2ccd0e75d75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a65bd2-1c31-4a99-8a25-159c7dd955e7",
        "cursor": {
          "ref": "af55895a-4049-4ec1-b2bb-bc9d3d554dba",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "420ef4f2-1b1f-4c62-a168-77666807a837"
        },
        "item": {
          "id": "c4a65bd2-1c31-4a99-8a25-159c7dd955e7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f9ec7b60-4716-4943-a452-54681ece1a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f683050-4c3f-41d2-92ee-3a272f9a641b",
        "cursor": {
          "ref": "ca787548-e86c-4c69-b9c6-f2f3ed4fda63",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a81e067a-c2cd-4ad5-8715-9375863fad50"
        },
        "item": {
          "id": "6f683050-4c3f-41d2-92ee-3a272f9a641b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9e01e5f8-0981-4a2a-848b-b2bde0aa6e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89fb380-0ba7-46a8-845d-3cba59f6cbfd",
        "cursor": {
          "ref": "d0fbc2f9-23ab-4154-95e5-973101c72cd5",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f2433642-30f6-4ef8-a329-8eaf48f48e54"
        },
        "item": {
          "id": "c89fb380-0ba7-46a8-845d-3cba59f6cbfd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ab1a1473-de8e-419c-9bea-fd4606df8ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c382f283-ea4f-43f3-a1b4-c9c6021e643f",
        "cursor": {
          "ref": "b0bb24f5-c550-4bb1-9a10-d1dc9c2bf73b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1ee43ebe-0d41-4046-a86c-566686a4ee89"
        },
        "item": {
          "id": "c382f283-ea4f-43f3-a1b4-c9c6021e643f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bac0fa9e-ee39-4aba-be9d-7a77be9a5c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8ae621-83a2-45da-b812-6437ce3a6c70",
        "cursor": {
          "ref": "0f1ac563-1c8d-4ee5-a5d8-3684eb08e56b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "54dc0552-332b-4f65-bea8-7280731fbf03"
        },
        "item": {
          "id": "5a8ae621-83a2-45da-b812-6437ce3a6c70",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d1d287ae-98e5-4920-b61b-34cfb77e11d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4355538-d7d7-489e-a8a6-b6abc31cd072",
        "cursor": {
          "ref": "799036e2-565b-4f31-a252-926b50d9ab82",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "98b8ef9d-ec19-409f-ab87-dce2cb5b4795"
        },
        "item": {
          "id": "c4355538-d7d7-489e-a8a6-b6abc31cd072",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d2924f2e-02cb-4aba-a5a6-f99b7cdbf57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13b4535-f6b8-4d7f-b775-dfa320dac650",
        "cursor": {
          "ref": "19831ce1-7da1-4dac-a211-5b264977c80e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1b2a9b00-5319-4153-829a-7fa065491561"
        },
        "item": {
          "id": "f13b4535-f6b8-4d7f-b775-dfa320dac650",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "db9ca047-5bcb-4f39-8497-baaaf7d5e51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef997b39-01a1-4ab9-a834-acf8bdb426ae",
        "cursor": {
          "ref": "89618273-c477-42de-92d0-c3e9f201b7c6",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a399eae0-669b-42b3-835d-ac6610765f5c"
        },
        "item": {
          "id": "ef997b39-01a1-4ab9-a834-acf8bdb426ae",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3edb2418-480c-4676-b93c-1a3c8cff15c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a88a8e2-9b33-4af4-9437-8f2fe18bccc5",
        "cursor": {
          "ref": "1b73cc37-669b-489f-841a-f3831af28d27",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3a2f29d0-bca6-425d-a70d-34910e147507"
        },
        "item": {
          "id": "4a88a8e2-9b33-4af4-9437-8f2fe18bccc5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9276dc72-658f-4d79-9c5a-84dc75e03ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c03ffa-10ad-42cc-b950-ccd861e6d016",
        "cursor": {
          "ref": "09325a79-2c4c-4dca-a972-9b37ff86bd1d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "caa8b261-8337-44da-a5fc-2c46df7c49e7"
        },
        "item": {
          "id": "86c03ffa-10ad-42cc-b950-ccd861e6d016",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "766b8c46-9ae2-4537-ba34-c62a66a705b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e9e971-f33e-419a-bdf5-f67491d4a657",
        "cursor": {
          "ref": "dc6f92b0-cf03-44a2-ad19-ea889c265043",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "178dd3b8-b4c7-4a1c-a9dd-dac15de702b2"
        },
        "item": {
          "id": "e9e9e971-f33e-419a-bdf5-f67491d4a657",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f83ef178-2e19-4361-a491-d5a319180234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b188f2-7b89-4668-860b-fafda67b392b",
        "cursor": {
          "ref": "7fdcab69-2c9b-428f-ad6e-3cf1c2d873b5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1ba9f954-7188-46d8-b00c-9e94b34e3636"
        },
        "item": {
          "id": "93b188f2-7b89-4668-860b-fafda67b392b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eabc4fd4-8677-48fa-b65e-b89d506e07e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b11dde-de79-4dd0-8f40-c53cc8bb553f",
        "cursor": {
          "ref": "9cc89329-651e-4ea3-b5ce-04e56065393a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4eaa91dc-a926-4c06-8a4f-ddc91ac17b73"
        },
        "item": {
          "id": "f0b11dde-de79-4dd0-8f40-c53cc8bb553f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3821fe29-f71f-465c-ac1f-dbd47c290df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c5e7fa-633e-4a63-bf8c-54da3946d740",
        "cursor": {
          "ref": "388903e1-a224-466b-a161-5527f52251f3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "21312921-5213-4301-b45a-4676f255ab0e"
        },
        "item": {
          "id": "01c5e7fa-633e-4a63-bf8c-54da3946d740",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a1a7103d-b70b-4573-9345-ab399ba02b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0349ab8a-7ed9-40bc-8ab3-35a16ca00fc9",
        "cursor": {
          "ref": "0b05f35e-03cc-4175-9dd3-3739c184eacd",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6dc9edfa-6ea4-4dd0-a32a-adb7b9c02e70"
        },
        "item": {
          "id": "0349ab8a-7ed9-40bc-8ab3-35a16ca00fc9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "16e5e05d-f0be-41a5-833f-fbc161ceab87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4644a6-5c0d-42a0-a9a4-2f3fd7803a21",
        "cursor": {
          "ref": "5eb7e382-befa-42b5-9303-596ab7439bbf",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6ac406be-1514-406e-b375-3b26a0e1aa12"
        },
        "item": {
          "id": "8b4644a6-5c0d-42a0-a9a4-2f3fd7803a21",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0328e078-bfb2-4aed-88cf-be35b60a77bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13814aec-191f-43ab-94e7-3f4ee2ea1765",
        "cursor": {
          "ref": "d43ff2d7-ccb4-4d31-8c07-fa4160368933",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ff3faf60-84d9-4c24-9914-54d6cd560d89"
        },
        "item": {
          "id": "13814aec-191f-43ab-94e7-3f4ee2ea1765",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "52b23426-15cd-421c-9666-692a8ff97ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6887ee-36f9-4343-b1d0-7c24887d538f",
        "cursor": {
          "ref": "1f6723aa-f6df-4b3c-add0-9463862a8aaa",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5441d2b8-0e04-4bc6-9eb3-3e97dfcfd80f"
        },
        "item": {
          "id": "4b6887ee-36f9-4343-b1d0-7c24887d538f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "419e85a8-5daf-4b68-b768-374ceba4cb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df650f74-3efa-453a-abbc-534664f9ab3e",
        "cursor": {
          "ref": "9ec8a503-518e-4e8f-9b9b-a55236f97e0d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6f48094e-c3b8-41fa-9014-6fafce361079"
        },
        "item": {
          "id": "df650f74-3efa-453a-abbc-534664f9ab3e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "429820d7-5bbf-4d12-943b-bcee7b4f5ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9f59e7-6621-4eeb-92e6-552907ddab31",
        "cursor": {
          "ref": "b97262d8-ec14-4649-a46e-c4536b68b624",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cb15cca2-e0c6-49cc-85d0-961ee01b7066"
        },
        "item": {
          "id": "8d9f59e7-6621-4eeb-92e6-552907ddab31",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4fabd967-65e9-4725-bbf0-fd40d9edf9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3a97ef-2e10-4270-8ea3-096b22792c03",
        "cursor": {
          "ref": "4c85c71f-5fda-4efb-a917-e2f463c68ccf",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a145bd20-a8bc-48a2-99ce-a8f43fba5a6e"
        },
        "item": {
          "id": "6c3a97ef-2e10-4270-8ea3-096b22792c03",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "94186d90-c89f-43c0-a09e-659c176d4f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464053c0-480e-428a-849c-e21c379f110b",
        "cursor": {
          "ref": "4fcc9cf0-ddf4-493e-aa7d-1cc89fe0bd58",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fadadcd0-8de0-4601-a56b-76fff202b2c7"
        },
        "item": {
          "id": "464053c0-480e-428a-849c-e21c379f110b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a6dc20da-cc3f-4372-be66-04b1cfba5d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d6317b-82a8-472c-856d-0722e41e43b5",
        "cursor": {
          "ref": "1243c9ee-df53-4a2f-be0f-fa9ae12818c2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "913595ad-e71b-4db5-a8eb-65c98b686b0e"
        },
        "item": {
          "id": "35d6317b-82a8-472c-856d-0722e41e43b5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6ad9f877-9296-4ff5-9952-74124f197271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0954b527-69d1-4ac0-a617-1afef9d3169a",
        "cursor": {
          "ref": "7254e8a8-5123-4561-be2e-6becf0ca3a4e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "07c4b4c6-7e41-49c3-b64f-5f97cda88b1a"
        },
        "item": {
          "id": "0954b527-69d1-4ac0-a617-1afef9d3169a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4760d43f-d7e7-43ab-b4f1-ee7041aa713f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6916b42a-f643-4dee-906a-4eeacb8aa186",
        "cursor": {
          "ref": "bc36b60b-8f29-4e29-9d2d-39cad326fae5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f84b7ff9-994d-4862-9f81-f07441f2facb"
        },
        "item": {
          "id": "6916b42a-f643-4dee-906a-4eeacb8aa186",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "da94b198-3595-4fa9-8471-7855835aca32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e0767682-ab62-4e2a-86ec-5292b71122bb",
        "cursor": {
          "ref": "9495dfd6-6c74-4be5-b877-189d57188f40",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fdf7cfb3-49ab-4bce-ad5e-7b6179f96342"
        },
        "item": {
          "id": "e0767682-ab62-4e2a-86ec-5292b71122bb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5110d1ed-94ff-4a41-85d1-dbe0a946f4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d7c2aa97-9091-4461-bbb2-95461795e2f0",
        "cursor": {
          "ref": "ee363a11-f0ae-4127-8a37-b01ce5bc4153",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "39ce2041-9dfd-4b53-9ccc-2e73fc2338f7"
        },
        "item": {
          "id": "d7c2aa97-9091-4461-bbb2-95461795e2f0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2861d984-ed89-42f8-a191-a4fc181f5cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5035766e-acbd-4c10-8dad-75e14fb70c5e",
        "cursor": {
          "ref": "befd0c5f-bcdc-43fa-8054-d54cc02beaf7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2bee04e7-dc26-4c60-ba91-a9c6235cf430"
        },
        "item": {
          "id": "5035766e-acbd-4c10-8dad-75e14fb70c5e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ccca5bad-b107-4268-a9f5-e1e3baa2454d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b3167764-4391-4da4-bfb3-8a1ef659c968",
        "cursor": {
          "ref": "cd830816-198d-44c2-a0ca-49077dd9493f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2921cb78-6a45-424e-b561-95ae7c91d762"
        },
        "item": {
          "id": "b3167764-4391-4da4-bfb3-8a1ef659c968",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "922f3005-b6be-4770-85cf-10204b370039",
          "status": "Created",
          "code": 201,
          "responseTime": 6234,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4689ec1-2724-428d-a99c-3b01c2028ad8",
        "cursor": {
          "ref": "ac5adf1f-2038-44d3-98ab-df68bb2e2df1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "874f7a33-2a94-424d-81ab-121d45608f9a"
        },
        "item": {
          "id": "c4689ec1-2724-428d-a99c-3b01c2028ad8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f20b0281-f859-4dd9-8fbb-2f05f5ad8d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "73bec552-d834-465a-b8ad-f11b617cae2d",
        "cursor": {
          "ref": "c1136963-eb16-43d5-ac01-4b632d723676",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "47c2a276-d88f-4121-8782-9e7b6b5152f8"
        },
        "item": {
          "id": "73bec552-d834-465a-b8ad-f11b617cae2d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "11b9b2c6-4144-4b15-9e38-f864990b858f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b50a0a06-b7dd-4982-a9c2-21f2e661cc2f",
        "cursor": {
          "ref": "2a9f8114-0275-4485-8b68-e1af900698ae",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a9f02348-9f32-46ef-88f2-b2b7c345f574"
        },
        "item": {
          "id": "b50a0a06-b7dd-4982-a9c2-21f2e661cc2f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "823cd47d-25c3-4fc1-a159-5b5b36558fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010f7a17-99d9-4c18-a77b-b93564966f18",
        "cursor": {
          "ref": "6e6a18f4-6ee0-4d82-b8d0-465a5aa48e1c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c07674fa-a2bc-4916-90fa-211b98b9f255"
        },
        "item": {
          "id": "010f7a17-99d9-4c18-a77b-b93564966f18",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4fdc8392-bc7d-4d18-a76e-e07b8e06e01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4049720f-4523-4a3b-b500-4fcbff5c2dc2",
        "cursor": {
          "ref": "82a6522c-62c1-47e8-948e-83ffd40671c0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "20ff9740-631c-45f7-bd19-f8d969d4f0cb"
        },
        "item": {
          "id": "4049720f-4523-4a3b-b500-4fcbff5c2dc2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fa35aff6-4323-481e-bdd9-2cd8bc2b2308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61b1c3e-b37b-4ecf-84ea-e7c8764d5cd2",
        "cursor": {
          "ref": "6111a77e-6ada-4137-bb8f-cab078fad98f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cac43afe-00ea-4ca3-bc91-8df6cd21b063"
        },
        "item": {
          "id": "b61b1c3e-b37b-4ecf-84ea-e7c8764d5cd2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a71d0241-5f56-4d07-a499-9133fc0ba28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9829e8-c230-4c0b-9b4e-7b4eb1cef264",
        "cursor": {
          "ref": "ce5de00e-f50d-4acf-9953-0024d798c56a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e4e2a2fe-6100-4f66-a410-4e14c5f19553"
        },
        "item": {
          "id": "5b9829e8-c230-4c0b-9b4e-7b4eb1cef264",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "81147883-464e-44a8-ba12-985d88c61e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e11c68-bdf1-468a-adc4-91d2fc0a7236",
        "cursor": {
          "ref": "6fe502f3-aeb0-4acb-93e2-501ced3e7f98",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "080c8aee-7f2d-44f1-984c-16a8604798d9"
        },
        "item": {
          "id": "d5e11c68-bdf1-468a-adc4-91d2fc0a7236",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5eb93949-37eb-416c-9433-41910e6d67ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a60769-6de7-4cbd-922e-67ede5d341eb",
        "cursor": {
          "ref": "f31e4603-b3cc-4a8b-ae01-35a2c4f8f6d7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c9df731b-9883-4b49-a248-21f64aa2807f"
        },
        "item": {
          "id": "a2a60769-6de7-4cbd-922e-67ede5d341eb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d5b4286b-5f97-4815-8a74-9ebce18be3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801ead67-fbb7-4803-95c9-9d4ca825bca2",
        "cursor": {
          "ref": "2b5748f6-6444-41bf-b41a-a70293f551d3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "37bcca61-07bd-40fc-8648-6aa6d1d401e4"
        },
        "item": {
          "id": "801ead67-fbb7-4803-95c9-9d4ca825bca2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a8a4d1e-394f-4b65-88c4-963acedc6002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca89e8da-55df-48aa-9f71-5962d9487aea",
        "cursor": {
          "ref": "31ff2ccb-c01c-4d01-8121-82aba01c972f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f8c14ade-99c9-47be-8c43-87a3511a07e6"
        },
        "item": {
          "id": "ca89e8da-55df-48aa-9f71-5962d9487aea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "950d149b-c28e-4674-bb07-1fad3d198a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda7619d-3ec4-4511-8c4b-a56869a4074e",
        "cursor": {
          "ref": "50e3440c-a2dd-4bfd-b201-0f46f17389ed",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c9f08798-d7ce-4804-b0fc-ba0760de7ef0"
        },
        "item": {
          "id": "dda7619d-3ec4-4511-8c4b-a56869a4074e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4f758050-6174-45ec-8f1e-ea7879dc5e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbb66c2-7a12-4830-b75f-44a1c7bb1ccc",
        "cursor": {
          "ref": "8d306399-8581-4526-b5bf-7238fd13003b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "89bac829-04dd-4ed5-aa62-7ff8a4398019"
        },
        "item": {
          "id": "bdbb66c2-7a12-4830-b75f-44a1c7bb1ccc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bc1578b3-f92f-43b3-a1ab-f3debcf6ff92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8464f2-49c4-4c83-8504-5889c49f8054",
        "cursor": {
          "ref": "60950832-8233-4af7-b1d6-1ae6cb83e01a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "04216f80-d4dc-4272-bbba-3fb6c666d873"
        },
        "item": {
          "id": "ad8464f2-49c4-4c83-8504-5889c49f8054",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e9106e69-e531-4506-ad8c-c2234ac26bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67632b1-9a27-46f5-8249-481221e3cbf5",
        "cursor": {
          "ref": "e3af841e-cb97-4455-a39c-b1f9b00945b5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "02514a47-c310-4bab-aff8-4e63f19891b1"
        },
        "item": {
          "id": "c67632b1-9a27-46f5-8249-481221e3cbf5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0af8e3cd-8e4e-4b99-ad85-06a028c5a45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928fcde7-ef25-4ec0-875e-c5dc754b1a01",
        "cursor": {
          "ref": "91906358-3780-4398-a430-d6d7c6bcb261",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bcebe8e7-c904-45f6-b859-dc1d367d47e5"
        },
        "item": {
          "id": "928fcde7-ef25-4ec0-875e-c5dc754b1a01",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "583ae3f6-6823-4178-b6aa-16adc43de0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70c81b9-56fc-4230-b2c8-1b1e452c8ab1",
        "cursor": {
          "ref": "6ea7d68a-0c08-4e97-8656-d9e0734092b2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0003740e-6aa2-4c3f-a4db-399f5464d25c"
        },
        "item": {
          "id": "f70c81b9-56fc-4230-b2c8-1b1e452c8ab1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "80d9cd6c-8cef-4330-a60c-8f8ca7272f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8e2100-ed1d-4df1-92af-ad665e68cac8",
        "cursor": {
          "ref": "44249a12-94d8-403d-8c93-93150f69f939",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "16dbec34-5c5c-4688-bdb1-cee41951d029"
        },
        "item": {
          "id": "9c8e2100-ed1d-4df1-92af-ad665e68cac8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "051a98c4-53c0-4faa-b7cd-e5f0db4b7685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3dd9f7-c10a-40e7-8452-3553d2faef65",
        "cursor": {
          "ref": "b8a480f5-7d1d-4408-9cb3-da9e8d6d8522",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "408baca4-dbcb-427a-8efd-17a6eefff19a"
        },
        "item": {
          "id": "dd3dd9f7-c10a-40e7-8452-3553d2faef65",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e54ebe10-d5c3-4c0f-bd80-c609040c213f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "56bdd348-73db-49bc-8554-0dc337393d77",
        "cursor": {
          "ref": "a28dbdd8-5c38-4a6a-90d3-6d156aff7bbc",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8a412c45-f029-4e47-84d2-1f81899bcca6"
        },
        "item": {
          "id": "56bdd348-73db-49bc-8554-0dc337393d77",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f8ad5a60-7b97-4670-8f4d-002f3c6bf29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d8ea7e-19a9-46d3-85b1-31c50f1a8352",
        "cursor": {
          "ref": "cab32289-eb04-4831-8189-97b129b29b33",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "01f8a2b1-dfc1-49f1-a06d-81cec1489741"
        },
        "item": {
          "id": "02d8ea7e-19a9-46d3-85b1-31c50f1a8352",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e780062c-1c1b-4026-aad0-7ab8a57d046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b28489-c19d-4538-bf6b-e14ddb0a110e",
        "cursor": {
          "ref": "b1cc8f7e-ffda-4316-b82d-26be73891e44",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "699f9032-78fc-4e6d-b4d1-e965d240184a"
        },
        "item": {
          "id": "23b28489-c19d-4538-bf6b-e14ddb0a110e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "286fb12f-bd09-43d3-b1a8-c0128445248d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ac12b5-c50d-4e3e-9d88-b2f33e3a5947",
        "cursor": {
          "ref": "8fd9f769-d6f5-41ba-bbbf-293ca113b8f1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "80a13a8b-6fc2-48b4-a4e2-18cd3c50a11b"
        },
        "item": {
          "id": "b6ac12b5-c50d-4e3e-9d88-b2f33e3a5947",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "493a8ac9-f51b-4293-a464-a334bbcc7f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c67ede-005d-4bbd-b474-b090d7521e12",
        "cursor": {
          "ref": "42e9e435-f19e-4ffe-bff2-7c77c73b22e5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6e2d2ce0-6d8c-4973-9f05-51b5ca311505"
        },
        "item": {
          "id": "73c67ede-005d-4bbd-b474-b090d7521e12",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14156765-8b21-45f1-a85d-d910ffe4a1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d234b7-86a1-4909-acab-34fed3d25c5f",
        "cursor": {
          "ref": "be8ac101-4a7d-4460-b8ea-d921dd0c0ea2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3a72b970-9a0e-4c2a-b5a6-f77d9e1c073e"
        },
        "item": {
          "id": "41d234b7-86a1-4909-acab-34fed3d25c5f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "56bc663c-e28e-48d1-97f9-1f90877e6d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8f146f-37a4-4009-b193-d2ff791c8a9d",
        "cursor": {
          "ref": "aed9b15a-39a0-4ef8-a161-be83bab94e9e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3019db61-13f0-4819-bf16-5af5d89dc4d0"
        },
        "item": {
          "id": "5c8f146f-37a4-4009-b193-d2ff791c8a9d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5d61fa04-9a0f-4f74-95f3-eb0677af771c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326a6fc3-5ebb-4497-9ce8-835484898ce0",
        "cursor": {
          "ref": "e8ae68a9-e2bd-4b2d-b4b9-e00f14e73ea0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bd6657d7-9b31-4d77-a3f9-c266dbfd4dff"
        },
        "item": {
          "id": "326a6fc3-5ebb-4497-9ce8-835484898ce0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b5975031-c352-45ad-9d29-e4604d40ba02",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "db744b5e-047f-4686-a33e-d867c831226f",
        "cursor": {
          "ref": "14297fd8-7a00-48f8-93d7-2d4348a4c1ed",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0d257184-17c0-4afb-abf5-16530b3b41bd"
        },
        "item": {
          "id": "db744b5e-047f-4686-a33e-d867c831226f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7f007c0-7c71-48a5-9958-2554392114ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88318a55-0596-48b5-bc53-d3802b186ffe",
        "cursor": {
          "ref": "7b2d2936-16eb-497f-ac77-0e40f0dab100",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "90e3f07d-7c76-4dd8-80fe-d434514a26e6"
        },
        "item": {
          "id": "88318a55-0596-48b5-bc53-d3802b186ffe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f4cacfe-929a-4901-a184-d92c71ce886b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd1b9e9-cfb3-4815-9f28-d0683328bafa",
        "cursor": {
          "ref": "5b976539-b659-474f-b646-83e81ffed323",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2e077b00-c2b4-4583-aeab-4b72b0d03ba3"
        },
        "item": {
          "id": "ccd1b9e9-cfb3-4815-9f28-d0683328bafa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "97e97cff-06f6-4ecc-b8c9-8f3e991008d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c822d97f-af8d-47be-bad8-b8b313476588",
        "cursor": {
          "ref": "88ff8415-5edd-4343-a83d-150aed0f9223",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "92a76824-c4d3-4921-b54c-1d671bf278f7"
        },
        "item": {
          "id": "c822d97f-af8d-47be-bad8-b8b313476588",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "14f3a192-638b-4c31-9a4e-0a9b376a764f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5132cf65-133b-40ed-bc77-233f6171824f",
        "cursor": {
          "ref": "57d93952-fa1d-4de3-8008-bb3eb061d936",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a8ec90d6-f70b-4ce1-be98-7c92c681f536"
        },
        "item": {
          "id": "5132cf65-133b-40ed-bc77-233f6171824f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "00f37c0a-ba52-4893-9f14-80b365dda680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b3ca7-68a6-49b5-8d89-e326f301258e",
        "cursor": {
          "ref": "837d6f66-dae3-4287-a9ca-f656ff0ca773",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f143984d-20c7-4bd9-b49c-9dbe9ca3ed45"
        },
        "item": {
          "id": "ed1b3ca7-68a6-49b5-8d89-e326f301258e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8e3fa8bd-194b-40b6-b7bd-98a85f7c7b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d76183-c788-40a6-bfca-cda9d8fde2d3",
        "cursor": {
          "ref": "54cae367-0de6-4a13-9761-97fc91cbbdc4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d869c891-244a-4074-a3a6-f85a34c1f3f0"
        },
        "item": {
          "id": "b6d76183-c788-40a6-bfca-cda9d8fde2d3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2aa9feeb-4a17-42f0-9cb4-77d1aa7d0f8d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 125,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "7e93b2f7-8ced-4164-a029-8cb002420b41",
        "cursor": {
          "ref": "947d4e69-a567-412b-821b-ee38fdd3c09a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "52b48a8c-b152-444d-aec8-8cb082fd74bc"
        },
        "item": {
          "id": "7e93b2f7-8ced-4164-a029-8cb002420b41",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f0d46fea-6939-471a-bbbd-5f9d35111105",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b7750a28-f892-4deb-b583-c7a397a2ceb0",
        "cursor": {
          "ref": "eb1955af-eba8-41b7-ac7a-362ac0ae4d52",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e8021788-9f10-4421-b3e7-3f50fce8bcc0"
        },
        "item": {
          "id": "b7750a28-f892-4deb-b583-c7a397a2ceb0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3c6bbf30-2025-483b-bbf0-8b0e2ed5d0aa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7c5ebec9-9e35-4695-b6b3-a65e1d50fc85",
        "cursor": {
          "ref": "e63b38da-231d-47d4-9066-4c1119c1176b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dad11b4d-bd76-4338-a33a-80c024937cf3"
        },
        "item": {
          "id": "7c5ebec9-9e35-4695-b6b3-a65e1d50fc85",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "39345cfd-432f-44fe-88ee-8fef3c154592",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "c5269d52-2323-4758-9712-a595399b7861",
        "cursor": {
          "ref": "07dee0a0-9d29-46bb-a941-8b9649804a8d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "70f8b692-dafa-4811-99b6-10dcc0de793d"
        },
        "item": {
          "id": "c5269d52-2323-4758-9712-a595399b7861",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8bfc3bdd-c264-4a89-b08e-9b7feafe11d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "a9ff8edf-4647-4009-b7b3-a3797965bd18",
        "cursor": {
          "ref": "8f4b8a11-a756-4107-864d-a7c383e6f29a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ddc8262e-4c11-4f4a-9553-f40ff254b8ff"
        },
        "item": {
          "id": "a9ff8edf-4647-4009-b7b3-a3797965bd18",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "79eca4a8-b597-4be6-96b0-9946f9f32747",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 97,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "aa5b5635-cb61-485e-b204-e5a3fd44accb",
        "cursor": {
          "ref": "68b4c73a-0585-4090-bf67-39a06d1f6d2e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c17dcb57-8513-43d3-a6be-bdc313d06edc"
        },
        "item": {
          "id": "aa5b5635-cb61-485e-b204-e5a3fd44accb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fa6f59ae-8d19-47eb-8acc-b5167f2307ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddcd004-5d69-47c6-b166-d27b6a802f82",
        "cursor": {
          "ref": "a9584521-d81c-4ac2-9770-cce4ea5da807",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2c37b5e0-1273-43cf-94e8-99b54519625a"
        },
        "item": {
          "id": "6ddcd004-5d69-47c6-b166-d27b6a802f82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "37bcac57-72e6-4264-88cb-a89dad7dd4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a133a3b-14ff-4728-9368-34c428f5d27a",
        "cursor": {
          "ref": "28ce137f-3aca-402c-a8f7-f6ea1ff71d40",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "514cee2f-d0ec-481c-a622-4c7f8362871b"
        },
        "item": {
          "id": "7a133a3b-14ff-4728-9368-34c428f5d27a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7ede702c-de01-417d-99ec-a4a3cd39506b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa293a7-9e7a-49b2-83cc-98f77218d069",
        "cursor": {
          "ref": "ee68f527-2322-4f8d-815a-7bef01923990",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8b3c5942-daf8-4b9b-8522-a72b9aa1efa0"
        },
        "item": {
          "id": "dfa293a7-9e7a-49b2-83cc-98f77218d069",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "128828e1-da81-4ce7-9c10-6129dc082835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b36c22-c2e7-4b06-814d-8e4fc611095c",
        "cursor": {
          "ref": "923648b0-da43-42c9-9c41-eceb9cc7744d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "21895e88-3d92-4f99-9a33-6206686cce9a"
        },
        "item": {
          "id": "c2b36c22-c2e7-4b06-814d-8e4fc611095c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b9c05c4c-7063-4e0e-b8a9-5e9ca057b214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012dd7c1-f7a2-4c98-a07f-449896f2897b",
        "cursor": {
          "ref": "0c67d9bb-0c9a-45ea-996e-26386c5abfdf",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d75460c0-0352-413e-9165-22e76506ae8a"
        },
        "item": {
          "id": "012dd7c1-f7a2-4c98-a07f-449896f2897b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3b2f3c37-8493-4bca-90d2-94be40beec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1101ac-d275-4731-ac22-7cc12ddeee8c",
        "cursor": {
          "ref": "cbda2d90-85ef-4268-814c-8a63cd097cc7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9f914b62-f819-4f1b-8616-905b1bdf4946"
        },
        "item": {
          "id": "7d1101ac-d275-4731-ac22-7cc12ddeee8c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9041734a-3a0c-4971-9298-c926478a3fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034e07e8-9275-4fd6-9ac5-5ab08d3daf15",
        "cursor": {
          "ref": "a0f4ab4f-1baa-4c45-ac48-e011d8a3de59",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7cc18f94-f795-44ab-ab86-8952afe09f89"
        },
        "item": {
          "id": "034e07e8-9275-4fd6-9ac5-5ab08d3daf15",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c1456c2e-344e-4a01-929b-531f41605b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4080958-eb10-459b-bd96-f55890b3c01c",
        "cursor": {
          "ref": "fcbf9323-153d-453d-80e4-93b52d9ccda4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ca5c5ad5-2763-466f-b0b8-f559c8976ffe"
        },
        "item": {
          "id": "b4080958-eb10-459b-bd96-f55890b3c01c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f044aac7-71ed-4655-8227-90cc6756ac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2351d96-ecc0-4bd0-bc61-d7cadb0689dc",
        "cursor": {
          "ref": "afdaa77d-d4d4-4aaf-a62d-91f01ae5276a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "592dda42-006d-43b8-8021-c710be8d4df9"
        },
        "item": {
          "id": "c2351d96-ecc0-4bd0-bc61-d7cadb0689dc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e938c2d0-1708-4549-87c1-32f4d0b05b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dde688e-485e-4529-9575-0febae328bb9",
        "cursor": {
          "ref": "22ae1dc9-d96d-4814-8723-dbf8e3922bc1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4c60065e-4c1c-4a06-aede-ba95a34251f5"
        },
        "item": {
          "id": "6dde688e-485e-4529-9575-0febae328bb9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "179185b7-e72c-4db8-9a93-ba32c51294a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c7f7db-8b7f-4220-ab49-699714e1e9b3",
        "cursor": {
          "ref": "e6b9e531-6b1e-46e8-8c15-279115e21c30",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "32720057-0597-405a-ade3-b954b9cf083e"
        },
        "item": {
          "id": "71c7f7db-8b7f-4220-ab49-699714e1e9b3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6de6a26e-c56f-4745-9129-e9a8f51d3902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94bd839-be0a-4d04-a420-55b35af06c5f",
        "cursor": {
          "ref": "abc632ae-fcc6-4547-aeac-679bdd769f9a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5c1a5d9f-6a2a-4ecd-88a6-4f3ed975dd14"
        },
        "item": {
          "id": "d94bd839-be0a-4d04-a420-55b35af06c5f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "087b7214-cef3-4e30-bad3-de725c3c6731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a9c20f-ab23-4388-83a8-6be60e8f0587",
        "cursor": {
          "ref": "cae5118f-68b5-4086-a329-88f498cb9a0e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f2a97f75-5ade-4f75-a5b6-d1cad31d9fea"
        },
        "item": {
          "id": "d6a9c20f-ab23-4388-83a8-6be60e8f0587",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ddf91436-1ee2-48c6-a21c-1fdedf988c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e0b807-d097-46bc-af15-2a8a62ed7d8c",
        "cursor": {
          "ref": "5a306ca9-31ea-4eef-b282-6ccc2ba2d84a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "daabde3d-6dc2-4690-a284-0738bccf7aca"
        },
        "item": {
          "id": "b7e0b807-d097-46bc-af15-2a8a62ed7d8c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "64e4983e-2fef-49b5-9495-5594f0117b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9810ec-a230-49c5-ad63-e6ddb0236821",
        "cursor": {
          "ref": "78ca400b-d83c-4425-935b-c1fd7539bcbe",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f52b109f-c5a9-4dc0-9938-e3a6e5dd9c82"
        },
        "item": {
          "id": "ca9810ec-a230-49c5-ad63-e6ddb0236821",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f9d4399f-dbeb-47b6-a86c-43b1eb4e44ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5959f793-03da-42e4-886b-9d76b2b06063",
        "cursor": {
          "ref": "2b1faa2f-ccfd-4190-bab9-a68eb76c878b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e832ea7c-e58f-452a-ae18-6c8596a19acc"
        },
        "item": {
          "id": "5959f793-03da-42e4-886b-9d76b2b06063",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c5161f49-1772-404c-a42b-f307dbe7c53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b96527-783d-4cfb-bed1-7a581736b569",
        "cursor": {
          "ref": "7e120f28-4cf8-40ee-9a72-6629a4ab73ff",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2bc46542-0ada-4ea5-8fd7-c99d6ebf33ce"
        },
        "item": {
          "id": "01b96527-783d-4cfb-bed1-7a581736b569",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a1ad30fe-2950-47b7-92fe-a1141e454c6a",
          "status": "OK",
          "code": 200,
          "responseTime": 144,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "4ef13685-f7d9-4bba-a04b-6b263a5db662",
        "cursor": {
          "ref": "0129d56a-9be3-43cd-a907-7311becb4ce2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7a6df056-62ac-4f27-a49e-5f29ce6def65"
        },
        "item": {
          "id": "4ef13685-f7d9-4bba-a04b-6b263a5db662",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d39b0bc2-a275-4530-9bdd-98f6e9cc6ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce3caa4-9443-4e9b-b272-e19d4ad03139",
        "cursor": {
          "ref": "15397b9a-bf97-4b48-8f51-690096679251",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "98654d98-d16a-467d-9636-3e2800c644ac"
        },
        "item": {
          "id": "3ce3caa4-9443-4e9b-b272-e19d4ad03139",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5286bf6a-230c-4eb1-9a20-5cecf00dfae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2968e1f3-bf97-40fb-9287-d7c24a381edc",
        "cursor": {
          "ref": "b80a8b8d-2ed2-4592-bf88-88302e3f2816",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c6fb83e3-8578-40f4-a08e-4432c3b17619"
        },
        "item": {
          "id": "2968e1f3-bf97-40fb-9287-d7c24a381edc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4bf4196c-383b-48f4-8deb-30f191cbfd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f090054f-e180-4444-b7da-c39abfaf95d4",
        "cursor": {
          "ref": "41e02090-44d4-47c7-b5c8-12904398a96d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7bac5b8e-ffad-41bb-9eab-54040983200a"
        },
        "item": {
          "id": "f090054f-e180-4444-b7da-c39abfaf95d4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b4ad9489-99b8-4eb4-b231-6c826946d1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08060a6b-2be4-4a13-b075-b1241f9571d2",
        "cursor": {
          "ref": "191a68ff-a47e-40d6-b70d-055e5bb8bb20",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d2af7691-a365-4593-9152-d40bf5323608"
        },
        "item": {
          "id": "08060a6b-2be4-4a13-b075-b1241f9571d2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e383a4ae-be9b-4a92-ad50-a9855a8794b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cadbb2e-c9a3-4416-8cf7-d4edfb6ad293",
        "cursor": {
          "ref": "475cadbc-e371-4c0b-a658-933e3ec93a64",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0ec0a00f-7ca6-4777-8dff-b6f04634fd6d"
        },
        "item": {
          "id": "6cadbb2e-c9a3-4416-8cf7-d4edfb6ad293",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f2fa5568-8506-4eb0-a261-f89eff8535d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10753178-8e05-4810-8a49-330395a0d8ca",
        "cursor": {
          "ref": "8b4605dc-f024-4183-95ec-90d2939729d6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "76c66e67-7730-4ff2-bd7d-bd4f9b5879f9"
        },
        "item": {
          "id": "10753178-8e05-4810-8a49-330395a0d8ca",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d88b9a77-a40d-4d3d-b3de-e6c6a0f86f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25436999-17f8-4b42-9946-f953fb18d1a1",
        "cursor": {
          "ref": "bf1f2a18-30bd-4e9b-a046-cfd7b53ca808",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f38b2e7a-613b-4828-93ec-35393ce049ad"
        },
        "item": {
          "id": "25436999-17f8-4b42-9946-f953fb18d1a1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c392f7ae-ea24-46ef-83f9-7a31b11b94cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e201c2f-4bb6-402f-a8b4-199a90c17b5b",
        "cursor": {
          "ref": "3f5d9e46-3aa3-4e1f-a315-e8ffe6199db0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "92e0e2f5-9b63-406f-81d5-3632a4f32198"
        },
        "item": {
          "id": "8e201c2f-4bb6-402f-a8b4-199a90c17b5b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e1f630e2-0c44-4b93-abc9-a6c28f357da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141b6047-286e-4116-9544-e0323ca104af",
        "cursor": {
          "ref": "c4052896-42ba-4450-9c4d-81e9ddba2d1b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "29b51dca-967b-4f93-9ab0-b2b49e3eb393"
        },
        "item": {
          "id": "141b6047-286e-4116-9544-e0323ca104af",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "89f35363-b6c0-429e-946e-ae2c2844c2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c022a7f-fdfa-4af1-b56e-5265bbb0a9e7",
        "cursor": {
          "ref": "796bd1de-ac81-4f2b-aca4-2657d60c4924",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5211153c-a3b0-4369-8472-8d583bb73b3f"
        },
        "item": {
          "id": "3c022a7f-fdfa-4af1-b56e-5265bbb0a9e7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "20a864e8-8c61-4c05-bdfd-e173ceab5b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad73941-b194-4993-8ce9-7cca959bc9e3",
        "cursor": {
          "ref": "6b7f1d57-a6a9-4711-8bdc-9abfe7a40c44",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2c8e5ad5-176e-4ace-aafc-dbf36bbc3167"
        },
        "item": {
          "id": "7ad73941-b194-4993-8ce9-7cca959bc9e3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0143f974-00db-4907-82b1-a564af497a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b924d6-4aaa-480e-837a-d85b19b27c3d",
        "cursor": {
          "ref": "3edc3f1c-c02f-49ff-9438-f583259b49e5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e69a5b6b-d6a0-4702-b056-86acb8d48bb5"
        },
        "item": {
          "id": "66b924d6-4aaa-480e-837a-d85b19b27c3d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a82b92d2-da88-4835-b15a-f349a8af9524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ca494e-c7de-4bf1-b6f8-618fdcffc947",
        "cursor": {
          "ref": "e68b7290-7fbb-4584-9c9d-5f83fdb1f37a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6ca65399-92cc-445a-8c73-bbea594a90dd"
        },
        "item": {
          "id": "52ca494e-c7de-4bf1-b6f8-618fdcffc947",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cbf21892-b95d-44da-b5d8-939e25e13322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bb2dde-775f-40d6-965f-ab382202e063",
        "cursor": {
          "ref": "9c995e1b-388f-44e2-b299-e7978b19d79b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ed3ff19c-80b4-4c4b-ad51-bf4149f50411"
        },
        "item": {
          "id": "06bb2dde-775f-40d6-965f-ab382202e063",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3b5b3f52-04ac-4bb0-832a-a82e06f4bfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc251c3-26f2-42c7-aedc-f8777eacdc54",
        "cursor": {
          "ref": "6970942e-b3cf-4f0e-b52a-d9cdea714c5c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "273cd8c7-eb2c-478d-8def-017512ae5ba2"
        },
        "item": {
          "id": "3dc251c3-26f2-42c7-aedc-f8777eacdc54",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5860102a-dea9-46f9-bc8e-0997cfaf3cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab45ceb8-b9cd-47bb-afeb-b16769567e17",
        "cursor": {
          "ref": "8eba0f06-ce7c-4de0-938f-c56eb8d58f20",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0c3c59f0-e344-4493-a0c9-34653d7e713d"
        },
        "item": {
          "id": "ab45ceb8-b9cd-47bb-afeb-b16769567e17",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1fbea396-517e-4f15-94f4-7ff2017ad174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680f411b-2c51-46a3-9c35-acf13c4b7c7c",
        "cursor": {
          "ref": "6ee2ce4b-f5b7-400a-a3ec-d75f6b431fa4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "80f85be2-2b61-4fc0-a8e0-3c2de6a47e90"
        },
        "item": {
          "id": "680f411b-2c51-46a3-9c35-acf13c4b7c7c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5d753a48-fd10-4c4e-b13b-f4e289084e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96154b7-1e31-415f-89c9-d80f7469d90d",
        "cursor": {
          "ref": "948a235e-eddb-47ed-ab78-753505f67230",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "51d567e1-6eb4-4003-8c4d-5c87e98e0f16"
        },
        "item": {
          "id": "a96154b7-1e31-415f-89c9-d80f7469d90d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "de8a884b-c2ce-4919-8299-ba97340cf967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88932aeb-a8b7-462a-987f-83bd4e2b2d71",
        "cursor": {
          "ref": "4acd08d1-bd74-4656-9be1-65a1197c2efe",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e82cd8cf-28d8-414d-a682-37be05cafe72"
        },
        "item": {
          "id": "88932aeb-a8b7-462a-987f-83bd4e2b2d71",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3de4035c-0899-4b9f-bf96-cb25f166dcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490a0c03-54b0-4d58-9dea-477a41da1ed0",
        "cursor": {
          "ref": "52a83fc5-a56b-451d-854e-f9ea4fb2a9af",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "06060bf8-e692-458e-a29d-f5f9a1d347cf"
        },
        "item": {
          "id": "490a0c03-54b0-4d58-9dea-477a41da1ed0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7119a751-e0cd-4064-a878-93d97c0f9145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbe5c21-67e6-487b-8341-fd3ced57f80c",
        "cursor": {
          "ref": "e28501a8-5c30-4e71-b633-ec20b05e7cd1",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "96d449bf-f0b4-4c63-98a5-57c2689334c8"
        },
        "item": {
          "id": "4cbe5c21-67e6-487b-8341-fd3ced57f80c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0e799a3d-a919-4ada-a11d-02fa3d1a7b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88206847-3816-4e05-8498-e97d355b9939",
        "cursor": {
          "ref": "be133f78-3fd9-40a1-ab95-247f18c65153",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "21baa599-df46-451d-8f9f-be2e2d46398b"
        },
        "item": {
          "id": "88206847-3816-4e05-8498-e97d355b9939",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d88f909-81d2-4c3f-bb24-2bae00e91e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5033276b-5976-4546-b4aa-655ce8943fac",
        "cursor": {
          "ref": "0800b07d-4ca4-464d-a613-a403ede48315",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b745fdf0-02d5-4fd5-a94f-7d9a865908be"
        },
        "item": {
          "id": "5033276b-5976-4546-b4aa-655ce8943fac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "af666d26-ac0d-4106-bdbe-45219f76a0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afacd95-1668-419f-9b40-492615f38cc2",
        "cursor": {
          "ref": "9030a765-0bd5-448f-9845-9a0e6d533957",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "eb15342e-a71f-4c53-afd4-8d2dec2a85b3"
        },
        "item": {
          "id": "8afacd95-1668-419f-9b40-492615f38cc2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5008632c-77b6-49ae-8363-5d9de85cd2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5463b4-be33-4226-8324-42379977b887",
        "cursor": {
          "ref": "de04c388-791d-4740-8318-627d045e0b66",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d37b90fa-4a09-4cbe-947b-9c224f7db46d"
        },
        "item": {
          "id": "7d5463b4-be33-4226-8324-42379977b887",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "82da01a8-7757-4258-8f9e-7855347c21f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9edaeb-2837-4bb8-b4b6-9f46c6e725dd",
        "cursor": {
          "ref": "0b1395d8-56ae-494e-83a0-727d2a57751f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c7386ef2-eb43-4d77-8453-a637fd053377"
        },
        "item": {
          "id": "0e9edaeb-2837-4bb8-b4b6-9f46c6e725dd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "41bbf123-13cb-4de1-9e6a-dec4aacd26ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8eab45-c3c1-40c4-b309-a8fa987223c9",
        "cursor": {
          "ref": "2cfade52-57f2-4cb6-b801-ea22f0cbc908",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c7ba0224-f33f-47fd-af13-5c15d64a605f"
        },
        "item": {
          "id": "ff8eab45-c3c1-40c4-b309-a8fa987223c9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "67b0351c-7f61-44e2-80e0-804f31a116b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571b7d8c-5af0-4272-b96f-4b8a46e84d6b",
        "cursor": {
          "ref": "c8ece4b2-6a82-4b93-baa9-38d535e1cc06",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d27fd79b-e8ac-47dc-a14e-ef2347b46765"
        },
        "item": {
          "id": "571b7d8c-5af0-4272-b96f-4b8a46e84d6b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8487e629-e7e3-4e11-bdfa-59efc1a2863c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef08d7b4-e285-4972-a711-d86fed271cba",
        "cursor": {
          "ref": "bd52fd97-fff1-495e-a785-c84aaadac9cd",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "89e212fb-7950-4c54-a18e-82b7c83a5ba8"
        },
        "item": {
          "id": "ef08d7b4-e285-4972-a711-d86fed271cba",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f14ea02e-4ee5-4365-acc5-4047f0400ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57bb576-ceb5-451a-a8ec-39f8d5a45f17",
        "cursor": {
          "ref": "1db091b5-3e9b-414e-9f55-493ec2476149",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9dd239d1-189b-463e-8045-741417c0ee6c"
        },
        "item": {
          "id": "c57bb576-ceb5-451a-a8ec-39f8d5a45f17",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cd4ac26e-fbe0-4adf-8922-f0feed1125cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19ece10-3aad-441e-8a9e-0a413efe6cb2",
        "cursor": {
          "ref": "d54280d2-303b-4b38-8118-00315577cc94",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "52c7494e-97d6-4ccc-b45e-913f39ac3d63"
        },
        "item": {
          "id": "d19ece10-3aad-441e-8a9e-0a413efe6cb2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "98db5ecc-75fa-41a3-9cc2-71e431fad649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a3f9b0-47e6-4050-b16e-08efe364d276",
        "cursor": {
          "ref": "52e49d5f-bb8f-4486-9fef-51b5c46a1ff6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "37775164-767f-4f2a-9805-b3e07e1f7809"
        },
        "item": {
          "id": "d3a3f9b0-47e6-4050-b16e-08efe364d276",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0dc430a6-bae1-4a14-bd73-2f6a24e6e387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c44623-58ce-4304-8795-37552723976f",
        "cursor": {
          "ref": "0aa26451-1565-4939-a74f-fabc843e0572",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "252fc8e9-adeb-41b0-b124-95167ec4935b"
        },
        "item": {
          "id": "f5c44623-58ce-4304-8795-37552723976f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6c2d68fe-f501-4b5d-8fc3-603060f4e8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5648fa-0f47-499c-8fe8-fd705459e536",
        "cursor": {
          "ref": "c3660bbe-e71e-4ab4-9c4f-40f37b16aff7",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a05769cb-3e01-451f-9b93-3e643f82604c"
        },
        "item": {
          "id": "ef5648fa-0f47-499c-8fe8-fd705459e536",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0b659b4c-2518-46e3-9ec4-096aff4e4352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65c249d-d8b8-41b4-b53b-a17c1ca73534",
        "cursor": {
          "ref": "187968d6-f750-4d85-b9f7-24d7f88235fc",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6bc45922-5b20-449d-b419-26e9f7d54e39"
        },
        "item": {
          "id": "f65c249d-d8b8-41b4-b53b-a17c1ca73534",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d934de9b-f2e6-486a-8569-4a5768880925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8252bd42-a468-4c31-9d37-54fec8d22f2f",
        "cursor": {
          "ref": "8afae863-20f4-4ff1-b986-729c903bf50c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ce5d3b59-6657-4bfc-99f0-d830214fca9c"
        },
        "item": {
          "id": "8252bd42-a468-4c31-9d37-54fec8d22f2f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "efa6eba8-a78b-4bef-9d45-a44000a7b166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d0969a-caa1-4b15-ac4f-f701054c23f1",
        "cursor": {
          "ref": "b393245e-83da-4106-8944-12b3eeb1a494",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7f4dde35-67c6-4bc6-96ce-5c6a78f3c68d"
        },
        "item": {
          "id": "34d0969a-caa1-4b15-ac4f-f701054c23f1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d863b947-1fd0-462c-8450-aa2b8a460a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29106781-ecc3-466a-8e26-379868cd3ee3",
        "cursor": {
          "ref": "c4ef43b4-a83c-41a5-bd55-e40cdb2fff02",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e12b1b23-384b-43ca-926b-98bc1c24e1b5"
        },
        "item": {
          "id": "29106781-ecc3-466a-8e26-379868cd3ee3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bd37f9a2-90cd-45fb-b7cd-2c12b5c9eb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2465fa-52f0-4161-ba3d-43d69a97393a",
        "cursor": {
          "ref": "78fc46b9-3fb0-40b3-a1cc-cff757c5084d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "141774cb-0481-4fe9-9822-5d0f8f92b551"
        },
        "item": {
          "id": "5a2465fa-52f0-4161-ba3d-43d69a97393a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d8a4c449-c4e3-491c-9db1-385b3a2b6274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff953a5e-4842-4578-8a2f-caf9120b8cc3",
        "cursor": {
          "ref": "65a39446-9c68-4e2c-a803-1c2ba06885c5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f14b919f-dc68-481e-bee9-0799c95dd37c"
        },
        "item": {
          "id": "ff953a5e-4842-4578-8a2f-caf9120b8cc3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c597bd0b-c4a5-4db6-9ab6-d01b8899d7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd7d58a-e6fe-4ecf-965e-d7c5d0446024",
        "cursor": {
          "ref": "12fb066b-b3cb-491e-9674-d9e06ce49848",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "810b5327-4c3d-40dc-9e2c-9756230c5541"
        },
        "item": {
          "id": "acd7d58a-e6fe-4ecf-965e-d7c5d0446024",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "334f31a8-adb4-4693-93c0-0ba07a88b572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e530f45-9855-4d3f-a831-67d2915a4a58",
        "cursor": {
          "ref": "65fd8775-c815-4de2-8b39-b11d54fb204a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7a556ba8-cc71-4076-91b9-8382fb66d615"
        },
        "item": {
          "id": "5e530f45-9855-4d3f-a831-67d2915a4a58",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0481fd59-a128-48dc-b64f-870df4fd7123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735f8dad-5be2-4593-972f-288e3fd7900b",
        "cursor": {
          "ref": "e1593894-2067-46e1-9cd1-0741f3284a40",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7b14a9cb-b132-49b8-ba52-0ec65a847a9d"
        },
        "item": {
          "id": "735f8dad-5be2-4593-972f-288e3fd7900b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3e061b1b-da5e-415d-9685-0a652a300218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcea6c0-d63f-4714-b171-7895ef0d855b",
        "cursor": {
          "ref": "973c10fd-8619-466c-9b54-1749aa2da8b4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "95a70800-de59-4d6b-a955-987f483948d2"
        },
        "item": {
          "id": "8bcea6c0-d63f-4714-b171-7895ef0d855b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "63a4779e-5482-400e-bc96-64ecdb1fcfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa4a327-6610-41c5-8e69-df1cae6d8134",
        "cursor": {
          "ref": "37243ee1-27a6-41ec-a241-2abca4ab9ed1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "53a16695-1cd2-4e84-9ffb-c202a90f0570"
        },
        "item": {
          "id": "caa4a327-6610-41c5-8e69-df1cae6d8134",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a6c5e15-b2e6-4b57-b223-81d3a9ccca4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32910eae-ff9c-4019-8a8e-3505f63f1ad7",
        "cursor": {
          "ref": "586b8211-3720-429a-bf06-916807c7e711",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "267e5d22-4332-444a-9416-835cfca6dc17"
        },
        "item": {
          "id": "32910eae-ff9c-4019-8a8e-3505f63f1ad7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ba171ae7-1e1f-4f9c-ba66-519fecc2a740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccfe71d-6b1c-47eb-baa0-dae622836d6c",
        "cursor": {
          "ref": "d9e7434a-3f4f-4823-8c26-7fa617e9c5c6",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad17409b-beb6-427f-a979-dcb8ae225caa"
        },
        "item": {
          "id": "7ccfe71d-6b1c-47eb-baa0-dae622836d6c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9e8c7167-3c9b-4dc6-af60-0e7a9039cf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4775540e-1218-4e7e-a996-38a01e997756",
        "cursor": {
          "ref": "d9d10309-ef9b-4daa-9ce4-048e56a1cd21",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9e7538b6-97f8-4e08-b614-3765ab14f115"
        },
        "item": {
          "id": "4775540e-1218-4e7e-a996-38a01e997756",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e1bc39e5-b4f9-4029-a13d-ca80432f3d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc37f6e-88d2-442d-b4e0-d25720978b76",
        "cursor": {
          "ref": "2463ff09-f22d-4e62-877e-de933ffcd52a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2a8498fb-08ba-4a2e-a2ac-4c134a51018a"
        },
        "item": {
          "id": "dcc37f6e-88d2-442d-b4e0-d25720978b76",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "45a7b05a-28f3-4b16-96f2-ab1be2ec762c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b374b5-31c7-4e07-949b-56afb0690581",
        "cursor": {
          "ref": "71c10b6e-323d-4066-aa0d-dd1aca32662f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "36e2f369-8ef3-4d59-ae1e-4585f97fe95e"
        },
        "item": {
          "id": "e2b374b5-31c7-4e07-949b-56afb0690581",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "83c2539d-88c5-4bbd-be40-da1374e97d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5371c7f0-3672-4008-a6c4-7a172cc9d530",
        "cursor": {
          "ref": "1e4faa78-098f-411b-b544-4383aaa47154",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b679c635-eb78-4f2b-afc6-565bb429bc8f"
        },
        "item": {
          "id": "5371c7f0-3672-4008-a6c4-7a172cc9d530",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6b6017ff-3062-4bf0-be12-8504a1be47a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6500fbe0-602c-4eb4-bf65-cec8fcf9a3be",
        "cursor": {
          "ref": "6ce09089-8227-434c-9ebe-1d8bfee4c1ad",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2c0bed2b-7f24-443f-ab20-312845559322"
        },
        "item": {
          "id": "6500fbe0-602c-4eb4-bf65-cec8fcf9a3be",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4c0f5b11-f41f-46b6-b519-8861b725bfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e06df25-a6e3-4477-80cf-1692ee31bb79",
        "cursor": {
          "ref": "f8c0f0d0-f2aa-4af5-8599-ac8c0c5ef3ee",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bbf62557-6df1-4520-b5ad-821e2d1ac09c"
        },
        "item": {
          "id": "2e06df25-a6e3-4477-80cf-1692ee31bb79",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "979e6791-4fb4-4d6a-b3a4-888ad313654c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29de747-7d90-493e-a269-ddfb12901f70",
        "cursor": {
          "ref": "96e21c35-d1d1-40c8-b90b-ee5e3694ca0f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "170b3883-8d9a-4730-bf61-402a3c5ad72b"
        },
        "item": {
          "id": "a29de747-7d90-493e-a269-ddfb12901f70",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a204c446-ea3f-41db-818d-7d81e013e9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d193263-6935-4dd5-949e-a8f3f216ac5a",
        "cursor": {
          "ref": "2d795c69-f261-4000-a3d7-1e30d21f53a9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4f6366bc-4187-42d2-b111-21f8dde4e38d"
        },
        "item": {
          "id": "8d193263-6935-4dd5-949e-a8f3f216ac5a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0ea6553e-cf69-4366-97de-9bf68ae2db34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c07ea79-28ec-4a8f-bb71-9a923d808393",
        "cursor": {
          "ref": "c4d41c08-6083-4d75-935a-962a59102aef",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4c04230c-e884-4c6a-8092-f669ad7e2378"
        },
        "item": {
          "id": "3c07ea79-28ec-4a8f-bb71-9a923d808393",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d7080fe6-ed63-4584-9593-115b28ac8b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25f3750-00f9-4174-aae6-e38d127fe599",
        "cursor": {
          "ref": "1a5d1925-98a8-4616-9989-69e1909c2fe9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a6580612-9c5c-4b6b-b6d2-aa24f34c76fc"
        },
        "item": {
          "id": "e25f3750-00f9-4174-aae6-e38d127fe599",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "80139739-d191-4468-afaa-fd847ef175f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5e4fda-077f-4b79-89bd-568476b14fdc",
        "cursor": {
          "ref": "0d0b0a33-7e1a-412d-aec1-ec7cd656fab6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "89a7425e-5c67-4850-858d-afcb17872054"
        },
        "item": {
          "id": "7c5e4fda-077f-4b79-89bd-568476b14fdc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "64c09dc3-f50d-412c-9372-e6bb8dbe6a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe638fe-d568-4cf1-9cd4-a9664092c186",
        "cursor": {
          "ref": "f43295ee-06e9-4cdc-8291-70eac19d12c5",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9844ab0a-5809-4861-9416-3de0c7702970"
        },
        "item": {
          "id": "5fe638fe-d568-4cf1-9cd4-a9664092c186",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "982d23ba-ab16-424e-a2c6-5ac93fb0a556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cbb6ac-be4e-4a6c-8438-dd8ff5b1621c",
        "cursor": {
          "ref": "651db597-6075-4c22-8dae-abf8219b6010",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4c9a15b7-b527-4e67-9193-7e9a9e789348"
        },
        "item": {
          "id": "c6cbb6ac-be4e-4a6c-8438-dd8ff5b1621c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9b11212e-6144-41f2-aaac-3949cc35862f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64143874-c56a-490d-8da4-366843b1ee3a",
        "cursor": {
          "ref": "a8935d9c-ad96-4f89-81d0-2be140495fd0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7702403c-84df-4ce8-96bc-e18bcccef8f9"
        },
        "item": {
          "id": "64143874-c56a-490d-8da4-366843b1ee3a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b09740cf-f8c8-499e-8160-f2726b2e38db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4315143-8883-4026-a4c9-0062adf71626",
        "cursor": {
          "ref": "c2afe4ef-514b-4727-89c9-d14e51dc1b47",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5dfb2801-b39a-4f1f-996e-c81954df19b9"
        },
        "item": {
          "id": "f4315143-8883-4026-a4c9-0062adf71626",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "74e28a47-9932-47ac-ba7f-abf2a44615e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1355738b-a617-4d3e-af16-157a3c6f194f",
        "cursor": {
          "ref": "35b8f4dc-1633-47cd-b855-0af4c70f8c97",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "207ded7e-024e-462e-848d-ec01e2031a51"
        },
        "item": {
          "id": "1355738b-a617-4d3e-af16-157a3c6f194f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "188fa14a-a1a0-4c34-bef3-fc99c58d7efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcbae69-3b93-4bdb-9d32-8aef06e6e12e",
        "cursor": {
          "ref": "21460ea4-15e2-4954-a441-0a996bf4f3e1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d3762543-b8ee-4047-98c5-fa0ace56f75c"
        },
        "item": {
          "id": "5dcbae69-3b93-4bdb-9d32-8aef06e6e12e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4d9cd949-8db6-4b92-bdaf-bf19ca99a342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2564f4d5-6652-41ff-a42f-3cca8b092633",
        "cursor": {
          "ref": "359d0f11-9303-4d4b-ac44-b00e7f691477",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4d434243-c4e0-4fe4-8036-4d92d4f5f7fd"
        },
        "item": {
          "id": "2564f4d5-6652-41ff-a42f-3cca8b092633",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d15f5ed9-d73a-45b4-bf0f-5b0e369ef991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9576cb3c-1145-46a5-bca8-b7932614875a",
        "cursor": {
          "ref": "59d23062-6de7-4eb6-80cf-9d7773c8298a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dc813dbb-4543-4054-be70-fbc50e2b0add"
        },
        "item": {
          "id": "9576cb3c-1145-46a5-bca8-b7932614875a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "91d5d55f-d49d-48db-a798-5a099f043800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f85192-95b8-45b1-8f83-3b8d7b5c3e44",
        "cursor": {
          "ref": "c09a284e-228a-4f33-bc8c-c4c8afc6a491",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1a7bb9da-25ab-4a87-bfbe-c49e400ba392"
        },
        "item": {
          "id": "20f85192-95b8-45b1-8f83-3b8d7b5c3e44",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6a6d8310-bbb6-47a8-8b97-38d05026970d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3742281b-cad1-4fe4-9569-4fde45263fbb",
        "cursor": {
          "ref": "36614122-4036-4fe5-bbd6-1a593d3d0d75",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c3d3834a-c1fd-451b-8b56-56a6cdad37fa"
        },
        "item": {
          "id": "3742281b-cad1-4fe4-9569-4fde45263fbb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "35d9f15a-82d5-4d30-b014-058ce59c6f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d95841-d31a-4468-9a39-42c05075e901",
        "cursor": {
          "ref": "5af4a35a-4465-4619-b3f8-a6fd529fc1ea",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bfb72b7c-29e5-4303-9300-71f2e06af46c"
        },
        "item": {
          "id": "a6d95841-d31a-4468-9a39-42c05075e901",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "89268d90-bdba-488a-bef5-2cbe32c08998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a34dd7b-ef32-47fa-a92c-46bdf06d308f",
        "cursor": {
          "ref": "83977ea4-5b44-4de5-bd19-0d8c5658d287",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "da424d8c-cb8c-4178-8934-aa151d9e1ecd"
        },
        "item": {
          "id": "7a34dd7b-ef32-47fa-a92c-46bdf06d308f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "156e2880-571f-486d-a0b4-fecc7a1d0ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18755e1d-871f-4339-8e69-5685936ae0b0",
        "cursor": {
          "ref": "57f8e189-951e-44af-8f03-862187d81bdb",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4f0e5e6b-7acb-4f62-b1be-36093dba0e0b"
        },
        "item": {
          "id": "18755e1d-871f-4339-8e69-5685936ae0b0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d56d4c59-4943-497a-b520-65b162cbc131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5258cfe2-d72b-461d-a14c-9cc17cacc320",
        "cursor": {
          "ref": "aaab57cb-cd7c-4644-8b03-0277a32887b1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "17532d19-48b3-46a4-b3bd-e75b33055a23"
        },
        "item": {
          "id": "5258cfe2-d72b-461d-a14c-9cc17cacc320",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bea443ae-7cc2-4637-ba64-d3bf3a774833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe5faf8-e68d-491a-8909-a5241bf994a3",
        "cursor": {
          "ref": "a237cf49-a4b7-4c54-bafa-61b2f8fa310e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0892ebdd-b643-45f2-a3dd-e93492f5a6ed"
        },
        "item": {
          "id": "8fe5faf8-e68d-491a-8909-a5241bf994a3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "535e6bbe-5cc6-409c-bfec-eac8647960b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f49a359-f474-4909-a6c1-2ec163df8a76",
        "cursor": {
          "ref": "69209a8a-7c96-423d-8154-ac4435a2be98",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ca139f8d-db7a-4725-baae-6d9f34c7e1e3"
        },
        "item": {
          "id": "8f49a359-f474-4909-a6c1-2ec163df8a76",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "de7995cf-6f08-4202-ade5-d6649e4a90da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bab26d-1573-48b4-a504-a7b033451fdc",
        "cursor": {
          "ref": "af476438-9bd9-40df-9f28-532a70351428",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3a97b08f-74ad-42aa-a509-ab0877be3cd6"
        },
        "item": {
          "id": "f8bab26d-1573-48b4-a504-a7b033451fdc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "640658e2-5357-4b37-bbc8-4c1a07849564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0dfd78-d3ff-47c5-801c-fad36489e6a1",
        "cursor": {
          "ref": "22e71046-69f6-4a61-9206-10ab0a700c8a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5e3eed27-2518-4980-9084-ee8ad77cba89"
        },
        "item": {
          "id": "3c0dfd78-d3ff-47c5-801c-fad36489e6a1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "72b02e8c-e9da-4df9-bef2-2e9dfb5ef6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f7c593-6f32-489f-89f5-bdc0c242a80f",
        "cursor": {
          "ref": "eb2fbb8f-7317-4f64-baef-db4f315fc717",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "005f543b-2cb3-4be6-b9df-fb19c901960b"
        },
        "item": {
          "id": "a7f7c593-6f32-489f-89f5-bdc0c242a80f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e9cd1a41-8dd7-4f2f-852b-faf813776a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c7066b-976c-43a7-8575-96455752e3c6",
        "cursor": {
          "ref": "40bb3209-297a-4ea2-9a0c-0f92a82f2424",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c67a5120-03f2-4db0-8ff2-e2411fe2ee90"
        },
        "item": {
          "id": "b7c7066b-976c-43a7-8575-96455752e3c6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d000edfe-c7ab-4df3-9824-937df8628c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56ab933-6477-4bac-b664-52d041de1249",
        "cursor": {
          "ref": "9977d4ba-47fb-441c-b9b3-1e567de262ad",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1160efdf-fc9b-4952-a3dd-4f57c3226792"
        },
        "item": {
          "id": "e56ab933-6477-4bac-b664-52d041de1249",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7e842cc3-afbc-45f7-8fe7-160ccd32c50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aead499-50ae-470a-8cf0-000c2f5778f8",
        "cursor": {
          "ref": "1c81fe43-bcdd-4462-94a0-3c30c9bd685d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9199be46-b295-4336-9b4d-6acadca2e5e0"
        },
        "item": {
          "id": "6aead499-50ae-470a-8cf0-000c2f5778f8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e8a14675-486f-4d0c-84c4-988290201b78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b53635b-0816-42ab-bfc3-adcf36d81a8f",
        "cursor": {
          "ref": "d4325d88-9db4-4abc-959b-75b52b1f0dc6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1d0d7673-8a44-497a-8837-ae4f5d8962b0"
        },
        "item": {
          "id": "3b53635b-0816-42ab-bfc3-adcf36d81a8f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "afaaac6f-e207-44c0-a8aa-cee77cd40e78",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "103bbc66-80cd-4bb2-b842-7eb757c39c80",
        "cursor": {
          "ref": "090e0653-aaff-4773-9576-2c89d598cb10",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0e0d36f7-39ee-4299-92ff-8b594120f9b9"
        },
        "item": {
          "id": "103bbc66-80cd-4bb2-b842-7eb757c39c80",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a66d8a13-60cf-4750-8460-ebdbc86c0ce7",
          "status": "OK",
          "code": 200,
          "responseTime": 2738,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "581b4fb6-4eba-4362-a331-eca0582f1073",
        "cursor": {
          "ref": "fa11f062-691c-46e8-b138-6016f140d3eb",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "02f531e8-a3e2-41fe-baff-7459aed79567"
        },
        "item": {
          "id": "581b4fb6-4eba-4362-a331-eca0582f1073",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9c94c1e7-499b-45f5-884a-b5dbfbfdb0c4",
          "status": "OK",
          "code": 200,
          "responseTime": 2186,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8b45dc-abd2-4536-a4be-e52346e7666a",
        "cursor": {
          "ref": "eaa4cb42-4958-4eda-bd4c-f64a030b342b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "84029360-a21f-47b3-9539-19b2fe3e02d6"
        },
        "item": {
          "id": "7d8b45dc-abd2-4536-a4be-e52346e7666a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "78603e7e-ccc0-44dd-be73-4456fe1f8e90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8b45dc-abd2-4536-a4be-e52346e7666a",
        "cursor": {
          "ref": "eaa4cb42-4958-4eda-bd4c-f64a030b342b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "84029360-a21f-47b3-9539-19b2fe3e02d6"
        },
        "item": {
          "id": "7d8b45dc-abd2-4536-a4be-e52346e7666a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "78603e7e-ccc0-44dd-be73-4456fe1f8e90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac7964f-efe9-4894-91a3-cb9a09034e3b",
        "cursor": {
          "ref": "0941ec0f-61cc-4075-b828-be48857a98bb",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7b1da2ea-67de-40e4-b5ef-ec104d240fb2"
        },
        "item": {
          "id": "8ac7964f-efe9-4894-91a3-cb9a09034e3b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b5919230-1019-47e8-a4b5-bee3ceef6475",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2a60d6-dabe-49e3-a65e-a73b08a6ecc4",
        "cursor": {
          "ref": "32b825fb-e2a3-479c-b3af-b67aa6971228",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a40f542b-3a9b-401b-94d3-0c3b6f889efd"
        },
        "item": {
          "id": "8c2a60d6-dabe-49e3-a65e-a73b08a6ecc4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e144d53f-d6e8-44c8-8ef6-19028de48d8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}