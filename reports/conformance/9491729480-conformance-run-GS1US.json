{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4246994e-ac77-4c6a-9d8f-b1636e217a0d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3d3f66f8-2923-49e5-9226-1a67b813beea",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3212dabd-b8af-4378-96a8-42db997d4a9a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0584bbca-8889-43ec-9018-cb2f782e4db6"
                }
              }
            ]
          },
          {
            "id": "a2058e1c-7f04-476d-b073-05039ba57ef4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebe9812e-0056-40c9-9710-93f9668d0188",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "69d10502-b72a-4d27-b27c-42933220147d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7d0d5f1c-5386-478f-924f-501531fa1ea2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bd7b573d-3b52-4dab-b99e-138d7c4a2cdb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e12d121-0186-4277-950f-7b271ee19cc6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9da6937f-067e-4b34-9ca6-1377a49921a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "405014f7-bcd6-4773-9ff1-5f8299a4c1b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4eec643-a6ee-404f-aa4d-9e10d4b7127c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d13a327a-7b86-4dc9-a809-cb63d8ac4589"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8859b0e0-e138-4c29-8b35-bac0287d80b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7026baf3-9207-43ba-a84f-2a15a51bbd8c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24aaac24-8234-47a4-88cd-ef4f601a90d0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b581afe8-149e-43db-b7de-be55794788a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b57cb08e-aac7-4abc-bb1a-0ebda40509af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6e6373a-87ae-4ea9-ac22-0d8e7eb4e277"
            }
          }
        ]
      },
      {
        "id": "aaa3cfed-48d4-4538-86f5-51d9c9bdc3a0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5f27db01-2cf9-4c69-93f7-32facd77c66a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fd12d54-f49b-4fcf-addf-23c216b59f25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4a4197a-c721-4c48-aae3-dffaaf09d134",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4bc2d0-2262-4ff6-9514-4ffd184506b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c3f90f4-576b-4bf3-a6a7-97215365c1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d088a810-5e5e-45e3-98e7-234017f822b1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d4f487-97a9-402a-a1b6-e6283aef0c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7227379-507d-4b56-a7d7-af997c80942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b5bb68-b250-44d8-982b-9f81047fc170",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db208c6-da22-4fa4-bd2e-bf18a840f2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c000b4cd-ee1a-4d5c-86c5-622e29627147"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84f6ddca-a54b-4929-9a0d-07e02df0d507",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1242147d-861a-41d5-91b0-5b0100d966ae",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1ddc6f-e578-450a-92d7-f95f11a72124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a677277-3407-4c26-a3db-44cc89d8d281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090b1b76-298d-4b04-8c66-517c909094e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3451f1-1903-4d48-bb64-f6d070fcf998"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c546a8c0-0192-4518-a1f9-21228ac92a86",
            "name": "Positive Testing",
            "item": [
              {
                "id": "927df749-b974-4a36-a435-a4dc8b6ee07e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c53510ff-b4ac-471e-ae6d-2dd36b8564ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "89bf1534-8d30-4ef4-a2c3-d51d2f2b9025"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b857d4f4-a8e3-418e-877d-615a3c656569",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "17859909-c795-402f-8242-1413fb8035ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5610edd8-028e-48a2-ae8d-a5a7ba62e2ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da57fcce-830e-41a3-a93c-cc15a1b9707e"
            }
          }
        ]
      },
      {
        "id": "c26ffb34-3e99-493b-8f79-5a073533e42a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b93cd767-f6ee-4b9b-be10-b2b8dc069aad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6da5495e-b958-48ea-aaed-caea23b67d25",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c632aa6b-3a18-4bc6-aaae-c3c9a96e5c42",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c925ccd-52d2-46fc-9e73-4cac90964a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d081552-db4e-4ca4-9309-c55e127d656f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcec9b07-027a-4b6c-8169-5893e26ebf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f507badf-6b45-4e61-ac87-2afd3bc7e814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87613341-1878-422a-9a9b-ed0acc5c8d94",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c08331-9cf7-4829-a39b-71a8dcbb422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b6bea7-a339-4f4b-a232-7ca69a00de1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59cc9bd-be41-4d6f-b1d3-9bc36f93f605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be4390c1-a64f-4490-8a11-16f73717876b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639d79db-1441-4d45-b1b8-79b9fca4edcf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8829e6e8-be04-4b84-911a-68d5b4afa5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c5f1ec-3be2-4374-9ceb-b1ea9bd454ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b6f381-dd95-4f65-a938-60065df99156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4c2fd4-a3e6-4cc3-bebd-cb6c3f19b3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2cbc1e-bb60-451f-acb2-1b6db434a30a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50ce09d-d902-4c03-b894-9ec3364743d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81ad0c3-7d07-4e21-b00a-a4d0dbc199e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdca363f-e1ba-4c7a-af5e-1e3dcae3e533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d39e8ea-ee96-4f32-af1a-b2d2a66aa44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c407b56e-c9d4-470d-8f2d-14dda853cfb2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833065f0-ab0a-438f-82e3-915849398c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984e7650-cb03-4b75-8450-0d0c385edb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f833e2-376a-4f57-bdf0-4ef17ab27d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e0488f8-7c06-42a4-b2d2-9e2329bedef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788bc722-ba08-4381-8322-d767f168e868",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b72f55-719a-4442-9b9f-9f2ffe9c92e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fa2c73-d331-47c4-bbe8-3515e9be8cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec33aaa-1196-4bf5-ad1d-edf2b3282117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc31a380-6022-4c2d-adff-8a06ea217d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70044543-dd22-469a-ad8b-e774127c95dd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c2b0ef-870c-4e2a-a176-6222ab05be83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465e6308-bb15-44c4-947b-95335c6b35db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6677f497-d48c-4666-8208-9c08c23ce545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fefaeff-cc0c-49c6-8308-35e8f85c0c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54077e75-9c38-4d03-9b66-a7e4b98456c8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88819e19-cefd-4b1b-9a5d-3db2d8b51eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2308bbf-6be1-4e0d-afa0-2f10b8f5a944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ea7d40-eb81-45ed-8a6a-b7d0231a34d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3299007-780b-4ff6-9620-c0987bedbe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f621e98d-e401-4bbf-aef6-45047a2005d1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846cd66b-e147-4e03-9a41-4994625460ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60c83d7-7570-431b-8e5c-0d8c8abc565d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b5f5d1-da91-4ad4-9eca-757051966b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2d1e108-beb1-48fb-bc8d-9ee2cc3bbd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60586ce2-f70a-4bd5-9a6a-57c050cb03d8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fee0a81-a747-47bf-86b0-388d2be45c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b48b200-9f2d-4641-9eea-5ee93b3a6ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0225835a-af42-4127-8d84-06dc36e35f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4266ea09-148a-4e92-b055-1050fcfd7262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aacb72-7a9b-457d-b082-705ecbac3775",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a1abca-8d68-4a4b-a5bf-7b62fa28f048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eb1dd7-af1d-46cb-b091-067b4c530e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4b57c7-1d60-4193-aeb5-ebab116f0a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08e4191d-73b7-46ea-b5b0-c22f6654ad81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a91fc3-6a56-4b34-a07e-ee32fb5143c5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2551b35-43a2-4658-ac50-9b7e46d9943c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506db71f-99f1-456b-a2fb-653f26ed6e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a27c2ed-d625-4e00-b136-2b5a42045057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7cf17e6-ca94-45ae-9e1e-87975726a913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90baf573-1459-4623-ab88-b92ccdf4589d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831c4e7b-3456-4750-bbe8-76509bf26c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d1212f-2cb6-4800-994f-0f24c535d7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfc5195-fecc-4d6a-97e5-9546cc83c641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9ef30d8-456b-46fc-a144-948fc00ef260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb7b058-6dcd-4611-b874-9bec5f61043f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd0c0f2-2a1f-4e27-aa7d-27aa6c9e6949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424cfe0a-00b5-4684-8a18-25bf1f693417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3343d367-aa5e-4358-ab98-6f882ea18561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1808396-19c4-4a6d-96e4-dcda21ef75a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05df2a18-502c-4424-b7bb-4dd1104b1da3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a97d0b1-cad4-4d22-8ddf-a2e8e83b50e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bca260-d0cb-48c6-9ccc-4cc060a01682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa85a28-c024-4a75-a09b-2a3ff6e89d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "913fc2fc-b7fb-4037-bf25-2957ee8daebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2ff963-11f3-4159-bd11-4da79c5fffb3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef02203-fea1-4c00-8f96-609cbd657b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ac0df7-9a71-45b9-98bc-26c092a4a97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c42e9d-1dcb-4b25-81f6-1064f5d2e6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1fb4a64-602f-44ac-8f16-fdba9119235c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1641dcd0-d839-4225-b146-b27af3a228f4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a2202f-d312-4f3d-ae31-8537f3ab868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aff2f6a-63ae-48fb-81e5-0f2e78070672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fddc8e-af0f-4cf6-a328-f96653347471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b235b9df-04b3-4b36-9e3f-bd8650d8895b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba42d96-5ab8-41cc-94cf-689d7627c2c1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d51aac-b913-4e4a-891a-cc52f6cd7771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b90da65-73ab-4d96-946d-3fa26a2b8256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b362029e-0e89-4756-861c-436d28003984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6d1db7-72fc-48b4-9fc2-f788d5fe723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e199d9eb-3987-4097-adfb-54e4c00e3085",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3664339e-b012-46ba-81ae-78ad7a476e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3664bed3-876e-4ee1-805a-5475881d673a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90af744f-9d66-4b39-825c-953ff1f6fa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e84c5652-9c68-4d98-b434-6c6cf2927a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8be2d2-eaf5-4d64-ae46-c4169c85190b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7110f2c-f48e-4770-981e-35752d8f64fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26090b74-489d-42c8-8d86-dc5669d2d478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649c2954-22b5-4df3-aeaf-402bc79c84a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "900ded29-1b7c-46bb-9d16-a81b89e26b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b15b00-bfdf-49bf-a197-f73e8dd17a5f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74405c1-35ad-4a86-bf4b-937ab0bcdb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8c8785-7fcf-4be8-92d0-2410029c6f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b8df56-26ea-4969-83ee-26d736704a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c824c8-28b1-4781-976d-325aa1fccb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74b5f75-b610-45e9-8263-b8d768cb2d2a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce907ec-d656-4650-a63a-5d1dcec5ab57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85720bf-8ffe-44da-9ab3-f750b293c2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008f6705-0dec-4fdb-9735-5c82153c81cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5afc3c-a01f-4c2e-b1a0-b4898a98a346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e57e7c2-9d39-4898-9b05-8ff6c55d3558",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004833c9-5efc-4edd-b3e0-bc9fe8351dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2cbd38-cb78-4e75-a0e9-c962b0b5fea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7c788e-b3e4-4c0a-bd22-54cce4494ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45169955-864e-4163-acea-74a996d7d298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ae841c-2f6c-4af7-87a7-69bd3f7acfa0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36d7f55-a822-4593-b60e-440525496493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579ffbb9-db73-40fe-bd0b-4df3cdabc621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bddf854-69e6-482b-bd63-a48ca770eb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa618a7-b446-400c-aeb7-49d17d0852d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f8d70a-a474-4e3a-a1f9-2f39033dc3c0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8104bd1-6f38-4e40-8548-1c2edc04bbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee63f970-428f-4b54-be06-43747ba43418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085f24b8-0bbc-457d-bb9d-b4204f2327f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e81ebed-6e0e-465a-934e-a51d5173072d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29dd065-288c-4fe9-b52f-3e0e02f37366",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5c3db5-494f-45ab-ae57-aecdb1d9b04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e91d849-6a4f-4f93-916c-61122fe45f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57911fd-330a-40a1-bbef-d4ac5fbece92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b697f09d-af60-4134-9265-012960da690c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacfc932-0d64-4fac-901e-8351dda5350c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ed55b1-1352-42bf-88e6-c92d74e89651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0d7d4b-da50-4805-9fd7-29b8eac4ed31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326404a5-15ea-4bcb-b6e8-236c37e82edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c5a12e-89b1-4875-b924-d6e60c0ff1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dbbec1-7430-46fc-bd62-533904db76bd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7d399f-8e9e-437b-8dfc-a2e7d7c97864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db5fff3-751f-42a0-9630-5a4dfd536e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af04c401-d7de-4809-b237-6cb0f1230ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c58b3f8-28f9-4c18-bb7f-a27e5b9036a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555257ea-7dda-4afe-a46f-feded336fc23",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f609e93-211c-491f-94c2-f94418fa1bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bfd8ba-e5a5-4b8e-8f14-58ae12c7b590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00dee5d-0833-44d9-9e8d-b6dcb28f1ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01bbe6f0-3576-409f-8300-c99a19ca49b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f477a121-e892-4bf8-ad90-4a0b3b8b65ca",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c14783-895b-4852-a66b-e959749a3aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ffa05b-f69b-4770-b770-903fb2ef4a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617663c9-7934-45e5-bb43-33daa5d868c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "40f90262-7a8f-4404-8187-2a014b15f4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e007abe5-668f-4de2-a985-6f36de22483c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1095efdc-d892-4d84-b726-08316a2c701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216c6dcd-3d49-4d71-80bc-dff8377e86b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c9febf-8eab-4b8c-85ad-8e17d59ac3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2048b26c-e7d0-4025-a7fb-4f362d2626fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d15b69-8cdb-494d-af1c-288018ca905b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442c1e5e-951d-4592-9180-a14a68bdd50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e30d69-55de-48c4-8401-14b721ee5d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644caddc-e3d4-47ef-ac91-d02c52b1def8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ab0695-d92a-4943-b688-c8d0d1ff195f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3ff3da-57ca-477c-939d-309cc3babf11",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea13312-26c1-47ff-9352-8b6335aaa57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b19d56a-6292-48e5-a01d-30cd1ffa8681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58aaf798-c36a-412a-8ea5-a7c8fd6c33eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9724b112-7ae6-497c-a3e4-4f9fd5881fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91dee42-90c6-4a07-a23d-960c2f1ab5f8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f2b0e2-0e7d-480c-9afe-8c8081d65531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f1a33e-b3e3-4781-a155-68950bbc707a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9f3348-e42e-4081-8cda-14bb36a80d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "776bdc8b-55b9-48f0-9341-02adcaddf339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bde49b9-590d-4d1b-a8c4-43c78f6810de",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4057e676-cda5-4ed1-8312-f0312a573f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee9092b-f2eb-496c-afa4-5b2c52a90e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da2b451-b616-4ce7-8fd8-4146eb3b2cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "150e3f37-e2d6-4a27-9bb8-60019ec4d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a078de49-c16d-408e-ae9e-c2f203455fdc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d169d948-339b-470c-bea6-9d6f19c6d99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58ed48fc-98dc-4ccb-b41f-2696b68a1f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0355ca-c0b7-40e6-8bf7-6d14f87e9859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88284565-8601-454f-937c-411fd4e10eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30321b1-ec78-4fbe-81f2-6340cb731ad9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488cde77-649c-4fd6-94c1-c66a5406cbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5077d8-d468-43d3-a59b-e92769b0d850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97edf49a-3794-4adb-b5de-4e50d6a2908a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb7a890-65f7-4a4e-9f7b-338603994f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55a76ec-c6e1-43ef-acc5-8d58f9e4f47e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573ffede-9af4-4c60-90f0-1594267da361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b59702d-e7df-4295-b027-2075a3d5480e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841fa130-35ef-41af-9164-a0948c684d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed90722f-cfc7-46da-8b82-fb5b082aaf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7004b45-33ad-409c-ba59-41de409b72b5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4304fca2-34f5-4b83-9e51-ecce52a91f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78aba198-76aa-4270-852d-a1fcf75e0a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6405c0-1b20-4d48-a4bd-dc3190a922fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0f789e-2e55-4fc0-8db4-d673c39b5ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477cac4f-3382-464f-8962-8fe5db4aa2ae",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97427de-64a8-4342-87e0-84d848a4883b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25ea14d-9bca-4a73-a545-79cd4af95891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99616c24-a13c-4c53-bc62-db3047f973bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fa4b02-50e2-476a-9905-04b120755296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a14c10-adab-4dd7-822a-318317df2c76",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308e9a51-7e3a-423c-adf9-9da90e0177e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6abcb56-8751-415d-8848-af5fdd864b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aeeb18-da81-448f-8131-ab1ed217841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "782cfd60-32ca-4abb-ad71-f9ffe50b88ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf66eea-bed7-4adf-a703-491655a42710",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e450cff-eddb-4570-bc73-442d0990a979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af29b641-3ff8-4dd8-ab61-181792273a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f593608f-5ef0-41a2-b967-bb527141bb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ef098dcc-b705-4cc0-a02c-121f4a32a7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d10c0bd-ec96-4c80-a760-0a54a9fe1013",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0cb040-1348-4bdb-b725-e6b6e1b47e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f10ed2-0f01-4717-8463-577e113d50a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b9d1d7-4ac3-4892-8c44-c8d25eaaca3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dabdfde-1f66-4f60-bf27-352d9aa70e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a494d77-5001-4c32-913c-da07876f1274",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93006b42-e7f8-4127-8a7e-7fd14efae652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f2d07e-b4cb-4c43-abaf-3cc698f47ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd48b52-7588-4f43-8c6a-45fc832792e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbe44a5-bb6b-4e32-9be4-2011cb5dffc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82b1268-5a08-4edf-b66a-fd3349dc5fd7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7052fa63-2b35-4faf-a7a1-1e620a5394c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf6f482-542f-428a-805d-853a1d136d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a55e76-17ed-4195-8058-8ad55e48f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "846ee3ec-4cf6-4ae5-90b5-1c02295208af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9205723a-6714-4d8d-a96a-65a6ca160080",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0292f795-4321-4d1e-9c7a-02fed0a54756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d541664-b3fe-4de5-93a1-5535957f6cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd4ffca-de60-41b6-a42b-51935dd336f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4c673d-a68f-4cf3-ab54-f8f02e755b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4f0d5d-c92d-4ab4-ac8b-5541b3e04211",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee36266f-b509-4b1f-b163-1b0604eb0475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0ef9b8-8e40-453d-ab7d-774b49bd6618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2735c744-ba56-4fb5-9fb5-e941ec8c61aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0078bbe9-a7d2-45cd-8720-ac9cbff90990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20954d92-1c09-497b-84bd-cce9a31fba99",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863b6b6e-c68a-4e6b-b271-7174f9d69134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab7e98d-4655-4423-99c2-55f103a835ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0a0d93-479c-4e18-a00a-246d91cb7118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ee0084-1df8-475d-ae18-32061982b6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d617f9a-e43d-4024-a4fb-0173373f23d1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2ffa3f-f1da-4123-87dc-ac090a8fbb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235dc192-4352-45e5-9600-b61995806835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6528bf-d870-4da1-9d97-ab9fdac937c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d3af81-e978-4356-a497-9e0d397b8347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c619410-f798-4e05-a148-35925a351e3b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bac3e3-c4a9-49d6-ac7a-c54df2964a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc35eedd-e2eb-48cd-bec2-96f7cda8c6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7482140-bcad-4d0b-a967-772c93c788a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7cd3c3f-91c4-4903-a494-9a04543e2d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe6affa-e407-4c38-94ee-9763b7438262",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df0ed96-0cce-42cd-9e75-999ae9df9a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ca9ac7-5fc5-4c93-adf6-85108f9744ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daf6a3c-656f-47e3-9474-7c002103acb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b03c8fc-e3aa-4777-88f3-40b535dd4089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb73044-8d94-45fb-9cb1-a7740d0e053e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be107ae9-ff16-48dd-b4b0-5969eb18ae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaed6ba6-2c26-4ab8-b241-65f526deafc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17b6e0b-9799-47fe-9893-e7527867027c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f885b33c-7635-4928-8efb-98ecff3a5e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b524b62-343a-4cd5-ab3c-0fd80fe00d18",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1f8e71-f9dd-48b4-b8d7-4e3bf792244f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1acd26-4493-42a2-8d46-9e14d03065aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0e8fd0-275d-45d2-8fed-53656d89e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "059920fe-76b8-4745-ad57-32dae438788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cf4e83-3206-45a6-b601-bd1cf6b9adab",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca0a215-3a3d-41b2-bd97-fbbe8a15cd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eac6b21-f454-4669-865a-af1d1da043ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dd6bc4-2372-4486-b005-81308eaa9fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf20d7b3-4604-4910-9b5d-f18b8f5e6efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901ae948-651c-4802-bcd2-06141e640f2e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1433c0b-c30b-4cfc-92ee-9409226eb097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a0cdb6-dd2e-46ba-8b3d-7e8f5c467860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638c71c8-7443-4a1d-9019-8c057ef6e008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46f01594-3e9e-416e-a3bc-83ea05159844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f8fbb5-73a5-4733-9700-34795cac952d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd04d08-107b-4ac5-b348-254692477bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a543943c-9cc0-4102-9cc5-971338fe543a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa87e6a-cee0-4ebf-8769-372ed61cfe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "93bdadfd-eedf-40f7-838a-cea706e0e016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7b4c1d-45a5-49c1-8d0b-00260117b532",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb794ea-a6dd-4d2a-9300-402ac236aa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c972f572-d3d4-4cc1-b617-129d50fdca13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d0394d-febf-4663-80df-ae92b5654761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "368cba48-4b53-4d1a-a007-8728b65c33c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcda6ed-5427-4ff5-8dd7-c63ac259e46a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb2acb8-4710-4ee5-902c-70e2843ba1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acca57d-4afd-4d9f-8719-79a2bf2adf83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a2cff9-b765-4eb0-adc8-82bcf0fdc319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "74feee43-57d3-4d8c-869a-f12eac125ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c307c6f-e38c-4ecf-b928-5a9ec4d34208",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f08cb53-35b6-400a-bccf-f972da63dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f506aeb9-76d3-41f9-8069-23ecb082ed3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1690779-9458-43b4-b464-c07eb834e500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd51d568-081d-4e10-9d6d-4a3fbbd03728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ed9f28-7492-4a6e-b4af-e7a274219dd7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97ea596-ef74-4c96-907e-53849d6166b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59da7cab-455d-4557-9f76-8724343a16bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc90f25-f5e2-49b9-9f30-9797e53bdb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "adee5838-138d-4f77-9358-b3faa4bfbb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddf2a31-9f45-4d9e-a3c8-49f9d61f1cc7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c03fa49-9a20-43d9-96e3-44eb54eee032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c43409f-9cba-47e1-a462-fd4635ace10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b28513-9bc3-4fc5-910d-3fa4e05fac62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6364ee-e812-41fe-bf77-1ad9bbe43745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2db1fbd-1a13-478f-9e79-7d39f339c512",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3944f821-8a7d-46d5-9158-4a6e271778b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74edb37a-cc26-4f99-9447-ddd3fd1589a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0fc2f0-5878-4fcc-8d3a-b31e64286d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b16d0a33-6542-4b09-9bfe-0b70d13d3948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e554a79d-f57a-4bd5-b2db-7e402e497e2e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f307b0a-f033-4d3c-bb18-52c4d8bedded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c9bbbf-8b32-4d53-9748-61124a39a427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9b4962-6df6-4484-94b3-1fe96c3eb0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f291d3-e70f-40b0-921c-4fa9b60fdb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c92016-5989-4a22-8759-9de89147eff6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f884b96-8dd5-4638-bfd8-ab55f3d8f44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c381d4da-b8f5-4621-a489-6e6e9e08fe65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ab90c9-9411-4466-b695-2d7155c3026c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d5bd22-d698-41e9-b60c-bc57247e71ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fecbd9-9554-4e92-9d54-a7998b5fe6e9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d852c5-3e0f-4aef-a1c2-3ca0427fa420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8f27c6-f559-4834-9459-54d5dc05034c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81abddd2-c454-414e-a003-b1900f8e3356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7916bdd4-9b7f-47a0-b594-2fd875ecbf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e42c52-166d-4acd-ae28-1c1cab34108d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceb23a7-72e9-4a55-8f08-2296377589c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cfd35f-0d79-404d-be42-9aef977ce22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acd76dc-5b1a-4374-a148-fc6a7b79b19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc1aff8-9b8a-471f-af66-d49c348d2ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc802464-d72f-465e-9787-1b3d04a8eb74",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd2bc2b-500f-4ee3-b279-411debae2802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc7f0e2-461f-4bda-ba03-b07b876d3a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b900de0-7762-4ae2-859d-3bb2afeec2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8fdd56-832c-49f0-a1a8-9908ea6a2353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfec253-cc3c-4dd4-9ba9-7b970fcfc655",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d2b2dc-d0ba-489c-8e63-170859a8227f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4df9e34-10ac-49a2-847e-ba918ed600af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13b3250-7694-4428-9e23-aeef79577258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8950aa84-8cd7-4267-9e32-9e655f7f92c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135ee990-9f52-4222-a9b4-215e43f108fd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cabe5a-baa8-4fda-b09e-aea815c8df21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9571a50c-aee6-4344-b4fe-b85e80998186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846886b2-80f1-4ad5-88af-a112f02783ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f11ca58-7db6-4220-acaf-aa926806534c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d82b9a-d65d-4141-9949-f67bab74146e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb59ec81-8415-4fa0-878e-c62ba2a8ffdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c7df97-1cb5-477d-b5df-9dda8f8068c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e184735b-36dc-4e60-863c-623ea74338e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c79e45-a723-4e80-9634-fe8719784daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b03300-cfd8-49f4-8caf-89a171c88f47",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865a1fa1-4851-440c-9681-d8fba2fcbca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64808f6e-bf5e-4108-b8af-929e3b738310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2faa7a-7f70-4f2d-9a04-02e16bd39236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0889f276-ee19-41c7-9fbe-89a9b3b2870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8674edd0-4757-4e3e-bb17-a322f2780687",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b32667f-8268-4271-a5a7-24e67ddcb2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dc2c81-b8f3-40af-ae7e-afeb178c8d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08cf3eb-d321-4326-886c-5b2fd7d86fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "188f3d47-95d4-4b7f-a42f-f6726ada49ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b643065-6eb1-490b-9ba3-00b6d99254a0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36aa25d-6d66-4378-be60-ab7f6461297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dff06ce-6891-4cc6-aae5-29d9da1fdfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b442c7a-a740-45f7-ab0e-5d32cf3c557f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "848e5313-b319-44fe-995f-8b04503aac7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc76ada-d258-4571-ae0b-e3244f7bf7d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff59789e-4b75-4d98-adbd-71379324779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcc69b4-a0bb-400d-af87-b46b1934f9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cf6e4f-d9ea-4f08-b592-a1cdb4a1f4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "364cd653-c0f3-4d35-af46-a204f0280740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7209ab77-0e07-4feb-a494-167b7b2367e5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737e39f7-0e0f-4ad8-b891-171fca9b7ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802b4fc5-a889-4cdf-9a11-b2d5d120efcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99dcf4a-8cd7-4c9e-8bf6-02554ad78c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd95fd5-7c80-4276-a883-427c7fa65696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dc6277-3a7d-4697-bb3b-20d2295b4266",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7288d058-db7f-4751-b020-b0005d7dab63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4467be5f-6c91-4fc0-9579-2ca2b54fb05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fe6391-0ca3-4ba8-8a67-2f549cca6640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce074c13-83b7-475d-a1f1-552f08a35c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f37694-397f-41a0-989b-b5dff2cae26c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d330a6-e956-48d2-883c-2fa13ffc211c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef08ef0-a295-4967-a31e-97ab94f68005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cb4e61-63fc-42d6-baad-d174d0108bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d34f48-957d-42ea-ab10-5b3e5aec1f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be94da3d-6e7b-4c12-b62a-ebc02edaf1b2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e7a1f9-7a5b-4940-9222-ec62db2dde47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a21538c-5470-479c-bbef-bc99fe136c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8232b820-907b-4660-ae7c-9b69ba674f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c56455c3-71d9-4ead-8eca-ee6e70ac2944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b025f94-69b1-49d7-8621-6d2318c0168b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6bded3-39fe-4d4f-8ab5-bd3387e5e8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcc8cd9-6ff4-4bc5-9c07-7d8f8460adec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920277a2-90c3-43cc-8a87-5fabce949d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2aa99d2-c4ae-43f8-8ad0-1d8b8d902820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ffe9a3-c10f-4517-a7bc-827b7dec87cd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fea115-69d6-4611-8f2d-05a3e2168166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d702c609-269e-409b-a67f-51712e01ad13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a75a57-a4f8-4065-9cd7-ede45e3d2559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f654ace2-e822-4786-98fa-1b944c01d334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d652b092-3228-461b-8170-a1115e764005",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70625090-b341-4f80-8327-54f890cc4165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e3f9a4-a0b4-445c-9992-26f3fceee2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a768262-1f6b-4ba1-a210-6c0aae949244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f868df-4975-4c80-8ca0-bcff387d5db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07396c2-fef7-461d-9ee1-081997d9e465",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f771f3b-1eb7-415c-bf76-14076a9a29bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a73231f-e303-45c0-aae2-7bc30aae010c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c767b5a5-a8c4-4349-9875-e954a41e1662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "769a0d33-40c8-48ee-b53a-04ecc1ebeaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3650871a-e149-47d5-991b-c66447f90941",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd481722-5bc3-4e9c-99f4-f17da394bcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074ece8a-aa22-4b40-b278-cb57993b724e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5aa78c5-aeae-4bfd-a83f-7ba15635428f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a753715c-0865-453e-a11c-7c5bf4901fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b3c261-62ee-4acf-89e2-800d85003421",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c93d6fe-ebe5-48fc-a8a9-77801dfa1526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed45f6d-ebbc-4160-8808-0f52a3c13e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eca146-4ce7-44ce-bd3f-e29375732c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "876aace5-d24b-43c9-8bed-f3789131c3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537b6ea8-fc39-4572-9648-4707f472d498",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126947a4-d982-4681-981f-9918f19ded54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e567e4c-d6f5-47d0-82b9-3c0335cc4864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9875eec3-a2cb-40a1-8229-cc9bb6a4a845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cba6063-0739-4304-9830-8023144de782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3e6049-bd53-49e3-ac65-5ee9eda3d944",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de17b740-bc42-4c6a-be3f-a1dfcb94ea43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbd0fc8-955c-4894-91ab-d071ec2873d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319cd4f4-7b5b-4554-978e-1f4cab0f361d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c75d7b6-06c6-4aca-ad03-edc97016b894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53b10aa-46c2-42b8-9fba-c8e50336cf89",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eec056c-bfa0-475f-882e-ed84d979ba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f282e2-eeed-4745-9f90-b9ec4b8fe1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6ea615-c7f4-430b-9683-d85a0a118ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34d862e0-d5fb-4944-8283-2893e5baf638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4cb433-34f3-4f67-821a-7c8d53e98b5c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f7c5f1-4dca-433e-9ef6-0492f5f37254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9de066-5f7b-429c-826d-163c3933a755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499073da-1080-40f6-ae71-016d79e5b4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47288b80-6af2-4d8a-8a40-feab918edc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd03ee71-5e8d-4d00-9ad2-556c2e034941",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbb3d2f-b28f-4718-9adb-cd5e5df9683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f89700-7ffc-4568-86b7-a3dd4b227d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ef96b5-08dc-4742-9ae1-2b322845cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67413ee2-5077-42db-9b79-06dd44f6f875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4801a87d-1631-4c30-9088-b20649546250",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2723f3fb-925b-4157-9602-66bf8433c33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f39200-9426-493a-a03f-a42e0a2a1b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993340a1-a5e0-4e40-8679-5bcc89a669c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "37ad51b3-d312-4bde-aa34-bb7927b1e25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a17bfb-a89c-44b0-93dc-9e992040572b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4783aad-cd2d-42ea-b113-3e5454ca8b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8b93ec-1fc9-49a6-b64b-d1c4455f6c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ecafcd-c6ce-47e3-bf02-7ab0bf7e09b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f94303-594d-4338-92a1-737387f76771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3739a9cb-ad96-48bb-8bb6-a6832740c895",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224c845d-39ce-4ed1-a98d-b8f3ca83fc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "508328e8-fd4b-40c4-a471-5f9ae8f9f19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db24c994-ec6b-4022-99e4-01398dbf601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17770473-8592-46e7-9005-178adf5b70aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3fd89ecd-51ea-44cc-b12e-121a5b897073",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "422a0e41-143b-426f-9afa-274d18be055a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc79982-48d4-4ca1-a0cd-4c7d1b09f25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d91ee73-90db-4a95-8d82-fea104c4129d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91996a7f-5ecf-44e1-a90f-44eecb5fc226",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "423ec9da-575a-472c-991f-ce132680f55a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd60716b-b996-4ca8-bb02-62abadfcf539",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "839544ca-ea5c-4615-860a-749795042676"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e1eb65c-df7b-4609-8524-329dbe9f4f7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7dbc4bf-9c23-4160-bbb2-bd94b8206e3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e664b919-8d34-48a1-88b5-1c6385e09855",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28b42bc9-b7af-490a-ada2-95120263ea40"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3886c6e5-b4ae-421f-bf80-97ac00957532",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c968e9c-a396-4b9f-a985-bae94fc35b9a"
                }
              }
            ]
          },
          {
            "id": "c3972033-35d3-43f7-9c77-e075793eabd1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdd0e25a-5468-4fda-8195-b775cc6e00e8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0ec5d6b5-8e1f-4275-b563-24803f4047b9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d6b6f8-60f6-4c82-af4c-4c8789ac1f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "49117172-c1d6-4eee-a4e6-60fa516a84ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600ef969-c221-4348-82fc-2d0b829982b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd344df-5b38-43e0-acf9-895254e77681"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e12874f1-c333-410e-88f2-c79448d89ea9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "091d81a7-9e16-4cfd-8f1d-acb8303afc16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45128f42-1b9d-455d-9031-ef4d3d3cde92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "525c3582-c090-4d93-9194-163c0688e9fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12a11ea9-8c41-43ce-bce5-4ac88c1c3918"
                    }
                  }
                ]
              },
              {
                "id": "5ab91266-6ea6-4c04-8d72-e1af82f00d40",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d640ab1d-e17b-4b28-9547-c3aa1e12e664",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "960320fc-0735-4d1b-87e0-6fd3b00c156c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "397309e0-d468-44a1-a68c-effe72cc4554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35d0b61a-a98e-4fbe-a97d-649feb85be7f"
                    }
                  }
                ]
              },
              {
                "id": "6ff25de6-837f-4ed0-bf56-2c0d9939d76c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a540b10-6bcd-4cd7-ae23-b5a0d325e6da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f36df090-c523-4108-97a4-0ce1c3e7984d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ddeab7d-caee-4742-9f39-02c20ee701cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "252cb19b-06ed-4a7a-923d-e67bc36b86cb"
                    }
                  }
                ]
              },
              {
                "id": "84c07817-ffd0-4df0-a9f9-f17b3f47185e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd7fdb72-527b-4a6b-b799-2879b07c095a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2d4422a-dc61-4474-a801-129326e94ccf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "889fcdc3-bc2b-406f-a28e-23209c02fe48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ec41fb35-48ff-4ee9-a7fd-bf4129b371ed"
                    }
                  }
                ]
              },
              {
                "id": "f9092cf9-fa3c-4e64-bad4-1b42d5fb3374",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cab48a9-70ea-4f2b-a713-0863dbc223cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3868dd4-ab1f-4820-aa32-956ef379e5e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2377c14-f8a0-48ab-a973-2ef13595f813",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6c0e51b9-e067-460f-8a2e-32415397426c"
                    }
                  }
                ]
              },
              {
                "id": "61721869-b4f4-44a9-83bb-2f10f2be6946",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07664fa0-cfef-499f-bec5-87e5b6e5bdf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf202031-f283-4fec-9929-429d80efd781"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7bac7ae-0f2b-45e2-aed9-06f4b268de3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be5737e9-9e90-4b81-89f3-2d7b98da8bc9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44f6b550-7fd2-4d2d-991f-cf5faee7b340",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aead8dc8-4be3-4665-a396-8048a0f3d8ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9179b911-a920-44e7-a645-acec5ad014b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e197c54-33c4-4a42-8f5e-e51e5b42e3c5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fddb2a4-acd1-4f67-b846-840dedec34fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ea8d921c-0c61-469e-b96a-45d22f687263"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22875b2d-cefd-4c55-83fc-0bd2cdd3d611",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f27e16f-a9bf-40c1-860d-a230a51c07bf"
            }
          }
        ]
      },
      {
        "id": "69ed16f8-4486-405f-946f-c9f4a5ef9662",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4670f7fa-1f62-4e3e-875f-7864466348a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7d71494-15e9-4223-a425-9aceef732280",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee73d167-7b98-4bc2-a98b-200a7575d785",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870e3db5-2b7a-4501-8a19-ed8ea893d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce7bada-5413-4aef-ad25-fd1a73d577ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24cf851-fa1b-4e88-b2c5-5cc8f335450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56eb4675-8088-4866-901c-c4c0374a120a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b3c43a-81a3-4316-a93b-0347b4b030ef",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc62689c-571a-4b0b-930f-9e67bff38e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04782ed4-3756-4abf-94ce-31873a739885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14b294f-dafc-4120-a9b2-f65ff9cf99fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58d8efd-4f90-42ae-a8e8-183e1d304f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11065008-cf9b-4b7b-81c9-2fd9d48b3665",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d68fe68-9e8b-46b3-b851-65dbebefa56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbcfc9c-a161-41a5-bb71-4cde7d8f052f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa38260-c51b-4f7c-8c9d-affca9df3559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5e1095-955e-42d7-8528-9f39e60ca1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8168891-b7d0-46e4-92c5-20639bf19cf1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20b76ba-a367-49c5-9b75-3d9764da262f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e6ac32-4e6c-4ea0-9901-67f377f27ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc86565-0966-4b1f-b5c9-6eb3bd9be509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e88ed2a-5b1e-4238-8abd-c65dd5d4baca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46436c7a-5312-49b9-a174-c6207b438ddc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a868551a-870d-4367-b077-3a99f5f7223d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0008e7-0c45-413f-94f7-a762f0d5827d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f59f387-66ef-42c4-8da2-5a950b5fcd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbaf8ec-2f81-4b10-9fc3-d161c0561432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64280cf2-cabf-4830-82a5-840767fee071",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f959e4-4866-4075-8985-9da4e16c7112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3425afa7-d927-4b36-9fb5-e76c2b20e8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73575a54-5f16-49dd-a497-ab986ae6f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b8e2c9-f90e-43bb-829b-ad019eb63b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f87f0f-e094-4d6e-a323-793e4eb2c698",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b702d72-ac91-44f6-88b2-6f09c8f57f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9e8cae-02a3-48a5-ab3c-c3c85b21c6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caec2796-c82f-438b-a6c6-2e5963059c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd00799-215f-4b2a-8e6d-581a20ad46c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ece16b-cf33-4e17-94e7-cc9f7264ffa1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8425ae14-0376-44bc-876d-bad314238177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91938c7-fb1b-4a44-99f4-4cf8fee385e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ef0074-b69c-407f-a386-a97d6bc65d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7aef20-d799-44cd-ac0f-61ef31079261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce766f8-afea-4be1-9e84-5c9b89a78975",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275ea542-ea51-43d3-9514-3187af58de43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13816d1b-c460-4a18-b873-7c273b42b572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393f172a-3187-4dc9-ac19-97295229888f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50f294c-3698-4ffb-864c-087a8f4b57e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f764854-d90c-4953-ad3d-da4a0a73099d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17209a9-9092-404f-bccc-7768b1ffc15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46e2e78-6683-44fc-b80b-acc83f1ad025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e23776-1c85-461a-803d-c399f282258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdee3127-9014-4c0f-86c6-336db7565bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a4dc93-d438-4149-b26c-491f1a79c3e2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f1838d-ea9d-40a7-a8af-c867c9ed4622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87f8bdf-b3d1-408c-a9d4-f57801233046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5692c1-8dfe-4bbe-a624-18f758435efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "18d13489-dac4-4d29-bcf6-32892b6d8f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e49aefe-8d7d-4791-97ac-c34b1617ae1b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8d7e31-345e-4fb4-b5c9-de5d92910095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b535e80c-fb21-4283-838c-ede617c03ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93af5871-f510-49a6-b4e3-9ce3ae209cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a339570a-4b73-4577-8cee-1faf53711cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39761eb2-a9a8-44d2-9bcf-30037d586d6a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc4d2f5-6b27-4e53-8fa5-b194644093c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9f04b4-b5c2-4f16-8e39-8d7a67ff9b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c3e83b-b7c5-41be-b543-eb738c9d0326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c92407c-3426-466c-b305-1aed9398928e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a78faf-2510-4adb-85e8-c96646e75988",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c03bc9c-abad-4640-a30c-558b30441cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5668593-5a2e-4bda-a2ff-230182ac6309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ea28c8-e42e-4a15-ac70-a16ddff8415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c682f5-9280-43f2-9cbb-714ff98a8d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb675724-7b17-4172-904a-7dd6bec75534",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ea8812-31d8-4678-bfc5-a540663d2324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841bd0af-4f59-4a79-a7fd-dced726caeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc15acef-940a-4fec-b6cf-058e9a638d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b0e3a5-dcaf-43ec-abf9-14874f2e85ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7dba40-c3f8-4f58-a560-1b392355e93b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afe5413-7eb4-48b1-8a46-29d2d7a19805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d2cde9-b2b5-414e-88e0-b57234418498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec9d514-9550-41f4-b25b-498cdde17a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "791002e7-1d62-415b-b173-bde90ab6b91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccfa78a-0169-4960-9fc8-b6fff8f07474",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a1d131-49c9-4b51-a7d5-2e1237c69bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb30b6c6-fbcc-4553-aa94-ae576a63f912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96cf2f7-5e70-4020-95d4-48df715607dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb5d813-541e-4d45-852a-1c7279722ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4a6216-4c1d-474b-b1c3-a627dade4a8e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3888f34-5d41-461e-8875-300b2851feb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee03c98-5c57-433d-89ec-4401570af9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccddb55-9903-42be-a880-a90b424774ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "207e65b2-802f-421a-a932-ac951444f376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c18834-d262-496c-9614-90238bceb471",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0cde1b-b3ce-470a-b468-4e63dab5900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43782b3-236c-4455-a05c-6a0e75c050ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281959e4-d2ba-4b18-ba74-67901626fd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6945a1ea-4076-483a-867d-f0f93ee6ad87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc73f40-c311-4b29-abc8-5e1a397116a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97c074b-b796-4068-a14d-68d3a842554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90442b0f-89be-4dae-afc4-58b61cc8e663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f317b1bb-f710-42cd-89d2-243fa0fea4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2995a1d-d226-4588-b489-f497f4f7a4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204530f6-f254-4350-b64c-bab3c9b99661",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142496cd-5fa6-4621-aca8-74a9bfc87100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9983cd5e-0cdf-495b-9c1e-73e39f8de066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77d8d4f-6636-48fb-9e62-4945791bae95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c8a631-92d8-4fd8-92a0-29104d8dfbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2784c936-400e-4dfe-941e-15d7c448e259",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e801700d-fe57-453b-b5f2-fbd10c2a3ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aaa8722-d12b-4e75-a727-ca47be1b15ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb8b9b9-914d-4784-8e9a-c66c90828051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f32d9054-6ec0-4693-8909-b30072f57bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e9b5c3-9457-4695-92bd-2933faaf5aad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f5f712-3c64-4703-a4ad-6d5d633fe474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c385b69-cfa6-49a4-b487-625ac13f7627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea92ed64-48ea-481c-8723-2b2684f65b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "556efa32-8ac8-4100-b05d-2ca871bd1529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a255e3b-e2b7-488d-aaac-1158a998e9c9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaf0c24-383b-4898-bc62-ec5ef4cb96a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ab33f5-64b8-4687-b94b-c2e89a9e3980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df787464-c055-462c-89ea-ca692e4713a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00903a4a-1287-4ee9-bba6-ca5420bf8bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceb5a9e-4c78-4d92-9600-797528158852",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21deb463-8a16-498f-bbfa-bfc81ce7c875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3663793-7a80-4103-aaa6-ab75775a4d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b301bb4-3fbf-4507-a9b2-18d2a9ba8e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e805494e-511c-4d0c-b42b-c45e9fb9483c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8772da9a-a12b-4403-8572-a5a83c2a1734",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494a213d-5cc1-421b-9a91-591ef524568a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e1c6ab-b354-46b1-8803-417527314167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e399607-150e-44fe-9328-7b5c8eb269fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c3b378-2ca8-4a89-a1f9-78fc4508235d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d9cf1b-90e9-4f4a-a520-956cef046d10",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7372ad-d65d-4453-8964-07637d0c3d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc89149b-96ff-4aae-995d-2ce2f0970965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3314a86-1821-4da6-a7cb-c6af8e594094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa611e92-358a-46b1-b196-ee67d3c77f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d389f3a-8932-4d2e-b870-d388bad980d6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b748fe3-c3d4-4568-b26b-17f35643ac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fff023-e165-4ee6-991d-c9b47b438c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ada190-b9c2-4bdf-bf6d-b97aafea6841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19156a9e-74eb-4ec5-ba1e-82d928df90cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee482b0-af6c-47c6-9981-4787cd300664",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b5788e-0683-460c-b591-4a8bf051a788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea13628-ea36-4912-b45f-3b352205e7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f84035-f7d5-47e1-b989-1984fe480039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7c61a4-5a85-4314-906f-90a9ff1be19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5c53d9-75cf-4ffb-bb43-cb7ea5b24f5d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5357da-a833-4cf9-9dd1-17fbe62b3381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2cc388-dc87-4f8d-b474-6f888ed52ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fb3b6a-a956-4bbc-a31c-61f119d1bddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "018dc18a-9b27-4fa4-8b91-688600b01bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c21c920-8dd0-4e3b-a337-60c4ead29635",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2655f6-9cdf-4c3c-82fa-cf46741be3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0f95b1-988a-4589-87b7-6d917e544156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d8d09a-5ad4-409f-93f8-c126b98d331b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1902ad-8441-4338-8d7e-a73baacf4989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e40cb8-9ad5-4ee2-8d3f-7ebe84721bd2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d330b582-1d7b-4b81-83b9-a138b1ca7cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1ada3e-8d2d-4079-8d10-39eddf6acc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3c3e4a-1ef5-4c7d-b92b-4791c9d79bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35b4341-caff-4538-8899-891614bceb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08726f33-4942-4573-b8a0-b4acd172aae2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0ce2da-67f6-4320-8973-758609001f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d734cbbf-955b-4d8d-89d6-cfe07a08fb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d4afce-6584-45e8-9dcd-0cd849043c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22013e0-9335-421e-b2ef-512a811bb051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e336c35-1fe5-4b07-b3ab-cecfc5854c47",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de845451-9223-47be-b754-8c75b0a0effe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1553fbb8-5b50-49c3-bdc5-64313c5d8638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a758a5-a307-4c01-962d-583f22e6e464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd713469-e2b8-4baf-b11a-fa011a4ddef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eed5eb3-672a-49dc-a16b-fa24fe627f33",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc668a54-81a4-4372-832e-da4726647863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e23262-145e-4dbc-a8cd-327cd5ff7dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884a0a49-41f6-4c04-ad1f-1ca599772858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f22a536-8593-4299-8549-133d332be086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee01ff7-8716-43b6-8d46-aefd49c91b93",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f0aced-adf7-43fd-8516-559f7ee94b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6edd267-40b7-4f77-a853-a23814584003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48b776d-80bf-4663-8b47-7724d0641636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd66733d-b39f-4df9-b95b-2feea1613919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668cd262-9a88-49a3-b23c-0be04b9d86a7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed2cf5f-8ebc-4079-a195-b342c836293c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c7b748-cee5-4490-9142-55fd4a854b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cd32ed-8a0c-4e39-a7b6-f2706f566e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c49ec60-02c7-47af-bd81-8be9b0da9b6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "320e9354-4458-4dff-bd5e-f0cc8124688e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fb4b5d9-a0a7-420f-beda-2f9f01a994c7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c7b9e1-7502-4d81-8a1f-ebf180ed9951",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cbe952-83b0-4216-9720-628576dc4d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873e5433-ef50-410a-8ae6-33d86b5d4ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acd3dee7-d219-46f2-91c7-3151d6dfcf9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d41bb69f-90fa-4324-a08c-7524beb45205",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52712c2d-04fa-4766-9d6f-d919c3ec5a5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26f430fa-37a4-4da4-8199-b85fe726bc44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdf291b9-6ac9-4ab9-99b0-4a8c6ab1aefa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "046dbb24-0a88-411d-a9bc-aba4862ffe3d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13125a5f-ab77-4175-a02f-8b3229dafd8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b13c5197-5676-41aa-9064-c56fa2f9986e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cbc8435-3da6-45af-aac3-7e20d99126da"
            }
          }
        ]
      },
      {
        "id": "349e0bf2-c5f5-428d-96b7-2fb6c7c57c45",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "689c8619-2fef-4528-ad25-d196a1330606",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18d26637-5905-4418-9d92-a6d98d2c53fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba23ee8f-26aa-4dec-8e5e-149fffb5d572",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b838ec7a-54ff-4073-9a0e-4df8f3838083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3423b34d-7559-4781-a2f3-4f41b3cdd07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa688d4a-d7e0-41e8-9982-6bc3d3b5811d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9dec82-2aab-4a42-85a5-e4ae05a74378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b218b8-f58c-4328-a9cb-fcc5c0c7669e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac88744d-8da5-4ce6-92d8-9ee901bfbaad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fe5e0f-0942-41ff-8a69-476cf54a810d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253e6c01-2372-4dc7-93e8-d4863706fe17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d70df6-7053-4a25-b8d0-4b6ee90d8391",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b121e6-9744-4693-8976-7d14e5dded5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0cad92-56f2-42fa-bd56-325490cbae49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfdf31b-5c8a-414e-a47c-7583a3f041c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6520038c-6d5d-4e14-abf3-33996cd861ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc61809-18ff-4295-8687-54a9152fecfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9015cb-cd25-4fdf-b044-d77081d1099b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593fb99d-4041-4a44-a099-1b949d23be5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89724b8e-80b1-43de-88fa-2d9ea1baa869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6546f72e-fd70-4d28-8a35-d9ad76ecf849",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e8104d-06a5-457e-ab0f-889d321b99f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c806210-9ad0-4d3f-b619-1e137ecd279b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977203f4-0ab3-46cc-ab6d-0fff6ae42a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28480e3-6879-4d90-888b-6b667c4efa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13ab548-6edd-45ee-bce2-bb36cf3d8c92",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f9d0d7-5a36-4280-94c1-42463412f5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f219636-5ed9-4585-bd26-e4c0ae3151d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39535c7-20ad-440a-9fe4-b906910a7345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f45c549-3142-4685-a7cf-7fbe31b76f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad4accb-53ff-4d70-8201-a572e7385f80",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05eb54e4-0fd8-4fb5-9e28-0cad4cb02e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098ec727-c1bf-4abc-aa5c-cab5570feaee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f9d6dc-c2b9-40ff-a15b-99ce23ab3556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da6d878-99f4-443f-8351-87037af3ca8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d324151a-199c-42ee-8f70-05201568316a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7e51df-d6ce-4a14-aeea-9fa94ecbd068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eaea7a7-351a-437f-918b-b2e7190d7344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996f2468-cd51-41ee-bc0c-2457b645e0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fa1569-9c71-45b4-b573-a1f5afe84113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620d5485-2582-4762-9a3d-71c597db28c0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9a9d06-0073-4fdf-a7f0-1bd93f9a04aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d916084-b917-4f03-b2ce-2b1199e4533e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c550356d-b16d-441f-a27e-8f94f86f3c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ab94d8-9178-4b75-b0c2-780b143a7f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec12a80a-1552-42b7-80ee-f17448f6bf2e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2ccc45-e713-4215-a522-43e3a80db0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87bf8e0-805e-4773-9645-6dc6662b6416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d00f8da-3d1e-4a0d-ad02-e1bac9f84ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80535688-c353-4fef-8556-9865850a8906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e39ea-1497-4c46-8895-e061223f3d1a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36427d8b-5950-4bba-822e-9a2192f4637b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529b2c81-8b9c-4eac-a0b1-4861031c8731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc36b55-6746-4ef8-9b7a-ca03dd7284d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb8e9fe-e6b6-4350-b4a7-b2bb4cabe43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad9f847-ab8d-42a5-880a-28552230957d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e82ec98-9903-4153-adf4-42d0e52c64bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c6013c-33e1-4b66-9508-728581a3c7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2608dae-07fe-489a-9044-3809c056f6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969ac1c4-1812-4cb2-9910-3218e0316ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e45ceb3-4065-45ff-b584-a3f05c00816f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762669cb-2b9e-4b56-b7a9-fb09ac52ad56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9bdb002-405a-4bef-a06b-9f0e8a76bcfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f6de93-5a81-41f8-a542-3c566b04c78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abe3ee2-70c6-4fb6-9e21-5675bae297a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4001e692-d3dd-4475-9e03-c2ab655feffe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7a7238-33e9-47f9-b4d5-d3c3ddc77f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "980106f2-1d20-430d-a992-959259368587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703a280f-ed23-4f09-ab9a-3893eeb167f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6c5b2b-510a-4e17-97ac-1da016a85e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c694b125-06e2-4640-a36f-db2963d94506",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50abc1d4-0742-4258-a87c-4429713c7134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9015180f-da23-49fa-8e3c-f585ead46c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc6f114-9211-41e2-b055-970f64e9a689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132c0f29-0cbb-4615-8259-57e03c51f4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b660c973-bb18-494e-ac32-873c88476f74",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d739fd3-6e56-4cb2-a395-9a9ae8a72aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c061930-41fd-488a-a862-4cb749cdb1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f710f5-ccc6-4275-af40-811f264dfa31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db68d736-34c8-41a1-98bc-0b2450ae8571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58865aa0-fa15-4a46-a1eb-fd23f21f8a6a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a44a85a-9362-4e41-adf8-b953989accf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ff252b-a390-4a82-a55c-c9d0c4cf6122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f8ba7e-e897-4ef5-962a-5fa0619a749b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fee9e1-9fa3-4cad-809f-98d3436536e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3d08db-fdb7-4cd1-9fa4-33d2264bb137",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d399f2-a1a1-4c0f-af5e-3091985141f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98423a37-a03d-4981-a031-1767cbc68080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f776f001-4129-4993-86d2-aeda97ebc3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf58e47f-6307-41ae-9f38-51c6975fbda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053cd320-a5d5-4bb8-a40a-03b29cc79862",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45f1ae7-6c7a-4bdf-8f05-b6f2f55f93ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd4c486-c8e2-4686-9b4b-b4d68914207f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4526cc39-fde4-42c2-b666-c62d85731165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ffa7ad-de12-4eb3-a3b7-36dbbd6b5e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efe28f9-0928-481c-ab1e-eedd94825e50",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52afe166-29be-4cbd-b0ad-0ac381e44707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f786e07-7d28-4b78-ba6d-26248627606c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c84bbf-acf4-447b-a4ec-4d6f5e44d3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0b2206-a3ef-44e9-8095-a41db2fa9184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0965bc6e-3210-434a-a941-65efb378d44e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc5d015-ecb9-4ff5-9cfc-7377cdf15db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3e50dd-5a90-48bd-9f18-96adfc7aaaf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8a980a-cadd-444c-8a92-af31036a9f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e4e537-3a68-4c04-806c-575231a89e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a035f81-dd8b-4311-b00e-e3c7ff194779",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713544ba-3a9a-4bdc-9302-5e25dcbf8104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b34544b-f858-4261-823a-5b63dcf90b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b037251-fffb-4e6b-b56e-7f0a6e5e494c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10fdaa6-88e7-40eb-8eec-7025e4facc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1228587c-ec4a-46a1-84f2-415532813b4b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31577be-8c97-4938-ba0e-92022c647e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101e1539-4b74-4f36-bb31-122e1107e6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa5c60f-fa37-4fe4-af23-2daed5ef41dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c303e729-09e2-4ead-a153-7f98de12be51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ca3da3-3de8-43d1-854c-7f5113ad622e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7dfb00-076f-4cd5-83cf-6b9ca1849f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e92f137b-1378-453d-8077-2e277cdf2c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf0852c-62a2-4359-8047-cc81e333e14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c321c313-4468-4e2c-835b-57fd2ba3b1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8012cf6f-1617-435e-920a-02289204e0f6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff29fef-d2b4-47e7-93af-0fd36e417bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60158f61-6fff-4d2e-8155-7741735f0e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46541b55-c238-43b6-b32b-c78fb407b667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3cee3f6-c66c-4197-a3c5-362ad5db6924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b1c83f-0b92-4b88-bd85-d9bda7644a45",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2df4e2-2aec-41c0-8458-20589a9ecd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72acecfa-a02a-4ca4-88f9-8ef38d66d7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3371b95-d6fb-4bc6-a176-1866543459ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acea5bfc-98e0-4487-8489-576baca6cb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67064b2-e0c0-47ac-892b-0e9c0575c723",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b457e9-18a2-44c9-9181-4f92f877b474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c233b283-2123-4876-953a-ad9f6bbd51e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f064e7c3-bce8-4af2-ab5c-27dcd3a43017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038d52ee-15c4-4d2c-82b4-1a328222878e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c379e034-cdf1-45d7-acc5-0100f9b2b145",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8143e16e-3d81-4ffe-8660-db3bff412e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38290d46-1493-4203-9f86-ef6fb9296c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f73e0fc-0b15-4fb7-8707-549bff90b11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31c66c1-25e9-4173-8d42-868689f4361b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b09ca34-dd96-4fb8-8083-512321353440",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19b8d44-17bf-4d2e-84a1-a34f96547885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c8491b-80ee-490a-8768-4230931a6b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905c8390-967f-453a-8af3-0898f96533de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7325dfd1-4765-4d51-8bc6-ee9ef6e23f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee928100-599c-4c63-bb34-0bb46ec0a8b8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d618eb76-b94d-4006-b691-7b4c972f2207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312d06bb-8415-4deb-9914-e645dc62fe47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dc2046-3ef6-4285-931d-5cc9ba04f88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f0432e-9cc0-4134-a9a0-677090cf1789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b47190-3417-469c-a459-dd90a2b0ce9b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bdbbef-789d-4b5d-a7c3-5c1ca12f190e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d257b321-724f-46fd-abb5-da3567f03dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cabe29f-a8e7-43fa-af56-928136a0b1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51884523-df1b-4274-b1a1-d2f57f004fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea407bb-6dbb-4c01-bc43-7e33730d1b4e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b552bc-54dd-407c-bd55-f2416b47a560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1622dfab-52da-40ba-ba57-c7a5fbbb054a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb71fe2-1975-4ebe-98fd-60864d1d7107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0692fb4d-82c4-47ae-8a23-66373085f465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece9dd6a-ffe2-4b5d-9b84-60b5e618f96c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da17254d-ad6e-41ff-88b1-0214e9a28a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d4f1c7-f813-4a6e-b78d-18ce55d0c5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a719122-5d5d-4326-9ac6-92f0f90e26b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dae981-1c39-4d38-ab4a-65580ae4b831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f1173f-e076-49bb-b697-8f9e2aa67eac",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e548cd-35d3-494a-bf92-4bb0d0a8059c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47f828c-041e-402d-a87b-ccad4b2e10c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253bdae4-582b-471b-a369-f6d8160fda3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abedff35-036d-443d-bfa2-794c32f78611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2985148c-eaa8-4e18-8ca5-9b01ccf27a0a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c8723a-7624-4f24-8685-c52e2abafbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311dc354-8fd8-4a01-8248-f4f2c972c0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c9f8df-6e40-4666-a674-59304a717af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98dad0d-1a4c-463b-8364-219531dc3cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23f8a3d-571b-4711-b7d4-7227c672a0c1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee586f37-ee7d-4c87-9e2a-11c9fc5fa158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ef4af2-4008-48ae-927c-07784bc36d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf99554-40bd-4925-80fa-ed08a5c91843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96cb7f4-e5c2-4b20-a047-2712d257d25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cf7e4c-2e3f-4877-a66f-d8c378155642",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a969dba-dea9-418b-b52c-59eed2c1cbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a04ae1-4cd3-424d-aa63-3cf556fd2ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b96cf9a-5728-4be1-a2df-671bd3126c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06ecb1a-1793-46c5-8068-1d94911e9f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7060b7-cac7-4a12-a551-b5829cfde6bb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b128ca3f-db1b-4b09-a77d-12701a88f2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d04eee-0080-4165-8178-e832df1a6dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fde41cd-eb66-4967-a1d1-ae2412ec1138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d55c932-42d8-4391-86aa-b760bd441312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a638aedd-bdf6-4020-a66a-f61c33ddf42c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322c5d06-bbf6-4e52-8984-ad77832f7eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d666679-a818-4d54-b4b7-28915d243e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fb98f3-a639-4759-a40d-b38e6d3b99f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6226de-5bae-4bb7-ae0d-96002fdc3332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f6e548-68ee-4515-b0b8-dce779b9086c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24c30af-6065-4672-a0e9-f2f8babbfe45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b9925b-40fa-4a65-a0f3-c054d125d9e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b696741b-89af-4e96-a003-fc1de2d5f3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c545a85-e4cd-4dbf-856e-517adacf7ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00934e14-b1db-451b-8c8e-953ae9be2396",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35d2939-001a-4f17-9253-8665b93b4b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69d1a5e-c941-4f3d-8cb2-feafd0bd0075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38524ff7-f905-456c-a9d2-62899a4ed00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6847f31f-8c0c-42db-a98d-772ab4551f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bcdb35-a7e2-4fe2-95f5-dba1399bf705",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc5934e-2639-4011-9bea-3571c40f2584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e0421c-42db-4b09-a972-606957a20420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e497ae27-0cb2-4e66-b289-936ed6daf795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0f639f-cdd9-4deb-99c1-54bd1838da33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199b99bb-12fb-4e6d-aa87-b097cb6d9add",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fa37fe-8bfa-45ba-a9a0-e1a7bbb5fdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c223064-3646-4d26-a5cc-41add7afaca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1cd26c-aabc-48bf-b473-2b30b573506b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db173d61-7c69-44cd-a6fd-19793544da51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe9959e-08a3-410b-b66b-1d3d0ae126d4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fb94b7-827e-4ece-8d15-1967279176bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd838089-822a-4537-9504-577893e408e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf18d1f4-4009-4425-8ad7-37d7ab221c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08448a6-e1df-403e-9d83-91b9c1089ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d46977c-f25e-4a72-bb30-ef5d8a20674b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bec0bc1-c75b-46a3-91cf-66b81489c62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6da10e6-04b8-4f19-8644-915e67fe9584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04510a77-7909-44f4-9aca-2a9d5277cb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9461ae93-f170-4bcd-9f7d-682f5c315799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5542b2e9-84a4-4265-8e8f-e9e1f46c1c13",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b55d4e3-aa96-489a-ad29-d2116ed89a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df083b6f-0b5f-4b45-95bd-5f747d9a5207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea612920-9dd9-4a32-adf9-62c7502c6044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac855af-0bbe-49a5-9532-2e19239b3c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f487475c-a96d-41ba-a044-3df4e2d49371",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e95d617-d5cc-4f48-b34a-ddb139594d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25447c1e-fa6d-41ed-8372-17d1d0684709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f498ca76-0aec-41bd-afb9-cea8df2285af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f828983-fab0-413b-b019-6491971431df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301da53e-4edc-44fd-a3cb-33b473a5c47b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a40f643-2186-407a-8b04-3fa9e02995c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac3f382-454d-446b-8b7d-916ed808c272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfe7dc9-0f85-4d47-904b-564e82645016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036ac48c-85e3-4327-be51-ecd1d6386820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e51264-6f4b-449e-a54c-838ed1a45985",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d32446-b67c-423e-95a5-e0dd6ee4d5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f965bede-2b60-4c41-a818-f870e83514e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9194fc24-d02a-4ea2-a761-7f8360fb3475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6cc866-c2a4-44b1-a12d-4085b623e597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf237a2-5ed8-4cfe-8974-59a765190fee",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37d2568-5e0a-47d1-b9b7-6b8ab9481e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a98113b-572e-4574-ab0e-bf2bf104b928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a65fa7e-8423-44bc-a5c2-e1851ee480f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83446e4-a34d-4ef3-9821-dcc67207ed03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89948ecb-a3fc-4bec-9ec0-3a24e08ad711",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e0eb2-0cd8-4056-90ea-366e022127e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd2396f-748f-4f3d-bf5d-e24e37d207da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f43ef93-f5f8-4db5-b6df-58d0a6400788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0c555f-2d34-4b25-83e6-ba297103d6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b054306-9c0e-457a-900a-6d6d05c2637c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b83593-345b-4333-948a-8c0d7d7adb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e999abb9-f654-4dc8-a72b-9aee6a23e95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a731013-50ad-423f-aca7-dfa3d8412214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510d4a5d-3dab-4273-bfd2-ed1f18660560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a34bb52-362e-44b3-8009-796aee07e6e8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4372d5c-6962-45ab-aeb4-3eca7d06d447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b0b483-1842-41da-8b1e-046435436ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d894977-82fa-4e6c-9102-0f93887f1002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c750b4b7-62b4-4e7f-ba51-eea26c53e55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed0aa1a-7824-4542-917d-5f9745796374",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ca9100-ed77-43b7-919e-531b462da47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e22894-8300-4423-8004-d3e82fd9a68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53e5d2b-db45-403b-aef1-a4b0d00b97f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a15d34d-2b70-4105-9713-c17ad6a082e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a086ff7-f53a-4533-a509-46b933b2a356",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe49ae6-936e-4aff-9ccc-a9c5066f7332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d61b978-5247-4465-b089-735c82c651c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30347d5-4c10-48a7-a939-9390563a355e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3723bcb-22d6-4aad-a979-ae4d0bab1b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae40da9-dce3-4fad-98f4-782af3922389",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2132cb3b-dc2b-4645-a70d-a20d3a93f81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159f9c7f-5222-43ab-b6bd-acccca10648b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fddb36-3381-4a11-a75c-6b2b7f1ed800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b745e3e1-15c6-45f6-9902-837f320ffc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f9cbde-fe0a-4a33-8a47-84bc60eec841",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2f6704-a190-4c5a-ab80-98fd35431fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e060e6de-80a1-4650-8c1d-8ac44827ebec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69751000-f73b-48be-8bb1-1e6618e6ddc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2f5682-23ce-42e7-a552-972400f2af5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b630e5-2e4c-4510-9b84-8ce485728659",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c3ad91-5b1e-403f-acd0-fcc787324d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ad428d-79ab-40c4-bb71-4750667f18c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc6b194-df6a-4129-9d1c-0c54ed62c699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233521ee-4d07-4aa8-88e8-7bf3eabd127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152f18a0-efa6-481d-8143-5a0c280e883b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dd8862-cb6f-4ba1-a9d8-385dde6871d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae28e845-510c-4839-a523-7b69d59c11a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce718c33-4161-4b20-a65d-a0f2955425cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67036d26-7f59-4783-a326-729a5f45bbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5717fff8-5cfd-495e-858f-a6cc51ce57ca",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b2dcb2-a968-4fe5-a4c3-0cfcb816cbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647247f0-4d1d-4740-9ad4-8552af5264a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827d964e-43aa-41d5-a1e2-9bec43880b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c7d045-353b-4827-b431-98d98b0dda99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a638a9f-df87-4692-b2cd-8b65729c99a5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba8e79b-d3a2-43d7-8c67-bf71624aae36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dc09e2-b03f-42d0-a7c9-58d5456ec301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c151e97-75f3-4016-a2e1-d44fde950864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbef796-b252-4d95-9381-e79c78f15797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9b70ea-b019-4b54-a007-8a0354dc248e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200a2633-d413-4652-95dd-fbeda2af98fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d2b6fe1-b9a7-484b-b172-a35f8358797f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803636de-0997-45de-9428-02b6a886c2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f61e29-1fcd-406c-b2e1-67eb3d1f890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07b985e-fa6b-441b-9dec-38125bed0584",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb07a7c2-d1f4-41cd-8710-8d194ce38ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05fb5d93-d80c-42a1-a7e1-9aef297e83e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafd45e2-bc79-4946-a68e-eed9bad89323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6a528d-4ed4-4879-8916-132d5aa94552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b36227a-4947-4b95-b961-586b818a4d37",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bc064b-9ccd-4702-83c5-1054c1d0eafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f67c5d7-11df-4de5-a8c1-924b12ca5713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677d804c-161d-42cb-a308-084eef87dd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369f56bf-2772-4dae-9526-8dc8d8b3d61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3825c4fe-3f07-4c78-b588-288026ee5a02",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0415bb34-50d7-4e78-b4c7-1d428a1efea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daee5067-9668-44dc-a03e-071eeb155736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64112813-6c36-42a4-8d2d-114928862d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5d0c07-1b63-47fe-a920-5e656f1317a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9d2249-7773-4ae2-8089-b9935c636c3b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1e00c7-4270-4ce4-9516-5e7ef4fed0d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d504800d-fa34-4ad0-98b3-b12c087a622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db19717c-fa37-47c8-8367-5706b17e226a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2ad1b6-93d0-47c5-8221-8da20bf71d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2069ad4c-09a9-4694-80a9-005802bbd17e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dee794a-7dc7-48b3-bc75-17c8d6389d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e54568-5896-4e4e-8ed4-31dabc707aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3709cdc3-cf5a-4c3d-9380-511cad1f5af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dd6eac-ffd3-43fc-b6d6-83ff980abddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d92f317-3d63-449c-b84e-83c825790f7d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b159c9-018a-4abe-b618-e23d9caa8033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878f75aa-e3ae-477a-99e0-fdae0bdb825d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cc2ab5-f0fe-4902-9f89-b0900fe4bfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9693fb84-a7b7-4d34-97e8-eff126b78ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f586418d-a87a-4028-845d-605b9dc68175",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eadd0f-41c6-46a1-ab85-94317e86eac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e0e768-7d5e-499f-8430-82f4b1d5bfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7285109-e1e4-4ffd-addd-de6dd04663a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98ebb0c-248a-444b-b74d-b5ad97433763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aa4bf3-88e3-409b-9f80-1911046f4c01",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d243b95-5ae0-45c8-9c33-43b2086c2ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72373405-42d9-4ea2-9a16-178fec04f3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d7dba2-beb3-45d6-a4a0-fcf724a7531a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce12cb6-85bb-4aa9-a926-a59c4031fe73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb344b7-38a1-4b99-9627-98bf22f7e50b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d02e0d6-5f1a-4445-890f-125f73aae5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508d082a-928f-480b-a3c9-51bc20da36b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8d88dd-2f04-46e3-85f3-a35e4b76f46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18141e31-ec94-4d08-839c-f82cbc80f67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f059cdec-07c1-4381-8a98-f5c15f316159",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d968000-1571-466e-a847-60ea8a1181a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d7ba9d-3d7c-4fc8-8300-e4ee99e5d915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c09acae-936e-4ace-befc-7bdc3f54a66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3a55de-676c-4270-ad08-a475b9bf77b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f17c85b-515e-44af-b0fb-28c6cd5ba379",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536d9be7-46ed-4087-a28b-c290742ca9d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c24889-b674-4fe5-8f50-b5f0b1eba418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c96a707-e784-4009-bf75-51fb9d41525f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf01aa58-38e0-47d0-a883-c4fde927030b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763622db-0bab-4f74-8886-c144dfae52d0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9548824c-facb-414e-8d45-de6f8f805e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d880e4fe-689e-4661-b187-4d9c50ddd55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6faada-e062-4e16-98fc-81cdd64e58de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfea9976-5499-41f2-ac65-d1c8bc50f9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b096c466-56a4-45c5-869d-a80ec2b9ce67",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf3b949-3699-4d96-8a3a-a595cfac5a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bb004a-4c70-4afb-b903-6ad297a656a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394c5ff7-6c13-43da-856b-8c211d2cb31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27c11f5-749a-450b-bdfc-6c998be4876f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b8c42d-8436-4b3b-ba6b-fff083781b56",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6cdfba-e6e1-4f4c-b2a3-0416496f74e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005ca52d-2489-48c2-9e03-58aaff37a3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7721af19-daf6-4a83-b4aa-7fd0168673ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a64d25f-237b-4b14-a30f-548ffe3ec5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36069c60-23d7-4322-aaa3-445e265f190d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181e85b7-679e-440d-afd6-bad57c694eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd651a4-50f1-4288-ab5f-bb8d016ece9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceef4d9d-b7b0-46e3-898b-c5b98c6fce49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe5c5e6-5bb7-438c-9be4-f07d1df66450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa347c1a-c927-4112-b4eb-40cf04fe9865",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b2d371-a3c0-4e87-b6d4-1de59313dc3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d416b3dc-7982-4b82-a806-897d5d335447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80ea64c-64b7-45a5-a091-c80ef4b3f4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fc6d7e-0702-4fb2-8ac9-92795c656e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885f8396-bd03-4d64-9d66-0660c5ded064",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccbeffc-8bc5-4f86-b86b-91aff529ecfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74463c44-e2ea-41aa-9951-ce156b94b154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3e3823-f0bc-42ee-a261-35943650b9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374cf1c3-7bcc-4b6f-a5ea-f81bb5f0e4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51055af-c84e-4f55-b917-e57c3f2af573",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba96b5d-5ecf-4a74-ae0f-fcdaa30b2aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e1e808-6506-4cee-bc57-fe3c4d402eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16622296-03a1-4996-b40c-0171ddc4f474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a6b31c-b871-4f64-9fac-506aa54284f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b6f25a-f6ce-45d2-8459-a224b55bb2cc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8000a5f-d6f7-4f99-a1a5-f94f0809199a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7408fc2-2ae3-4615-a3d9-4dc707b28f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca1a5d7-5ccb-4008-abdd-0e2b2b85e828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5605bb-cfdd-4d07-b9dd-61b39d5b3ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac3a91f-a6f5-4a3e-8cba-fd3d28b60f85",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67361dcb-ef02-4e5f-9676-4d594f0021c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf955aa-5d17-46b9-bb0b-6fb5b92de636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f0d8fe-ccc8-428d-9a59-9178d5ad65f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ce1a3c-e956-4276-b008-f12fe3421d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fd3fff-1ea1-436e-b0d4-67304cf6b04e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471f2eae-3e49-4328-97fe-5a441ac1f13b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5696397d-c5a9-4353-989b-8eb57d820065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5c9d93-30f5-41dd-a53b-1843e6f2cfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6e2147-3238-4357-92e1-2a5df6020c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e27cbe7-6239-4848-aa93-fdabb9ddb68a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab24f6c7-dc00-440e-9501-d8d19b7a4c58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc5092d-144a-40b1-b9a9-fbd0923df8d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aa65e0-b3e3-4665-b67f-68721120cc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01121d2b-67f1-4575-9899-4bb74a1702db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5a7754-728f-43c3-8821-2c7544a9fea8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e309e9f-2e94-4188-b2ae-8301a8cfe860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d562e8ff-2815-441d-8030-0869463d08bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df661eb-b6a8-4002-bc47-df8d9908311a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468e01b2-ae57-4da8-aba5-76d8c9dff658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58cc5fe-dcc3-4ffa-b141-12036a92a69b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00564f23-673c-4c7f-b406-5a4c7b3623be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaed8d3a-a980-4bb6-8c98-a009431ccc5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0986bd57-da3b-41d5-991a-797cf0b35b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b11c78f-4fd1-4139-8c2d-36cd326c1f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980c8c07-67f5-490f-bb54-136da5800e27",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d23d80c-d435-4684-97ed-52393a71a225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6cfaa70-d570-4573-8bf7-cc4f8f2f52c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cf5d43-e3ed-4818-b6f5-fcdbe071333c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea5555d-c87d-4d6a-8c5d-863ecdf657bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0596e923-872a-47e6-b74d-5d6e05ed43aa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc6fa74-4dc8-4bdf-81c8-25d40b1abeb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84fc394f-782c-4e27-816b-d05f9983a2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3e2a7f-a555-462a-8983-1c18b32c451d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a7ae83-9319-4a2b-88b9-db494337be54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bde4f27-8393-4eba-a614-dd660a7584bd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16f72e4-3203-43af-9cdc-28ccc827c389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a3076f0-4df4-438e-9b09-1a3dbf413d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f081b4a4-ebe3-4dfb-aa90-4240325a1b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e6ac18-959b-4674-8155-85beb01f0549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be9c70d-8bc3-44e9-8b04-56761f045f68",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd1ebdc-15e7-4277-8975-0671a21c83b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b60837-06ff-45cf-8d70-252ea3233ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e09e5f8-5b91-4c36-9223-8933ab15874a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54521dc-6dc9-41fe-bb6c-3e958293805b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cac995-5963-4bec-a643-e9c61d763a47",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc5fbb8-4f24-4ece-bfc8-90e51346cf3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bef2be-abff-4bd5-a701-178be471d05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2448b62a-d8fe-4766-9c17-1ec20be58592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89cb535-1c7a-464a-8b21-73936c9e5542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce904b9-779b-4cef-8cac-08b6623a505d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2f8eb2-2f8d-4930-9c73-e50fc967bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d3a05d-19c6-4c97-b98a-b88cb178f6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42be5119-51e6-4ffa-8547-e97b1c019662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f068f7-d18d-467c-92f9-b0e82ac12a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c049dfd6-cace-431f-8303-8c1a34122a7a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9158c856-986b-4d92-98ae-07698af33e3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a25b73-4053-4182-9331-0973850c1d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cb9d01-2e87-45e9-8543-285b95e114d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f2430f-b6cb-4931-93f2-7aab23b6e523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2bc310-f74c-4639-91e8-8898188cb290",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5571da63-4bde-4de7-91ac-6d783eb86360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014fc4a5-4e9a-4f59-85f7-6e76e2127b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0815b2-7eaf-4140-ac4f-b616ab0ddede",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abb010a-9c4b-40c6-aace-6730b9ccb7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f55234-671c-4b09-9301-836fa6a8f54e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e973574-50fe-4f9b-938c-50c94e429dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052def29-05f0-49bc-937c-a82faab0af6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e7b364-4c40-4aa0-861d-b9f6dbe92346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49326956-9688-4aa9-bf89-f7dc6f5ec410"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0990df4-118f-40c2-a8f1-e04b897b0226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4cca8f7-8027-4fee-8032-7992fd550d0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05cc7e50-b5e7-4ab6-882c-90bce53299bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fd6cc26-e53d-43b1-8ee4-2e17f3967a1c"
                    }
                  }
                ]
              },
              {
                "id": "761fbd68-7cc0-4c79-a05d-3f6a3f524df2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34fb0134-e08d-414f-b426-3aeb9672a0aa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae68c66c-e6b1-4d2d-ba21-e9178fd20283",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0ab5800a-0220-47eb-853e-db619b5ef37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ee1143-2968-43ad-b099-3a7b9851b687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ecdbeb7-b862-4a01-a1f5-8365f9d8f165"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae3c61b0-7d45-4d72-9fbf-126838fe2587",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "737a6e67-f8cf-4a27-a503-efccc147ace5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "101021ca-4d77-49bb-a7f6-22131f2dcb25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0166d41-2bfb-4a09-960d-4ef5792b8c67"
                    }
                  }
                ]
              },
              {
                "id": "4b7ff95d-f9d7-418d-9e00-40df4fe38fdf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "504c8b2e-7530-41d3-b2dc-0dbe89992f8c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db9329b-4941-436f-932c-3d19c2192f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "df7e278a-9053-4878-a949-ad34687c8640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e569f36-ab6b-4c54-9a9b-b70d0a14e85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89651c02-6009-43e6-be40-2bca506511c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fa02d7a4-a454-4a8e-81e0-02110294bf8c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df213d65-bc3f-4aa8-a2e4-76e996801af6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e0d69fd-fc71-41d8-9a3a-49cdc0af3d2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6eba99a0-f8d1-4682-ba5c-946c90189084"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14d93b51-8b72-4e50-a031-7348956901aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cda09ff-486e-4ce2-9f6a-6a3fe19748aa"
                    }
                  }
                ]
              },
              {
                "id": "fed44ad9-b6a8-4e1a-ab19-8f8031949349",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6148e1b-a9a7-47e4-aac3-ad745ced9440",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "48680753-bf58-4db2-8550-d78722f93ee3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a79d27e8-8f34-4056-b209-3f7dd1c529b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d8f30e1-a99b-4959-b8af-ef50f6b45b66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08ebf498-2788-4a3a-91bd-ac73c4280afc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e30d8a1-9cd2-4bfd-a747-bb12901f5db2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd7eb445-7159-4337-85f7-c2d4805af42d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1020d4f-dc21-48e5-b348-e741addd499a"
            }
          }
        ]
      },
      {
        "id": "50cc8994-54c7-400b-923f-f7de0d5fd495",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1870ee70-084b-4c8d-98a3-1035362863da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ec2e36a-9c36-4135-b1c9-904a1b31e5c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3b3389b-f3d8-447a-85df-46047b670867",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4304be8b-7f14-4141-9c3e-3eed51d0b4f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d999a552-7120-4d47-a275-85f5a6c8c3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24b07b9-fc39-4d90-8131-b3dbc8b87161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b4574ad-e8d9-4742-98bf-7bb321ac1e6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58f16e5f-adf3-4061-9389-7a8582b6f221",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8207b64b-c034-4e56-9a4f-46d8c6549168"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85823a0a-b6a7-44c0-b629-2cdb73de6f6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "537bbcb9-4f86-41fe-ae8c-812ef24f935d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44e394c3-0d68-4f81-b11f-59669d1e7d44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f6341819-1d32-4466-a302-1dadbd8730c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e1e2f25-849f-4edf-af7c-5177dd5033a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e42c0cf0-9587-4c0f-bafd-fccdf4170738"
            }
          }
        ]
      },
      {
        "id": "62eb7c01-b51c-4a42-9581-46aaeddb2621",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8e6a7dea-0fe3-43cc-be00-b0556cde4578",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ede77746-2cc5-4197-af7b-83a6f86ecd50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2654dd3-1435-484d-8f4f-911e4fd2843d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8229c633-6cec-4c12-87ac-a568d0833474",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "361c4773-5045-4de9-9e5e-56b3c8bc0bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9517f2-981d-4bc8-ac1e-8c6c1d7beece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ceae41a-aed2-4a47-a010-cd6d044e2d71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb3271ad-693d-4d93-bf61-8210b2172e77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94bca6c3-fb98-4a1c-9fd4-1788cfc6e29e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbb1cd31-efa7-4bc2-8f2a-45f029de954e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa6f7e5f-73f8-4bb6-90ce-e024d8ff7af6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16c0b10b-714f-4055-91d7-1f086c3183e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d2b1965-81fd-4fa7-9bde-de15e7a8dd84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "091c7a78-b4be-490d-b66d-91b1ad550819",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9f68620-6615-48c6-857f-4e75bc2914a3"
            }
          }
        ]
      },
      {
        "id": "d9838c41-7f14-4b15-bcf2-39f0fcb3f857",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e9d193a1-b994-417a-b783-5830623523f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f867ca2b-2a55-429b-960e-03eec335c72a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9a464e1-d0a9-4979-9305-366b16e66dbd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2a6a50-986a-46b5-8570-a32d27840ea4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc1aa770-9d83-4fea-9513-57f9ae523855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6737058d-e041-4320-adc9-114da8180783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5afe4020-bbfc-4ad0-a6f1-abe31b626684"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fae25a5-9fce-4d1e-8ebe-fbebb21a5b35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a586a2f-5bc6-48cb-b7d8-4073e4b9ad9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27c8085b-d570-4d55-baa3-b65ca77d2b14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd8cfef5-8dad-4cf9-a8d0-92580a7cd31a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe443bf0-337c-43be-9022-80a0d6a29d7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8dcc4886-76a8-454f-ba72-c5432efa18ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed31bddf-0c26-4568-b7ab-adb9ee1bd02b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da1c5a32-ca25-4412-b67e-d8fffb6f3303"
            }
          }
        ]
      },
      {
        "id": "fd876430-0375-493d-8464-576438a3e98e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c8467c7-0319-4107-9f6b-62513c79738a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da9dacc9-ff55-445d-adef-175c5b371b47",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b08b7466-7c06-45a4-96a7-5353403e2242",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de0532dc-e810-4740-96b0-541997fe0034",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ba901b1-36ba-416d-a1a5-4a17ff9ff796",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 114.9642857142857,
      "responseMin": 12,
      "responseMax": 11035,
      "responseSd": 722.1619511197774,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718239086002,
      "completed": 1718239123298
    },
    "executions": [
      {
        "id": "3d3f66f8-2923-49e5-9226-1a67b813beea",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c877ca77-15ca-470a-a054-a092926ac90a",
          "httpRequestId": "d6fdf003-a49e-498b-9fa1-707b2215e10b"
        },
        "item": {
          "id": "3d3f66f8-2923-49e5-9226-1a67b813beea",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "93a38d3c-076a-4ac8-954b-2bb42e4b887f",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "a2058e1c-7f04-476d-b073-05039ba57ef4",
        "cursor": {
          "ref": "7b985774-4571-47e4-8aac-26802df1454e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9e35dc84-e38a-46c3-8add-97ce228cdc22"
        },
        "item": {
          "id": "a2058e1c-7f04-476d-b073-05039ba57ef4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "35415593-3dde-439d-a972-ca1fdd47e975",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "5e12d121-0186-4277-950f-7b271ee19cc6",
        "cursor": {
          "ref": "9128ac35-3f64-4d6f-aab0-2afab62bf016",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "20be34a6-814f-48e5-a84a-a7ef095c5643"
        },
        "item": {
          "id": "5e12d121-0186-4277-950f-7b271ee19cc6",
          "name": "did_json"
        },
        "response": {
          "id": "a959fc9e-6373-4cf6-82f4-0f3deff05117",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a4197a-c721-4c48-aae3-dffaaf09d134",
        "cursor": {
          "ref": "e881ef42-7e70-4a99-91b1-193388350e7e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63921ff1-0805-4fdd-a9c7-dd396c9ecff5"
        },
        "item": {
          "id": "c4a4197a-c721-4c48-aae3-dffaaf09d134",
          "name": "did:invalid"
        },
        "response": {
          "id": "4688b3fb-ee05-49d3-b70e-54783b05f3a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 457,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a4197a-c721-4c48-aae3-dffaaf09d134",
        "cursor": {
          "ref": "e881ef42-7e70-4a99-91b1-193388350e7e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63921ff1-0805-4fdd-a9c7-dd396c9ecff5"
        },
        "item": {
          "id": "c4a4197a-c721-4c48-aae3-dffaaf09d134",
          "name": "did:invalid"
        },
        "response": {
          "id": "4688b3fb-ee05-49d3-b70e-54783b05f3a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 457,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d088a810-5e5e-45e3-98e7-234017f822b1",
        "cursor": {
          "ref": "10f3b938-7ab1-4b28-94d2-bf94d9b9e1a6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6db6cdae-7003-4d1d-aa7c-e23dddb5925c"
        },
        "item": {
          "id": "d088a810-5e5e-45e3-98e7-234017f822b1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "29abf748-1d8d-414b-ad82-1b5a6d89431e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b5bb68-b250-44d8-982b-9f81047fc170",
        "cursor": {
          "ref": "1f196296-0fc3-40a5-9772-0ffdb2014699",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "16f85c29-88a1-4574-8411-9caa57d0273e"
        },
        "item": {
          "id": "49b5bb68-b250-44d8-982b-9f81047fc170",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "21abe14d-b398-4cdd-a137-440079e52cbc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1242147d-861a-41d5-91b0-5b0100d966ae",
        "cursor": {
          "ref": "4424865f-337c-47f9-8ac3-12aca64aca5e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3c8a50dd-3dec-4b6d-a214-9248f460d0d8"
        },
        "item": {
          "id": "1242147d-861a-41d5-91b0-5b0100d966ae",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dc1e296f-140a-46c7-ae24-886bb6ce262b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927df749-b974-4a36-a435-a4dc8b6ee07e",
        "cursor": {
          "ref": "06162fec-0518-4081-a01f-e420ea03d285",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "61b0fddf-cbd5-42e0-8f65-7c49cb6ced51"
        },
        "item": {
          "id": "927df749-b974-4a36-a435-a4dc8b6ee07e",
          "name": "identifiers"
        },
        "response": {
          "id": "8dc4f789-5a41-43f0-b21c-8dde82be9a8f",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c632aa6b-3a18-4bc6-aaae-c3c9a96e5c42",
        "cursor": {
          "ref": "fe5c0051-1bc5-4d9a-b208-cc6bd3bb11cb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d7f07134-aa00-4704-8293-b41ddb507b84"
        },
        "item": {
          "id": "c632aa6b-3a18-4bc6-aaae-c3c9a96e5c42",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "87af09b5-3e8b-4bc5-80b7-0f1d2016717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87613341-1878-422a-9a9b-ed0acc5c8d94",
        "cursor": {
          "ref": "cb0aca18-899a-446e-b041-03566fb2e2f3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "695565da-8ec4-465c-a72d-e62d390c5515"
        },
        "item": {
          "id": "87613341-1878-422a-9a9b-ed0acc5c8d94",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "76a27017-720f-4a2a-9564-e02e9f0e374b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639d79db-1441-4d45-b1b8-79b9fca4edcf",
        "cursor": {
          "ref": "c116b602-7f7e-4557-89c3-69d90794adf0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0d8caa0e-5b60-4766-9b39-c63691678522"
        },
        "item": {
          "id": "639d79db-1441-4d45-b1b8-79b9fca4edcf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8a0cd3fe-050e-499b-8fc9-367862e52f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2cbc1e-bb60-451f-acb2-1b6db434a30a",
        "cursor": {
          "ref": "5941dc86-52e1-4b1e-8c4f-45b0baddd40b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "17cd6bb7-5ba0-4cf3-ad58-311daad5f5cb"
        },
        "item": {
          "id": "fa2cbc1e-bb60-451f-acb2-1b6db434a30a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7181bbb2-eff5-4f75-b984-3c9b905242d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c407b56e-c9d4-470d-8f2d-14dda853cfb2",
        "cursor": {
          "ref": "2af9f750-71e4-4e23-af64-c9f3da19f530",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8dd65598-4e91-4f13-b633-9bc9ebf83b77"
        },
        "item": {
          "id": "c407b56e-c9d4-470d-8f2d-14dda853cfb2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1f0143ca-b262-4f48-b761-7bae63352c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788bc722-ba08-4381-8322-d767f168e868",
        "cursor": {
          "ref": "006b2a79-2db5-4f2c-bd15-fde7e16a96a9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "62164f06-c75a-4bbb-9759-32bdcaef99e5"
        },
        "item": {
          "id": "788bc722-ba08-4381-8322-d767f168e868",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "070d1da9-031e-4602-bc24-dcd91c97df54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70044543-dd22-469a-ad8b-e774127c95dd",
        "cursor": {
          "ref": "588347a5-5cc0-4368-a864-908af2b743e2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a051fb6c-fd9b-4a03-8f1d-a28ea14341fb"
        },
        "item": {
          "id": "70044543-dd22-469a-ad8b-e774127c95dd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d572a47a-d56f-4506-a03b-138746ae6837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54077e75-9c38-4d03-9b66-a7e4b98456c8",
        "cursor": {
          "ref": "f27a36eb-605c-405d-94d9-70cfbf074efc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2926c4c1-6eb2-4775-bb82-22404afcb5fb"
        },
        "item": {
          "id": "54077e75-9c38-4d03-9b66-a7e4b98456c8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bb36f920-081d-46a8-a02c-a5e52d78b97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f621e98d-e401-4bbf-aef6-45047a2005d1",
        "cursor": {
          "ref": "dded123e-49b0-4dd4-80f7-a7398da0cee2",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5d5aa885-6a0b-4404-bf3b-b066e8a02bf0"
        },
        "item": {
          "id": "f621e98d-e401-4bbf-aef6-45047a2005d1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "160028f9-e1a9-4e0e-8983-a0ab8383e31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60586ce2-f70a-4bd5-9a6a-57c050cb03d8",
        "cursor": {
          "ref": "905817ef-6529-47bc-9783-28559929cb40",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "92810e38-9c87-4ada-92e1-1fbd2308c8ba"
        },
        "item": {
          "id": "60586ce2-f70a-4bd5-9a6a-57c050cb03d8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "93906f1b-d460-42c6-bbb8-856e1fc2302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18aacb72-7a9b-457d-b082-705ecbac3775",
        "cursor": {
          "ref": "5f9a28ab-f6ba-47ce-ad62-91397088968f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b3a5399f-c6d3-403a-bceb-fd5516d44241"
        },
        "item": {
          "id": "18aacb72-7a9b-457d-b082-705ecbac3775",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "17de1c40-0d8b-4c45-97a9-63429c757bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a91fc3-6a56-4b34-a07e-ee32fb5143c5",
        "cursor": {
          "ref": "b63d9ac2-0a88-4c72-97b1-4869f3fb22cf",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "92eea40b-1331-408a-ad2c-e4ede789ee7f"
        },
        "item": {
          "id": "66a91fc3-6a56-4b34-a07e-ee32fb5143c5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "768af384-c654-4e96-93d5-fefba1a23581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90baf573-1459-4623-ab88-b92ccdf4589d",
        "cursor": {
          "ref": "7513eebf-b33c-418b-bdf4-4dea7b5f96d8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2c264209-e563-4c80-92a7-f426a1635949"
        },
        "item": {
          "id": "90baf573-1459-4623-ab88-b92ccdf4589d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "13b219a1-a9c7-4974-a36e-b334aab39c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb7b058-6dcd-4611-b874-9bec5f61043f",
        "cursor": {
          "ref": "89f427c4-7fb5-4937-a55d-11e3792c9851",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f121d8f0-c57f-48dd-ba43-00017320b882"
        },
        "item": {
          "id": "dfb7b058-6dcd-4611-b874-9bec5f61043f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3368a497-94d7-4d19-b51d-d0afe63f82bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05df2a18-502c-4424-b7bb-4dd1104b1da3",
        "cursor": {
          "ref": "acb207ec-9aa4-4dd4-a861-0ed20890580e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4f5c5457-ece8-42c1-951c-09211b184d63"
        },
        "item": {
          "id": "05df2a18-502c-4424-b7bb-4dd1104b1da3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b633f35a-4bc6-4c53-ad24-d631170b10e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2ff963-11f3-4159-bd11-4da79c5fffb3",
        "cursor": {
          "ref": "9014bdc7-6d6c-44bc-a709-08c2cae09ab2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8c05a617-dc82-4b66-862f-7af5e7cef270"
        },
        "item": {
          "id": "ba2ff963-11f3-4159-bd11-4da79c5fffb3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a077a819-da59-401c-879f-9806eefe35d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1641dcd0-d839-4225-b146-b27af3a228f4",
        "cursor": {
          "ref": "07123f1a-8336-4f75-8da4-d58b465e03d4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8cebec74-595b-44e6-86d8-b97117671f3c"
        },
        "item": {
          "id": "1641dcd0-d839-4225-b146-b27af3a228f4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eabef6ce-58e0-4cc5-9fae-63fef550f28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba42d96-5ab8-41cc-94cf-689d7627c2c1",
        "cursor": {
          "ref": "e6474e8f-0a0a-4f49-b773-3c3a025c08c3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "012233bf-445e-49ec-a7e4-0147c70b9919"
        },
        "item": {
          "id": "8ba42d96-5ab8-41cc-94cf-689d7627c2c1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5396108e-7a29-4421-9d2c-c558a819f6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e199d9eb-3987-4097-adfb-54e4c00e3085",
        "cursor": {
          "ref": "5689fc64-4f62-496b-b33a-e0c56210c2dd",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1ccf42f1-a81c-42a6-975b-c626d5225763"
        },
        "item": {
          "id": "e199d9eb-3987-4097-adfb-54e4c00e3085",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "79eac1df-0a4c-4f19-8bd5-29f4d7ca4027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8be2d2-eaf5-4d64-ae46-c4169c85190b",
        "cursor": {
          "ref": "a8539a23-6e9b-4b32-ac96-591ccbf828ac",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "828efbb6-381f-4e47-bfb4-acb3fb5d2b23"
        },
        "item": {
          "id": "ad8be2d2-eaf5-4d64-ae46-c4169c85190b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "50cb233c-eaac-494a-8f1b-21df0387126e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b15b00-bfdf-49bf-a197-f73e8dd17a5f",
        "cursor": {
          "ref": "423f29d0-d54c-4c22-b4f2-b6f8b8b680ab",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e86567bb-7922-4dc7-af14-5445efd58c1e"
        },
        "item": {
          "id": "55b15b00-bfdf-49bf-a197-f73e8dd17a5f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "eb6dc0b8-b926-419f-ab24-186d3ce49871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74b5f75-b610-45e9-8263-b8d768cb2d2a",
        "cursor": {
          "ref": "dfd0a91c-503a-4a4e-b050-f43b58cddef2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7eac60ca-7d1a-4db3-b878-f41af20f370f"
        },
        "item": {
          "id": "e74b5f75-b610-45e9-8263-b8d768cb2d2a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0c4118e3-f67d-48ab-bfff-2a05e1b5d25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e57e7c2-9d39-4898-9b05-8ff6c55d3558",
        "cursor": {
          "ref": "721a054a-3761-45fd-810e-343e3ce98583",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "17e62492-dba3-4067-8ac3-8e294e14da15"
        },
        "item": {
          "id": "6e57e7c2-9d39-4898-9b05-8ff6c55d3558",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "792d7e59-a331-4f36-9548-97c3552b4e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ae841c-2f6c-4af7-87a7-69bd3f7acfa0",
        "cursor": {
          "ref": "235237fa-f153-4d1d-b7ad-ea76f8597708",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "48f2ce82-772b-443f-85e5-3209938611c6"
        },
        "item": {
          "id": "a3ae841c-2f6c-4af7-87a7-69bd3f7acfa0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "96dcb79d-c3bf-4e18-96d1-ac4ff01183b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f8d70a-a474-4e3a-a1f9-2f39033dc3c0",
        "cursor": {
          "ref": "fa262c82-675c-4b22-89b3-2e38a229735d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6fe15460-eecd-46ae-b52c-36a4f857d4e7"
        },
        "item": {
          "id": "c4f8d70a-a474-4e3a-a1f9-2f39033dc3c0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a6775ba1-1f58-4b94-897c-148fb2eb0c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29dd065-288c-4fe9-b52f-3e0e02f37366",
        "cursor": {
          "ref": "9a9ca629-6bf7-4892-8fc9-9e415c32c229",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "955272e5-b6bc-42ff-ae59-af97cd74e194"
        },
        "item": {
          "id": "e29dd065-288c-4fe9-b52f-3e0e02f37366",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b277dab2-40fa-4e9b-9ae7-afa951e2d6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacfc932-0d64-4fac-901e-8351dda5350c",
        "cursor": {
          "ref": "f07c9181-af73-4104-a78a-88a88bfd3e00",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3699df5a-02a4-4a00-ad50-22a2ac0afcfb"
        },
        "item": {
          "id": "cacfc932-0d64-4fac-901e-8351dda5350c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c64bdc99-1241-4a71-a5d5-d651dec8d1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dbbec1-7430-46fc-bd62-533904db76bd",
        "cursor": {
          "ref": "c7a61054-d255-4330-be27-f9e00b39aaef",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e65e9a81-8375-4bbc-9222-da81c729cf7a"
        },
        "item": {
          "id": "e1dbbec1-7430-46fc-bd62-533904db76bd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8aad0cbc-d14b-40b9-bd5c-9317a5d5c714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555257ea-7dda-4afe-a46f-feded336fc23",
        "cursor": {
          "ref": "8aefae9c-3886-475f-bddd-4d4d68e3d2a8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7d637934-9d76-4386-8e0d-5c33dc7d2fd5"
        },
        "item": {
          "id": "555257ea-7dda-4afe-a46f-feded336fc23",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9fbf4c0f-f442-470c-b602-cdc52910d3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f477a121-e892-4bf8-ad90-4a0b3b8b65ca",
        "cursor": {
          "ref": "2f914314-4ad7-4462-a08d-ee1024fc518e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a641ce10-be00-4e8f-9ab3-51edcfb60ada"
        },
        "item": {
          "id": "f477a121-e892-4bf8-ad90-4a0b3b8b65ca",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c5a31856-a492-4448-ae9c-3c68916074d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e007abe5-668f-4de2-a985-6f36de22483c",
        "cursor": {
          "ref": "47feec4d-0f10-419c-bd39-cd7067e1aa59",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6c98ee80-eebe-4017-bbef-f2732dc3832c"
        },
        "item": {
          "id": "e007abe5-668f-4de2-a985-6f36de22483c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "86620bd9-bd74-43e2-b780-7c93dd585a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d15b69-8cdb-494d-af1c-288018ca905b",
        "cursor": {
          "ref": "408f2ba3-8395-4157-a9d8-306e435fadcb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "14df42c2-175e-4103-add0-5a847dc37b93"
        },
        "item": {
          "id": "e1d15b69-8cdb-494d-af1c-288018ca905b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d185d2f9-c807-4b41-9919-c328309b1b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3ff3da-57ca-477c-939d-309cc3babf11",
        "cursor": {
          "ref": "52372432-57bc-4d7a-92b8-8b33b26fca1b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5775e19a-7568-4e1e-af57-ebb55a24cb8f"
        },
        "item": {
          "id": "ba3ff3da-57ca-477c-939d-309cc3babf11",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5205f81e-3186-4407-bb62-0ff761bddb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91dee42-90c6-4a07-a23d-960c2f1ab5f8",
        "cursor": {
          "ref": "4b158e5a-1a6c-4880-89ae-5c387568e486",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b1df18bd-fd24-4a00-9901-10417c22b2c1"
        },
        "item": {
          "id": "c91dee42-90c6-4a07-a23d-960c2f1ab5f8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4e29f9ae-e18e-48be-a1ad-0c5cf4c57398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bde49b9-590d-4d1b-a8c4-43c78f6810de",
        "cursor": {
          "ref": "41f8ceb1-e550-4420-aa30-d0bb529e1f82",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b224455c-a07d-4613-8486-92dab3433858"
        },
        "item": {
          "id": "7bde49b9-590d-4d1b-a8c4-43c78f6810de",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d62d1a09-f67f-4b7e-be58-5d84441cf95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a078de49-c16d-408e-ae9e-c2f203455fdc",
        "cursor": {
          "ref": "5980ef23-acce-4420-afde-09de234b7cb9",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3d271e40-ad35-4ed2-9111-0ce459151ac6"
        },
        "item": {
          "id": "a078de49-c16d-408e-ae9e-c2f203455fdc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "eeeb3a55-9f0f-4f97-997c-63eb474c2fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30321b1-ec78-4fbe-81f2-6340cb731ad9",
        "cursor": {
          "ref": "f827cb54-0ee5-4f5d-9c98-901bad0426c6",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4bac441c-10d5-4e61-b9f0-da98f009e290"
        },
        "item": {
          "id": "b30321b1-ec78-4fbe-81f2-6340cb731ad9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eee9ea37-2105-45f9-82a6-f0b67d5cdb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55a76ec-c6e1-43ef-acc5-8d58f9e4f47e",
        "cursor": {
          "ref": "7ac5f150-9e7a-49c7-836a-939f0ba4d0be",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5051b194-159a-4eca-aa9c-58eaa825fe68"
        },
        "item": {
          "id": "a55a76ec-c6e1-43ef-acc5-8d58f9e4f47e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4709a5d9-7b6b-401f-b80a-510159c6c762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7004b45-33ad-409c-ba59-41de409b72b5",
        "cursor": {
          "ref": "033d9510-cf44-4c12-8257-07c9d9afd025",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6608fe43-35b7-40d5-a58c-3ca22e805003"
        },
        "item": {
          "id": "f7004b45-33ad-409c-ba59-41de409b72b5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "422920dc-e06f-4b97-8286-171bec960d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477cac4f-3382-464f-8962-8fe5db4aa2ae",
        "cursor": {
          "ref": "c956cc96-aa67-4922-bc7e-b2cebb6053ed",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "82736878-6130-4564-81f9-3c7bfd415878"
        },
        "item": {
          "id": "477cac4f-3382-464f-8962-8fe5db4aa2ae",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3215f8b0-456e-459d-b799-6ae8d9b338d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a14c10-adab-4dd7-822a-318317df2c76",
        "cursor": {
          "ref": "bb2a4e8d-62da-491a-946c-3086eebc3b81",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "02021883-ddf0-429a-808e-1143757b2d30"
        },
        "item": {
          "id": "a2a14c10-adab-4dd7-822a-318317df2c76",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "63e68831-63f8-44ea-8281-53b145800d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf66eea-bed7-4adf-a703-491655a42710",
        "cursor": {
          "ref": "6d9c0981-34d7-4065-9a10-e09b54e5a2e1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5cb3f125-41f5-4c10-bc87-f5c8614b7dae"
        },
        "item": {
          "id": "2bf66eea-bed7-4adf-a703-491655a42710",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a670dd19-08ab-43b8-9bde-946f0ccd7f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d10c0bd-ec96-4c80-a760-0a54a9fe1013",
        "cursor": {
          "ref": "30b0e1c5-b983-45fb-9ea0-4ea2c7b6b0b5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1ce70906-4141-4510-b484-b1c9c6976628"
        },
        "item": {
          "id": "2d10c0bd-ec96-4c80-a760-0a54a9fe1013",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d88018f3-9b48-4742-8d2c-fba658864f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a494d77-5001-4c32-913c-da07876f1274",
        "cursor": {
          "ref": "4e46cac6-aef0-4cb5-89f5-c264e3058194",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a10d4c51-b023-49d7-a9ba-8872ddbe431d"
        },
        "item": {
          "id": "9a494d77-5001-4c32-913c-da07876f1274",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d5995516-4701-419b-9ee8-103d68faf282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82b1268-5a08-4edf-b66a-fd3349dc5fd7",
        "cursor": {
          "ref": "1a0ee57b-7d22-4d80-a9d6-ea721a178105",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d95cc7ec-4e16-4bcf-9df2-59b62e46f6e7"
        },
        "item": {
          "id": "c82b1268-5a08-4edf-b66a-fd3349dc5fd7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e9ebda21-5eee-4fca-9666-cd8ef87708de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9205723a-6714-4d8d-a96a-65a6ca160080",
        "cursor": {
          "ref": "91c78102-fbe9-4f52-b13d-5c29a4538d9f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cc720e40-2b24-4360-aec1-8f53a7956afc"
        },
        "item": {
          "id": "9205723a-6714-4d8d-a96a-65a6ca160080",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f40eb3c8-f196-482a-8e8e-2cc9c160ec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4f0d5d-c92d-4ab4-ac8b-5541b3e04211",
        "cursor": {
          "ref": "7f4853e9-a564-45f6-826a-7ca4ec626ac1",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e19ec30f-b180-43a1-ac5b-1f71ce7bad4d"
        },
        "item": {
          "id": "ff4f0d5d-c92d-4ab4-ac8b-5541b3e04211",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f3a496bc-e065-4743-a7b1-9d9980b92e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20954d92-1c09-497b-84bd-cce9a31fba99",
        "cursor": {
          "ref": "99ecdf0b-42af-40cd-bb84-6e56d7d917e6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "42b84fa7-1353-481e-a570-77451ebdaa1b"
        },
        "item": {
          "id": "20954d92-1c09-497b-84bd-cce9a31fba99",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "14c59b83-d6ed-466c-beaa-31eb3cad3907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d617f9a-e43d-4024-a4fb-0173373f23d1",
        "cursor": {
          "ref": "639121b5-6c73-42b8-a183-a99500e29d79",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5ea5ad2a-9397-40dd-a2d2-fbf3063dddbb"
        },
        "item": {
          "id": "3d617f9a-e43d-4024-a4fb-0173373f23d1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "55d83a70-fd10-4e75-9cb4-90be846c51e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c619410-f798-4e05-a148-35925a351e3b",
        "cursor": {
          "ref": "65f00201-2b2a-4d2a-a9b0-3b0da8b4f3e8",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "284caaa7-1dbe-42f2-9700-bbd8ca3a4039"
        },
        "item": {
          "id": "3c619410-f798-4e05-a148-35925a351e3b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2646a67c-a0f3-4064-a4fb-a00640984c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe6affa-e407-4c38-94ee-9763b7438262",
        "cursor": {
          "ref": "20dc4ae0-8d71-4019-8c35-dc88d1a711a0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e7f580ad-a1ff-4515-b7e6-c1cfd391b6fb"
        },
        "item": {
          "id": "6fe6affa-e407-4c38-94ee-9763b7438262",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ba1573d6-b81b-456d-a0bb-03a4d13afed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb73044-8d94-45fb-9cb1-a7740d0e053e",
        "cursor": {
          "ref": "87c3961a-0f4b-4d1d-ab3a-5d13bbbaa82a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8777bd48-2956-4f7c-8fa9-eb8a476e4a22"
        },
        "item": {
          "id": "bcb73044-8d94-45fb-9cb1-a7740d0e053e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5a18c293-af3e-4684-9f8e-de38bbbeb840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b524b62-343a-4cd5-ab3c-0fd80fe00d18",
        "cursor": {
          "ref": "70154d0a-bfec-4697-926c-d617081823fe",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f05e969c-d827-422f-b045-af5f319849b5"
        },
        "item": {
          "id": "6b524b62-343a-4cd5-ab3c-0fd80fe00d18",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "99542814-2f9c-43d4-81d8-f64d4343a1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cf4e83-3206-45a6-b601-bd1cf6b9adab",
        "cursor": {
          "ref": "41325f4b-f818-413f-9fbc-99131c694456",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c02bc63c-5050-44a8-b834-4b592c825564"
        },
        "item": {
          "id": "29cf4e83-3206-45a6-b601-bd1cf6b9adab",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2e1bb5a4-aec2-408a-876d-6528395326a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901ae948-651c-4802-bcd2-06141e640f2e",
        "cursor": {
          "ref": "d50a34e6-08fb-4392-a3ef-b5278dd5c23a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5f8941da-7de2-4209-9a4b-6396ce580c10"
        },
        "item": {
          "id": "901ae948-651c-4802-bcd2-06141e640f2e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7745ee00-74af-4935-84ae-0d87c1952fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f8fbb5-73a5-4733-9700-34795cac952d",
        "cursor": {
          "ref": "6efc3673-4838-4dd6-9644-11ec415ff3f1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f627b918-7be8-420c-bbd8-2aed34d4a4f0"
        },
        "item": {
          "id": "a8f8fbb5-73a5-4733-9700-34795cac952d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0a584a2f-b8a5-484b-8840-6b2d9186cdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7b4c1d-45a5-49c1-8d0b-00260117b532",
        "cursor": {
          "ref": "ef182d1f-5f67-4345-84f5-67fe682d4c08",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "96c3f47c-2947-4e2b-b759-3ce0e07418dd"
        },
        "item": {
          "id": "7a7b4c1d-45a5-49c1-8d0b-00260117b532",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8a07175c-ed84-4d76-9708-22f8e7bcca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcda6ed-5427-4ff5-8dd7-c63ac259e46a",
        "cursor": {
          "ref": "74414395-0fc0-4a43-a77a-85fe3371c0da",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2a39ef20-bd03-4d30-9eec-527b7cf1d553"
        },
        "item": {
          "id": "7fcda6ed-5427-4ff5-8dd7-c63ac259e46a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9c8fefee-9be7-4aca-a9d4-c428ca4c0f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c307c6f-e38c-4ecf-b928-5a9ec4d34208",
        "cursor": {
          "ref": "e9f02a13-54de-4e1b-a96f-f2709ddc0098",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5e9e8320-0f41-4b71-b539-e75bb0bb1859"
        },
        "item": {
          "id": "3c307c6f-e38c-4ecf-b928-5a9ec4d34208",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9a338132-80a9-40af-840a-c814554ba8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ed9f28-7492-4a6e-b4af-e7a274219dd7",
        "cursor": {
          "ref": "c0e6080d-a514-4150-9a07-2da3b9635033",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0999544d-5cc9-4978-a6dd-932e533056a1"
        },
        "item": {
          "id": "f4ed9f28-7492-4a6e-b4af-e7a274219dd7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "07a15420-6466-47b6-a5bf-6dea0fda4e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddf2a31-9f45-4d9e-a3c8-49f9d61f1cc7",
        "cursor": {
          "ref": "0fca0f41-0683-41ba-9b43-56b06f7f0b51",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a7c14568-38df-44d7-9517-8a5564946142"
        },
        "item": {
          "id": "fddf2a31-9f45-4d9e-a3c8-49f9d61f1cc7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e9597c2b-6cee-483b-8da9-2ee6f9ec5613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2db1fbd-1a13-478f-9e79-7d39f339c512",
        "cursor": {
          "ref": "fbfd490e-93a0-403b-bd3f-f3199acb883d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9216592e-2967-4c23-b9af-f7d32dd81190"
        },
        "item": {
          "id": "c2db1fbd-1a13-478f-9e79-7d39f339c512",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6be87606-26fa-4b32-abaf-67495e648c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e554a79d-f57a-4bd5-b2db-7e402e497e2e",
        "cursor": {
          "ref": "ace7be0a-716b-4c72-847f-4dd73390a879",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "56b6be25-022c-4f59-a874-6d0238b0364e"
        },
        "item": {
          "id": "e554a79d-f57a-4bd5-b2db-7e402e497e2e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "976cf931-8bbb-4562-aae1-952821004bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c92016-5989-4a22-8759-9de89147eff6",
        "cursor": {
          "ref": "dd165698-93d2-4971-8ed4-8923fffb065c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1137de9f-50d7-41a9-8dfd-a7effd06f964"
        },
        "item": {
          "id": "87c92016-5989-4a22-8759-9de89147eff6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a6eb526-59de-4cc2-a5cd-20e72db1a0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fecbd9-9554-4e92-9d54-a7998b5fe6e9",
        "cursor": {
          "ref": "d043e2f7-d053-4ea9-9df7-fc957b070d54",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6025739f-d159-40c0-98a6-f0799fb3c6d5"
        },
        "item": {
          "id": "d4fecbd9-9554-4e92-9d54-a7998b5fe6e9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1d548f59-33e9-4151-b4dd-8ad7bbe28b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e42c52-166d-4acd-ae28-1c1cab34108d",
        "cursor": {
          "ref": "9b38b458-03fb-4a5e-841e-4a30644f1b91",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f876f78f-3fee-4dfc-9d40-aca1b46debc3"
        },
        "item": {
          "id": "10e42c52-166d-4acd-ae28-1c1cab34108d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9270f62c-6f75-4f8d-a091-037310ad7938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc802464-d72f-465e-9787-1b3d04a8eb74",
        "cursor": {
          "ref": "fa302b30-e799-4684-a8be-b5b690b2afc8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c63591b0-0883-47b2-9d6a-fd64b8c4bf16"
        },
        "item": {
          "id": "dc802464-d72f-465e-9787-1b3d04a8eb74",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "357f95e6-cd6d-44d9-b027-e0b9ceffbb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfec253-cc3c-4dd4-9ba9-7b970fcfc655",
        "cursor": {
          "ref": "1f7a8b9b-6a66-4ca6-8cc5-2eaf5d04e8b3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "74de709a-d0f0-423e-b7f6-530c862c1531"
        },
        "item": {
          "id": "0cfec253-cc3c-4dd4-9ba9-7b970fcfc655",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "70e1bc35-e616-4e7e-9ab8-cccd17d09fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135ee990-9f52-4222-a9b4-215e43f108fd",
        "cursor": {
          "ref": "4be3f759-e46e-41d1-8a7f-ecce442a64e8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cdcf0ae8-6b4e-42b9-a0e8-ca0ac1e12f04"
        },
        "item": {
          "id": "135ee990-9f52-4222-a9b4-215e43f108fd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2bd9dff5-3852-4606-b6f7-7fb65859918c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d82b9a-d65d-4141-9949-f67bab74146e",
        "cursor": {
          "ref": "11183a6f-b928-4fd5-a324-bd26604736d4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9e2c81a9-7659-4e70-988d-176e5b440c92"
        },
        "item": {
          "id": "92d82b9a-d65d-4141-9949-f67bab74146e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "daf54209-c2a8-42c5-966f-be0c24097169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b03300-cfd8-49f4-8caf-89a171c88f47",
        "cursor": {
          "ref": "1081f37e-92dd-4346-96f3-8c06ed371e81",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "22e33741-fff2-4748-8989-3b56bbc84bf3"
        },
        "item": {
          "id": "63b03300-cfd8-49f4-8caf-89a171c88f47",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "031c1d1e-37ee-4d38-a4cf-8f78dbe6aa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8674edd0-4757-4e3e-bb17-a322f2780687",
        "cursor": {
          "ref": "ace7eb71-1981-47d7-8091-19e530a04e1d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "05b127b6-9356-49b5-b154-9718c7827a50"
        },
        "item": {
          "id": "8674edd0-4757-4e3e-bb17-a322f2780687",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "178c6236-37fe-4433-9eb8-a514c20ad0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b643065-6eb1-490b-9ba3-00b6d99254a0",
        "cursor": {
          "ref": "26c4b5e6-238b-4644-ba21-73e301868076",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c752c345-a71c-45c0-91b6-703ed0262fe1"
        },
        "item": {
          "id": "1b643065-6eb1-490b-9ba3-00b6d99254a0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a1d06ec6-e269-415e-9584-ba2983109e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc76ada-d258-4571-ae0b-e3244f7bf7d8",
        "cursor": {
          "ref": "6fe36bbe-aa73-4829-bac2-51fd260eb9a2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1764e40d-1cc1-457c-a649-3ea568243070"
        },
        "item": {
          "id": "dbc76ada-d258-4571-ae0b-e3244f7bf7d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7246464-de40-49bf-a88b-247632d7983b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7209ab77-0e07-4feb-a494-167b7b2367e5",
        "cursor": {
          "ref": "a9e55ba4-d2fe-4820-a6e9-8ed05b63840e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8079f09d-eac3-4330-8483-3e13ca129d9c"
        },
        "item": {
          "id": "7209ab77-0e07-4feb-a494-167b7b2367e5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9000e69c-a780-4a05-a2da-fb8e03bee7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dc6277-3a7d-4697-bb3b-20d2295b4266",
        "cursor": {
          "ref": "2ecf42fb-1697-4b8e-aa8e-8ebe697083fd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "628c7e4c-a00b-4b8f-b95d-29cdcf642bfa"
        },
        "item": {
          "id": "22dc6277-3a7d-4697-bb3b-20d2295b4266",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8a8f0333-e2c4-459a-acc9-e7e23cc8f575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f37694-397f-41a0-989b-b5dff2cae26c",
        "cursor": {
          "ref": "2b401052-817c-401d-bdb9-aa6895d87f9a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "caf018c1-8dd9-441b-b4c4-932bdde37064"
        },
        "item": {
          "id": "17f37694-397f-41a0-989b-b5dff2cae26c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7ef6b6dc-f6e6-42a0-8038-b024d4ae6194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be94da3d-6e7b-4c12-b62a-ebc02edaf1b2",
        "cursor": {
          "ref": "95baf504-4c0e-4f51-8274-eaba14ec5b1c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "721a0072-8403-451d-ae4b-3d5e381475f8"
        },
        "item": {
          "id": "be94da3d-6e7b-4c12-b62a-ebc02edaf1b2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "af3d414a-6996-4bf2-a941-fbf45af459a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b025f94-69b1-49d7-8621-6d2318c0168b",
        "cursor": {
          "ref": "fbd9ae98-f65c-4f66-91fd-53a89dd75d88",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "72c0e525-5c86-4483-93cf-4b163d9aee57"
        },
        "item": {
          "id": "8b025f94-69b1-49d7-8621-6d2318c0168b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1846bbf1-f91b-4631-8f10-933e0e095058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ffe9a3-c10f-4517-a7bc-827b7dec87cd",
        "cursor": {
          "ref": "c43b8576-c3e8-46f2-a0b1-2f9ccabb1f31",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "59585720-321f-4c4a-82bc-b9c2b0cf6f6d"
        },
        "item": {
          "id": "c0ffe9a3-c10f-4517-a7bc-827b7dec87cd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "46cfc867-fded-49c4-a361-33af3d17487e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d652b092-3228-461b-8170-a1115e764005",
        "cursor": {
          "ref": "f07a02b5-1ece-4af3-8bb4-eff60c18cce2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b475e7f3-25b5-4cb4-af22-7560c2d8bfad"
        },
        "item": {
          "id": "d652b092-3228-461b-8170-a1115e764005",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0181dbd2-35bd-49ca-a461-fbfc883c0f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07396c2-fef7-461d-9ee1-081997d9e465",
        "cursor": {
          "ref": "ebe2d5e6-27a1-4e2c-82e8-40ca08928ef7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4bea4e04-d59d-4c10-9a25-312ef28bf0c7"
        },
        "item": {
          "id": "f07396c2-fef7-461d-9ee1-081997d9e465",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f6f792dd-80df-4fd9-990f-6f9c8955b0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3650871a-e149-47d5-991b-c66447f90941",
        "cursor": {
          "ref": "ab2dae81-f5f7-4775-871d-78ea81523f94",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f97f6b5f-f0f0-4e77-8d1e-d92b18079955"
        },
        "item": {
          "id": "3650871a-e149-47d5-991b-c66447f90941",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7e4585cf-79ff-4f0a-b9c4-2982fb2576c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b3c261-62ee-4acf-89e2-800d85003421",
        "cursor": {
          "ref": "504375bc-80f8-4b04-9e7a-f39a3a44466d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b47d519f-ed4a-4685-ac1c-ed21892592ac"
        },
        "item": {
          "id": "f3b3c261-62ee-4acf-89e2-800d85003421",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0b74ad37-30b9-4235-8033-672fec303d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537b6ea8-fc39-4572-9648-4707f472d498",
        "cursor": {
          "ref": "6b5323fa-7b54-48b9-8f28-2cb12aad6283",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "25d3ebe0-2b7b-4039-b9a2-6d21900284c2"
        },
        "item": {
          "id": "537b6ea8-fc39-4572-9648-4707f472d498",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "61d43990-b256-45c8-bb97-2cdef68fe2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3e6049-bd53-49e3-ac65-5ee9eda3d944",
        "cursor": {
          "ref": "15fe831b-7efd-4987-814f-cab0ec095849",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1b6dee59-3e06-46f0-b442-f910a599d141"
        },
        "item": {
          "id": "5d3e6049-bd53-49e3-ac65-5ee9eda3d944",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d12aeaa8-d739-43db-b659-0bdc3eedb268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53b10aa-46c2-42b8-9fba-c8e50336cf89",
        "cursor": {
          "ref": "8cd88079-020d-41bd-b1b7-6026928137aa",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "18d4cfa5-7e5f-469b-942c-b23e3c21995f"
        },
        "item": {
          "id": "a53b10aa-46c2-42b8-9fba-c8e50336cf89",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "79eec28b-d039-45dc-ab80-8011d9542d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4cb433-34f3-4f67-821a-7c8d53e98b5c",
        "cursor": {
          "ref": "a89e946c-5f6d-4b9f-a53f-e9c1f7a19423",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "202426bd-d693-4dc7-a876-7feacd004a6d"
        },
        "item": {
          "id": "2e4cb433-34f3-4f67-821a-7c8d53e98b5c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "08ef218c-53a4-4cb0-b8c1-de5d42751598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd03ee71-5e8d-4d00-9ad2-556c2e034941",
        "cursor": {
          "ref": "3d4dc084-82d3-4559-b10c-c24989ed9f54",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a49f3514-b922-4a3f-98e7-c5ad199edaa5"
        },
        "item": {
          "id": "dd03ee71-5e8d-4d00-9ad2-556c2e034941",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c298de2b-fac1-4a59-b601-e8611636f76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4801a87d-1631-4c30-9088-b20649546250",
        "cursor": {
          "ref": "fbbe2cc9-f7f6-4d5c-8917-d98b4f886cd3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b418cf71-c7a7-44bf-994c-56f6d8524eca"
        },
        "item": {
          "id": "4801a87d-1631-4c30-9088-b20649546250",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "54a79fa8-3643-44d3-8e77-43c7b47df8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a17bfb-a89c-44b0-93dc-9e992040572b",
        "cursor": {
          "ref": "9ff1e600-585c-49eb-b457-c17c53cb1c64",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bb3c80fa-dc41-42fd-b047-11c065a34517"
        },
        "item": {
          "id": "d4a17bfb-a89c-44b0-93dc-9e992040572b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "043b64be-5aeb-428a-9b62-4b8a278ba069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3739a9cb-ad96-48bb-8bb6-a6832740c895",
        "cursor": {
          "ref": "041a36b0-4749-438c-98be-68536a9ee2de",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ebdb5afd-3d09-4ad0-b706-13cf78f16dab"
        },
        "item": {
          "id": "3739a9cb-ad96-48bb-8bb6-a6832740c895",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "70cede9a-a47b-4ef4-978a-c73c7a38f90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422a0e41-143b-426f-9afa-274d18be055a",
        "cursor": {
          "ref": "24d93a4a-9a2c-41c2-93bb-36a2f18b47fe",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "59426ee6-d53e-40c1-83d6-0992d31ad50c"
        },
        "item": {
          "id": "422a0e41-143b-426f-9afa-274d18be055a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7d19e490-91e6-438e-9d72-7732e2d00d85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec5d6b5-8e1f-4275-b563-24803f4047b9",
        "cursor": {
          "ref": "33947445-ee7d-4b18-aa3c-1324949bbfe3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a7d3377c-d008-4cf1-898e-7f4f3dd59dfd"
        },
        "item": {
          "id": "0ec5d6b5-8e1f-4275-b563-24803f4047b9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "99791c92-0398-4ce2-bfe3-594622431243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e12874f1-c333-410e-88f2-c79448d89ea9",
        "cursor": {
          "ref": "df0d45ab-1cc7-48ab-b1ae-beedf73ac596",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "79790a8d-cc4a-4a50-9689-c101f1ed0c9c"
        },
        "item": {
          "id": "e12874f1-c333-410e-88f2-c79448d89ea9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1ff9eab6-7e8d-478d-a2b1-4c913947ca82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5ab91266-6ea6-4c04-8d72-e1af82f00d40",
        "cursor": {
          "ref": "f2ee69ac-4e05-4366-8a57-f78bca02cc67",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "61189ae4-6fbb-44e2-820e-97edcd8ee882"
        },
        "item": {
          "id": "5ab91266-6ea6-4c04-8d72-e1af82f00d40",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d6e6f4c1-0dd1-464c-91e4-17834c8c9c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6ff25de6-837f-4ed0-bf56-2c0d9939d76c",
        "cursor": {
          "ref": "2a241813-c133-4c7e-9b17-be0c6016da4e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f665210f-885d-4f80-9274-726da63a91af"
        },
        "item": {
          "id": "6ff25de6-837f-4ed0-bf56-2c0d9939d76c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "df3b9f8f-36cb-4ab9-be66-7427f1d77379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "84c07817-ffd0-4df0-a9f9-f17b3f47185e",
        "cursor": {
          "ref": "f3f04172-7443-4756-bf61-cff507e83a76",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "59b53c08-e843-4db4-bd9d-5771bfee0e6c"
        },
        "item": {
          "id": "84c07817-ffd0-4df0-a9f9-f17b3f47185e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cb170fa1-024b-4d7a-9587-ec83a173b12c",
          "status": "Created",
          "code": 201,
          "responseTime": 11035,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9092cf9-fa3c-4e64-bad4-1b42d5fb3374",
        "cursor": {
          "ref": "9961beff-a768-416a-be71-700ebb162322",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ef7496fb-6119-4e9d-9a76-4418c822752a"
        },
        "item": {
          "id": "f9092cf9-fa3c-4e64-bad4-1b42d5fb3374",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f92e17bd-b789-419d-a886-465ab0b80009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "61721869-b4f4-44a9-83bb-2f10f2be6946",
        "cursor": {
          "ref": "300d5ae9-0e00-4daf-8cbb-ac3216e2c40e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6b9b6c31-7061-45c9-b747-264948150370"
        },
        "item": {
          "id": "61721869-b4f4-44a9-83bb-2f10f2be6946",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6907774a-0ccb-42cf-a324-72b8ef6f1a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ee73d167-7b98-4bc2-a98b-200a7575d785",
        "cursor": {
          "ref": "f13c1a9a-c837-4edb-bc3a-4fe027ef93b1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a93448f2-482f-4625-821a-20d88db92f7e"
        },
        "item": {
          "id": "ee73d167-7b98-4bc2-a98b-200a7575d785",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3cad4d8b-a8a6-4330-9238-ec7beb0ebc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b3c43a-81a3-4316-a93b-0347b4b030ef",
        "cursor": {
          "ref": "64e6932d-405d-4701-b658-cfd6173d0215",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2568eb03-ff5a-439e-a984-f4b7033b37ad"
        },
        "item": {
          "id": "f4b3c43a-81a3-4316-a93b-0347b4b030ef",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "145161f3-2f18-4b53-8557-495c92061ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11065008-cf9b-4b7b-81c9-2fd9d48b3665",
        "cursor": {
          "ref": "2b484835-e5df-4f7f-bc96-51e16d8b02d9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "33c66d31-9519-433d-836b-e465eee2b400"
        },
        "item": {
          "id": "11065008-cf9b-4b7b-81c9-2fd9d48b3665",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9b846250-1eca-411c-8f2f-854e7f8e068c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8168891-b7d0-46e4-92c5-20639bf19cf1",
        "cursor": {
          "ref": "9162dabd-ed2e-4f98-b8d5-b57ad23ab2dd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f5b86c75-b8a1-439a-8dca-63eaa2a30679"
        },
        "item": {
          "id": "e8168891-b7d0-46e4-92c5-20639bf19cf1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "daf48e53-6377-411d-88f3-fbd0a5b2f12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46436c7a-5312-49b9-a174-c6207b438ddc",
        "cursor": {
          "ref": "eb89a7b9-8228-4bcf-919c-59cfd3b71bdf",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9574af43-9ccc-4c35-a8d8-b0ee3538f37a"
        },
        "item": {
          "id": "46436c7a-5312-49b9-a174-c6207b438ddc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "72f8787d-3928-441a-af26-89c2d0d62328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64280cf2-cabf-4830-82a5-840767fee071",
        "cursor": {
          "ref": "79000972-849c-40a7-97e6-9f5c77a1cc3e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9e851c55-cdef-4296-805c-596f76de2cb0"
        },
        "item": {
          "id": "64280cf2-cabf-4830-82a5-840767fee071",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e9fd5195-714f-48e6-81b8-54c3eb5aaa4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f87f0f-e094-4d6e-a323-793e4eb2c698",
        "cursor": {
          "ref": "804a569d-2103-4045-bf39-ce10fbff807e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2404e2e4-af21-470b-9c49-b60fe0437564"
        },
        "item": {
          "id": "82f87f0f-e094-4d6e-a323-793e4eb2c698",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "787b798d-0ee7-4f67-9898-716b7ef354e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ece16b-cf33-4e17-94e7-cc9f7264ffa1",
        "cursor": {
          "ref": "a18abfd4-4261-4bc1-b14b-d491ce1f876f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7c45b046-5677-439a-82a0-fdac1feddbc1"
        },
        "item": {
          "id": "06ece16b-cf33-4e17-94e7-cc9f7264ffa1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0c6fa638-1cdd-4e94-9409-a7717605f602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce766f8-afea-4be1-9e84-5c9b89a78975",
        "cursor": {
          "ref": "016c567f-2485-4244-aad1-fc6f7932f2ec",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f92a178b-4f6b-4b90-9293-14b04d6a241b"
        },
        "item": {
          "id": "4ce766f8-afea-4be1-9e84-5c9b89a78975",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2fdb9072-fcce-437d-87e1-98e46f13d92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f764854-d90c-4953-ad3d-da4a0a73099d",
        "cursor": {
          "ref": "be670b78-21e1-4d51-a616-8523a28498d2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "725b2342-c89d-4839-9872-4bcb5ad9dbe5"
        },
        "item": {
          "id": "5f764854-d90c-4953-ad3d-da4a0a73099d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "096a7db1-f57e-4be9-a31e-b1b5f78203bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a4dc93-d438-4149-b26c-491f1a79c3e2",
        "cursor": {
          "ref": "accd4795-62f8-41bf-afec-ffc112f1df67",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "118326c6-8c4c-4a26-b693-ddffe572260b"
        },
        "item": {
          "id": "57a4dc93-d438-4149-b26c-491f1a79c3e2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0aeeedeb-26aa-465e-9fe8-177b833a254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e49aefe-8d7d-4791-97ac-c34b1617ae1b",
        "cursor": {
          "ref": "d886d5f3-fa0a-4aab-a3e8-43b1e628413a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7f543cc3-4def-4164-a04c-65d87b650de5"
        },
        "item": {
          "id": "0e49aefe-8d7d-4791-97ac-c34b1617ae1b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "021a9cdc-ec48-4a50-bf94-5d9ed9d40e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39761eb2-a9a8-44d2-9bcf-30037d586d6a",
        "cursor": {
          "ref": "f89f0a6a-f2b6-42fd-ae99-baea90eec8e4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2f453c92-8c8f-4193-84ca-ce98d8b8c020"
        },
        "item": {
          "id": "39761eb2-a9a8-44d2-9bcf-30037d586d6a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d2361128-1d63-4b39-be5a-493507188f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a78faf-2510-4adb-85e8-c96646e75988",
        "cursor": {
          "ref": "1c7887e9-fe6e-481a-aec3-c057df15e317",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "62ce1004-81db-4011-8d88-f33a5e3f3f34"
        },
        "item": {
          "id": "77a78faf-2510-4adb-85e8-c96646e75988",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f79bb3bd-b27e-4a96-9df8-6b519e9e79d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb675724-7b17-4172-904a-7dd6bec75534",
        "cursor": {
          "ref": "df4878aa-855b-4999-bc0e-14efc4365c85",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "544a34f0-87f0-4a55-b0ad-5a0b1a5911d9"
        },
        "item": {
          "id": "cb675724-7b17-4172-904a-7dd6bec75534",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9844d6d5-d5cb-41a5-a03f-b5d2c6088427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7dba40-c3f8-4f58-a560-1b392355e93b",
        "cursor": {
          "ref": "f84a1584-6e02-4ae3-b27b-4422e58246af",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "26ea7a58-21f5-4895-ab1a-e07b054e1a9e"
        },
        "item": {
          "id": "5c7dba40-c3f8-4f58-a560-1b392355e93b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1169638e-3f61-4cf4-b07d-2c69a01920c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccfa78a-0169-4960-9fc8-b6fff8f07474",
        "cursor": {
          "ref": "edb7a707-9972-4054-8158-f03159f7c501",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8b117530-52f3-413a-9c90-495e70ac34ca"
        },
        "item": {
          "id": "eccfa78a-0169-4960-9fc8-b6fff8f07474",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8412d794-7b32-4bc9-b9cd-1cac3defeb8b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0a4a6216-4c1d-474b-b1c3-a627dade4a8e",
        "cursor": {
          "ref": "1094e426-4ff5-4452-9576-b72ab16e82f6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6602469a-4b4f-4c9f-b4ef-25dc6ce22ede"
        },
        "item": {
          "id": "0a4a6216-4c1d-474b-b1c3-a627dade4a8e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9207211b-53d4-4067-8ff0-24057ee7ca1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c18834-d262-496c-9614-90238bceb471",
        "cursor": {
          "ref": "8ebec1c0-2a55-42e7-b7ca-5887c5fdc5f8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "964978fb-7b34-4d72-b953-665e14fe9abc"
        },
        "item": {
          "id": "91c18834-d262-496c-9614-90238bceb471",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fd8ec07f-7e08-450e-896a-cb4f1c5da557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc73f40-c311-4b29-abc8-5e1a397116a9",
        "cursor": {
          "ref": "d4c25374-b6e9-40ea-adc9-12b36e5dc15e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "73039fc2-08ca-4d0c-887f-928a7508ed6b"
        },
        "item": {
          "id": "8cc73f40-c311-4b29-abc8-5e1a397116a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "33bca3ef-b8b6-4635-a201-cabff2a2ee5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204530f6-f254-4350-b64c-bab3c9b99661",
        "cursor": {
          "ref": "660c7127-7ede-4eef-b3ce-2ec5abbafc4b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c36afb44-0391-4496-b0a3-d2c9ff6b9d4c"
        },
        "item": {
          "id": "204530f6-f254-4350-b64c-bab3c9b99661",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f7504d90-5a36-45ca-a3ae-badbd90ec0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2784c936-400e-4dfe-941e-15d7c448e259",
        "cursor": {
          "ref": "f9e043cc-d387-429f-a388-7d92627db89e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "98919b66-dee1-4604-b1dc-1f0bb505a9ff"
        },
        "item": {
          "id": "2784c936-400e-4dfe-941e-15d7c448e259",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "974360f7-1f8b-46eb-bbbc-448806ba25b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e9b5c3-9457-4695-92bd-2933faaf5aad",
        "cursor": {
          "ref": "dc52fb04-fd6b-4707-83d9-b2e4d21a611c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3c740eb9-455f-4a22-bbc7-682d89920c2a"
        },
        "item": {
          "id": "88e9b5c3-9457-4695-92bd-2933faaf5aad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7960d742-fd5d-4ef7-b0f3-fa72f6d7da0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a255e3b-e2b7-488d-aaac-1158a998e9c9",
        "cursor": {
          "ref": "a7f172ae-003c-490b-990d-154236bfe13f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0d81654e-212c-40a8-82b7-2485872f13da"
        },
        "item": {
          "id": "5a255e3b-e2b7-488d-aaac-1158a998e9c9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "df6d0cd0-bac0-4c45-bd8a-baa0f1bae85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceb5a9e-4c78-4d92-9600-797528158852",
        "cursor": {
          "ref": "894c9d4a-752e-44fb-bef8-40048aaa4e41",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "db88c58b-f85f-475c-9556-194b2a2644e1"
        },
        "item": {
          "id": "3ceb5a9e-4c78-4d92-9600-797528158852",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a15de89-e982-4b89-a353-ea5c61694370",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "8772da9a-a12b-4403-8572-a5a83c2a1734",
        "cursor": {
          "ref": "37d22c76-c3c4-4ed8-b299-c7173deadc8a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4ef4c10f-ca02-4bb7-8b57-4ae588e05a44"
        },
        "item": {
          "id": "8772da9a-a12b-4403-8572-a5a83c2a1734",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ec050b99-7ae2-480c-8aec-68430f64e5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d9cf1b-90e9-4f4a-a520-956cef046d10",
        "cursor": {
          "ref": "24d70dde-3c0b-43ee-a2a2-0b99962749c6",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "50f24889-d463-42c7-abe9-126dbce47cd4"
        },
        "item": {
          "id": "36d9cf1b-90e9-4f4a-a520-956cef046d10",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "12efc559-2b3e-4de0-8d8b-cc8dd0a96f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d389f3a-8932-4d2e-b870-d388bad980d6",
        "cursor": {
          "ref": "b740f6db-85d9-439d-8211-d6411a819b9a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e6dd6072-1557-4874-b03f-14e8b674b69a"
        },
        "item": {
          "id": "9d389f3a-8932-4d2e-b870-d388bad980d6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "86534715-97e2-47c1-b614-64e7d9efb2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee482b0-af6c-47c6-9981-4787cd300664",
        "cursor": {
          "ref": "d398adaa-fc13-4b5a-b21b-a70721d38cee",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "962f3366-4416-4888-9849-390c266ff122"
        },
        "item": {
          "id": "dee482b0-af6c-47c6-9981-4787cd300664",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bedbedf1-b8de-4ffd-83f4-fae4173459dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5c53d9-75cf-4ffb-bb43-cb7ea5b24f5d",
        "cursor": {
          "ref": "33f10b7a-a1a5-42e5-b5ed-ff898cfb8087",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e803a2c4-a412-4d1a-89e1-89256fb0bf67"
        },
        "item": {
          "id": "ab5c53d9-75cf-4ffb-bb43-cb7ea5b24f5d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d57936f7-2e03-457a-a2b3-6c93f12d398b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c21c920-8dd0-4e3b-a337-60c4ead29635",
        "cursor": {
          "ref": "7d614980-4ba2-45d5-a527-64b1898ac61e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "70e48bc3-bc53-47df-9968-d22cc3985370"
        },
        "item": {
          "id": "5c21c920-8dd0-4e3b-a337-60c4ead29635",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bd2e9ce4-6d3f-4146-9f57-bf15b878fdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e40cb8-9ad5-4ee2-8d3f-7ebe84721bd2",
        "cursor": {
          "ref": "239d7590-d77a-4221-a849-ccf5f56e2c89",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8ed6e207-f166-484f-8871-693061288c00"
        },
        "item": {
          "id": "f0e40cb8-9ad5-4ee2-8d3f-7ebe84721bd2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3b7676ac-8310-4412-a9be-5ebc1260e6db",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "08726f33-4942-4573-b8a0-b4acd172aae2",
        "cursor": {
          "ref": "85f8b065-517b-4e0f-8cd0-faa50ea5d332",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b656f9d8-f387-4da6-9890-6ad431861945"
        },
        "item": {
          "id": "08726f33-4942-4573-b8a0-b4acd172aae2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f348f633-89c4-4dcd-ab2b-e42d5b285515",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "9e336c35-1fe5-4b07-b3ab-cecfc5854c47",
        "cursor": {
          "ref": "55c31761-ef26-4962-810a-e567a9019fd6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "997d72a3-e518-4137-93a1-eb773b393595"
        },
        "item": {
          "id": "9e336c35-1fe5-4b07-b3ab-cecfc5854c47",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cbe9ef6f-a3c0-481f-a7ab-b7b1c53a4121",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "9eed5eb3-672a-49dc-a16b-fa24fe627f33",
        "cursor": {
          "ref": "8adcd20a-f9bc-45ea-969c-ffd92933034d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9db01415-1604-428f-b9ef-691ae79d19c9"
        },
        "item": {
          "id": "9eed5eb3-672a-49dc-a16b-fa24fe627f33",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d6410f7f-7fe5-4044-8a64-58bd28808b66",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "cee01ff7-8716-43b6-8d46-aefd49c91b93",
        "cursor": {
          "ref": "78a4e1bd-4891-4fd4-93f2-93c83433d77c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "048812c9-bc9c-426e-a91e-9a849e698b80"
        },
        "item": {
          "id": "cee01ff7-8716-43b6-8d46-aefd49c91b93",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "003530dd-e4dc-49b8-802a-bb06ad0c14c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "668cd262-9a88-49a3-b23c-0be04b9d86a7",
        "cursor": {
          "ref": "570264f1-6c28-4a73-b39d-4017f4c9cfcd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "06285050-3c4d-4e2d-a472-8fd6a5ea6425"
        },
        "item": {
          "id": "668cd262-9a88-49a3-b23c-0be04b9d86a7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2f9f6c72-1ac1-4e21-a163-4ff5a57c8192",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "4fb4b5d9-a0a7-420f-beda-2f9f01a994c7",
        "cursor": {
          "ref": "072aaf62-13f8-422f-805b-ed13163fcbfb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "11f46e41-d4d9-4067-9472-b9a1e563402a"
        },
        "item": {
          "id": "4fb4b5d9-a0a7-420f-beda-2f9f01a994c7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f823688-30bd-41ea-9f93-e8e917ec3d5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba23ee8f-26aa-4dec-8e5e-149fffb5d572",
        "cursor": {
          "ref": "eac88ec9-6856-4a76-9d4e-67fa5a28aebb",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "18651c5c-2f53-47ae-ac63-8697f61dc673"
        },
        "item": {
          "id": "ba23ee8f-26aa-4dec-8e5e-149fffb5d572",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fcacd535-ec1b-44ea-a187-949fdcd1b074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa688d4a-d7e0-41e8-9982-6bc3d3b5811d",
        "cursor": {
          "ref": "a1ac0732-e521-4c32-88a7-2cac6e2ecc60",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bcb2d4fa-2fcd-43b7-8afb-50576e120c4b"
        },
        "item": {
          "id": "fa688d4a-d7e0-41e8-9982-6bc3d3b5811d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "23ead09c-250d-407b-b3bd-226fa65e29f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac88744d-8da5-4ce6-92d8-9ee901bfbaad",
        "cursor": {
          "ref": "1ab7569f-8aef-4998-98ac-5e32d7853b31",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "34848206-7f81-4f0a-9999-560c58854839"
        },
        "item": {
          "id": "ac88744d-8da5-4ce6-92d8-9ee901bfbaad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9484eb49-5d4e-45b6-81db-f8a64990fb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d70df6-7053-4a25-b8d0-4b6ee90d8391",
        "cursor": {
          "ref": "74e1cc68-5a81-40f2-a772-2fec97a33c1d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "024a6fac-0f8e-407d-a4d1-c4db2fa47097"
        },
        "item": {
          "id": "d1d70df6-7053-4a25-b8d0-4b6ee90d8391",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "248c5eb1-3a86-4aee-a8b5-51b090d29804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfdf31b-5c8a-414e-a47c-7583a3f041c7",
        "cursor": {
          "ref": "20aa63db-77a8-40bf-9148-b6047d1dbfc0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a6e609f8-5651-4c06-a0b4-4770512fa588"
        },
        "item": {
          "id": "8bfdf31b-5c8a-414e-a47c-7583a3f041c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "98df0486-3f74-4865-afe6-fad8e5ccbe31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9015cb-cd25-4fdf-b044-d77081d1099b",
        "cursor": {
          "ref": "fcd1f248-4976-4deb-b0bc-edfd50de2723",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3984ecda-1ecd-4def-b4dc-a89255d80454"
        },
        "item": {
          "id": "fa9015cb-cd25-4fdf-b044-d77081d1099b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "225f4490-c170-4180-86b8-4bd95e8e8805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6546f72e-fd70-4d28-8a35-d9ad76ecf849",
        "cursor": {
          "ref": "31587826-ffeb-47b9-be8b-2f5761ffb6ef",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e171ec74-3866-4e00-a00f-f664300bfd7d"
        },
        "item": {
          "id": "6546f72e-fd70-4d28-8a35-d9ad76ecf849",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fcdd8c6e-cb2a-4d53-b398-901e4017df26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13ab548-6edd-45ee-bce2-bb36cf3d8c92",
        "cursor": {
          "ref": "ce91e269-961e-4c8c-9702-628280ee7896",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ae866087-4375-40e1-bfec-d362580ebde4"
        },
        "item": {
          "id": "d13ab548-6edd-45ee-bce2-bb36cf3d8c92",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "78964465-89d5-4c5b-9df1-e7e9b92e7af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad4accb-53ff-4d70-8201-a572e7385f80",
        "cursor": {
          "ref": "e7bcb12c-2237-4d18-a308-b4ff9ad11e64",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "16314e6e-cc81-4f85-a2fb-8258b8bef62f"
        },
        "item": {
          "id": "cad4accb-53ff-4d70-8201-a572e7385f80",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fa067220-b6dc-493c-b927-749ac682aa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d324151a-199c-42ee-8f70-05201568316a",
        "cursor": {
          "ref": "47cf3134-f201-4de0-8982-230ccc8e96f4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "00d86da7-2df8-4c17-8849-660ed4dec667"
        },
        "item": {
          "id": "d324151a-199c-42ee-8f70-05201568316a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d03f14cd-e563-44c9-a56e-2d99c83daae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d5485-2582-4762-9a3d-71c597db28c0",
        "cursor": {
          "ref": "bb19f129-7c78-4ec9-9174-67e4990d3977",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b8360413-a004-465d-950e-4f0e34b3a450"
        },
        "item": {
          "id": "620d5485-2582-4762-9a3d-71c597db28c0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "18dca396-e084-4f86-bf07-fbeadcbf4ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec12a80a-1552-42b7-80ee-f17448f6bf2e",
        "cursor": {
          "ref": "826a4a37-968d-47ab-886e-bef42e2454b2",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8f78ad6a-75b3-4af0-aac7-d0ba1d3a4057"
        },
        "item": {
          "id": "ec12a80a-1552-42b7-80ee-f17448f6bf2e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0d5ec44d-6f52-4198-b502-f4e8970dd945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e39ea-1497-4c46-8895-e061223f3d1a",
        "cursor": {
          "ref": "eabb56a5-9f01-4375-9cfb-988dbc9d3ccd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "102b1f9a-cdc1-49ce-9522-301149782e08"
        },
        "item": {
          "id": "dc8e39ea-1497-4c46-8895-e061223f3d1a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "73a4adec-784f-4e66-8be9-9df06d7208ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad9f847-ab8d-42a5-880a-28552230957d",
        "cursor": {
          "ref": "99599b26-2467-48e5-8480-438500e31fa0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "00e6efee-a572-416a-b83d-ac39925d7034"
        },
        "item": {
          "id": "dad9f847-ab8d-42a5-880a-28552230957d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "28a0d30b-fee8-4339-a79f-297160fb92c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e45ceb3-4065-45ff-b584-a3f05c00816f",
        "cursor": {
          "ref": "166bb4e2-7c3c-4ed0-813a-449d1250241b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0d27b39e-3a88-4094-ad96-bfce96509020"
        },
        "item": {
          "id": "3e45ceb3-4065-45ff-b584-a3f05c00816f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "166bf19a-f21c-40b6-b256-4e66c6b8ac3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4001e692-d3dd-4475-9e03-c2ab655feffe",
        "cursor": {
          "ref": "ab98b408-ff00-4445-898f-35a3e8536dc1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "adda591e-a7cf-4595-ac50-811c10f702a9"
        },
        "item": {
          "id": "4001e692-d3dd-4475-9e03-c2ab655feffe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "89d22219-69c9-44c1-ba67-98c5653d3baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c694b125-06e2-4640-a36f-db2963d94506",
        "cursor": {
          "ref": "21f1e79e-edcd-404e-84e9-5b8dcbdfd131",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d739ecd0-9747-4216-8fb3-aeedf81a87cd"
        },
        "item": {
          "id": "c694b125-06e2-4640-a36f-db2963d94506",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dfcfc980-6e73-40f4-bb92-a2963dec0d52",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b660c973-bb18-494e-ac32-873c88476f74",
        "cursor": {
          "ref": "5f49c4a9-2f12-4d9f-8ed9-83cdb02068ef",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4af78154-2d8e-43a8-a8aa-43974a182efa"
        },
        "item": {
          "id": "b660c973-bb18-494e-ac32-873c88476f74",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "847dafbb-3574-4415-ab78-e0e5ab989469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58865aa0-fa15-4a46-a1eb-fd23f21f8a6a",
        "cursor": {
          "ref": "09e0452f-3d3b-4599-a967-4fab618176a8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f06b44ac-176d-4dc8-86d8-3a881fe937ff"
        },
        "item": {
          "id": "58865aa0-fa15-4a46-a1eb-fd23f21f8a6a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3a0b4318-eb15-4423-973f-716da992b00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3d08db-fdb7-4cd1-9fa4-33d2264bb137",
        "cursor": {
          "ref": "69f2a5d5-639e-45f7-8b46-5538ae90e389",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "14b62fc5-1216-4db4-b9c9-8bce44a6b2a5"
        },
        "item": {
          "id": "ef3d08db-fdb7-4cd1-9fa4-33d2264bb137",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1b0333b6-fcfa-4892-993b-ef4901744a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053cd320-a5d5-4bb8-a40a-03b29cc79862",
        "cursor": {
          "ref": "ff563fe2-b170-4a33-8dd0-a3798d958e93",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3ae6ffd4-e0a2-482c-b5b6-e0f82c931ba5"
        },
        "item": {
          "id": "053cd320-a5d5-4bb8-a40a-03b29cc79862",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1244074d-4ebc-4803-96b9-dc218d84802a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efe28f9-0928-481c-ab1e-eedd94825e50",
        "cursor": {
          "ref": "dbd066cf-7e50-4426-b0dc-7b9e553179fa",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eec4735b-5277-4fab-a742-1262c0fdb0e5"
        },
        "item": {
          "id": "3efe28f9-0928-481c-ab1e-eedd94825e50",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e394aa0f-adda-4307-9c51-960a19f755cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0965bc6e-3210-434a-a941-65efb378d44e",
        "cursor": {
          "ref": "35896e6e-aaf8-44e2-a6ef-9defdb3af07a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ca5c2ab1-2cda-4125-b161-c23d430a7fe9"
        },
        "item": {
          "id": "0965bc6e-3210-434a-a941-65efb378d44e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4a270782-1e30-418c-abca-08aa29629716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a035f81-dd8b-4311-b00e-e3c7ff194779",
        "cursor": {
          "ref": "9d525e54-237f-4bce-931e-88912ab3c53f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "abb0d72c-af47-4b0e-b4a8-a67ec3dc1fce"
        },
        "item": {
          "id": "8a035f81-dd8b-4311-b00e-e3c7ff194779",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6cf48eb6-597f-431c-b8db-45287e91dba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1228587c-ec4a-46a1-84f2-415532813b4b",
        "cursor": {
          "ref": "14f00477-68c9-4cee-bab2-21034d04bdfe",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c9370239-7c5c-4419-9651-b58019e7dd83"
        },
        "item": {
          "id": "1228587c-ec4a-46a1-84f2-415532813b4b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5c98ce1d-2040-4e4b-b452-5537db4505a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ca3da3-3de8-43d1-854c-7f5113ad622e",
        "cursor": {
          "ref": "95f9281a-d603-447a-8364-65fd936d0a01",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "684173b1-aa3e-4f63-b8f2-1d39638e0e62"
        },
        "item": {
          "id": "07ca3da3-3de8-43d1-854c-7f5113ad622e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "40d71262-3724-4fdf-b85e-b8945892af2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8012cf6f-1617-435e-920a-02289204e0f6",
        "cursor": {
          "ref": "ffa5ecd2-485e-417c-aeef-b5ea1a707305",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d604fdaa-5d5d-431b-b0ad-95afec51a769"
        },
        "item": {
          "id": "8012cf6f-1617-435e-920a-02289204e0f6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "485862c2-b4ae-4c7c-9e17-d9596295c466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b1c83f-0b92-4b88-bd85-d9bda7644a45",
        "cursor": {
          "ref": "d9d471c9-2231-450f-a16d-9cc0ab3178f0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c773915c-0c23-40f1-a201-11f7ad6bc3ec"
        },
        "item": {
          "id": "54b1c83f-0b92-4b88-bd85-d9bda7644a45",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6e6e4161-78df-4299-b141-0cb2d35e1d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67064b2-e0c0-47ac-892b-0e9c0575c723",
        "cursor": {
          "ref": "b7a8d5ab-5c5f-468a-a34f-08905c157b55",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c366066a-14ee-444c-8156-071976fe010d"
        },
        "item": {
          "id": "e67064b2-e0c0-47ac-892b-0e9c0575c723",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3f292f3e-e012-44dd-a553-7242e77ddcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c379e034-cdf1-45d7-acc5-0100f9b2b145",
        "cursor": {
          "ref": "e9c03dc3-fbc3-46dd-a79c-d8e5e796e7f7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e5918aac-7869-4f6b-971e-5d9459c71e3b"
        },
        "item": {
          "id": "c379e034-cdf1-45d7-acc5-0100f9b2b145",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "12b57589-b3e1-4bf0-8af9-e37d9a1ba1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b09ca34-dd96-4fb8-8083-512321353440",
        "cursor": {
          "ref": "c4d22eae-f2d1-4555-a5d5-003749126d14",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "62c8d916-a1f2-4bdb-bb6d-3b4edf6538e1"
        },
        "item": {
          "id": "9b09ca34-dd96-4fb8-8083-512321353440",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dba657b9-dc30-413f-a721-e1de65b4a96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee928100-599c-4c63-bb34-0bb46ec0a8b8",
        "cursor": {
          "ref": "cf0722a8-294e-4cd5-9952-51015c3a9617",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dd45b783-3af9-4042-be6b-72e2d9e879a6"
        },
        "item": {
          "id": "ee928100-599c-4c63-bb34-0bb46ec0a8b8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9a0e4f08-a2cc-437b-80dc-093c46e2c300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b47190-3417-469c-a459-dd90a2b0ce9b",
        "cursor": {
          "ref": "232b487d-664d-4d66-818d-82534f5ad13d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ea22c897-b629-4996-9657-5373f323c518"
        },
        "item": {
          "id": "a4b47190-3417-469c-a459-dd90a2b0ce9b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5f7f8fcb-fd7f-49e9-a25a-0184c5b70119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea407bb-6dbb-4c01-bc43-7e33730d1b4e",
        "cursor": {
          "ref": "b288539f-9943-4c41-88aa-7334e9ed61e7",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "73b8d99e-6679-4e0c-ae4c-ff012c2d31b2"
        },
        "item": {
          "id": "1ea407bb-6dbb-4c01-bc43-7e33730d1b4e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6b0472f2-1ca0-4a62-9a8b-ef560e98e23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece9dd6a-ffe2-4b5d-9b84-60b5e618f96c",
        "cursor": {
          "ref": "c6f893a6-c428-4af1-bc16-5161783b0bd6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c67ffd1f-e496-42b4-88ed-fba2840d4612"
        },
        "item": {
          "id": "ece9dd6a-ffe2-4b5d-9b84-60b5e618f96c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "89a03095-f848-436d-be86-4281a61b2268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f1173f-e076-49bb-b697-8f9e2aa67eac",
        "cursor": {
          "ref": "dd9086c8-9f62-4699-88f4-ae57b89a11aa",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a0043272-cb23-442d-90ff-0a1cf25795b8"
        },
        "item": {
          "id": "86f1173f-e076-49bb-b697-8f9e2aa67eac",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5c5ede7d-be35-4c43-bcc7-7522991c878e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2985148c-eaa8-4e18-8ca5-9b01ccf27a0a",
        "cursor": {
          "ref": "145f66df-3e72-485f-8261-c9e88d1555fe",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e845c1d5-adf8-4c12-a395-f61f4d7bed4b"
        },
        "item": {
          "id": "2985148c-eaa8-4e18-8ca5-9b01ccf27a0a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ebdba3d0-a387-4b46-939f-da71c88d6e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23f8a3d-571b-4711-b7d4-7227c672a0c1",
        "cursor": {
          "ref": "80dc9d3f-9d70-4cbf-a950-e3f950ab190c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "392d2b34-2c7d-4ac9-b1e9-d75d98822183"
        },
        "item": {
          "id": "b23f8a3d-571b-4711-b7d4-7227c672a0c1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d444980a-65e8-429d-a71d-04f2bf16f10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cf7e4c-2e3f-4877-a66f-d8c378155642",
        "cursor": {
          "ref": "9a01df0a-9e32-423a-9294-1e9228954160",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "96ce5947-3b28-4f55-a40c-ebb8670f6d97"
        },
        "item": {
          "id": "65cf7e4c-2e3f-4877-a66f-d8c378155642",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7f2d5dc6-c71e-4e89-a710-c8ae6e8452c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7060b7-cac7-4a12-a551-b5829cfde6bb",
        "cursor": {
          "ref": "10410035-84aa-4a25-aa86-77fb16658b5f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cb7bec15-20bc-47aa-9d20-6fe945b0baa7"
        },
        "item": {
          "id": "9c7060b7-cac7-4a12-a551-b5829cfde6bb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9b2be79d-0550-4d0d-a4e5-0420055ba37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a638aedd-bdf6-4020-a66a-f61c33ddf42c",
        "cursor": {
          "ref": "c06a6995-bc73-48ea-8f3b-31bd34a0c263",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4f371aea-4582-48b0-8cc0-c2e04108ebb0"
        },
        "item": {
          "id": "a638aedd-bdf6-4020-a66a-f61c33ddf42c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "19b3c888-9e62-4b65-b164-e2d50c744daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f6e548-68ee-4515-b0b8-dce779b9086c",
        "cursor": {
          "ref": "6dac93fb-7ffc-4896-9547-47adca70e4b8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3a3b25f5-73f2-4308-b11f-361bc181844d"
        },
        "item": {
          "id": "44f6e548-68ee-4515-b0b8-dce779b9086c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "863c99ab-7626-4ffa-b78d-9561fabf2c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00934e14-b1db-451b-8c8e-953ae9be2396",
        "cursor": {
          "ref": "e684d25c-227a-4859-9ace-4adb1630609f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "db337eb6-f8d1-402a-a38d-ef6544b095b9"
        },
        "item": {
          "id": "00934e14-b1db-451b-8c8e-953ae9be2396",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "63977831-fd9a-46f8-96f8-0899fadf71ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bcdb35-a7e2-4fe2-95f5-dba1399bf705",
        "cursor": {
          "ref": "c2be5beb-7e79-4c2b-ac54-46a6d7f78d1f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cf9b8d08-eada-4c9d-ac01-7a56ebcca2fe"
        },
        "item": {
          "id": "09bcdb35-a7e2-4fe2-95f5-dba1399bf705",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "49ef737a-e6e2-4e7a-aafb-ce0ff5f90755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199b99bb-12fb-4e6d-aa87-b097cb6d9add",
        "cursor": {
          "ref": "991d41a4-5b3b-4385-9a15-2283fd7e6815",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e628440b-3861-4a72-bc88-4d323d2e0231"
        },
        "item": {
          "id": "199b99bb-12fb-4e6d-aa87-b097cb6d9add",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c8212e95-2e46-46dd-9f9f-a5bc19f1c2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe9959e-08a3-410b-b66b-1d3d0ae126d4",
        "cursor": {
          "ref": "afa9937e-7cd4-4645-8e43-223e524881cd",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7469e500-730f-4d79-8243-db7b2def4aa7"
        },
        "item": {
          "id": "dfe9959e-08a3-410b-b66b-1d3d0ae126d4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "678cf9b7-87d4-49fa-a0b9-f572f9bd5ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d46977c-f25e-4a72-bb30-ef5d8a20674b",
        "cursor": {
          "ref": "d4a86f61-6032-4900-86b1-4d92d0e28dfa",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "18d421d6-94b3-4feb-b2f7-a62f1a4a4d4e"
        },
        "item": {
          "id": "0d46977c-f25e-4a72-bb30-ef5d8a20674b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b95765ca-9a73-4eab-9df1-c5baa15fc573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5542b2e9-84a4-4265-8e8f-e9e1f46c1c13",
        "cursor": {
          "ref": "f2116e92-22a6-469b-bd7f-31b80187cc24",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "422fc825-d046-49b0-84fa-69044a7e227b"
        },
        "item": {
          "id": "5542b2e9-84a4-4265-8e8f-e9e1f46c1c13",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "52ebce9d-227e-40a1-9f11-c1cab636488e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f487475c-a96d-41ba-a044-3df4e2d49371",
        "cursor": {
          "ref": "ba259d92-d8a7-4a74-9c81-b5579b997ce7",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "da90f19f-2597-4dba-9670-533dc337ca46"
        },
        "item": {
          "id": "f487475c-a96d-41ba-a044-3df4e2d49371",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "aaf3d1a3-f42c-4536-80fd-7a4c09b4cada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301da53e-4edc-44fd-a3cb-33b473a5c47b",
        "cursor": {
          "ref": "5f10ebbb-52b8-4de1-a650-b007480706cc",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5225d334-c728-4540-83d7-685e8c8ccc1f"
        },
        "item": {
          "id": "301da53e-4edc-44fd-a3cb-33b473a5c47b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aabf24c7-48f8-49f7-9b34-2e2697ddca9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e51264-6f4b-449e-a54c-838ed1a45985",
        "cursor": {
          "ref": "906d29cb-d515-4108-b94c-72f8efaa8d45",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "88d8409b-2c36-46aa-93f6-da69fa70c907"
        },
        "item": {
          "id": "15e51264-6f4b-449e-a54c-838ed1a45985",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46757cb1-085a-4185-97eb-5e7f41a0a421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf237a2-5ed8-4cfe-8974-59a765190fee",
        "cursor": {
          "ref": "4ad243e2-f976-455d-9930-51aac6760d33",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b417e198-9f9d-4827-a033-96bbdd902e2d"
        },
        "item": {
          "id": "ecf237a2-5ed8-4cfe-8974-59a765190fee",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e2da2ecf-2294-42ae-96de-c1fb84951dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89948ecb-a3fc-4bec-9ec0-3a24e08ad711",
        "cursor": {
          "ref": "0d8a8d0d-b7a7-4e12-b99c-22c0eb7ce86a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1a1bea9b-2de2-4f40-8531-92ed72d24ed4"
        },
        "item": {
          "id": "89948ecb-a3fc-4bec-9ec0-3a24e08ad711",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6d34eebe-73cc-4796-9d09-79b96ff28119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b054306-9c0e-457a-900a-6d6d05c2637c",
        "cursor": {
          "ref": "acb54c17-1709-4ad9-a3ef-c15b737825b3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "945e8289-6e14-487d-8830-c8bbab128c62"
        },
        "item": {
          "id": "3b054306-9c0e-457a-900a-6d6d05c2637c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2a6e0263-481a-447c-a5a0-a7c859b564fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a34bb52-362e-44b3-8009-796aee07e6e8",
        "cursor": {
          "ref": "d9eb3e6b-48be-4ca8-82c2-ebe37033e880",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e90e7276-ff82-437f-ac64-3246c3117bd7"
        },
        "item": {
          "id": "3a34bb52-362e-44b3-8009-796aee07e6e8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e2297410-b804-45f1-b13b-492e964cf799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed0aa1a-7824-4542-917d-5f9745796374",
        "cursor": {
          "ref": "73cd5f7b-a9e2-440e-aa83-9ac2a293e268",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "11a0801e-4c07-4c58-8a5d-4e7e846ba1d2"
        },
        "item": {
          "id": "5ed0aa1a-7824-4542-917d-5f9745796374",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bf763679-4791-470e-8090-8c9221802887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a086ff7-f53a-4533-a509-46b933b2a356",
        "cursor": {
          "ref": "876f6915-8db5-4673-9130-7120a5d9b7ae",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f7f9000f-2cf3-4e34-b02d-07f9f91ff109"
        },
        "item": {
          "id": "5a086ff7-f53a-4533-a509-46b933b2a356",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "624d51d5-2597-4904-8bf6-ad565e3c6580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae40da9-dce3-4fad-98f4-782af3922389",
        "cursor": {
          "ref": "4b9a87e8-6f79-4835-8800-c152e9fb3220",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bd8a39bc-6b3d-4ab8-9ead-87186f79a8d3"
        },
        "item": {
          "id": "5ae40da9-dce3-4fad-98f4-782af3922389",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d29da714-6987-465e-ad42-430d6d6aeb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f9cbde-fe0a-4a33-8a47-84bc60eec841",
        "cursor": {
          "ref": "c5bb20d9-6f32-473d-a9f4-208b31712c47",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7172d0ed-b30f-493b-91cd-d263383b819d"
        },
        "item": {
          "id": "80f9cbde-fe0a-4a33-8a47-84bc60eec841",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e82d8e61-1191-4a92-b88a-77e927940a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b630e5-2e4c-4510-9b84-8ce485728659",
        "cursor": {
          "ref": "fc5ab09a-c9f9-4bfd-a05d-aa6b2f63522d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e6dfa27a-6306-453c-a29a-847a4ed678eb"
        },
        "item": {
          "id": "23b630e5-2e4c-4510-9b84-8ce485728659",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7cb65d17-a2ae-4eab-a835-a52f2cb61dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152f18a0-efa6-481d-8143-5a0c280e883b",
        "cursor": {
          "ref": "730ca060-2df9-491d-874a-42e1c17fd2cd",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4b8e1b42-d0d6-4858-abad-2df5ddc9cabf"
        },
        "item": {
          "id": "152f18a0-efa6-481d-8143-5a0c280e883b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ca6f754b-c8ce-4ad5-801c-d8522adb2f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5717fff8-5cfd-495e-858f-a6cc51ce57ca",
        "cursor": {
          "ref": "a4936058-c0f1-403b-95db-ab699c8e98e5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c15da111-28f0-47e4-8ef5-bbdf06035e81"
        },
        "item": {
          "id": "5717fff8-5cfd-495e-858f-a6cc51ce57ca",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f33b0267-4228-4516-9250-d39d3eb3b64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a638a9f-df87-4692-b2cd-8b65729c99a5",
        "cursor": {
          "ref": "3cca8d6d-b104-41c2-a541-7704e9b58131",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b15e2180-219d-48f3-928d-77b44de66fd7"
        },
        "item": {
          "id": "7a638a9f-df87-4692-b2cd-8b65729c99a5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5b9dc797-613e-43f4-84d1-f54135e37c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9b70ea-b019-4b54-a007-8a0354dc248e",
        "cursor": {
          "ref": "5f5a66e3-61ae-4766-9680-0dbdb919f6d0",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7c0fc9df-29c1-4845-bac3-baf60e65cf77"
        },
        "item": {
          "id": "9e9b70ea-b019-4b54-a007-8a0354dc248e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "659bc64c-591f-439b-a8ee-93280d301965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07b985e-fa6b-441b-9dec-38125bed0584",
        "cursor": {
          "ref": "159e4ae7-7abb-4da4-8514-e8f38e472b3a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dc06d519-1aee-4e40-aaf3-ed6ef4538638"
        },
        "item": {
          "id": "e07b985e-fa6b-441b-9dec-38125bed0584",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a4310b9a-308e-46f9-82c9-cae88b2e4f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b36227a-4947-4b95-b961-586b818a4d37",
        "cursor": {
          "ref": "9aaf151d-8a0b-4f75-85dd-4d6d9b232dd5",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3494bac0-1c03-4cd8-9b2f-d5ec2498317c"
        },
        "item": {
          "id": "8b36227a-4947-4b95-b961-586b818a4d37",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ad41ccdb-ca4a-4047-859e-d4a299328104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3825c4fe-3f07-4c78-b588-288026ee5a02",
        "cursor": {
          "ref": "e69dc5c4-d1f8-4ed4-9fda-f729ed6405ff",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6eeb9ed5-22bd-4169-ace9-5b4e2be807e8"
        },
        "item": {
          "id": "3825c4fe-3f07-4c78-b588-288026ee5a02",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5d342839-eebc-4071-adf4-4b23bc4db2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9d2249-7773-4ae2-8089-b9935c636c3b",
        "cursor": {
          "ref": "65487671-7722-492b-b75d-a0cdf1fae459",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7ce071c1-2b68-4a08-9860-5b04916a203c"
        },
        "item": {
          "id": "8e9d2249-7773-4ae2-8089-b9935c636c3b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a720f0fd-12a2-4670-94c0-6f76bf07477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2069ad4c-09a9-4694-80a9-005802bbd17e",
        "cursor": {
          "ref": "f6945fd8-db8f-4715-841d-e37fcb756c47",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c06fbcd7-3ab2-4c00-a834-9e07511fa2af"
        },
        "item": {
          "id": "2069ad4c-09a9-4694-80a9-005802bbd17e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5ac2330a-5105-4249-b47e-9817c5a4d7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d92f317-3d63-449c-b84e-83c825790f7d",
        "cursor": {
          "ref": "b44a04ad-611c-4e79-80d0-556828792d33",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "08778fc0-7b0c-43fa-b5e9-fa54eecd2089"
        },
        "item": {
          "id": "6d92f317-3d63-449c-b84e-83c825790f7d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "98a83d6c-5db1-4511-aa5b-9c27302749b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f586418d-a87a-4028-845d-605b9dc68175",
        "cursor": {
          "ref": "14431be4-8a28-4a66-b8c9-99f5612e72e4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7cec0a49-867a-4ccb-a221-ebcd29ae2743"
        },
        "item": {
          "id": "f586418d-a87a-4028-845d-605b9dc68175",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ff0e2122-4f7c-4f1b-987d-d472a82f9cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0aa4bf3-88e3-409b-9f80-1911046f4c01",
        "cursor": {
          "ref": "e273ece9-0922-4d0b-97a1-0ecf157a5402",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "94e67dfd-5d1c-4a6d-bf25-db44828fd967"
        },
        "item": {
          "id": "c0aa4bf3-88e3-409b-9f80-1911046f4c01",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "337f500d-0a3d-4d81-8196-656c846f82df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb344b7-38a1-4b99-9627-98bf22f7e50b",
        "cursor": {
          "ref": "27e7c418-1a14-41c6-87d8-dc8a8f9bb791",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "995d5e68-ebef-4a04-9f5f-03c4c256aacd"
        },
        "item": {
          "id": "6fb344b7-38a1-4b99-9627-98bf22f7e50b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4f304669-7dba-425e-9d42-708724a88697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f059cdec-07c1-4381-8a98-f5c15f316159",
        "cursor": {
          "ref": "9e961b13-5248-487b-8660-cf8d479bdd5f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "db9efdc6-39f6-4f4b-9e8b-1925fe20a8ec"
        },
        "item": {
          "id": "f059cdec-07c1-4381-8a98-f5c15f316159",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c5e70718-608a-4e8b-bf6b-ad1972424bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f17c85b-515e-44af-b0fb-28c6cd5ba379",
        "cursor": {
          "ref": "0d87ee42-2797-4f46-b73a-2c86c193eee4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9871f002-7e2a-4f2a-8a03-f28a27653ed6"
        },
        "item": {
          "id": "8f17c85b-515e-44af-b0fb-28c6cd5ba379",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1d7ed208-ecbc-4906-9f85-332c91655535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763622db-0bab-4f74-8886-c144dfae52d0",
        "cursor": {
          "ref": "048c3b66-b285-4a67-a2c8-2e5e4f2c12a8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7600fa3b-4579-4920-b413-7e26bff3fc5a"
        },
        "item": {
          "id": "763622db-0bab-4f74-8886-c144dfae52d0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0640c83a-b47f-473c-8e87-78677bf116d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b096c466-56a4-45c5-869d-a80ec2b9ce67",
        "cursor": {
          "ref": "a5158855-57fc-43cf-8a22-46013b30e0c8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d9acb50e-7a2e-40f1-8fa2-f01bb95e7e05"
        },
        "item": {
          "id": "b096c466-56a4-45c5-869d-a80ec2b9ce67",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "467f69c4-f57b-43ee-9335-93cabdaaf3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b8c42d-8436-4b3b-ba6b-fff083781b56",
        "cursor": {
          "ref": "83f92fc8-b6a0-4b99-ad73-9788112936eb",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8b4b17e6-2c60-4b32-897e-747917c5d273"
        },
        "item": {
          "id": "46b8c42d-8436-4b3b-ba6b-fff083781b56",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c8d56edd-b3e2-4fed-983a-eae9968d4d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36069c60-23d7-4322-aaa3-445e265f190d",
        "cursor": {
          "ref": "3ca9ad15-d0cb-46ad-bb37-468fda2c14a1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "89d08c1b-790b-413f-afe2-89d3316e5d3a"
        },
        "item": {
          "id": "36069c60-23d7-4322-aaa3-445e265f190d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "97c1da55-ea51-4933-9dcb-df6605adb808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa347c1a-c927-4112-b4eb-40cf04fe9865",
        "cursor": {
          "ref": "8c4657ac-e234-4b6b-a097-80b0824657d6",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "33a7abaf-f123-472f-9035-6f7204c079d9"
        },
        "item": {
          "id": "fa347c1a-c927-4112-b4eb-40cf04fe9865",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "45fc3057-f47e-49d5-aebb-4ced12533d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885f8396-bd03-4d64-9d66-0660c5ded064",
        "cursor": {
          "ref": "bb796bd0-376a-4f48-baea-68663dd7b788",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d5612b40-e059-4952-9f41-01c4bb318739"
        },
        "item": {
          "id": "885f8396-bd03-4d64-9d66-0660c5ded064",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0b844bc4-d259-494d-b5f0-d84add537911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51055af-c84e-4f55-b917-e57c3f2af573",
        "cursor": {
          "ref": "711b8966-5cbd-4fc2-a53d-7e12b7ee1dc0",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de3df09e-1f91-4d8f-a2f8-e48d2c92cb9a"
        },
        "item": {
          "id": "c51055af-c84e-4f55-b917-e57c3f2af573",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ec22df2d-3380-4167-b4e9-9da392e8e0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b6f25a-f6ce-45d2-8459-a224b55bb2cc",
        "cursor": {
          "ref": "bbf53ef0-936a-4b85-b3de-001456861ef4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "569307e4-fb84-42d9-bcf6-b3a20cbca132"
        },
        "item": {
          "id": "76b6f25a-f6ce-45d2-8459-a224b55bb2cc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ca16bfe1-f986-4103-a77f-578af2fc8b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac3a91f-a6f5-4a3e-8cba-fd3d28b60f85",
        "cursor": {
          "ref": "abf9e675-63f1-4214-a798-69dbcb92c6d9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "db4aee25-89e5-4bda-a47d-d0b9e3fcdaf2"
        },
        "item": {
          "id": "7ac3a91f-a6f5-4a3e-8cba-fd3d28b60f85",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d59fc3c2-0a53-4dfc-8441-3843d5705ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fd3fff-1ea1-436e-b0d4-67304cf6b04e",
        "cursor": {
          "ref": "13a4e26b-ce2b-4f96-9b35-14bd2e35d0b1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "629d652e-8e9c-4880-99b6-bf36a482d5df"
        },
        "item": {
          "id": "42fd3fff-1ea1-436e-b0d4-67304cf6b04e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "70d60e85-e67a-4d09-a159-22158be667e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e27cbe7-6239-4848-aa93-fdabb9ddb68a",
        "cursor": {
          "ref": "119583f4-692d-4474-b86b-d63e35be8eef",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d5dd439d-b6be-4410-a78e-c5823b2ef1d2"
        },
        "item": {
          "id": "0e27cbe7-6239-4848-aa93-fdabb9ddb68a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ebeeba9a-a00f-4178-b056-0b25a77d3b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5a7754-728f-43c3-8821-2c7544a9fea8",
        "cursor": {
          "ref": "3967b263-eedd-4450-93e8-426be1a1ee1a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fe3ec7e6-acde-4dd4-92df-c8c339599128"
        },
        "item": {
          "id": "5a5a7754-728f-43c3-8821-2c7544a9fea8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "82e8ae81-c588-4077-8fb8-4d559fb67a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58cc5fe-dcc3-4ffa-b141-12036a92a69b",
        "cursor": {
          "ref": "d5bb56e3-e4d5-421c-9c47-638b8cfea77c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f040b430-71a6-44e1-bb04-8e92d8953c65"
        },
        "item": {
          "id": "e58cc5fe-dcc3-4ffa-b141-12036a92a69b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a774f236-cc14-40d6-9319-4ab36bb623bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980c8c07-67f5-490f-bb54-136da5800e27",
        "cursor": {
          "ref": "e556d1c1-8ee0-4283-911e-53f8a7d161a2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "41d41437-5079-4b56-9313-9920310e25e5"
        },
        "item": {
          "id": "980c8c07-67f5-490f-bb54-136da5800e27",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "affd5cc8-8f89-4d65-a028-d829db4c7922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0596e923-872a-47e6-b74d-5d6e05ed43aa",
        "cursor": {
          "ref": "ed6bbaf0-8220-4b21-a9b5-f0224b35bfce",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6e09faf9-a03f-4da7-8a9b-ec26a53ce35c"
        },
        "item": {
          "id": "0596e923-872a-47e6-b74d-5d6e05ed43aa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a26ce4e6-9eef-4107-8072-598667b0a4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bde4f27-8393-4eba-a614-dd660a7584bd",
        "cursor": {
          "ref": "f62dbca4-5bb1-4822-85f1-279c8624b595",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b7371821-cad4-49cf-942c-bae94fcbaf4b"
        },
        "item": {
          "id": "2bde4f27-8393-4eba-a614-dd660a7584bd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5a5dab2c-b089-4e04-a963-2c1b0131997e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be9c70d-8bc3-44e9-8b04-56761f045f68",
        "cursor": {
          "ref": "17e8ba8d-10b4-4917-818f-e7138976895a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c3598e5a-61ab-40ea-888b-937ae7557bb4"
        },
        "item": {
          "id": "4be9c70d-8bc3-44e9-8b04-56761f045f68",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "beed3dc8-dc2b-4394-9d71-214d8c21dedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cac995-5963-4bec-a643-e9c61d763a47",
        "cursor": {
          "ref": "be571cd1-227e-466e-b925-d57ea852a2cc",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3bb5d83d-fde0-4799-84fe-e29cf53caba0"
        },
        "item": {
          "id": "22cac995-5963-4bec-a643-e9c61d763a47",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7947a481-d0ec-4178-bc1d-0aee66ded412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce904b9-779b-4cef-8cac-08b6623a505d",
        "cursor": {
          "ref": "48d99ca5-580e-4033-8e34-fe8bcd01b505",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "42919053-6905-4d6c-b958-f3818b7d175a"
        },
        "item": {
          "id": "6ce904b9-779b-4cef-8cac-08b6623a505d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6df03368-076e-4c75-9ca7-64f7851d5c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c049dfd6-cace-431f-8303-8c1a34122a7a",
        "cursor": {
          "ref": "a5a6fa65-f90f-4ee9-806a-ee299817542c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9aec7c20-685d-4dc0-bfb5-5736d84462e2"
        },
        "item": {
          "id": "c049dfd6-cace-431f-8303-8c1a34122a7a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9ce7089a-913c-4374-b746-7773680e3fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2bc310-f74c-4639-91e8-8898188cb290",
        "cursor": {
          "ref": "f3f5174b-0ab0-4b4b-a7c6-b3c10fe7eb82",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "70342774-08a4-475b-b0f8-f55d29ff4f99"
        },
        "item": {
          "id": "ab2bc310-f74c-4639-91e8-8898188cb290",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "21963bb0-e849-411f-9c7a-22c7d9242a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f55234-671c-4b09-9301-836fa6a8f54e",
        "cursor": {
          "ref": "b628b02f-cca3-4c65-8a2b-96cfed7cdb6e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f0f7e027-d3e7-4e2a-a63e-b9c5ab794c72"
        },
        "item": {
          "id": "37f55234-671c-4b09-9301-836fa6a8f54e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "17c745ab-8e6a-421c-abe8-2564eafc6cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fb0134-e08d-414f-b426-3aeb9672a0aa",
        "cursor": {
          "ref": "ac788baf-8db9-4867-be6a-a9d8af690c4e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9d33e199-25be-4948-8826-8650859f5ba5"
        },
        "item": {
          "id": "34fb0134-e08d-414f-b426-3aeb9672a0aa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "61262838-df8a-4829-96f4-1f3a99af9b27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504c8b2e-7530-41d3-b2dc-0dbe89992f8c",
        "cursor": {
          "ref": "1c6abfef-6a60-43c4-b2d7-d7ab8e42eeb0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "aca5e39b-39f6-422a-996b-50cfb02ce223"
        },
        "item": {
          "id": "504c8b2e-7530-41d3-b2dc-0dbe89992f8c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "13616696-3ca9-41dc-8465-6b4ce259125b",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "df213d65-bc3f-4aa8-a2e4-76e996801af6",
        "cursor": {
          "ref": "d67020b9-58aa-4c64-a1e5-e02bfd5d0165",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "17f95934-f1c5-49ce-b25d-9a47294eca9c"
        },
        "item": {
          "id": "df213d65-bc3f-4aa8-a2e4-76e996801af6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ee1574b7-193c-4bce-be12-75947a541ea6",
          "status": "OK",
          "code": 200,
          "responseTime": 2149,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed44ad9-b6a8-4e1a-ab19-8f8031949349",
        "cursor": {
          "ref": "23e2b66b-c9dc-4b5a-8dff-9807b7ad20f6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "53441c77-0c00-4703-a2ec-66c3cf4dfe48"
        },
        "item": {
          "id": "fed44ad9-b6a8-4e1a-ab19-8f8031949349",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f5282277-7279-4672-8236-d9cb34e108d3",
          "status": "OK",
          "code": 200,
          "responseTime": 2366,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b3389b-f3d8-447a-85df-46047b670867",
        "cursor": {
          "ref": "0a6ead9b-fe0e-439b-9944-959a878d7a79",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0b1e01b3-1296-4bb2-8977-53194b35bcc9"
        },
        "item": {
          "id": "a3b3389b-f3d8-447a-85df-46047b670867",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1c4c9715-bbde-4c7b-9816-9a961045e627",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b3389b-f3d8-447a-85df-46047b670867",
        "cursor": {
          "ref": "0a6ead9b-fe0e-439b-9944-959a878d7a79",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0b1e01b3-1296-4bb2-8977-53194b35bcc9"
        },
        "item": {
          "id": "a3b3389b-f3d8-447a-85df-46047b670867",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1c4c9715-bbde-4c7b-9816-9a961045e627",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2654dd3-1435-484d-8f4f-911e4fd2843d",
        "cursor": {
          "ref": "e59f3ab9-b9f7-4ad1-9a9e-d57ee784adfa",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3e629177-fbc8-422a-94e4-ef504a8213fe"
        },
        "item": {
          "id": "a2654dd3-1435-484d-8f4f-911e4fd2843d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5a35b883-2a81-4c4f-8df7-116b0c2ea4c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a464e1-d0a9-4979-9305-366b16e66dbd",
        "cursor": {
          "ref": "38d7497f-63c7-4093-a5e5-26712d095031",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b40c1168-d341-4709-b421-ff426d14dfa2"
        },
        "item": {
          "id": "b9a464e1-d0a9-4979-9305-366b16e66dbd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d06200b9-95b6-43cd-b17b-3c1b091fec6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}