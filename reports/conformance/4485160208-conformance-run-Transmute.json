{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cfa2cadc-4a58-4b78-8238-cf0bfc84ba81",
        "name": "Clear Cache",
        "item": [
          {
            "id": "58e42ebf-1ed1-4a2f-9597-a4bb42ecc36e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9fa4e05-0c05-4224-8a22-c767e8221cbd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b8563321-744f-480d-9c6d-a69438a084c3"
                }
              }
            ]
          },
          {
            "id": "2aa29539-9924-48f2-923e-26938ff89698",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cdb112b5-4f63-45a6-bf03-fa0e09cde2c3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5209762b-36a3-4846-8c26-90bd4fdfadad"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4885f5ae-9c61-44ff-801f-2d50f08872e0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "25d6b4e6-c00d-420a-bbf9-cd1853de0266",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29d1b018-5e73-4e01-b92c-f01d4f410cc0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d667d392-846e-41ae-9eef-a952ed445cc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab4bf8f4-f4e6-4e70-99b0-36e2349c8a5a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccd2fa87-4b25-4d46-af6e-8a7944b19e63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "faf09b26-e34d-4895-a4bb-79f36e58deff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f63475e-a95d-40db-b98e-2a0b75e66cec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f2304ce-f77a-4716-9d1e-44f0d7bbce13"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e975a80c-1e5b-4a9c-8483-c8400f12ac37",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6a281114-20b1-4e7c-9359-0f58f47102ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c5ef3ec-5391-486d-9b1b-135c25fc2ec2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fb5c943-f547-4770-af77-70dc969a7f30"
            }
          }
        ]
      },
      {
        "id": "ebdf0ea7-76fd-4e1a-9e72-554cb01f88d0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "800c632b-656d-485b-8323-f4ba2f865d2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "216c708d-fa23-4194-a810-123ec0fc1828",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e025139-7d3f-41cc-a724-5208424b36a6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42df745b-f4d1-4774-aa76-3390fc844582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f634fa1-16e0-4c21-91f2-c592b19884e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f55521-4c3a-4f81-8c37-3b3c5bdb4832",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc10f64c-a280-42eb-8fef-4c0ba2f04f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07a99c01-2712-4873-ae46-5ef23b65d8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6270ca89-aa92-439a-90f6-7ff80adfb81b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baecc7c4-7b2f-4647-9378-092b7d404c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "161cef6e-b6ea-4bf8-baae-9c31bbf592b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf74a03c-c78b-4f08-b1cc-fd86bb171e48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bda79f43-f3e1-4aa6-a7a0-aee9cc431ee6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ea80e7-a59b-45ad-b67d-2adea93a5216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6f13a38-b0eb-4f30-b00b-a033ae09d4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0b9e89-18ac-4996-86b1-12afe642f397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111333db-a246-498c-941b-41bcdbb4fdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fb8bb0-8103-40e9-af7a-48bee292d950",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2114893-0c8e-41f1-a6f4-25de7e32038d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcd7bde1-8206-431a-b693-7745d9561878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c229e00-0289-4773-8d5f-0956a397abc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e5125c7c-d8f9-46ff-92b0-228b4fbbf231"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "efc16d37-2438-4ec8-953c-559720bafa46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06cdb1af-999d-4770-9ee2-328c02bc2197",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93351939-d891-4cca-ab30-13de69eda638",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "245ed226-41d4-43c1-8e78-d96c56b00350"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e2d60bf-29ab-4eb5-8952-8f453f440767",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ba223b53-d7a0-4a38-bc00-586f9dc57657"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcd696d7-ae41-4ea5-885d-762f099d6b7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cdec741-4add-4845-9a75-ee74827ac09e"
            }
          }
        ]
      },
      {
        "id": "be8abc91-fb4e-4ee8-a33e-ee2ea94fad66",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fb599932-0ff4-4758-b7dd-5a6acbacd08b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f52fa12d-6d59-4f3d-b535-c78eb0ad2cf3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2ef1036f-7cee-491d-875a-c0340b92d23e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b48919-d56e-4075-94c4-0999c1b41aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fd616d-9016-496b-b009-c06891517334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3e1153-63ee-49c5-b209-83f1136f5d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d5e9c9c-97bb-4ae8-8a05-8b873844d6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e3d826-b6b3-4066-bab6-5c85fa8d43fc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b674b63-ec51-4bd5-9464-6213a1c6c542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c44439-1a4a-41a7-896d-db5fadbf7f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15953e97-2ee0-40d1-adcd-8874cd6c1737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97550dc5-e158-4dff-8d3b-0af194dceccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27696acb-078a-49ff-9e25-bf13fe592e38",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be00b302-830b-4bfc-ac0c-e3d1b28f8578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906be4fb-9718-4cbf-9fe1-ef49a01ea165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b72a0eb-6708-404d-a47c-57b1807b55f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47110d4e-c276-4fb0-a61e-60703c70b3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d503f7-2e98-40e0-8957-90c2bb45716e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f483d1c5-859f-462b-8a32-43419ff413d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34a0809-0cd7-48c1-86e2-5d674051882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa8c347-8fe5-4f63-9d9c-e0d410db5f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83c7c044-138b-4a9b-8cb6-b654295645b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261d416a-2d46-4da9-a60c-c6a5342754e2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99736fd-8075-4a71-8fb7-11bbb73325b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ab0be7-5e83-46f1-8b97-55d1abaae3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13da577f-123b-47e9-9590-8d0b4bb198dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a55bf224-3b47-4379-94be-06011ac7f3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad795c3-1a42-4bc6-9463-9c7d35b5aa4b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b460771-7c89-4c11-a198-5f27e97563cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8e78ea-458d-4359-b294-00078b506684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff05f73-69f6-40e8-9e18-78fcb4c9f94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5763930-6054-46e8-9b07-eeaeff1b86c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694d4d81-ae29-44d5-9043-80308ddda757",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ff2c79-1127-4668-8459-06b246ccec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56e8e5d-6748-4c1c-bb5b-4583c41ed219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a31c442-366c-4a70-bb6b-5b6e20a882a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1db330c-9f8a-46c9-9131-27a5b81e4dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de1cbd0-966e-4d8e-800b-f51364de049d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac79323c-e32f-40d2-b449-35235f29a2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fa9a1d-bf61-4c77-bf7e-09f64997f889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4941cc9-cb79-4881-b1a8-669353ab8398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a3e637c-f9fa-4261-9cd8-664605e2386c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d55e752-7d8a-4ad7-8e4a-14e99e69773c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dfbf04-f676-41e6-945a-1333622319ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ade05c5-c067-4180-8dad-e83229d9aebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128cd249-6b79-49e8-8246-7d11e6794a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e72ec72-76ef-4d9a-abd2-f1746dc4c383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea8c069-3db7-4734-be80-cb0b832983ae",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70193af-72a5-479a-96f7-9fe2b038982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f516f864-4f89-44e5-adb1-47c4d5b0f4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c4100a-bad6-449d-b071-3187d2d266d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a7dbb64-6e14-47fe-9ba9-bd1afd45af0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a91f3df-81ce-46d4-bc71-5031ebeeb7a1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df39540-28f8-4b8f-ab66-e486964794ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80df01c-0e19-4ec0-8ce3-1c3e0215f636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c10232-0052-4edc-a20e-c22c4dd25339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa26890c-de36-458c-95c4-ebec17e4c0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff72e3e-19d0-41cf-8da1-1554cad75cfa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a9ff0f-09c9-41ab-8fe3-cb858e3f71e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696c5a14-1339-4f89-be99-5e9f3f3e8cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35d4372-102e-48e7-a314-e961f128ac7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8504adcc-f23e-414b-b85d-7a7d30db9e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41954be2-44d9-476b-9b19-5eb176b4bfaf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e110c7f4-f635-4406-83eb-42d4d45b1933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b11fb1-eea9-46ed-be41-53953a3b7ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d483b39c-009b-4a91-add5-03d4d3fcc345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2072fd98-984c-4e74-b394-12224b3f4298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db54b56-7a17-45e6-9e03-b2b667808589",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af659ab6-8f83-4d33-b0e4-284e10de56b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b52734-d056-4281-8e87-9dcae3d19c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3e6d71-05f4-4aec-a5b8-740238cc9284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75656cc6-7b50-4284-a2ba-b2fb02ba419c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c598b7-e612-466b-93fe-95991b138a3c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028928d8-154a-423a-89dc-d6118b07de6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6475762-f302-4a65-9869-bfc2330ed1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188fdeed-3715-445a-9be5-1444afbd5633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9997ab16-9d7a-429f-937b-b2091fa3669c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da293695-60d1-483c-83eb-d87a7b13828f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f188bee-408a-4a9a-b36b-5edcc427173e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c50df6f-e4bb-4bbd-86a1-249873141b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a95c73-40b2-47bc-a4fa-c08e7d5ba4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb54ca37-3ced-4028-bb03-d7bec5e410dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcea8ec0-f3ae-42b6-b8d4-ccddaf83186f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bd9d1a-c33c-4fe3-b3b1-a09bd683f4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58589746-85ff-4005-91b4-63785ccb1722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09c29f8-61ec-4abb-a07e-5675484c98f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d1742f7-80d9-4b29-8236-f0b0b5ee4fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0822d6c1-b8c0-4663-9d40-704fe0b7c3de",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125060e2-18fb-40a0-b129-f5bfdcf2347f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7447b1ab-bb60-470e-8d57-52fdadebc780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80814c-1a3c-4dfc-a4ca-a755a7811b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "535e47eb-5093-47d8-ac99-696d8505827a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604862c5-b48f-4e41-9c76-bc5c9a96bdaf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9e02f8-1a23-44a3-a6b7-315df0557758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50291b6b-048f-43c1-8aab-4a30e6d31635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8145fa12-5a41-445b-95b0-d683f29942df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f75908-fc28-48a2-8a45-de8a3f8c084f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157dceb9-967b-457a-bfd4-05d48b0cea17",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63648020-9684-4fcd-9c86-fd9cfa9af453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc3707b-b098-427d-a17f-53ae1c9005f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395facf2-3e1a-499f-9fa3-d8428f486ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98eb86c3-a830-407d-ac09-8e2814efd94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0546d3c-ee53-429e-9179-e0ba9cdf27aa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da021205-2098-4c71-a49d-36d1327401b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71621e7-9395-4ece-80b3-a936578fc861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635b11ad-2481-4d34-b05f-bf0e183c4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d54085-7ed9-47c5-8f43-dafc4b9564bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c10919e-08ca-4691-8735-51d206f658c6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05562aa-cce3-49ec-9c3a-e7e1c24c0bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41b349f-16ca-445b-8125-99ef9357ee9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90da4261-3967-43d2-b95b-57c89f8a5b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "630888db-4941-4a36-9920-3e3c046e2be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8547c0f-c860-48d4-8caf-fc2d5b73a7cd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da66b30-0333-44aa-9f1e-eff1fb93f495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443afe3b-9838-4a17-b350-b45f571bce53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00ca30b-ee2e-4c15-a6fb-2a55415f0b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c612e9f4-49c6-4e4c-a38b-ddb54e0e4829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3680c6c-c9d3-4457-b7eb-8f03ab8f9649",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f716cf90-70a2-4e34-9533-6b5b0d968c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869e7028-5a1b-4064-8ff3-a0ac9744f3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af231e2-665d-4c36-b321-6fb6ebbe2dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "480cf051-61e0-4b58-b645-1eff40c86d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce6f08c-e964-4618-aa1c-2cc76dcc4326",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c11fc14-8e4f-4e32-81da-9859cc66c63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1ef5c6-25d4-4b67-90d5-8922d67f7a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5e8949-1bbc-4e75-8d1e-efc20de29f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80137070-3a69-4de5-9593-594b60587bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5545cab0-91cd-4d59-b2ef-1b3975634844",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edee34d-77f9-4ef5-99ce-d6fc77c10f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74b6065-9091-45c0-ae3b-3fbd8152477e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb7a0fa-1e57-4ac3-9539-a07d2255e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6850a9df-8ce7-4d00-84f1-814a2386fd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef890d7-9c10-4977-8ffc-945fcbbf3218",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d51bfb6-46d2-434e-ba88-14bd7f1faa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a9e151-3205-48ce-add5-fb9acfc923b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445dcb5e-c2c6-4a05-900b-71e8b2a452dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d005aae-3549-49cd-bff4-3e3b143090ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8b86c2-94e5-4b6d-83f9-821dfcd77b51",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06c8aa9-1027-43ef-b449-99fa93af7949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757db6ba-d573-4366-9ea4-7279b9e36512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351da16d-c2da-48dc-a946-782fb264e1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a84b8e6-0e89-4c5b-a04f-ec3bac2e3fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de264b42-6455-4a3a-b626-94652034af34",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dfe411-3ab3-4ef7-89c7-3d0a57598a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0f2397-0cad-42f6-9d40-efe16fe261ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbea0ba5-31a2-46c6-a5a7-68400b2cdae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a39f7fc-50eb-4779-95d6-0fff0f987657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddcfc31-f267-4e17-84c7-bc8536e720cb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998f478a-0107-4950-90d1-80408a849f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1314a106-8bf2-43dc-8dc6-405c75081ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0849f6-e005-4d72-8db5-a76283a93870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfaecc8-ef94-4885-ba9f-2be045934616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b206feee-4e8b-4321-98de-7f944f042f73",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac42ad2-95f3-442f-9f7b-524375884997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0b2a3c-5630-40f8-b6e1-ad4ef0e4ef96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ec36c3-d3bd-48e2-b69b-1e8b24342e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dfef24-2f31-44b2-bb83-9a97df1a05f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b8e5fb-d275-4c27-95c6-693f7c6aba83",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f27059-7095-47ac-b693-2a133297d3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4006b4a5-9138-43a7-9fde-fe88c83c67c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3229af6b-42eb-4e1d-8b2e-59a2ab4731d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b2f5ea-1a10-43ce-bc26-dd8d335d6f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cce5c66-0553-44e6-8700-b6626c823494",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3caeee-becc-47d9-be26-8de2f100287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdb19ba-9773-4db2-b24a-88f527a9068b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c3fc65-e5b6-4638-a4a8-13bfb1ee3a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6ab5c8-2a2c-44cf-af54-2eb14f0a8c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370d196c-7f42-4a10-8361-e285a19e7f0d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad4c4ab-75c7-4c2f-92cf-b0c56733b990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8dd970-fe79-40bf-aa1e-416c247e83ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf9910a-5811-49f6-aa19-f7640cf2be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7642a5f0-568c-4ab6-a2c6-177e653c3427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9bb4fb-9cde-43c3-94b6-b9b0a86c9ca4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bad280-fa03-46b6-ad4c-be985f6bbfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691ebca8-d976-438b-b99c-4be4e29f5b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eb7635-2da4-4b89-a041-60165f146541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "98539a1e-170c-4361-b86f-958b206e7000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de358daa-2d92-4d64-84dd-44cb2e24ef23",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ad994d-7681-4cef-9fd9-7e131b2292f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a779947b-50be-4169-b1c9-7c99270533e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e790e85-daf2-48b0-90d1-92240678032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4dd741-c9ab-4168-96bc-e042f47d9ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b79554c-9027-4c4b-ab96-3bcca8197332",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b07ef3-61da-4996-959d-ffca100e1eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d96ff91-cc96-46de-8aa8-30ccdf47431b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c23dfd1-8a59-45b7-898c-81d684d545cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd08013-535d-4cbf-994c-f3061c19e598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6084962a-c29e-48d8-bac0-1ef50dc9f3ce",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67ba35d-329d-47ee-98e4-fc1389c43b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51367ffd-9ab8-45b6-a562-00229cdf0585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611d5c78-b3ad-4403-a4b7-54b03f3903d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e6e578-4e41-4eac-9f5d-22884db51c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7a0420-8e72-45c2-a6de-2854edcfcb5c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e120484-dd5a-47cb-9879-2e3ea7ba72f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbf34f6-b923-4bb7-8884-bff2e899d38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05f7c11-71a0-44f5-ba70-2a45f9d5791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "590028bf-7b27-4f21-949c-99d98ec60611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ea88a6-a2d8-4687-8ce2-44bf1735ae3e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9f3300-37fb-4147-a646-c8d9feba8d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a53a28-de7a-478e-a7b2-3cb16c26789c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea13a878-01c5-49a3-a2b4-d9503a2e1b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94ac2b4d-d34e-4d89-9037-026333001c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e62b81e-076e-4eea-a676-70ba0f9c27c6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6750c01-d1fc-4404-94ad-48b99ea20d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef9fd78-de53-4af9-8e8b-1dd3a59f31c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9583e370-a85b-49b1-94a5-ee1f996ff2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed49bf0-b052-4018-a5d7-7838da347603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1e3ee5-e503-4a72-bcc8-648e92efeb4d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7a6e18-3bfe-4833-9d4f-b9d3c399989a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3cfc17-76a3-4940-88c1-c08fc45e4fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe63ae76-b388-467c-91fb-4b2376855841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "93eca96e-5343-4ed2-8813-77f4c857b6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cefdc4e-4c6a-4b5c-a656-31fdc61e9526",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b08d81-0b95-4fda-b135-f6d5947c4db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6306e609-7077-47f7-957b-c31138ffcbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622c1ba4-4bde-4934-a3e6-d65f618817ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "93687b14-a932-4d35-ac93-8392c475a873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82732224-57d6-41ef-a581-07da36f10ba7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a2465-ff2c-431b-9307-fd619f907b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68ee4d7-f809-4d06-80ea-e2e126a92ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236e6863-706f-47f2-a56f-27f19f900c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2713ba7-9930-4e5f-a3e6-c34443eb4be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b64e55d-0f16-48fe-bd35-40b9242ca236",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc48af8-347e-4167-9beb-0d4a0386041f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2c3cca-df5e-4dbc-9594-53ff7abf5049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b9c909-3eba-4f05-bee8-1f784803674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "095b9b66-356e-4255-a0ed-4d1c99a443ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44165326-a333-4b8c-b101-9b223900036d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcb8905-eaf0-44c9-b284-31c89bc8457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdf16ab-5ea4-4879-87de-3d79c776122b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0aede9-e5c0-4df4-a4cc-e87a32f3d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "792c4d48-854b-4778-a76c-2b0c5869ed6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d60f29-4889-48e0-bbb4-5e50b2649a8b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532157d4-7822-4ce1-b551-e8553ffa5665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4ffc3c-d0db-4c47-9262-91e280413ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d73ac27-3d42-4f5e-916a-6ef5faffae11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd68411-fb39-453e-8604-03fd232b6836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d0b628-5612-453c-ba8b-fe014970d29a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696fb732-bde6-43f4-8f7b-7090cc243110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0175ec-982c-4234-ab26-1722c46856eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b345c12-9fd0-43f5-bc3f-99e660241c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ff2d92-99b1-48c7-a631-a735c041db4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff87104c-858b-475b-ac9b-a425d533737d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7788426f-41eb-4e5a-a8a2-347cc0ab3f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f344a7de-023e-44b1-b40d-56f4fc9db4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50cef1f-ec41-4dac-b2b4-22835a5cd263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76abbb5e-4bb7-4d78-9aab-cd4720949212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939d6ccb-f479-4c72-a98f-973844a58d42",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94007be9-f551-4bf9-aeb8-bb4bd5d61413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f60f4a-5fe0-45ed-b27b-6ee91f3d51bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aac8947-61cc-4a57-acf2-c62856586cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87ee6fc4-5fa5-4809-8a06-197dd5ed0f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc577f3-38b8-4ac0-93e4-38c22b79f5c7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f306aa8-014e-4c37-af59-75e584ba8a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a5dc64-5afc-4e1a-af8f-df0a9d02d1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc071f7a-120f-4431-8dcc-db5d13fbdb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee73ec2-1bec-4106-9594-70eb373ff685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcd5c86-085c-4573-864c-ae9b7a423695",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365cd0cd-9d90-4ea7-8b72-60b24a19ae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254687ad-97a6-4157-a990-2f54c6c66cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cbdb66-587d-47e3-a2d3-5162cfce161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ab3d71-3e16-42fd-9844-c52f04202267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb9ed3b-1072-4454-a119-aa914bb882da",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc4f742-bbf3-4cd2-b2f4-4adb2600eb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b08ff13-9a16-4af2-91f8-598f435592f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335da8c7-09ec-44ab-99f2-7b7664b51a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0d3e9f-b722-4d74-a80d-b1380d882c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3654ce86-2ad2-4f1c-b17b-2dc000961919",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59917d06-544b-4220-9d07-c4245150ac39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfef9da-667d-4f8f-90ad-3f83db0a7d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210eada0-d4c4-4561-9e0a-3b5c13906bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "645fa5c5-fbac-4cb8-8903-976c4a94d409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a38a169-2ffa-40bc-94b0-907481d9f5dd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96076711-372c-4b32-8e03-f3916571a66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a95782-241f-4936-900c-ba7f43b53c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d7bf91-18e9-4595-a85f-aba2d3cd9fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0b675a-96cf-4d08-83e2-80bb69d44151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd66dc8-ef95-48f2-9aec-f477e1527317",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56f2025-7349-4e8a-997b-b126e5d8926d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87158561-bc27-4d66-978a-82bec0e894a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3435541a-110e-40ef-af12-e882f95ccc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "226578d3-64b1-4497-8300-527de23d9bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9affe76-bfe1-4c5d-859e-0c5032dda4cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cab3111-9002-4e25-bfd4-28ba69d71196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586b38fc-36be-4025-a485-459261fce296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911d3fc1-27f6-4df4-8afe-b0641ca71c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50169187-15d9-4fb4-96c4-40bd9f5bceda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e150e7c-63f5-4eb5-a31a-618118ec695d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfc554e-0223-4e62-b7d8-6bdf16654b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43179793-9db6-454b-a7d6-566ff60a649c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83440ded-abbc-4575-9e58-2c8b1ff81422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54c86ba1-1202-43e7-bd48-8b9b5b8e7c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c9a52d-2372-4dfe-afac-7dca333f4bf1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e001ce-0cb8-469b-bd7a-d99ea97b78f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6a7f66-e923-4889-b338-52bb827bcfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab746be-b546-4aa1-bcbf-01182ad6e05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "169dad88-a6ea-4580-9c99-e7ddcda96524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e76b02f-a759-489f-8bcc-39dcbf331785",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce3f64b-a7c0-4221-a086-ec243f50caa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bf976d-c028-4af0-bd8d-7fa8b8e03942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67353e8f-3f35-48da-b3a2-68e11c72a26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f01796-e619-4184-a1d4-daa53a70a042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2559560-f006-46fc-9054-57982588643a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ceacc9-158f-4d04-9323-1026df1a10f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be3e6d0-45f1-428e-82a8-22ca26ae6f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d49b84-c3fc-4076-9f45-712af9b7d79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d685d7b-32af-4c5b-88be-35ef886d1a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ee0de1-4a45-4b13-90fe-a7748d7c3677",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8545bdb0-b3a1-4198-9c83-29f317f14515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fb615b-ac90-4bb8-8560-ac06fa324747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a593704-c29b-498c-8c91-5a4257aa7f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "97cc9949-bf03-47c8-89a2-0908de7889f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed03d87-574c-41be-94ae-b678f07b1cbe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5245bc08-d908-4b87-8403-800cc59dc1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f31a36e-287c-4010-b2a6-f44dbdb18b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c5452a-d05e-4a0e-b678-88572da26239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfe1560-83fa-4723-9b56-22f2d807da8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79594bbf-4342-43fc-9fc2-14ba54f04847",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4844fb7-a816-41ca-bbea-b3608535541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6671da4-c066-47c9-a2f0-f62a8a6c4dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddbcf7d-465b-45fc-b523-04ff6b412147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "888effbf-670a-4204-84e0-eb42483e155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d131f62-a719-4f44-a394-e5b17c3cab12",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3d287f-e12a-42e6-8baa-e430ba1fec15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df3c142-41f1-45a1-aff5-cea60dfbec22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0df0546-6fc2-4114-92c2-b5ca4a6bc2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c1db47-505c-4c02-8bae-6a494b376f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eac1ea-fcc8-441a-8ff4-d8c20ba95569",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d460b6-8e44-4980-ab4f-7317f99af8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0455ff2a-397f-4b6b-9808-a8e7aaae8081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169177e6-7ac6-44ca-ae2b-cf0654583805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7470c20-c3ee-4c02-8d57-e99caf26f1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38566d83-eb44-48c1-b1d5-b8340b847569",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b6ea36-8193-4399-a4b4-e8eda3e6c056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f5ae5e-8ab1-481d-badf-dc6c389df1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807a0427-edaf-4c46-add1-821f9f67adcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0898c2a7-cce9-4ba1-8e74-401a8a9a093f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8f9b6d-6597-4b37-b69e-8a58284cbc93",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ebb4c7-656a-4072-b422-8d2504e2aea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c83ab85-065b-45c8-81ba-2cd5b01b48f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2dc989-fa46-4c1d-9c37-5d5ae5be2239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53424388-1eb8-4e6d-8ce9-b496b150bc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1e34ad-ed5c-405d-9c69-3308283ab322",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28261c1-f0e2-47da-acb6-da63d2c68324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059f41aa-78b5-4429-a676-c34b3e017b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b2e29f-c7db-4d32-9dc8-87fd1b27cc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56d7593-094a-4c3e-94e4-c4a4b56f3617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2e4887-b9e2-4f57-9aaa-0f374f0a42f9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e79c482-e1bd-4ee2-a8c5-78c936879c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395fb8b9-99d8-44c8-968d-f46a783037e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0066961-8911-4b0c-8c0b-e58f1f10be74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "724d8781-4c15-4764-99a6-f3c9645a5030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed89ea2-82e0-470d-a3d3-2649ac2acb61",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fef71f-1b24-4969-b3c4-30cbf9e73bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d880790-61ce-4338-82a0-d7b77c65520c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b448e981-301d-43da-ac97-3f866a87ae96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26e7fe8-97c0-4170-a567-4eb3667947f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147145fe-3c9e-4322-952a-8862938c8e8b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818da731-92f0-4250-a7ec-f28ba024d274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501a4786-8afc-4680-bbec-e2f61847f860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f58cf0-d8b9-453c-a735-6544dec0d65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b4def8-fd4f-4878-8f32-ec671c6356ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa584f6-4f81-4801-87ce-e08a482f70a1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e7cd26-21f8-4717-8c12-fc867e25c388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcc47b5-0e9e-4d27-a8b6-c84dca7edfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24169cd2-d05b-411c-b6eb-4f8f600f6379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0bdf7f-41c3-43dd-b757-e24e6b97b5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7adce4a-6d6f-426c-815f-5fcb661bc727",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9cb013-780f-45f6-aa1c-622fb1ffb0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721f28f1-f4a8-4d0a-821e-d62a553e7249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2949dad-e6d1-4e94-8cb8-b623db7c68a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1650b201-b1c5-4a80-ba4e-bcb48c12e059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a3ae97-f4b8-460c-aa8a-fd9445eda450",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a319901-85fd-4b39-8416-aca5c4a4f41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d18353-5048-4dc4-b88a-b6e762707e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13201cf2-1691-4422-9155-2ed8703a5d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d4d1b4-d925-4d55-8c4b-fbf6af3a4435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee8bbca-80c6-4c16-a9c7-417f506415e1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17526c61-9f63-4a6d-90b1-cb41ed51a43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae1ca2d-cd58-424f-948e-7045ab94d647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b32c1c9-21f0-4488-b9b3-a8a2da62644e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9692151d-3dba-4555-8550-5a7438081cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269820e8-9648-479c-bacd-089872c65d00",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da62b36-7ddb-4807-bbb4-07147bc3b6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3476b3b-a877-42e5-8953-7688a8aa56a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360572cd-2dd8-4f6a-95c0-32df1c161353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13448a87-d3b2-4be6-afaf-1ad47bcd52d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4b8cbc-f424-4805-8e0c-8f5200ac9ce6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc24b29-1b33-404b-b4e6-97d7cf83f835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d669a188-98a9-4889-8dbd-62132bc8ac01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2393c6-9fba-4c78-898c-1938d667072f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b39f260-9f10-4748-b530-c350013015cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ff5ee7-778a-42cd-99d4-397d1a7e0d65",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a84bf3-c7bb-4f46-ac1f-43a50cc77bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15041c77-ee40-4621-88b4-1ad63d496e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfaeed8-4a58-4b8b-bab0-1cad581d3d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61da9026-c593-49b4-b575-d7e0b5129486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b925ce10-508e-475e-8633-930be4b0e7ec",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30769684-5711-4a29-ad2c-9fa6f7811dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13861dc7-5bac-4067-866a-9b6e85a3ee8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cdce69-93d1-4299-b945-8e9012150a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fda8b910-f607-43f7-a314-b11fe7037a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f0488e-f919-4392-a789-0cc3fe584c54",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213aa531-0771-41ef-a0c0-83dc30091390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997200a4-c862-45c5-9d25-5e40b451b048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c73e2d-472d-4ecb-8a1e-c5d9a348c920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff25782e-2aa1-4957-a000-c87cd6cd9024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a350ae96-53e9-49a1-bcdb-2109cfd49f92",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c07d87-0b47-4fbe-ba14-54c968b86b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a959cdd0-f82c-45f7-a8e7-f9bc080292fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062c472e-8471-4cba-8404-209f8e9ddfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03acde98-bb48-4143-9aad-151a43b75afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df06b235-6ed4-41a8-8c5e-221ff8d090b2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6eb5c1-ea08-43bf-a60a-00d93df68879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a3b110-1b21-4769-a718-57055c2b80a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157bfeb0-88af-4d6a-a7ff-4dcb407ce3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "760617d1-745c-44ac-beb1-25422a03222c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213204d5-d5fe-4398-a482-bb5121a415c6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17541aa-1061-4eb1-a737-de81aef22688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88569bb6-2540-4a1c-a911-f11b89269330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8475bc07-7c2e-49b9-918e-2eaf8e1727a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4082a5-788f-4386-b272-9c0f33b2bfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289317f3-0ccc-4d28-b494-cb11b5dab287",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2106cb49-d1f7-41e0-9cf7-4ae322f4f38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce938d6-1fd6-4231-84b2-0a1a8076fc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9233cbc-7d19-481e-bbcd-7041fd00119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c313487-5dc0-4017-874b-8ac0e7825139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7e2c16-15a9-4029-8831-40d9f1f7dca2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88381ad-2bad-4cfc-b0fd-3331210b64cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1c7e91-a182-4d21-997c-4a2e0b8bb3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c709c5-a982-4a85-ba62-21e78ec2d7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51d79a9b-04f6-40fe-9c7f-43766173d450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26139dc-3b17-4cd1-8459-7a48b92d58b8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247db957-b29f-4069-b4eb-4d8935dfeffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e89520-9943-4f08-927d-971fab362954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8734fc30-2330-4bab-afb6-06fa55b3f7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d380f8c-174c-4236-9caa-c083fdb5daa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23e1745-d7ab-4e9f-8a2d-c4f078c52723",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa977f95-5c2a-443b-9216-7a6c228db281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05439c8e-faf9-4ac4-8fc3-d2c234c52d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca356edf-3b36-4bb5-8e83-72de40a8a62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12d14796-9929-4b79-9ea9-9b255c0a5dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f72158e-bdd3-4be7-b72e-064d9328b250",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b23ac5-0904-474a-bf04-a8dd933807a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932d1490-6ea5-4dd6-a467-a53750d45220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f84beec-1dbc-41d2-a077-30fb41640c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "926022b1-10ac-4f31-83c0-59274e4d3d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0c3afb-f6dd-44db-b50d-04d92148f16b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf74619-5fba-41ec-a0e8-84214d3eea49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544a9115-f71b-4e88-82e4-91c007cda11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abfc00e-6f96-4e70-b9fa-96fe8057065e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b4ba0b-7a00-40c7-84f4-943d01b09887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b95478-779c-4fb6-9c7b-af095df8fbb1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df30688d-9461-45c0-9501-c6302cc56fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffa04d4-bee0-4924-a3e4-99e0a29b7755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca16bb0-519e-43ef-91c1-b0eddf18a460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e93ff684-50cb-4ba9-b2fc-adcc3bc355dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b015018-b68a-4b8a-9d1a-3f32d3299411",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc78ea68-94bf-49b1-861d-ec39914d7a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "32550d9e-8c29-48f3-a3d6-683ddf65b26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69716b94-4e8f-44a4-b90d-baa67cee3b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e30520ba-01c8-4f96-92bb-c152f73ff0df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c205c6d2-5321-45e9-80e5-d4790e438678",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a68f764-c6d5-4c75-b48c-5cf41f0628f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a2b148-b2a0-4421-a173-8d73780103a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "623ea287-7186-4986-9889-15db9f420c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587e95cb-b551-4b63-978a-ae171c2edfad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94d78561-f60e-49a6-8062-9ef84f2783ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c4c637-321c-4023-bfc7-5514bb89f6c5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446b771d-0aa3-40b3-9b9b-5723af963b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eeeb54e2-f79a-47a7-b9af-e458db109dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a979f054-317f-430b-b2ed-1f677b90dde9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d29d1de1-9c6c-4156-b5f2-05cb5cf43185"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c29479cd-734e-4460-853c-54957aa9e850",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d0e0a20-9b00-44b7-832f-ce39bb406eeb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "408579a4-d319-450e-8176-dc091620fd64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54fbef4b-004a-4947-acaa-bd15ff81b789"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a68cd6b-2e40-4afc-935d-b9ab61090761",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e34632a-3042-40da-803b-1753dff21471"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4cdc31bd-bde3-473d-8750-f0af6bbe6273",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8159c9cd-3d3a-4b8b-b722-41b3e55d5f3a"
                }
              }
            ]
          },
          {
            "id": "b97c2817-d96e-4f75-beb8-98bf4c19b2fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c237d28-0f5d-4c79-af6a-a3aec2ee2c83",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7f7775b-8dca-4c88-b755-0e44aa1ddc65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f935e6f-2a97-45fa-9b90-b8cbdb4c3c18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa2f88d8-a3f3-410d-acc7-86a89e85e052",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "579a17e2-e5d1-4692-9688-3c3387ddbecf"
                    }
                  }
                ]
              },
              {
                "id": "0af9320a-f9cb-4d33-a6dd-68cf98e4821e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31e0280b-06c1-423f-959a-8fd94191819b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bda4bbe-8516-4e8a-a686-2aaa3b368205"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3ee74a5-df61-4c2e-a580-99d227edd1ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "664c9ad6-d4f2-4b83-8313-67e02ca18fdb"
                    }
                  }
                ]
              },
              {
                "id": "43f789e8-6205-4b68-9444-cc32ff51a465",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f9309e4-a3d9-4c9d-9942-b65b8bcdda56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78564705-3bf0-4419-8971-6efef35a4b7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "552b29fc-7e57-47aa-861c-237986ea8575",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50e7105d-8d38-4e14-8f31-631d5d0390c4"
                    }
                  }
                ]
              },
              {
                "id": "824e56c0-c5de-4889-b469-87e694c7bea8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26e6ce47-12fe-484b-b94e-9a52ae45361c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25285012-6831-4ac7-bb5b-0cefabd5720c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7802207d-9c95-45ef-82be-8400e93aaedd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d59ab69-3e6e-41f4-aa3c-72ecd082ebe0"
                    }
                  }
                ]
              },
              {
                "id": "8f7709a8-c1be-44c5-a0cc-1c77330ef62a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b9cbbbc-cc9d-4c4a-b40e-2a1981e1e696",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1115ff2-9941-4354-ae61-a5044376be13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d50c6b30-2e01-4aff-9bbb-61da1f399ee5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "97eff0da-0118-45fa-81db-5e8bafa73e28"
                    }
                  }
                ]
              },
              {
                "id": "c5fc75b8-05ba-4b04-9f5e-bacff33eb899",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f988ba0-08a2-4122-9654-7a0ba0d01f4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75140821-a880-462f-a15c-e393b798ff95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9baec6fb-4add-4473-ac49-758038e59ba2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "70760fe0-45e1-4e47-9ecf-016b3c2261a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6034e38-f6af-4b3c-b1fe-8fea8564a278",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a85a2ae6-f55c-4bb8-b304-52ff090fc886"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62de1935-2ab6-4974-bf8c-3a6393ca5725",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14ac4fb7-5f37-4a5a-950a-05c6c13091f1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56cf7060-28c2-45dc-b331-312333029373",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d2a95d12-b835-42ff-babf-71e47603e026"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1825d4bf-ac80-4604-ad55-aafa268795f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c391edc5-60d2-4297-9671-5eba6ef53c31"
            }
          }
        ]
      },
      {
        "id": "957f900a-2aef-447d-840f-0f38410882cd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "776ab74b-22d3-4485-99bf-e53c6100d207",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e482d6c3-00c6-4453-9d3d-04ba13f4bd9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0a541065-c700-446e-80d8-02d9f8dbbd0c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549e1939-49e5-4f64-8473-a97efc2d7948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc76636-f850-4b12-8dc3-cde5aee4ece8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6accde0-6204-45ed-b89e-d7e20e0f2d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0f20e3-5637-425f-a48d-7566efa3c82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16af4446-99f4-4734-a895-1a0c76b52aea",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be791952-2baf-4c51-9ada-9f044807b019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506d762d-34e9-4ff8-9f67-3dfa9dc1374b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21be319-7dc1-41dc-9964-735d6d70b27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3954b9a4-1797-44bd-88a5-64a9fa4496c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baabdcaf-f708-46a4-bbc6-924d60dc99b7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaba9b57-a071-4911-b2b8-5667233c1bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf7f1d0-eb81-42f7-925a-1f7a074a6074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb2dc0e-bb3a-4d49-b8bc-b114ecb85dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "143be49f-1b73-43b9-b0d8-3229562a9467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ede198a-6454-4bc8-b19b-999d355473e8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49315df0-e4e2-4f37-b339-8d396dbc6b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cd0023-9b1c-40f2-98f5-4c7438bd6da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886a2285-bc14-49cd-a497-50231771cc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea87aba-dfba-4e4f-b2a1-942aec8e2a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ced6f8-7888-4222-8f9d-86976a41d60c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0719d0-d996-4737-bc0d-6ff3c58995fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae13fec-3cc2-458b-9c6f-9ac46b6510ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314aa4e0-905c-48fd-89b8-fc7b71bb8645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57a0ff77-d08d-43aa-a9a2-2807c341c9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095cf6f3-a8c2-4e94-8909-70effaf65637",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e440f8-9a8b-46ba-8991-17c598d357b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970ff5aa-5d86-4d70-b62f-bb9f2a0934e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2108b22-d161-47aa-8b9b-f3dea5602121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65bcf0db-88ef-4718-b06b-b7ffa000a27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb7ab74-8367-4e03-9450-86900502224c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e24e17-0338-4058-8f86-95d27152ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c211a00-60ec-410e-906e-0c7a517c183f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9198c5e-583c-4a7f-819b-b080266a8476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cc1d8d-3dcb-48f4-9ecb-c548a8f63215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f2373a-b5b5-4da4-8a11-0fc7203b6917",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a3ea48-d66d-48b1-bad2-a458cdb74e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d5f2fb-6c37-496b-809b-afebba8deddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128de9de-c76e-4a81-a6c1-ccd43f25aff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c664c2-ff65-4434-a8e3-1999a031af75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b07ab0-6ac3-4eac-b712-1a79de7b72b0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665b983a-3585-4da9-81fe-07f4cde9738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b7efb6-eb43-4781-84d9-d2b7ca44f9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5a6903-b187-462a-81d8-869a9df2c517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db522d47-9fd4-49e0-94bc-d386a8ae0e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6715cfb6-00c9-4d25-8c4d-dc8ed1f117cf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f9afa3-72d9-464c-b518-816d53491851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe12689b-8158-46c7-89db-a1e5fe1e275c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1973a2f0-28fc-4e99-a198-8210095c6bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae23e13c-acdc-4c08-9614-5f501790ec0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641c0393-3b28-4e8c-834b-dd73eaf51b92",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0322ab-0660-4c49-af76-9848a4008984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72edf31-56aa-422b-b0f5-0c3607b60780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25fe24d-852a-4447-b4e9-3a140cb2b8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b004ae4e-fda9-472a-aede-bba077c21b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2efbe9-2288-4ff6-96e8-0a437cf5e3e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6cc6e1-f40f-4d5d-94cc-5ed38184cf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2e42fa-23d3-494c-ada8-4248e2f42ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadd7e0f-719a-484a-9d1f-9120a7eaf669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7f4431-c1d0-4ac1-aba5-5aaa1f30eff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a12ffb-bc13-414a-9d4c-3a169571e6ec",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba5fc6-6077-4c04-ba8e-cac2d2357b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a948754-6a76-4996-b20c-49e6deb173b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acec1057-e260-4dc7-9272-1a10721a4919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f69f1b-258d-4e1b-9787-f574c54f5351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc2b64d-b050-410c-a8cc-0b135964e7f5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452163e2-4654-46d9-a93f-0cb374586cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85296dac-0b65-4b85-a877-ef396f5e6c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56890d7e-6bc4-4b5e-a633-dfc53e623585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "448b0665-ef4a-4eea-96f4-11b49891c644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bce4bbe-8b97-443d-aea3-0b4c16f73356",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e68c26-5b0e-495b-a9dc-302c2b3debed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24242607-8926-4509-993c-5fc5a8a8d77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4acb8b9-49d4-47a9-a78a-6645cdf053ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "db5399f5-59ae-4e17-8229-1e4fe41aaf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178e33af-386e-4803-903e-34c33524633e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2802ed14-2026-4174-befc-ba7ee3765fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff35f6f2-82dc-48ae-a741-2f29a4a8666f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f3b207-3265-4866-84bd-febc3cb92928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a78ad84-61be-4dac-806d-1269f9a8da9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89100152-6cb0-4dc0-8824-4fafab25306d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad65d909-e001-482e-8ca7-dad90bac2369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ec20f8-853d-4e60-a9bd-74ee4cfcdbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f004cc71-e186-4b20-9795-669664595538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba86d2b0-5e1c-4ec9-bfee-428801aeccc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a543495e-34e9-4060-acb3-9ea06aed7e31",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d645710e-5226-4539-9f39-89b26b73e130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11000e7d-93e4-4472-b02d-22e15c2fbf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5013248b-7b9e-4a13-8805-b58f65f06a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c8f4d3-463f-47d8-80b7-ec4473897cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d682fc-8fcb-4f01-8e8a-3f250f38e894",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30011768-eac0-49bb-89b3-fdbb8f7f3aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6197ccee-a63b-447f-89d2-c5ec65828517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1455c4-093b-455a-85f0-2fb1b24e502b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ad016a-745f-4936-95ef-bda756422c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf0b66-a0ee-4c75-bc06-a87ad97682ff",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16914cdc-0a98-45c5-a812-0d87d45c7845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bda515d-5d7b-4a18-92a3-0dcf04caea86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa39ad1-a5a3-4121-b8c1-1363045d6aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c5e221-32bf-4e5d-87e1-80fbb39a6df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c921c0-2e98-407d-9b42-371f4d7497e4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3320690a-23c7-46ef-b762-a593f2c66920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff2ac01-901b-4aab-b4e7-f062466f2d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb49fdf-24de-4ec0-9005-8eedd7bd4edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "571a49a6-66ab-4fc9-81c2-7d7cf7dfafb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f58737b-dc22-4065-94e7-a2597ceca952",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d281fdf-3b4c-484c-bb5b-b3464178d0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7b31fc-b03c-44b5-bdd5-88b9100c783f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f01cc62-d9ee-4739-a281-8eb3ca874607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f922e4-b44c-4a2b-824c-030888759c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09af8deb-7694-4d23-ae25-b0c290e3f825",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11988092-a8ec-4697-9c05-64c69fefbdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3aaefc-93a2-4c70-b96c-64b2886faa0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f825cfd0-927f-425b-8d4f-4d93e62d9c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7fb7e8-b2e3-47de-818b-a760a85c760f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d99171-60eb-47f3-80a6-0f9e9871c8b0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15764ea9-96df-45fb-9d46-845f60856fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4486f9f0-144f-4483-bf70-a52909591bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5007cc7f-d909-4b23-be9b-5839e0cef2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f79aee6-4a55-4cb7-866f-c8abbfee528f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7727d4-312e-4f23-b3bc-9d029efc2209",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86c20b7-40eb-465a-97ac-59baf61baf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38c9fb2-a89b-4045-b162-f803ef93026a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ef20da-cb1a-4149-b7f5-0f70ec1ff454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ffa970-1d55-42f8-be4c-be576c48bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddf4b15-844a-4dac-9780-4a628b78c032",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1097aae-7e6a-4d01-a573-c21b2e480138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb65a7b5-f7cd-438a-a418-971adaa0944a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fa6578-1a5e-447a-a9a2-cbbf7c9e420e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7017b7-e9ad-4409-a83c-62f0b036227c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d4f38c-dae3-492f-a2ef-0d892e221195",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c41fba-a756-4109-a168-563f35ff07a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e550ee22-024f-489f-8635-ed731a252d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca5d7e7-7ce1-4afa-b601-f6177fcfe16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe977b44-7648-4d89-81be-57909a2a10d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac01f2e6-09e7-4293-91e0-c14dab2784e1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c0d88f-2a3e-4b0a-b1c7-c9aeeb278f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e39a55-c244-4c5e-bd3d-b8ab71a107ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba3eb6c-b4de-4e2e-b5d9-41a05434e046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "783981c3-849b-4f85-b87d-e0bbd91fc983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edf5891-03e2-40e4-a910-5e2ee385d4a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d1162c-c22a-4d25-99bd-ecb3f54eb070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8b2ad6-df75-43b0-bfc8-16050af32472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1cf2a7-0241-4800-be8e-e8165e9b6a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b8e1ae-d6d1-442d-9aa2-4a6c458c79d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02787515-618e-48a6-8925-a7cf2c30638a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f06374-7f78-4b70-a564-e58573ea250b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e27cfa9-b439-407f-b72d-b8e89066640a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4291bd-8698-442a-9152-2839f18ac927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38091d79-328e-4169-ac0c-2cf943c64711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c67d22c-81c9-44a1-b46b-22c1f124791f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79aeb73-26a7-411d-a2eb-476a25dfdc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e23ed2-2962-48a9-b179-dc166140549c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca95671-a74c-4391-9fbe-a2e09e82f8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc409021-35ea-45ae-a4e3-1d8640d08316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90fd9ff-e098-4829-8935-7df40e420fa0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95af0e16-a744-4269-9f52-3b2781ea49b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93988da-f717-4172-beba-81a32713bb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b62682-8d77-463b-859f-ae67e89a10c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae52a97f-39d3-493e-93da-0aa390be4235"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6567ee45-a787-48fa-a8bb-0058e30dd602",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c4803d1-0eea-4207-9ee6-28bae061f6fa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfd3f6c-fb37-4d30-9f12-dcc80a2d4953",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f660a651-2ed3-46ac-b5bb-e8b7eb26661b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccbcde8-a9ce-429a-9354-17254824b5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e2523fb-bada-4304-a90c-00b855e7302d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd6d4d1-e3da-49cc-bce8-6eae90036871",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6eeab0-ba7d-496f-8792-eef678bf92fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4ef639-8901-4f08-933d-588f221d3342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c679d33e-924e-4da8-81ea-cb8aaa532a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9cc9f1a-2f32-4917-ad55-774c2c0d5288"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c528d010-95ab-4c9b-80b5-87e3cdfc451d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f5214b8-2538-46b1-bdf4-d4a631b58407"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbb161f3-2521-4ac7-a2fe-13538ccb0a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c60f70c7-e222-43af-8ae2-5217d1527590"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3269fa27-823d-48bc-ab6d-1f1dad392a64",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1a5abe9-79eb-430c-876c-5da510563479"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c27f252-dd3a-47bb-92ea-aed653f02bd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "871ec7d1-37f6-49d1-a0e4-1c65896d5405"
            }
          }
        ]
      },
      {
        "id": "952dfe1f-9faa-433f-bc68-09272800fca2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c4195822-9491-4b25-944c-6b6323a73484",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a1821e8-91f0-4a08-8802-57502dbf62ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3f46b56-9210-44c3-bd4b-a2b5c0c5c27d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e26dd0-d0fd-4a92-916d-7fe6c11576cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1c0b50-035e-4bcc-9f1e-4737d9039003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e5be82-2cee-4c2e-926b-fda9a83dd76f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1233f9b-321f-4fdc-b082-7f17e314c92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c1106a-2c22-42b2-8fed-252be3f92197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e13bc4-d336-4439-96fb-8bf38efe3b1a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a217f4cc-a99b-45fa-bdc0-5ee17d6af178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecbe1bd-9675-45be-802a-6a96619b8ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bd731c-434e-41e5-820a-39f22173867f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad33774-3c3e-4ed4-861a-ec9828734334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029ca115-072b-4970-a63b-ef8333777c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92081a85-4aec-4a28-9a5a-9067583e3e5c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d037547a-b592-4076-acff-71a0b95873b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca3bcc0-79df-4c12-9d50-6455b8d5c2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405e5e48-fa7b-4e32-8699-0c4210c85c35",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796a0519-4e2a-4600-a5a7-93d891464a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e695414-cd6e-4c55-a176-31dc64b6526d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0707f5d0-c1aa-4587-a758-e0fb1ba800e7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1269429-35dd-4852-b34f-2e375bdcedcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976a74a9-a6ff-4e6f-a423-51c46ea88cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb483c35-c8ee-4163-9a21-5564fcb2bc90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ee8439-6eed-4c30-a8b8-a2e3715fceeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e7677b-7320-442a-badc-1c527fdb1980",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e305dac9-9d67-4d7d-85ac-29f20986bf87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a72ba6-556f-4061-beca-c7fb2218dee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41026e7-aae6-4798-988a-002167871a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7d15f6-f885-4c55-a318-e4aa2503eb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a227bdc-505a-4ba5-8209-c3c8286f58ca",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1042af3f-e30c-4518-b376-eee3b411283d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34c3d7bc-7b31-4792-af14-33cd004a04c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5fcc64-5ec1-4092-b980-339655757bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9515df4-063d-4a5c-9bec-58320faf0dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040c3811-7519-47d9-9872-1d27d682742f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae4a67c-0a2f-4fd4-8529-130c7962e91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4cbfc45-8305-4d79-9a46-946fa37b3df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa72d1e1-8592-4435-bfd9-ce1c79922aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef34ad86-c281-434c-b26b-e46fdffea625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b86ccb-e528-44b3-8526-c777e9bf7441",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1927d7a-f409-4524-97a9-361b1ccd295f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dac81af-1ee0-4d7c-8a1c-fd897a622f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c186abd-64b7-47d3-a47b-cf131ff35290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c2312b-f8d5-463b-8457-254c5dcf9bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16c3506-6a5a-4268-8ed6-13b8e7c7e68b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f648032c-fa8e-493a-a81b-9ecf1f8dc70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d935c0-e76d-420d-8fa6-3661da10ee1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96db812e-6296-4940-b5c6-a95109a84134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760ed289-b7ef-4a1d-a2e3-23a176f2e9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0114a231-043e-4969-8cb0-a159159ed720",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5632de4c-0371-40e9-902f-5af213294388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4257588-de5b-4a4d-b3a8-9f0c867c4cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58d5d74-e5d5-417a-900f-e2f4cbc222ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a26c6f8-9f98-42d3-8131-a6ffa0452d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8c0daf-0846-4367-9c89-b6d4bbea480b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802e3867-911b-4add-bf02-e55c10de417f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03b7bab-31a5-4fad-a6b7-21e4e87f9caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cd1432-cc66-4a03-ae95-833f99ce905d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9591a31-9f60-4733-b865-1a68f5df5e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b114c9-fd25-4769-a292-d5f4a2565a88",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5c6f78-1b70-4926-ac5d-a71aa04adf66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3ca076-a2a6-490a-a575-bab0cd20c579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fda3848-fafd-41f2-aafa-4471d657c7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e894d69-f526-489f-99e6-e83842b81e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade034d2-cbf7-401d-ac5d-fb480415ab04",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13f4704-c670-4a4c-b6a9-515a435b1550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebace4e9-3798-44b2-a40f-d126008fd5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49c16dc-7d28-49f3-8030-e67b923c3e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae47e24e-eeee-46e8-ae47-646d11c3e8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a21d6e-9cd3-443f-bffb-b50fd8784372",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a297198-47e8-4347-a025-6d407cb682b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c718362-0a7a-4587-8a3c-6c7c49945f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0ff214-c1be-43ea-b94e-23ea5f238bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f80c933-aac9-476c-89af-390091d92d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dce659-879f-4096-97d1-6b8fdde57524",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8a1779-6ce0-4b2d-8a93-e74a0215fd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe51152-570f-435c-908a-35e647203592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3669f522-d140-4300-a94a-a96d9b736b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303d5098-5ad2-4517-a6a3-f222f838b8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d38b507-ff2c-49d2-9489-c34a1983a973",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a642cadc-d34d-4a70-9545-5da53710010d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dc8b67-6750-4cf0-b92e-0f1c223e9590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4babbe-9757-4e9a-8788-d93df60fef6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b5b804-51c2-4357-a583-f06097624a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6a8e15-e64f-447d-990d-64be939ae48f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434d1878-e9a6-4e17-b3f0-1e5ef1d7cc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd370826-5de8-40ad-8256-a3c10abe9952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ff7a1d-7414-446f-acb8-eacb1e25a7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb812e9-c337-4550-a526-f4ec600fdb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa09fe18-8972-40d9-bf6c-e72beec731da",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba326a9e-a07c-425d-89e0-f196d1d355bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058dace8-0b94-434b-a43b-f736ad0ba575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9e2a95-40f4-4237-864a-dd58c01d1ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d37179b-b84e-45ec-a952-49e79b1bdcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8174393-8e55-438f-9d14-50253034cca9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58864e7-6a3d-48a4-a60e-40f266f8b516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402fbd73-230b-4631-9352-bf2cbecf616a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb456b8-7c6a-4c97-a13a-5ab49600e0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4924c4f6-77f0-4cd5-a63f-16a6ec83f004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c55f6b1-bc01-4dbc-adc7-4dec5800275d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0331aca5-5c44-409d-88d1-1a8b6f291b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e206a0f-0494-41c0-a303-5f3ed5ae092c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb129c0-ec53-496e-9e4e-a438c4fc32d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2e79fe-1c6c-44c5-abeb-bc313c4bc8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1e2076-9b64-4106-acf3-c03e800ba07b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1b898a-d461-4181-b658-421ea9ce167e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "183a2bff-794c-4fcd-8f81-2744b15d657a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86b65e1-6139-4893-a94e-2e1e21ea40bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f0ad7d-79ec-499c-af2c-146108d1d64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccbbf02-b197-4599-bd82-d441c3c9c064",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492cb88d-7beb-4b8f-88f6-97cab25d4996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2270950-a3e9-43ec-b68b-7435ee672dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd79bf1-7259-4ded-b875-c07844b223ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790e41cd-bc7a-4425-90b5-93698fc697d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadc80d7-3f5d-48b5-8562-a12a0821a426",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8d3192-4395-4f27-9342-62447a2f2109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e56b6f-2d70-41a4-967c-7897dbd03c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de335b5d-f57c-45f8-8662-4c428592a947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b383aee6-4697-4b4c-83a0-efafe54de5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02638be-fa58-4f68-808a-3c6847705942",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9379d721-5a9c-4a9c-99e3-b805b4f4a98d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d65d0a9-4ddd-406c-8bf9-3624d8192d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a5f162-3b4e-4fb0-b58a-a24e438c2130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a553e0-bac1-4f04-a1ed-6b5b14b22bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bec5fa-c83f-417b-87e6-33133d387911",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fb12c1-c976-4293-9d75-7ff845bd500e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdb0fe2-a770-499c-a8ad-dbe66e8c248c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ba2c89-c02e-49c2-8356-8549fb35e355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9230028b-ee11-4e2d-86be-7390f7f9f177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7e1ca1-5464-4849-8325-1aa326e79ff5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96389ac6-50c0-4def-855e-9a7afabd6268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac14c39-f84f-49d6-aeaa-9937b6c78957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab895b3-a81d-45f5-9b09-5b511df37f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322103be-5808-4fd2-88b0-f6099ddb260e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1a1dff-8334-4fef-8634-fa1a5bef8428",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e053c5-fc6d-454f-bced-55165e104f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06068c90-2ac0-4e80-89cb-b67047be925a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307d9006-7834-4c53-8be8-69023f5c4249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6a2c4a-5c4f-4dda-aeb8-e1fad26c17fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de1cc06-8272-4c81-bcc3-41da0bde7f65",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a997c9e0-cb22-47de-9e10-1523a0b41c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3f7fb4-c3e8-4cfe-99da-db927e9ea81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b823db7-2b83-42f2-b287-5ecdd78dc773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51f012c-9f7b-454b-9021-c35d382c9bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f7046e-f32b-4cac-9288-b012d65de140",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287d16bc-0051-49cc-bc2e-7728be31ea14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f0bf52-5e24-438d-a4e9-c012833f3703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce039e67-98ec-402e-9ce3-8f9fb7ab9204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd13eeb-ad06-4cd7-8181-b309a8c43f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98f42b1-7489-41bc-9bcc-0ce00e170f3a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205283fc-35cc-4cbc-8800-f3994130ad27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1beb9a1-3d49-434b-b97b-560db1d20f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56619fd5-d798-405e-a17c-8c789eb1c7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5940199-b32f-4126-8437-dac68550cd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929a5af1-9b23-4f79-80e2-5f20569dcfdc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963f7581-0734-49c4-88da-4c6c3e1e096f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836406d5-7e8f-4e54-9c9d-aab5308a2ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef149098-834c-4901-9769-fe8814597595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da4e50a-568e-48e1-a44a-ec5f6f9e4f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad9fe6f-bc34-44d0-b11d-e67f59f8273d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed8c0b9-28f1-45c9-9f0d-84d2b52a48c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de37d8b-19ec-40e6-8c74-bb7ff679fedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e7055-8e12-4495-a540-af729a19dc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce7e760-ac42-48e5-a132-01c05bd4c2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb89711-7527-4b8f-8252-7e4c7ecf5816",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce02b46b-df77-4555-b149-b372eb2b8ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36467db2-2f35-4189-bfce-8394ccb75f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3147b70-9260-4e6f-b619-351ccd47a63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708faeb7-ce6e-4021-baa5-67c1b8bdaba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb556c03-19f0-435e-a466-787cb5bf7833",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8b3757-b5c1-44cd-bd88-ba9af8a8e811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba601e74-3656-44e3-8c8e-01b721708691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6bde23-b18e-4f0c-8f13-55e858e155f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1eb788-270a-48ec-bb85-860103e02ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15e09b6-d14c-462c-8f83-0fdf8b716bd8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd41462b-24c3-4d60-84e0-7d1aca2cf0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f638a9c0-d583-4537-86f1-455f42d98399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635b6b1c-c7a2-4df9-9c8e-f3f38959c608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444289e9-221f-4995-81ff-0f53c9defc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84035ea8-b16b-4b99-9d1e-1d0150c675bc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9e8575-3488-466d-a9d8-8af270684164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3cb658-e0c0-41b3-94ff-4be8e623acc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daeb32d4-8310-4555-ae88-349a855722ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34eecbbb-99b8-4b14-baea-6eeaa3931b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e637d5ed-f82e-427a-9b08-620e81756ad8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580ff1dc-8fab-4885-9eb4-4d5762c214e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd91bd8d-ac60-4a7d-9780-e925d58c1013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26366555-4449-44b7-adbd-e178ebef736b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d2a96d-a1b7-41f8-9b5d-719eeac02758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b16db-8a30-478c-8766-bfaf71d94b02",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df7e4c5-392f-4b68-b74c-d9d77887a2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdf5540-2d6d-40ed-b5c7-8afb81592ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445a7c26-cbab-4461-aed3-5e2b71046e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc179f9-34a4-4ef2-9565-c025073f08f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b5c79-7363-4d85-8d0b-f3d74a526c43",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b0427f-f094-4734-b49c-62eabb43dff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2142441-2072-43a0-9e31-85772600556c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfa4fff-50f6-4a8d-bb0d-07943da8664e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab10835-2572-47f0-a074-47528b087b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfebe9b-3601-4ff8-ad50-5f71e7bc9da3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8ceeb2-e686-4c78-a4a3-b30158f697a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ca09be-069f-40f1-87c3-5b513cb0b72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53b809-0d1e-4f28-8389-fd6ac353e122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ebdac7-400d-47f4-ba97-d81b63ac128f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f7862f-77ea-4ca1-8467-20dbb02dd794",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8700bad-7bcd-442d-bd96-736e533de820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e7ff5a-cf11-4487-adb8-7e30f1bf3289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc940d6-f220-4cc2-8218-08687120d15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e99148f-ffb7-4c23-8042-afff586052e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5c8e74-f2f4-4874-8fd9-f8d04e4a5001",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301383a3-92ad-44b4-a191-b13bb0798749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618db779-488d-46f5-bc4b-e049e5ca1cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c8492e-ed2f-41fa-8f7b-0f58ab6e78dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24a18f3-ab19-4cd9-b185-576df9f4cb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaeb48d-063d-4b09-a176-6a87b2d3d7a9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324ff398-69d0-4ab3-8b99-e0727827d976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e563e23-574d-4e85-a1be-9f19144b9b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a42bce-03f9-4038-b130-7744b22b830d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c99e99-7b62-4974-8d22-fa2464eedf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06151246-1deb-41da-b212-a16ba19b7b4c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb35502-2eed-4cf6-b2c0-81d8ded5e257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67657bab-fcca-417c-874a-d7aa341318f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3ea05b-1651-4d0f-a0cd-85f89f7a4bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3c0320-6118-429e-9e62-2fa5f3d21d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daa8ac4-770c-4ba4-ad3c-5afa41a1bbf7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41d9fe2-0af5-46a0-b431-63d7228db871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6462912-878a-4e14-977f-31835b184c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dc9313-824f-42b3-8d6f-7a1ecd6a76fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92242603-2e24-4027-8f6c-14ae0aabb2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93fc6d7-b647-4c80-a350-335589535b06",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0701ea17-af9a-42e3-9657-4f32b5daa5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43c7bda-f5f5-427d-946f-7bb580714a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c063b3-790e-4639-a6c7-d2c151f1529e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f73f1a-1a26-405a-b5a0-f8aafbf0c861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e157a21-1ce0-4b8a-8d6c-1a60fd6fb654",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff5233a-1f87-4ae0-b159-1ee6bdbbc689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30f4d5d-fc82-4882-92da-c259eb84d77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c45ac5-fea0-40b3-a7cd-86d850c790f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ac0b02-ac62-4e45-b791-f35ffe125bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7ebafc-8000-4968-aa5e-8bb1d987c3ec",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0ecd7f-3384-49cb-bd09-3605426a0fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292a3f7b-301c-4db9-bef5-f398ac7d628a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e07c9b7-4d1c-4131-93c1-c381d65e9fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c8d7bf-c509-44f3-b032-b3cc9218ddfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31fb275-d46c-4fd4-ad0a-5b8bc98c2710",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f533d827-eb0a-4020-8e06-d01e412aae8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58319de2-5ee3-4471-a5ce-bdb875e7d863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9a53dc-fbd9-49f5-89dd-cca04512275c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012aa6c8-7014-493b-b67a-78e4490370ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057aa746-7593-460a-8d1f-22ab7eaa02c7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea271b48-7864-4694-9ee9-2a2beb288cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cbbb22-0ed9-4021-876d-8107d62b76ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6a2221-edbf-488b-b7e6-9a2a302260cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7916599b-4a39-44b0-b130-60b7ac90383b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a563fe-5600-4ecc-b4e8-a0a5306fdf0f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88cae08-3362-40e5-9a0c-f03168246dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5d2c8b-8ce0-451c-873f-5483683d3c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce69fd0e-e0bf-43f9-b4ad-d3efba7df31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68126a18-68cd-4e1d-8a8e-2836a3e31a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90005f0f-64ac-4845-bffd-3fdec4d9cead",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e28cc0-57e0-482d-9c3f-bf4f74f9fcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9909cf73-0606-4cbf-bd67-25214a2f6cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1240a3f5-d020-4179-b3de-e5e0a4f42b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d82d9b2-0ba3-4780-b85e-e64dcebc40bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0b2562-205f-4ed4-a5af-edfa3a7e0723",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9d91cf-187b-4d04-a483-c6550537cc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11315083-8a56-42a5-8ccb-96082a161d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f431ce8-8173-43b1-a1ac-d5710489ed76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a150adeb-c3b4-4d86-ba52-9b27ad68562d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63586f5-55b3-4231-ad96-15cd49ba30ca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15f5a30-ce83-4451-b21a-4f5092c3e045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd2a1c9-764c-4edd-8a86-c14c9edee27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f7e3cc-31b8-45df-93f2-15b331ea0d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfd2c65-4297-47fd-a232-066802e58403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca9e0f7-fd33-48cd-9502-6589ff4bae64",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea7b524-c248-4e69-a6ea-9a70324db11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4c35ad-d14b-4151-9c62-fe5b7f8e1ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcd8fa5-3f47-40c4-8d24-4aaab3969686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc9a7f7-0a85-4912-84b8-1200683ec8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d076bf-e560-4b74-a0cd-26cb395d8171",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d154e99-db50-4eeb-a6d8-a18684466a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d24073-b5ac-4153-b0c0-27caacfbd1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776bc203-f9f2-484d-abdd-b032dc50e385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb96e09-410d-4c01-a5a9-c4e396e92501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b408abc-b6e5-4ab4-99f2-937c91bbb460",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86d13e7-419e-4462-8329-043b5bc0bc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993be687-a488-4ec6-a466-a873268761f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cd4af5-1564-43bd-b1f8-027075ce791c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071b2021-99b3-4f79-936f-ffa63a54d78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44276f6d-5806-43c7-bfe2-09c96582de81",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be51c43e-2211-4827-9a6f-468f7735b750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec11ad18-dcfa-49b8-9403-e96cd02445b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2509cc-c309-4a18-b82b-ef056447c7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9977822a-ced3-4c35-a2e9-efa6191b442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59af73bf-a97c-4e8a-a87b-e8e510e7d458",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595064bc-6c5e-4adb-99df-81a4162606a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ece99c6-55b2-4044-b468-c903ca225b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26601a1-889f-4575-bb62-78b1289a5498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8d0f5f-19a7-4969-9370-6c8c54f80561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7be9a8c-64fd-4ce4-bf9e-b19a9f335dd1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25c5cb3-bb1b-4fcb-bd53-7ed644e2f79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f164a622-fb17-45b0-b7a0-bc67898e8959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cbd443-de51-4112-b065-c4766eeb2e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f258bc24-c8e9-4c60-b369-a1faa57bb5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0bf989-679f-48f0-a442-d71f30821d24",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55017b7-caa9-4a19-9ae2-34e87742398f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b858a73-8d78-4e39-9a66-d07028a8eca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2281a925-5727-4c17-a125-b56e1bb22401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7f1d6d-948b-4c41-9a61-50aa72a4c05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b991acc-009a-4bec-90f9-3568e258a925",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2f5c57-c512-46a8-9874-3171a828ac86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533e54ad-ca91-4a64-8294-1b82b471b48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5227d5f8-289e-463a-a3ce-e477bf8b3635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41f1c38-e362-4f68-aef8-7477efaa296e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc849c5-059e-43b2-b75c-245aab89b00a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2e91ec-5eac-4066-8b23-9c668d93717d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34f09ca-75f5-4878-9df9-0ba56abafbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996976bd-cd2a-479c-8f4f-9039beb2111c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8fdd6e-da51-4a88-bedb-d90807ef94bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322ee14f-d8d7-4423-80fd-7c4f95671d12",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5fb123-dc14-4bf6-b2ea-fc7bc64ebe10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff3b68ce-07ac-4dd6-9e3a-e19428154883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6429c3ce-bae4-4a27-8fb9-5294d912554a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b68de0-f679-4d74-9a24-9b47599f38d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260922fc-8f2e-4dd3-922d-101392569936",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f88b396-4c2b-4409-a05d-954b9f66de6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8070c10-d26c-4c3c-a635-078841212707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e30886-5602-4a36-8b10-30f477498286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5434ab9d-83ac-4a95-80d5-5836c461345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4414001a-f929-4672-9e36-8533e3fdbd72",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a176e55-fed8-4106-ab17-e03f2973740f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d5594f6-d721-4b8c-9ac6-e8f030e24c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72592ebd-f277-4f73-a1f7-8992e061da91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb52248-e093-458b-a5d9-0af504d2ee15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b969a76a-871c-4b68-9f9a-65a0e3920b94",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380ab014-53e1-4b1c-b138-d3465881a82d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78bd1107-d437-4bae-b647-b493bcfde288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e1e5b1-cc67-43ff-8026-79d9ab399300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fee928-3a84-4f3d-8037-9a691f962a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d83ba3-8a8d-4bcf-b748-df6446e23b7e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61923588-8ddb-409a-b185-4a602bd1d966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61293c9-8c47-4245-8909-e8dfc23b21ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c366a135-08aa-49c8-84d9-e547e5480f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17643e2c-13c8-48e0-a8f6-a10029dfb9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9173a27d-a64d-4c4a-971f-cc0d572fdea6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab06dbb-45d5-4dec-9fec-cba35346fbf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e768f2ca-e024-45f3-b5ba-846ef1fed7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388ea3be-637a-4c9a-9052-b83575298d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb4f74f-0e42-49e4-8fcb-2251642ba561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e8aa3e-53c8-4e16-b7fe-3f2a768bc30b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6591b297-b20c-4667-959c-8817dabdb1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93147955-eb88-4b79-ac96-3ccc9c8eae9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7ffdae-29eb-4df0-8026-b5d223af5652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4aaad3-8bb0-4294-b91e-5613a090c324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a0bd49-86f4-495e-ae98-cf17f8760dd2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7f0aa5-bd6b-4cfc-88f5-a381ecd93be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ced3690-a2ed-4641-932c-6922201b59a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5acb042-292e-4b27-98c8-a390bfabf0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d780218-184f-4a55-a3a9-994ffb476d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59d72c1-8e82-47fe-9234-28e5eba6ba9f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af00a9b4-add7-437a-8e6e-9e1740a59c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e3fddb-185e-4feb-8e67-58a68a7bc78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68939018-1014-4a64-991f-dec10bc41edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c7ab54-1dca-4c5a-a450-042df2bac579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6849cf4-f1a4-41a2-9fb3-95e31f3752fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcab73e-771b-43a1-9645-dfc09663991d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec9d9e7-c9b4-4456-98de-071841e090af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d548e27-6cb1-47d4-8ae7-c5e5cd3126ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277f790f-1c34-4a88-8234-3cd3cd8b2a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7395b9-e512-48ec-b439-9843a5869b6b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6851df16-92fc-4c01-b445-792df53d9db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e298cef2-1ae8-41c6-a265-f2319ca0bae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641ef133-2b2c-408a-a187-3e4bc22d4e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fea5098-9bfb-4b7a-9cad-b96eae813ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d8a465-d853-47f4-becf-44ed0af9151b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf55c4d-d1dc-4b6a-8c3b-c6db84349cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f43303a3-6786-458a-a6cb-91f21c7fb298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcf2895-fe11-45e1-927b-beec987af169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e601bef-d585-42c9-bfa6-91e780857e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ecb57c-fe22-41d7-9b31-25df8b9bb976",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744fd3c8-eaec-4d3a-922c-28a4d67fc098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "828ae06d-4295-4837-bae6-732acb90ef9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd912f7-6b6a-4d5c-9e27-cf7c9554c405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3c82df-a886-40fe-a605-35e1e8c6a62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9288910f-8550-48a8-8b69-b8ed04bb0121",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b4fc2b-a258-46e8-a961-02935bd045b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b692e5f-588f-4172-a54b-92a32f38fc5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624627d8-d3e8-4a97-af06-b9df436c95c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697550d7-37e6-47d9-954e-38a6fb042d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59e0795-4e65-48c3-a78b-a7007abc2dfc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706c3473-a6ef-4c5b-8e5f-82067ccb5e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8265199-77b6-41c9-8608-f7eca1534e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c1d693-1fd4-437b-a03f-fd4579f231db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b29ae1c-6e8a-48e6-9580-2255d809a631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a8de46-406a-4627-8c47-6ce148556b14",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ce074-859e-4bc3-89b2-6a7f3f17b52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4365031c-9f63-4df2-8629-9fe27ad3cc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ae13db-f163-40c1-9faf-7844d15be4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9789d2e4-0628-44dc-9bbd-4645d26c0585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c23e14-f662-44fb-aab6-ca6c0894de53",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3935f65-b104-41b6-a009-28e203af7972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7805de7-b9c6-4adb-8a5e-92414b079584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a868b4d7-bb58-4226-ada7-fc85c121756e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfa88df-04e8-4a70-b6e5-b7453ce5e232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0155b121-614e-490c-a7ca-ed2ea89b11a6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628db925-c5db-4bb9-a75b-67f2b74c1b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98d0a07f-b44b-4d7d-90c3-3ceed3f354b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d3baf6-0da4-4b37-ad8b-150a916df501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216a2183-b838-48eb-9736-d5ef97e9e60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b6432d-4056-4801-b0be-1782b9710560",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19a44b5-9bd3-4d69-8adb-240999def609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97aa0f61-9d69-44e4-8c58-07db018655c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff668bc-d775-4485-a963-0eec296bd9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92366d7-2a99-47b7-a357-787e8a9e6d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf6a663-be78-4a4f-a006-69ca995d0cff",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c3f42c-10cf-4e60-9e8b-4e4788e9c4a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5e65f1-0edf-4422-ad4c-c26b45838db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13aff8a2-9afb-4bc9-9cee-192c6c8e6014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58133f4a-07d6-451c-8cb8-8198cb341bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ccbfcf-0e90-4df6-99db-fb5842d72069",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffccdb3-378b-4071-8ec2-608a0672e8bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cd1cb1-35b3-4415-b0b7-9a97b7558224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e9559d-311b-4634-86ba-e0c43126d4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c761368e-3a04-4831-bf61-92b5875833ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be5ce41-9a72-4aeb-8eab-ae026ea6f120",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41c194a-6283-4933-91a2-75b284b81078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16897d24-bd56-441d-9a75-7b0605214d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c341686-f4f5-4ed0-888b-1d8209ca7070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8de2e9-9eae-4fc0-99cf-dc5b6019d327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef344b0-667e-4af0-87a2-a0c67019f837",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76194096-6976-4450-9a90-d9bf5c86dfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998a70cf-a437-4b81-b964-a2afd947f661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c3f210-40d2-4e2b-8c4d-eb8fe1d9e3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6008efb0-c5a7-4344-9db3-76a1ef9f0f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601dc297-d42f-44c0-b631-952e95bcc0ee",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33c2800-0d9b-4593-bde7-dca4a795f464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6ae5ab-f04c-4c8e-ad62-b2bcb726c163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b6ac44-e3fd-4ef8-bbfe-e4f2149cc48a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0441e91-47ce-45f3-8667-143a4b6247f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df323b73-1a61-4ca9-a3a0-eaa1946cb02c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62c3925-5bc9-4b2d-b104-347f7b834003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a582268b-21eb-4810-8076-257e4dc071c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9712189d-7775-4630-a0f5-b9e9a0508bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe41408-3cab-4daf-aa54-dabdf93471ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d48955-7b18-4328-bf68-e6c4f3c87f38",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33907816-2940-4ab1-8b5a-6db7f47d155f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a985e7ce-8fa2-4fd3-b2be-c5c4652ed561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f952ee-3735-4099-be93-a93d679161ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f2e825-36fb-4e3a-8cfe-17ee14b3e352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb99cb3b-61e5-402b-b032-43b54d4cdc54",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11190965-edd9-4ede-a412-9a23a0ecc036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3182773-c356-4366-9356-a40b765a8e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782b8870-8353-41ac-b367-b8d121f0adbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9dbc60-d7bb-4908-a7a4-26f03c03234e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a231ae93-2869-4407-90af-d317de3dd9ca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cf7f3b-f777-41c3-b071-c37efc09079c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6289fb70-841a-400d-b110-99600eaeb303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1aba2d8-5911-408b-8e41-337bb813d360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778db797-a4a8-4209-8794-2d80c5aef272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e43462-a101-477f-89a5-937855034e7d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf2f9a5-b4d4-43c6-bc72-1ee1dea1f50d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caea2d5b-046d-4131-83cb-56b969a2c798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7c58f3-419b-4065-b5c0-42f9a68f8b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5645a9f-949c-4685-a45c-e274e56edc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e78c72c-c4d9-4702-84b2-28fcf886a98d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128c02a3-44a3-41e4-8cbc-a3ae11bed41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd62b731-7517-47b1-8297-b08084028e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd37a15-a85b-4d65-9e93-483624343217",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97e7f84-97fa-4dac-b64b-f828ba8e6acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142d1fdb-ccce-4e91-86b6-9e62c22c2377",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dde96de-b50f-4f93-b090-7906cb8a88ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2157f9b-d181-49fc-b2ec-202d195d6947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c384cd06-0cff-44f2-81de-9a8285625298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc913d2e-2b20-4a51-8cdc-1e12efebaceb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e0afc22-e6b4-43e0-890a-f705d816593f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c56448ae-5ccb-4676-ac7b-7663a5178385"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2968247c-adc9-47d6-ba69-317565f282ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb095d71-5030-4ec7-8cd4-971e10919292"
                    }
                  }
                ]
              },
              {
                "id": "742960df-3005-4cc5-b0c4-0c27942ef31b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "884e1298-87ab-4d50-a859-6a7e33ca596f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cb304e-0e87-4b47-bd10-aad3facfc4d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "feddb740-fe3b-4364-af4f-b59af85639c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2fffd6-0c49-407b-acf6-07cd5734b375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4af9ee85-2d97-4fec-b926-e1d8e681d142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdb5fd4-d485-4ea9-88f9-4cad974f9d23",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cfcfe3-befe-4827-a585-3a1fe53fd496",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "accbeb1a-9004-4410-932c-5fa93fa5c75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f185c1-637e-44d5-b115-00dcc3dc7e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aa51012-7e3b-49e2-8d3e-2cc8d33f3d3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bedeba83-687e-4adb-9d3e-5dea08d5b433",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b0806cb-e5f1-4e0b-b593-dd7178c9b8c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2c4ec66-fa3c-4454-8057-1c8e41d9bc53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7436a7c6-7c3e-4a0c-9bcf-fb74b90a52ec"
                    }
                  }
                ]
              },
              {
                "id": "6bc827ec-cd83-4a3c-9e5b-c47548066d54",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "63ef14a0-52e7-43bb-9f06-11d663133b70",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a901cd9-f4a0-4990-9309-9dd5db17e626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ac425b75-8dae-405e-8fe6-e6bb3f36e75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa15209a-b2d2-42b5-9761-5b8976af2355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b37e08b-475d-4760-b77d-50a2d94a0382"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d47642d4-1a7f-405c-a60a-a307829d5708",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8b5900a-4626-4ae5-95b3-625061390ee0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9d53aa8-fa1d-4ad4-8bac-d70c45874aed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30eef375-7f0d-48bc-8708-fbe7062bbe18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10f50dda-1faf-4e97-9988-45a59f235c2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34e9572b-c114-4f9a-a940-4889a917e08f"
                    }
                  }
                ]
              },
              {
                "id": "32778432-d45a-41d6-9385-bfaed70c2dfe",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99b20f6e-d9f9-40f4-aebe-e710f3536ba2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3e66febd-865d-4b0b-8224-2f4d9505a141"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2273e88b-dc16-4746-8f62-26c57bab13de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed3a68dd-43e6-4b26-985c-93844babb42d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e366744-8fc9-4c40-a563-767a0dbef937",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "489b3f98-1058-4bc2-be5a-3312a0d07560"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53cdb01a-db1e-4acb-80b8-26d843cadf1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afcd83b5-ed25-45fe-924c-b9acae9867bf"
            }
          }
        ]
      },
      {
        "id": "31f7d2dc-9181-4ce5-b4a2-e3337a2c4c41",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "20129436-7ff9-4e2a-a713-60c786743fd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59610c97-bd67-468e-9b21-342ec8974b30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffadf8bd-d4c9-4a4c-860c-9ce1f7a96c1d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0351588-8dae-47cc-bb04-8afc88ca5278",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4295dd89-6be0-434b-846c-99ab617e4dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d242c5b1-d67e-4089-b47b-033d75a790c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb5e35c4-0d91-4915-a7db-3d18dfcbbeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096830cb-0c5b-48cd-aea9-6b0eaf81c459",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af52c7b5-ed62-485d-ab54-65819efe23f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8f1f52a7-c426-4574-a443-5e32827a868d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb4274d-6d03-456b-a425-7d4983b0fe67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a604ec7-8bdb-4ad8-91af-702b0153efae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28fc3753-1de8-4b21-ba72-3ba8a8c6b7ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b9ef72-4281-4a79-b0dc-dc8ea7b4d38e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58da0487-f91c-4415-b68a-e48e32200034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7cfea31-5145-4405-b5bd-ea9089055a9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23e93111-90e2-40ae-a235-a844599df74c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e6278caf-c0af-454a-94c7-143b85ecbd8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c022dce-61cc-4f35-b51d-ffd562a3d848",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fad1103-b982-4583-8a3b-e31f738d011c"
            }
          }
        ]
      },
      {
        "id": "21522f26-88dc-4e83-bbc1-6c89c8ba39ec",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6ad72bfe-ad16-447a-9988-07f496f19e43",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bec2509a-68e0-445f-9a82-899b14b6ce2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe09eadd-095d-4921-848c-10c9f6435017",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d597b11a-31de-4c81-909d-895cff284f8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "077395a3-8f17-4478-bea7-a33e50b1c7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15127dd-5914-449f-8828-84e3d2ff6b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8c0f736-a665-491b-bd9b-0f85b43e99cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e7c087-ab7e-411e-98bd-008b33addcdf",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81738ed4-171c-4a8f-a4e0-11bf5912dce2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbec27e-ffa4-4848-aad0-83abd636ae8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dab7dc-fe61-4ea5-8a27-8a97961feba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98a9181b-1fc0-4857-af38-cc8d20e960a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37c5f577-101c-462a-8238-c2f27cf91655",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29cabfa3-da7c-4224-8e0a-1a7303f2efdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae5234b7-1d8f-4b91-839a-db4b8672260e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28ff4f9e-b04e-41d5-b479-bc3e3ec42c3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "701d5dbd-dc3d-4b58-b835-a0abb26bee73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf97347e-54ea-4095-bd33-75ce1a1e9f07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c339a919-b268-457e-801f-380a33c5ed7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f47171b-e26d-4ae7-b4c6-5598f95d9736"
            }
          }
        ]
      },
      {
        "id": "490be339-8a95-4b90-b8ff-f42aec772959",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4f26253a-dcb0-41f4-b580-b5f426b5c6d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "863c50c9-a40a-4935-bc2a-e9005f580574",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b972231e-3769-4cb5-bb51-fdad396499b2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6da49dd-c64c-4cd0-9b11-0ecfd536155c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0739bef0-2501-45c9-8257-8ea93723d204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f2ed59-ffdb-447b-ab0a-da0451a00e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff8ef446-e203-4b3c-a791-0ed0dc7c3790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8d3834-27c9-4353-ba42-e819b4c0cc27",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559999e6-e583-43a9-a7b3-6a00e85cea9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "33ae0ff0-0893-41e2-b63c-bdb61171da85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b58edd-afab-4d31-a4a5-315558bdf2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a53bab8b-371c-47b4-adfd-c0c766eadae2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047c539d-e91a-420f-85e9-290a80d83ee5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f82daf7-f890-4127-aaa1-f57298d7ab94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34a5f237-efd9-4239-a0c8-466aa6b3ddfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfec5909-f770-4171-85fb-236d4b981be3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "095ebbbb-a480-458d-9fb6-9347a8910e9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8dd9d213-2a0d-4f10-ab8f-9f7add8ccf6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15bdf28d-336d-4650-966a-dff9ef8d9763",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cc6de03-bbed-46fb-afad-8621b2bd55b5"
            }
          }
        ]
      },
      {
        "id": "e4df6948-a327-4918-a08b-a569675644ca",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba36ff61-1bcf-488d-b844-aed3edb5919c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60ab717e-9bc8-45e7-a509-89ca8492b4bf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c54d530b-95a4-4293-8fd5-5fe44adc329a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a4c79e9-8d9b-4325-a105-02009a0b025b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80aee123-ed4d-44a2-a688-a67f60688ca5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 690.0269230769233,
      "responseMin": 28,
      "responseMax": 6006,
      "responseSd": 697.9920509012272,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679445432127,
      "completed": 1679445625298
    },
    "executions": [
      {
        "id": "58e42ebf-1ed1-4a2f-9597-a4bb42ecc36e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "666d11f9-920b-4480-bda6-99bc53a70e3e",
          "httpRequestId": "c3973370-667b-452d-9ec7-bd1832e77f93"
        },
        "item": {
          "id": "58e42ebf-1ed1-4a2f-9597-a4bb42ecc36e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6a855f2e-5d20-4265-8817-cca700ba643d",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 0
        }
      },
      {
        "id": "2aa29539-9924-48f2-923e-26938ff89698",
        "cursor": {
          "ref": "2e531db6-8cf2-4a9f-bcfa-02e037a0b4fa",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fb7cc68c-1112-43ae-9e1e-9f1035573a9a"
        },
        "item": {
          "id": "2aa29539-9924-48f2-923e-26938ff89698",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "21cd6307-f316-480a-86f9-4271a6809dd6",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 0
        }
      },
      {
        "id": "29d1b018-5e73-4e01-b92c-f01d4f410cc0",
        "cursor": {
          "ref": "7a2f8509-86d0-485f-a139-b742f5c4f6e3",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8ee22b95-ea12-45d3-b453-756013d76dc9"
        },
        "item": {
          "id": "29d1b018-5e73-4e01-b92c-f01d4f410cc0",
          "name": "did_json"
        },
        "response": {
          "id": "f974bc48-fdbc-4564-b13b-3eea242f97a1",
          "status": "OK",
          "code": 200,
          "responseTime": 1156,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e025139-7d3f-41cc-a724-5208424b36a6",
        "cursor": {
          "ref": "9f65525c-cdc7-4ac7-be91-606025d5f2c9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d2af61df-add3-4ac7-a6a8-ef67461a9dcd"
        },
        "item": {
          "id": "1e025139-7d3f-41cc-a724-5208424b36a6",
          "name": "did:invalid"
        },
        "response": {
          "id": "b838cada-25a2-4d6c-8cb7-4562817bcb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1329,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e025139-7d3f-41cc-a724-5208424b36a6",
        "cursor": {
          "ref": "9f65525c-cdc7-4ac7-be91-606025d5f2c9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d2af61df-add3-4ac7-a6a8-ef67461a9dcd"
        },
        "item": {
          "id": "1e025139-7d3f-41cc-a724-5208424b36a6",
          "name": "did:invalid"
        },
        "response": {
          "id": "b838cada-25a2-4d6c-8cb7-4562817bcb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1329,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f55521-4c3a-4f81-8c37-3b3c5bdb4832",
        "cursor": {
          "ref": "f76553af-fdb9-4ef6-8219-30de35f90050",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "29bf4a06-8878-4f97-83a4-b2f2db007581"
        },
        "item": {
          "id": "58f55521-4c3a-4f81-8c37-3b3c5bdb4832",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9f689d10-62b2-4cc5-bb49-88a56125c7bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 627,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6270ca89-aa92-439a-90f6-7ff80adfb81b",
        "cursor": {
          "ref": "3130488e-4880-4ee2-bb95-5fb4da97281c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2b9acfd8-cb2f-45bc-8769-5b18568dd2da"
        },
        "item": {
          "id": "6270ca89-aa92-439a-90f6-7ff80adfb81b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d57f3182-65d8-4523-8d18-8ed8012ee6b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1126,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda79f43-f3e1-4aa6-a7a0-aee9cc431ee6",
        "cursor": {
          "ref": "37262479-5ad2-46ec-a9ae-2bca35cfa661",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a11c51ae-c5e5-4bf1-abe1-d4be2dc87def"
        },
        "item": {
          "id": "bda79f43-f3e1-4aa6-a7a0-aee9cc431ee6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "17fc63b8-b7ab-4861-8965-b36e7996bbc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fb8bb0-8103-40e9-af7a-48bee292d950",
        "cursor": {
          "ref": "37a7d12f-218e-4432-add9-4c0cf85cebaf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "81bcbda7-0343-44bf-a36e-821ac99ebaaf"
        },
        "item": {
          "id": "a0fb8bb0-8103-40e9-af7a-48bee292d950",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d9af00f0-0434-44e6-ad4c-4cb13293d811",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fb8bb0-8103-40e9-af7a-48bee292d950",
        "cursor": {
          "ref": "37a7d12f-218e-4432-add9-4c0cf85cebaf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "81bcbda7-0343-44bf-a36e-821ac99ebaaf"
        },
        "item": {
          "id": "a0fb8bb0-8103-40e9-af7a-48bee292d950",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d9af00f0-0434-44e6-ad4c-4cb13293d811",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cdb1af-999d-4770-9ee2-328c02bc2197",
        "cursor": {
          "ref": "aec10200-2c77-41e7-b34f-145e6f12e518",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4f65ffb6-0876-472a-9de5-43e8d074a856"
        },
        "item": {
          "id": "06cdb1af-999d-4770-9ee2-328c02bc2197",
          "name": "identifiers"
        },
        "response": {
          "id": "7e9767cd-101c-412c-b041-a94a47024e66",
          "status": "OK",
          "code": 200,
          "responseTime": 956,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef1036f-7cee-491d-875a-c0340b92d23e",
        "cursor": {
          "ref": "1d9c667a-5bfb-4f41-8b35-41ca505ebc5e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1663558e-408f-431f-a447-4ed01e581323"
        },
        "item": {
          "id": "2ef1036f-7cee-491d-875a-c0340b92d23e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2f396ecf-a3c3-4ac5-ba0a-4b6925cdf59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef1036f-7cee-491d-875a-c0340b92d23e",
        "cursor": {
          "ref": "1d9c667a-5bfb-4f41-8b35-41ca505ebc5e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1663558e-408f-431f-a447-4ed01e581323"
        },
        "item": {
          "id": "2ef1036f-7cee-491d-875a-c0340b92d23e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2f396ecf-a3c3-4ac5-ba0a-4b6925cdf59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e3d826-b6b3-4066-bab6-5c85fa8d43fc",
        "cursor": {
          "ref": "8626cb46-6e17-46c4-8a51-419e063075ae",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "650a417b-c21a-44e3-9c83-d4a009e1578c"
        },
        "item": {
          "id": "b6e3d826-b6b3-4066-bab6-5c85fa8d43fc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "622b905e-a20f-4b11-9d56-734643970287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27696acb-078a-49ff-9e25-bf13fe592e38",
        "cursor": {
          "ref": "81bf9a9e-ad68-4834-8163-c5d6508423d3",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "da08c922-b35f-4dc1-a6ff-94341c38130f"
        },
        "item": {
          "id": "27696acb-078a-49ff-9e25-bf13fe592e38",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f45b565a-f7e2-4f09-99c3-6aa45e803ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d503f7-2e98-40e0-8957-90c2bb45716e",
        "cursor": {
          "ref": "257f5c38-8a52-4e3d-8b5e-5579b99014f9",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cd67ebea-b40f-4675-8ce8-891738b3896a"
        },
        "item": {
          "id": "e3d503f7-2e98-40e0-8957-90c2bb45716e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "60f4b1b2-864e-44b9-a1de-87909e350b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261d416a-2d46-4da9-a60c-c6a5342754e2",
        "cursor": {
          "ref": "6dde7661-aa83-4022-8f66-9811deee1f71",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7282acae-7970-4422-bd1c-2b2ff0ba0f7c"
        },
        "item": {
          "id": "261d416a-2d46-4da9-a60c-c6a5342754e2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "01b1ec7d-483a-4cb8-8e9e-acf5e5dee6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad795c3-1a42-4bc6-9463-9c7d35b5aa4b",
        "cursor": {
          "ref": "14bbf0ee-2cfa-473b-b9e7-0971c6133873",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "89f577c9-5360-4e8c-91d4-cb47fef8ff88"
        },
        "item": {
          "id": "fad795c3-1a42-4bc6-9463-9c7d35b5aa4b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ac63f508-e23c-4041-bc34-34fa44cd5384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694d4d81-ae29-44d5-9043-80308ddda757",
        "cursor": {
          "ref": "60c5b89f-e071-4d7a-b5ad-279280b7035b",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b77706e0-bb4c-4719-a173-328d41ab5232"
        },
        "item": {
          "id": "694d4d81-ae29-44d5-9043-80308ddda757",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "176e56fb-9183-4f67-9798-3d0ed36e1732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de1cbd0-966e-4d8e-800b-f51364de049d",
        "cursor": {
          "ref": "3495026a-2742-4cb1-b811-8dcfe743ffd1",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "da79ad8b-fd99-4e31-96b8-47c02476a298"
        },
        "item": {
          "id": "0de1cbd0-966e-4d8e-800b-f51364de049d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8e3f7639-9b0f-4734-998e-8082c4713a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d55e752-7d8a-4ad7-8e4a-14e99e69773c",
        "cursor": {
          "ref": "9bf6eee0-da6a-4328-9913-05067c202c64",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "93746197-a337-42cd-9591-4693e535684c"
        },
        "item": {
          "id": "4d55e752-7d8a-4ad7-8e4a-14e99e69773c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "19f8ce16-ab83-454a-bb6e-0b34889fb858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea8c069-3db7-4734-be80-cb0b832983ae",
        "cursor": {
          "ref": "b2f4b54a-6b1a-47ee-99d8-95b3814eeca7",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2227b01d-928f-4092-8f13-0069097ddd9c"
        },
        "item": {
          "id": "9ea8c069-3db7-4734-be80-cb0b832983ae",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2d520e90-1f2b-47d8-880d-91a12b8fa13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a91f3df-81ce-46d4-bc71-5031ebeeb7a1",
        "cursor": {
          "ref": "5ae89a77-37d7-4e0c-9811-30e40cd0bb97",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d845562f-74b0-4425-a20c-820c5299066b"
        },
        "item": {
          "id": "1a91f3df-81ce-46d4-bc71-5031ebeeb7a1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9551d5d4-797b-4fa3-969d-9c6684aaed38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff72e3e-19d0-41cf-8da1-1554cad75cfa",
        "cursor": {
          "ref": "a589911e-ed36-4f70-a0ce-f7af5609c86a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bdbb8b87-9a68-45bc-80f8-42eb11fff5c0"
        },
        "item": {
          "id": "3ff72e3e-19d0-41cf-8da1-1554cad75cfa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ebee7360-fd59-4531-9335-f676ba45d291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41954be2-44d9-476b-9b19-5eb176b4bfaf",
        "cursor": {
          "ref": "032396e2-8fa3-4262-8daa-6733289bda7b",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "09455c70-a6ed-4554-a9c8-5478b59ff7f1"
        },
        "item": {
          "id": "41954be2-44d9-476b-9b19-5eb176b4bfaf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c00faa0f-540c-4810-9126-b8a9e8ec4070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db54b56-7a17-45e6-9e03-b2b667808589",
        "cursor": {
          "ref": "0d329ddb-1b4f-49bc-ac8a-8a0547ba1fe2",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0552b0b5-c3b1-4227-b24e-63c244d1eec6"
        },
        "item": {
          "id": "4db54b56-7a17-45e6-9e03-b2b667808589",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "63d99ec4-4d5b-4adb-a7bf-57d9ac5b8889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c598b7-e612-466b-93fe-95991b138a3c",
        "cursor": {
          "ref": "09bfbb8c-49a9-4ef6-b60e-31f2e4b53278",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "28a84b7e-6ca5-4f3c-8803-99b9dd01c0b8"
        },
        "item": {
          "id": "f0c598b7-e612-466b-93fe-95991b138a3c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ab03496a-5981-4e14-a92c-60f25229d865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da293695-60d1-483c-83eb-d87a7b13828f",
        "cursor": {
          "ref": "36f7d5eb-cfea-4438-a347-6fab2158ee4a",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c37ca7d3-1382-4b41-beed-55baaa825bcb"
        },
        "item": {
          "id": "da293695-60d1-483c-83eb-d87a7b13828f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0fc40a8c-a003-4ae3-97fe-a01befe5d0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcea8ec0-f3ae-42b6-b8d4-ccddaf83186f",
        "cursor": {
          "ref": "fc81bd0c-7e29-41e1-90dc-8543f94a6497",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bb92b51b-20ba-44c4-a362-39ea83ca5631"
        },
        "item": {
          "id": "dcea8ec0-f3ae-42b6-b8d4-ccddaf83186f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "06e4e18e-e4ce-4280-853a-d3fed1829d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0822d6c1-b8c0-4663-9d40-704fe0b7c3de",
        "cursor": {
          "ref": "11976d73-5b6d-4f6b-a10b-425848e913c4",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7188f578-763a-4d22-bf6b-04d9b86fdf00"
        },
        "item": {
          "id": "0822d6c1-b8c0-4663-9d40-704fe0b7c3de",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2271f0d9-9d54-4a49-bbc3-293562d3b33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604862c5-b48f-4e41-9c76-bc5c9a96bdaf",
        "cursor": {
          "ref": "65ed74d9-25c8-404c-8b14-a205fb546e9c",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d1e6891c-6056-462c-8b26-1277e37c207a"
        },
        "item": {
          "id": "604862c5-b48f-4e41-9c76-bc5c9a96bdaf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "afba249f-afc8-4698-9e01-de448258c738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157dceb9-967b-457a-bfd4-05d48b0cea17",
        "cursor": {
          "ref": "3e558b6a-a9e9-4cfe-9ba9-4fdff9882968",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ca6e777b-9ea9-405e-a06f-96884972443c"
        },
        "item": {
          "id": "157dceb9-967b-457a-bfd4-05d48b0cea17",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6d05309b-0891-47a4-98c1-acb68f6c6227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0546d3c-ee53-429e-9179-e0ba9cdf27aa",
        "cursor": {
          "ref": "5bfb1c52-52b2-46c6-a8c1-d9c1afdbe99b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "359df65d-2b6e-44bf-9096-4554c9ba02b8"
        },
        "item": {
          "id": "f0546d3c-ee53-429e-9179-e0ba9cdf27aa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5fb04682-a4b3-4648-9b52-eda1461aef2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c10919e-08ca-4691-8735-51d206f658c6",
        "cursor": {
          "ref": "6da57e8d-5845-43e4-9c7f-c0473f4ccbfc",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5c6fb70e-1d9d-46bf-9e22-c08c37160f0d"
        },
        "item": {
          "id": "2c10919e-08ca-4691-8735-51d206f658c6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "33f31b5d-3075-4a5a-bc85-c9a075cc7347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8547c0f-c860-48d4-8caf-fc2d5b73a7cd",
        "cursor": {
          "ref": "63a9b7d1-4803-4c4c-9512-e1e7533aff97",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0b647cb8-db6c-461f-8870-b6f4af51a64e"
        },
        "item": {
          "id": "b8547c0f-c860-48d4-8caf-fc2d5b73a7cd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c60da432-7451-436e-9811-4a196b01c6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3680c6c-c9d3-4457-b7eb-8f03ab8f9649",
        "cursor": {
          "ref": "8fe7d8a7-81bb-4d10-a5b0-6a57165f7765",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8d208d22-2d62-44b2-82cd-910e4b574857"
        },
        "item": {
          "id": "b3680c6c-c9d3-4457-b7eb-8f03ab8f9649",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "96e8c34e-91c1-4f07-a7de-3c055517f763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce6f08c-e964-4618-aa1c-2cc76dcc4326",
        "cursor": {
          "ref": "938c5c52-d45a-4576-86de-753eb22b9dc1",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c6ee84c6-4c4d-48b6-bb2a-da691aaf970e"
        },
        "item": {
          "id": "dce6f08c-e964-4618-aa1c-2cc76dcc4326",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8b823ce1-9d92-4cd8-be34-ead8f5e3dd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5545cab0-91cd-4d59-b2ef-1b3975634844",
        "cursor": {
          "ref": "1a2e845e-dd00-491e-9e46-13d5ae7e0259",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cf1a8626-1c12-4412-b24a-935444b2bbac"
        },
        "item": {
          "id": "5545cab0-91cd-4d59-b2ef-1b3975634844",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0bf28072-69de-4af2-a697-a059378b2da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef890d7-9c10-4977-8ffc-945fcbbf3218",
        "cursor": {
          "ref": "1900c904-2893-4d67-856d-061d7fc73113",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b6fe2ccc-9010-4a3f-bbc6-ab81f722243c"
        },
        "item": {
          "id": "9ef890d7-9c10-4977-8ffc-945fcbbf3218",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6d8f0410-f3b9-4913-9f12-697f06d30ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8b86c2-94e5-4b6d-83f9-821dfcd77b51",
        "cursor": {
          "ref": "63ec0751-7a62-4da9-9672-5ffce409828d",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2c116ff3-ada9-43cc-a293-4dc01a77b3d0"
        },
        "item": {
          "id": "0f8b86c2-94e5-4b6d-83f9-821dfcd77b51",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2edbda68-da03-4adc-8a9c-776cf90a5f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de264b42-6455-4a3a-b626-94652034af34",
        "cursor": {
          "ref": "01fd8884-0332-4ba4-a621-e847b79ea9bc",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ff948b6d-6fcd-4213-aed7-8997dfcbc35b"
        },
        "item": {
          "id": "de264b42-6455-4a3a-b626-94652034af34",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b3aab481-8419-4c40-a038-19ff1cc92e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddcfc31-f267-4e17-84c7-bc8536e720cb",
        "cursor": {
          "ref": "c7c01359-29ed-4c8c-a4f2-5cc17325fd90",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f1493be7-956b-434f-8792-f986ccf93b70"
        },
        "item": {
          "id": "eddcfc31-f267-4e17-84c7-bc8536e720cb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3482ad90-6b82-4e38-9b7c-a56e81bc6173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b206feee-4e8b-4321-98de-7f944f042f73",
        "cursor": {
          "ref": "ece143d7-46ed-4eff-8c4e-ff968c0a3720",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "acd3f124-41ea-47b8-952f-84d5c088a5a1"
        },
        "item": {
          "id": "b206feee-4e8b-4321-98de-7f944f042f73",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c56c8a7a-892a-4a30-970b-0a70edc9cabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8e5fb-d275-4c27-95c6-693f7c6aba83",
        "cursor": {
          "ref": "77fa5aa5-316b-4ce2-920d-c9c2dbcb5df4",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f68f7318-fe69-4a05-8ce3-c3191ca21ea6"
        },
        "item": {
          "id": "58b8e5fb-d275-4c27-95c6-693f7c6aba83",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "af8e9328-417e-4e7e-ae56-37877461a548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cce5c66-0553-44e6-8700-b6626c823494",
        "cursor": {
          "ref": "ef5cc024-ddf6-4d82-9cfd-a156e5684d4d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "580bd4da-b771-4526-8b88-aeef5560d0aa"
        },
        "item": {
          "id": "2cce5c66-0553-44e6-8700-b6626c823494",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3c220d99-c3fe-42e4-ba5d-2d02617bcbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370d196c-7f42-4a10-8361-e285a19e7f0d",
        "cursor": {
          "ref": "a4b01425-aad5-4ecc-9ff8-d922bc6133db",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "be6b2e5e-518f-406a-9313-d5e06e2c51db"
        },
        "item": {
          "id": "370d196c-7f42-4a10-8361-e285a19e7f0d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "846d400b-50ba-4cc3-807c-ee6f6a38b7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9bb4fb-9cde-43c3-94b6-b9b0a86c9ca4",
        "cursor": {
          "ref": "f5e35833-58d3-4cf5-8034-bc79c86ac64f",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ada42621-c543-4d37-9fad-04d14731a298"
        },
        "item": {
          "id": "4d9bb4fb-9cde-43c3-94b6-b9b0a86c9ca4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5b1fff38-f9db-4e8f-b4b5-48fdc489eeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de358daa-2d92-4d64-84dd-44cb2e24ef23",
        "cursor": {
          "ref": "fb651c45-7dd7-41d4-b359-a6d9e1c3e23d",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0ff461f2-e9a2-4304-a08b-70bec580238e"
        },
        "item": {
          "id": "de358daa-2d92-4d64-84dd-44cb2e24ef23",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b73ae2dd-f115-49db-9272-e4f3dbcde6d5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 874,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b79554c-9027-4c4b-ab96-3bcca8197332",
        "cursor": {
          "ref": "3d66d2df-f8bc-4855-b40d-550604c0c598",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "af12aca8-4810-4fc8-a1b3-6ad5fd62a22f"
        },
        "item": {
          "id": "2b79554c-9027-4c4b-ab96-3bcca8197332",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "58ca9197-89c8-4f44-9207-7984c8975fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6084962a-c29e-48d8-bac0-1ef50dc9f3ce",
        "cursor": {
          "ref": "54d13471-a700-4787-8c9e-d864a0cfcbd8",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c7594ee5-edda-4ce1-9796-fb8fb701efbb"
        },
        "item": {
          "id": "6084962a-c29e-48d8-bac0-1ef50dc9f3ce",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "456a96ba-4eda-42ee-94c0-4acfc1f37464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7a0420-8e72-45c2-a6de-2854edcfcb5c",
        "cursor": {
          "ref": "0a19b70f-16db-418a-8b75-350fdc563bb5",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b8b4ea82-473f-4ac2-a4f1-4e54c806905c"
        },
        "item": {
          "id": "5c7a0420-8e72-45c2-a6de-2854edcfcb5c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0eb2b9ab-cd2d-4bb7-b8b7-9493b1ee7738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ea88a6-a2d8-4687-8ce2-44bf1735ae3e",
        "cursor": {
          "ref": "f29577cf-c8b7-4b09-86c5-8210a78399df",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ecd429cc-9d67-43da-8240-3cbe95bea466"
        },
        "item": {
          "id": "93ea88a6-a2d8-4687-8ce2-44bf1735ae3e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2a458e65-0e46-4a79-951f-7f4adf857f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e62b81e-076e-4eea-a676-70ba0f9c27c6",
        "cursor": {
          "ref": "777a5923-9d66-482f-b16a-399acd89b164",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4922e01e-55c5-4edc-8a61-8550a35ddc46"
        },
        "item": {
          "id": "7e62b81e-076e-4eea-a676-70ba0f9c27c6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "353ecdeb-0bbd-4ff6-84a0-8dc6e6b529b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1e3ee5-e503-4a72-bcc8-648e92efeb4d",
        "cursor": {
          "ref": "19df32a9-6690-4ecf-94d4-01b26847211e",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9bffb372-aace-4a72-bf79-3b1e1a0b59c7"
        },
        "item": {
          "id": "5b1e3ee5-e503-4a72-bcc8-648e92efeb4d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ab9b7464-e922-48d9-9e3e-66aac3e28dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cefdc4e-4c6a-4b5c-a656-31fdc61e9526",
        "cursor": {
          "ref": "32bddca9-c035-4e9a-aa7d-8c571b53de39",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "38323e9b-6f05-404d-8649-2aa5d1f936ce"
        },
        "item": {
          "id": "2cefdc4e-4c6a-4b5c-a656-31fdc61e9526",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ac3fa248-3a9a-4243-a039-88b3dce2ca67",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 643,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82732224-57d6-41ef-a581-07da36f10ba7",
        "cursor": {
          "ref": "99698e61-0e98-4f08-a60d-d09c62b77980",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f7a9dbfe-70b2-4023-b096-607a9c93a356"
        },
        "item": {
          "id": "82732224-57d6-41ef-a581-07da36f10ba7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8e39f71e-ad8e-400b-a163-05991ed550ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b64e55d-0f16-48fe-bd35-40b9242ca236",
        "cursor": {
          "ref": "eaed5784-6fcf-4d67-866e-165bd8306d29",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e2bf8054-8f05-458b-916d-5a2a8de72adc"
        },
        "item": {
          "id": "4b64e55d-0f16-48fe-bd35-40b9242ca236",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "650f6920-2d26-437a-a8f7-cb86195ff856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44165326-a333-4b8c-b101-9b223900036d",
        "cursor": {
          "ref": "fd8957f2-733e-4e79-94e8-d334eebe4b6c",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "199f4514-067d-41f9-bb76-9aa5c7915afe"
        },
        "item": {
          "id": "44165326-a333-4b8c-b101-9b223900036d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b72d599a-6a6b-4411-9357-852a2ca001e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d60f29-4889-48e0-bbb4-5e50b2649a8b",
        "cursor": {
          "ref": "bd22d06c-f5d8-433f-b3e9-be8c8938c8a8",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1bcb03cb-a0e6-44be-96e8-0c6c1c7dbeba"
        },
        "item": {
          "id": "99d60f29-4889-48e0-bbb4-5e50b2649a8b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0970b278-bc1d-40d3-a43e-fc11f3e3fac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d0b628-5612-453c-ba8b-fe014970d29a",
        "cursor": {
          "ref": "16d52f6a-0256-4af7-ada7-1c71f39e4841",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bb4ea6e8-7c20-4c7a-b5f3-a5a5bb864c5c"
        },
        "item": {
          "id": "24d0b628-5612-453c-ba8b-fe014970d29a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "63516b78-dba8-4b45-acec-34ea7d3b383c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff87104c-858b-475b-ac9b-a425d533737d",
        "cursor": {
          "ref": "e9be5b3c-3021-42d5-b664-bae729f1081a",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f59c9c1d-6b86-4ee8-8a80-67cd1a9e3d18"
        },
        "item": {
          "id": "ff87104c-858b-475b-ac9b-a425d533737d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "04ade6b8-6d3a-4f0d-9366-6239b30c1bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939d6ccb-f479-4c72-a98f-973844a58d42",
        "cursor": {
          "ref": "071520cc-cf82-408d-859c-f697a35a11c2",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e1764cef-d4b1-40ea-ac7b-9878844e3d38"
        },
        "item": {
          "id": "939d6ccb-f479-4c72-a98f-973844a58d42",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d2d6854e-e885-4841-9e81-6215d493b122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc577f3-38b8-4ac0-93e4-38c22b79f5c7",
        "cursor": {
          "ref": "9b7b4ccc-2c93-4d60-b552-4e1507450ab3",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bf8e3a61-7928-4469-a3de-28673cb3be0a"
        },
        "item": {
          "id": "8cc577f3-38b8-4ac0-93e4-38c22b79f5c7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dd92cc82-e952-478f-b27a-2bcabb5995e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcd5c86-085c-4573-864c-ae9b7a423695",
        "cursor": {
          "ref": "66a9b076-f78a-4d13-9b80-cbbb2cdbc653",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "838eb0a5-5800-4875-8ba8-fa76d4caaa50"
        },
        "item": {
          "id": "9fcd5c86-085c-4573-864c-ae9b7a423695",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ad0b374b-c987-4467-aebb-b17684e5ff46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb9ed3b-1072-4454-a119-aa914bb882da",
        "cursor": {
          "ref": "d33bc0f2-20d4-475d-bf12-356cec28e487",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "59c260d8-260c-4e10-892c-2b0af24a7364"
        },
        "item": {
          "id": "edb9ed3b-1072-4454-a119-aa914bb882da",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1fff34a7-7b49-4868-be13-33265f8215f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3654ce86-2ad2-4f1c-b17b-2dc000961919",
        "cursor": {
          "ref": "49139ab9-cc46-44f2-8487-499216b9f6af",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9d6ffb88-0d1f-445d-8a9e-87a96524e20e"
        },
        "item": {
          "id": "3654ce86-2ad2-4f1c-b17b-2dc000961919",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2cc7d23f-ff31-42dc-a255-e5ac33e46fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a38a169-2ffa-40bc-94b0-907481d9f5dd",
        "cursor": {
          "ref": "9d4a16d4-88d9-4b1b-acec-76f001e759ff",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e944be03-47e2-486c-8710-d4dd2aad547f"
        },
        "item": {
          "id": "6a38a169-2ffa-40bc-94b0-907481d9f5dd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "744a7ba3-97a8-4d81-8c32-83be391da0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd66dc8-ef95-48f2-9aec-f477e1527317",
        "cursor": {
          "ref": "4c98f3f1-653e-4681-a6d7-662f0f9f7814",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5c6e4012-54ba-4970-99d7-f327560a4295"
        },
        "item": {
          "id": "ddd66dc8-ef95-48f2-9aec-f477e1527317",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "15e50b27-6061-40fa-a97e-e6f9f9304af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9affe76-bfe1-4c5d-859e-0c5032dda4cd",
        "cursor": {
          "ref": "92344925-f349-423e-a056-b61255f5e596",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3d07f61f-cdab-4400-a175-c469f56c6c13"
        },
        "item": {
          "id": "d9affe76-bfe1-4c5d-859e-0c5032dda4cd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "89025725-ba87-4261-a218-79dbcb6d581f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e150e7c-63f5-4eb5-a31a-618118ec695d",
        "cursor": {
          "ref": "6a233ea6-fcb4-4c80-a28b-756b34e4dc2d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "16f36061-bd73-4431-b029-e497fb62e18f"
        },
        "item": {
          "id": "6e150e7c-63f5-4eb5-a31a-618118ec695d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ea2929e6-9864-4425-a760-4d54fce02642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c9a52d-2372-4dfe-afac-7dca333f4bf1",
        "cursor": {
          "ref": "139f83ea-83a0-499d-8181-5561d7071f02",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "60547cf8-c213-410f-a850-4b0c4c8fc293"
        },
        "item": {
          "id": "56c9a52d-2372-4dfe-afac-7dca333f4bf1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a93779cb-7a38-4eac-b5a2-32adb3c75a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e76b02f-a759-489f-8bcc-39dcbf331785",
        "cursor": {
          "ref": "d7347e67-461b-4c49-aa56-2040273d0752",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e4e0d5ab-08a7-4904-896c-0babadb62a66"
        },
        "item": {
          "id": "5e76b02f-a759-489f-8bcc-39dcbf331785",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fe3469e4-c9d5-4aaa-9a8a-ff000e41b752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2559560-f006-46fc-9054-57982588643a",
        "cursor": {
          "ref": "2469d180-8063-4a0c-af50-a5fe1fb4db22",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bbbc8c7c-5a70-4f75-889a-9103e72aaa19"
        },
        "item": {
          "id": "c2559560-f006-46fc-9054-57982588643a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "073af328-87e7-4f83-a7d4-ddbfa1e4f48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ee0de1-4a45-4b13-90fe-a7748d7c3677",
        "cursor": {
          "ref": "e0b6a6b5-ce57-4818-9213-a82d72b62883",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "91c7196f-88fc-4056-880f-52f4976405be"
        },
        "item": {
          "id": "a3ee0de1-4a45-4b13-90fe-a7748d7c3677",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8b374e24-fdc6-454d-ab37-1a2afb05d042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed03d87-574c-41be-94ae-b678f07b1cbe",
        "cursor": {
          "ref": "7798cc8e-18ac-4199-9b36-00244c8786b4",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ebda5678-908d-4cfc-9b78-639047341462"
        },
        "item": {
          "id": "7ed03d87-574c-41be-94ae-b678f07b1cbe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e94df686-0632-43e6-8ad4-874c05839541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79594bbf-4342-43fc-9fc2-14ba54f04847",
        "cursor": {
          "ref": "8df232e6-308f-4362-b83c-61a5dbcc8b83",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "09948342-66f2-406d-9303-80795047859f"
        },
        "item": {
          "id": "79594bbf-4342-43fc-9fc2-14ba54f04847",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f53de49b-3a00-4c63-9eb7-0a7473dd0157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d131f62-a719-4f44-a394-e5b17c3cab12",
        "cursor": {
          "ref": "b570572b-4bfc-4c14-8d57-48bdcb0cd385",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f5f0ac42-e807-4c85-a3bb-b87a8f132d89"
        },
        "item": {
          "id": "2d131f62-a719-4f44-a394-e5b17c3cab12",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bb746562-72fc-4a5b-a6bd-6e93bbb28b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eac1ea-fcc8-441a-8ff4-d8c20ba95569",
        "cursor": {
          "ref": "04aef877-a729-4b8f-84f5-1d3900207853",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "300131a7-b335-43c4-9e71-c9cd211dc262"
        },
        "item": {
          "id": "99eac1ea-fcc8-441a-8ff4-d8c20ba95569",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ba5ddf79-ac05-4d25-be10-f91e6e6995e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38566d83-eb44-48c1-b1d5-b8340b847569",
        "cursor": {
          "ref": "07593aa4-fd49-425c-9065-b440300f4ed1",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dacac805-ddd6-4639-9d46-61db3bdf814a"
        },
        "item": {
          "id": "38566d83-eb44-48c1-b1d5-b8340b847569",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "368b4657-7820-4056-9655-da1013ec8222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8f9b6d-6597-4b37-b69e-8a58284cbc93",
        "cursor": {
          "ref": "5515ae5f-0ea1-40ee-86bc-8a321d94ff06",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "93ceb9db-054d-4691-8cde-7d4e594362e8"
        },
        "item": {
          "id": "1f8f9b6d-6597-4b37-b69e-8a58284cbc93",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2b56876b-aa3b-4317-bbf0-6e6c7416ed49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1e34ad-ed5c-405d-9c69-3308283ab322",
        "cursor": {
          "ref": "b155274e-0a6b-4518-ade9-71b1ad7669c6",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2fbb0164-18d7-4461-99f9-72d5a54011f5"
        },
        "item": {
          "id": "3a1e34ad-ed5c-405d-9c69-3308283ab322",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "59538889-dfab-4f33-a180-3037af17248c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2e4887-b9e2-4f57-9aaa-0f374f0a42f9",
        "cursor": {
          "ref": "6cac9595-f1a5-4a8e-a697-1854a0d8c1c1",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a2b01487-3289-437c-b21a-2db2cc7ea917"
        },
        "item": {
          "id": "5c2e4887-b9e2-4f57-9aaa-0f374f0a42f9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "30e6b743-205f-49af-9339-892bac8c4f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1026,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed89ea2-82e0-470d-a3d3-2649ac2acb61",
        "cursor": {
          "ref": "52828249-a60f-4d31-aa34-2c92d7374be5",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c23001e3-64dd-4962-a658-d8d45f707da2"
        },
        "item": {
          "id": "8ed89ea2-82e0-470d-a3d3-2649ac2acb61",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e8824d58-ba4f-4af8-9269-66c2ba11f1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147145fe-3c9e-4322-952a-8862938c8e8b",
        "cursor": {
          "ref": "f020dac6-3be2-44fa-a598-59d342854ec3",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e2c2d0e3-b56f-4710-be16-b9604ebcf1c7"
        },
        "item": {
          "id": "147145fe-3c9e-4322-952a-8862938c8e8b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ac356438-7deb-4ad2-9fc2-25d828da6167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa584f6-4f81-4801-87ce-e08a482f70a1",
        "cursor": {
          "ref": "d78a240f-e4a2-42bd-b101-3c29e6c75704",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a5ea8b07-2f1c-4825-920e-3649046bfc99"
        },
        "item": {
          "id": "ffa584f6-4f81-4801-87ce-e08a482f70a1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1558ad31-d7cd-41dd-8412-ede11558131b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7adce4a-6d6f-426c-815f-5fcb661bc727",
        "cursor": {
          "ref": "1d26b18d-0087-4f38-829e-949e855dd7cd",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8c52fec0-efc7-4912-8654-db2d95a1edef"
        },
        "item": {
          "id": "b7adce4a-6d6f-426c-815f-5fcb661bc727",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "857f5b5e-84d2-4279-91dd-bf3093126aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a3ae97-f4b8-460c-aa8a-fd9445eda450",
        "cursor": {
          "ref": "13b2c03f-2d1a-4349-b59e-d261ca08f290",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1612630b-2e0a-4676-b5b0-56c39417c6c3"
        },
        "item": {
          "id": "49a3ae97-f4b8-460c-aa8a-fd9445eda450",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b059149a-bb64-4cf1-a5e1-6dfa3fbf975f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee8bbca-80c6-4c16-a9c7-417f506415e1",
        "cursor": {
          "ref": "19e48b3d-e243-4f2d-a999-d65b764255ed",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "15252fe5-effc-4453-90aa-26159daf9b23"
        },
        "item": {
          "id": "8ee8bbca-80c6-4c16-a9c7-417f506415e1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "86a06500-f7e7-4f26-b9ed-6dbd3152de72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269820e8-9648-479c-bacd-089872c65d00",
        "cursor": {
          "ref": "e47f1439-f1e6-414c-b18a-502186f25df2",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "80de3088-9799-4362-b2e2-ae8545eff99b"
        },
        "item": {
          "id": "269820e8-9648-479c-bacd-089872c65d00",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d310836e-045b-4e23-82b0-3fc910bb8a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4b8cbc-f424-4805-8e0c-8f5200ac9ce6",
        "cursor": {
          "ref": "3ca64bdf-29a4-4e17-946a-2955fae5251a",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "200ac7dd-ac40-4c41-a2d7-4cfe14404b98"
        },
        "item": {
          "id": "bd4b8cbc-f424-4805-8e0c-8f5200ac9ce6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bd78d845-3651-4d38-a0c1-048623d50c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ff5ee7-778a-42cd-99d4-397d1a7e0d65",
        "cursor": {
          "ref": "a7342d9d-3871-4f52-b469-f5bc6b1fb7b1",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "afae0d29-df2e-4864-8b8a-b0ea1a0614fb"
        },
        "item": {
          "id": "34ff5ee7-778a-42cd-99d4-397d1a7e0d65",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3eb0e808-413b-4d03-b5ac-1eed10843e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b925ce10-508e-475e-8633-930be4b0e7ec",
        "cursor": {
          "ref": "58bb0db0-5e93-4e81-a5cf-86d06247be7b",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7cf61281-95ac-4776-b1c7-0ed0e3ad7e66"
        },
        "item": {
          "id": "b925ce10-508e-475e-8633-930be4b0e7ec",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "de5f7dcd-4c45-4fd9-a8fb-5616e1b98c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f0488e-f919-4392-a789-0cc3fe584c54",
        "cursor": {
          "ref": "8f005442-72c8-4546-aee9-e34a8cf9a261",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "98af353d-1260-497f-a9d3-0e9c6cf2664f"
        },
        "item": {
          "id": "e1f0488e-f919-4392-a789-0cc3fe584c54",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b70ab6a8-1dc8-4a56-886f-162ac8a41db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a350ae96-53e9-49a1-bcdb-2109cfd49f92",
        "cursor": {
          "ref": "af72e087-e91b-4731-8c21-ce09545a9b56",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fd1c4076-8f8a-42e3-81da-8bbbd1c724a8"
        },
        "item": {
          "id": "a350ae96-53e9-49a1-bcdb-2109cfd49f92",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "77ef43f2-7fa8-4261-8ac5-46e6ac33a157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1096,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df06b235-6ed4-41a8-8c5e-221ff8d090b2",
        "cursor": {
          "ref": "317a2dfc-85f9-43d6-9145-8833f48d8894",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d209a8ef-9a30-47b2-83c2-d6913a18a520"
        },
        "item": {
          "id": "df06b235-6ed4-41a8-8c5e-221ff8d090b2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "daced2b7-3fae-4b30-b77c-21da19bdddd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213204d5-d5fe-4398-a482-bb5121a415c6",
        "cursor": {
          "ref": "81d0b45c-5db9-47d1-8d2c-01be84ec002c",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "80412bee-44f6-48a3-9a56-ecb1a6b90e86"
        },
        "item": {
          "id": "213204d5-d5fe-4398-a482-bb5121a415c6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1654e49f-fe2a-4caa-ad18-7c470320dccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289317f3-0ccc-4d28-b494-cb11b5dab287",
        "cursor": {
          "ref": "69416a8c-6ee6-42e7-8c37-1ab1e9d8a461",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a5cc65b5-89d8-4dd7-af3f-7befbcd34263"
        },
        "item": {
          "id": "289317f3-0ccc-4d28-b494-cb11b5dab287",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1fc5c9cf-bdb1-43d6-bdf0-965ab673b44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1029,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7e2c16-15a9-4029-8831-40d9f1f7dca2",
        "cursor": {
          "ref": "ad48f6a2-520b-43e2-9116-e82a6ea646f1",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d4348516-b409-4f66-8243-5e04747cffa3"
        },
        "item": {
          "id": "fc7e2c16-15a9-4029-8831-40d9f1f7dca2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c880d57a-1f4b-49fc-9321-7e923d315003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26139dc-3b17-4cd1-8459-7a48b92d58b8",
        "cursor": {
          "ref": "6b03740d-c091-498a-9184-f060b3a85b5e",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0edfee8d-cbde-4250-a06f-71f05779e241"
        },
        "item": {
          "id": "e26139dc-3b17-4cd1-8459-7a48b92d58b8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "842464ba-7dcc-49d6-ab2b-57ea900db08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23e1745-d7ab-4e9f-8a2d-c4f078c52723",
        "cursor": {
          "ref": "bccf6477-0af2-4eeb-8685-b2b3aec8a8e6",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f73230d7-9e99-4dc7-9207-fdceead07a96"
        },
        "item": {
          "id": "c23e1745-d7ab-4e9f-8a2d-c4f078c52723",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a76e95ae-1ca7-4fc1-930f-7f2bc3a40b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f72158e-bdd3-4be7-b72e-064d9328b250",
        "cursor": {
          "ref": "d8046be8-781b-4844-ab67-bfcdd6f39fdd",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "63a10cf6-6600-4267-8812-7e6c0ffb9894"
        },
        "item": {
          "id": "8f72158e-bdd3-4be7-b72e-064d9328b250",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9f83845f-d226-47dc-8946-d9b7ddbe7fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0c3afb-f6dd-44db-b50d-04d92148f16b",
        "cursor": {
          "ref": "c911f6aa-83d7-4058-b194-ddc4cbc84f79",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "38bdb65b-cf78-4bc1-953f-f97c53d01631"
        },
        "item": {
          "id": "bc0c3afb-f6dd-44db-b50d-04d92148f16b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1285caa2-e5bb-43ac-a291-d14c87df52ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b95478-779c-4fb6-9c7b-af095df8fbb1",
        "cursor": {
          "ref": "c0d2dac1-e9b7-4532-8be5-06184e347756",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "47e952b5-c8b6-4ccd-a44e-a9ee7d1b47e2"
        },
        "item": {
          "id": "38b95478-779c-4fb6-9c7b-af095df8fbb1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cf3f5d22-544a-4e42-bba0-66611cd97dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b015018-b68a-4b8a-9d1a-3f32d3299411",
        "cursor": {
          "ref": "397cd699-2aa8-4ccc-96f9-39d98c7e542a",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f6d75b8a-6a8c-4108-a526-90dd9fe61fbd"
        },
        "item": {
          "id": "7b015018-b68a-4b8a-9d1a-3f32d3299411",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "835a318d-9dde-427b-8c6a-bbc37608a9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a68f764-c6d5-4c75-b48c-5cf41f0628f3",
        "cursor": {
          "ref": "027da8ff-52f9-4830-bf30-f1a11f884614",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "68093fc4-7bce-47d9-9c33-5f8355c70094"
        },
        "item": {
          "id": "5a68f764-c6d5-4c75-b48c-5cf41f0628f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b7c7fefe-263f-41fc-b55f-737d0f4841ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c4c637-321c-4023-bfc7-5514bb89f6c5",
        "cursor": {
          "ref": "9aad9f93-6b4a-4475-bc6f-ac18a6e9a8c6",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "98ddd8a3-1478-4ec1-9981-762196a8d368"
        },
        "item": {
          "id": "31c4c637-321c-4023-bfc7-5514bb89f6c5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "27f0ce01-0cd9-423c-9783-08c8029c4cbd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 564,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c237d28-0f5d-4c79-af6a-a3aec2ee2c83",
        "cursor": {
          "ref": "5ac6a0e3-f2ab-45c2-9e50-0f0a91e43719",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c425f816-0154-403c-8739-f979774f4252"
        },
        "item": {
          "id": "7c237d28-0f5d-4c79-af6a-a3aec2ee2c83",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eba07091-4289-42af-8c41-ac99ff586a8f",
          "status": "Created",
          "code": 201,
          "responseTime": 5297,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af9320a-f9cb-4d33-a6dd-68cf98e4821e",
        "cursor": {
          "ref": "064d2c52-a8c9-4f57-9521-cf0c3587eb77",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b500eb11-21fa-40aa-806a-d6e10db069b4"
        },
        "item": {
          "id": "0af9320a-f9cb-4d33-a6dd-68cf98e4821e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1ddb5bd5-ad93-43dd-a782-d797d4638686",
          "status": "Created",
          "code": 201,
          "responseTime": 4176,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f789e8-6205-4b68-9444-cc32ff51a465",
        "cursor": {
          "ref": "a507b48e-8566-48e4-875c-f2bf440295b6",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ad440a0c-2b03-464f-a3aa-c9be5e9127b2"
        },
        "item": {
          "id": "43f789e8-6205-4b68-9444-cc32ff51a465",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "278b37e9-84cb-4da1-ac99-7c07b6bda180",
          "status": "Created",
          "code": 201,
          "responseTime": 4009,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "824e56c0-c5de-4889-b469-87e694c7bea8",
        "cursor": {
          "ref": "dca3a9c7-d580-4a16-b479-28503add8508",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ab7155a9-4e11-40b4-b517-965c1ffb6ca0"
        },
        "item": {
          "id": "824e56c0-c5de-4889-b469-87e694c7bea8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "800492c9-2b62-4666-967c-55dace774371",
          "status": "Created",
          "code": 201,
          "responseTime": 5043,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7709a8-c1be-44c5-a0cc-1c77330ef62a",
        "cursor": {
          "ref": "d7672a24-4961-4cef-8d8a-fb6e2905cc4f",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c811a714-804b-4c9b-96c2-a43cf85fe24d"
        },
        "item": {
          "id": "8f7709a8-c1be-44c5-a0cc-1c77330ef62a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "630ce9ed-5780-4431-b3b3-fe973fe66be9",
          "status": "Created",
          "code": 201,
          "responseTime": 4433,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fc75b8-05ba-4b04-9f5e-bacff33eb899",
        "cursor": {
          "ref": "ac87cd07-dc77-49c4-b997-33e38002c27e",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ff497533-bf3a-4d22-8cef-3b44cbdceeef"
        },
        "item": {
          "id": "c5fc75b8-05ba-4b04-9f5e-bacff33eb899",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "74a7737f-e31d-430c-bc6c-f8e9d1f5fbd4",
          "status": "Created",
          "code": 201,
          "responseTime": 6006,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a541065-c700-446e-80d8-02d9f8dbbd0c",
        "cursor": {
          "ref": "7265c3cd-1cda-4610-b7af-8a4a0a603c9c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3bd4b668-d83a-401b-a496-c042c889c9ca"
        },
        "item": {
          "id": "0a541065-c700-446e-80d8-02d9f8dbbd0c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "69e8ce56-51ef-45ac-aaac-a447883954fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a541065-c700-446e-80d8-02d9f8dbbd0c",
        "cursor": {
          "ref": "7265c3cd-1cda-4610-b7af-8a4a0a603c9c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3bd4b668-d83a-401b-a496-c042c889c9ca"
        },
        "item": {
          "id": "0a541065-c700-446e-80d8-02d9f8dbbd0c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "69e8ce56-51ef-45ac-aaac-a447883954fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16af4446-99f4-4734-a895-1a0c76b52aea",
        "cursor": {
          "ref": "e45ef49b-e786-4c6f-a5c5-20e0cce0cdd1",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8cf5c456-4a05-466c-b4d6-4585135b3ec9"
        },
        "item": {
          "id": "16af4446-99f4-4734-a895-1a0c76b52aea",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "089e4511-7e46-4238-8602-6fd36b75e2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baabdcaf-f708-46a4-bbc6-924d60dc99b7",
        "cursor": {
          "ref": "2c0f79b3-7c20-4f48-8198-ba30062afbaf",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "58347b05-60c0-4900-b93e-7322286e5bf4"
        },
        "item": {
          "id": "baabdcaf-f708-46a4-bbc6-924d60dc99b7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da17a4e8-469b-4815-b54e-a85b6fa56271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ede198a-6454-4bc8-b19b-999d355473e8",
        "cursor": {
          "ref": "5a90890d-ea75-4c54-9f46-493394c07151",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ef96f599-1aac-4bef-8b69-07642a4f3f2b"
        },
        "item": {
          "id": "9ede198a-6454-4bc8-b19b-999d355473e8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "61791701-18e9-412f-932b-14d9713552f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ced6f8-7888-4222-8f9d-86976a41d60c",
        "cursor": {
          "ref": "fc29c7da-4a23-49f4-aabe-1b87dd056079",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0995d900-45ec-48c2-b05a-8a2d7463f5d3"
        },
        "item": {
          "id": "d6ced6f8-7888-4222-8f9d-86976a41d60c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "986f9961-f11f-4585-900e-d90ef55008df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095cf6f3-a8c2-4e94-8909-70effaf65637",
        "cursor": {
          "ref": "5570bcdd-cd00-4a2c-a287-1e51e03e6cd4",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "10d66c01-0d6a-40d4-bb3f-f8cf8a306a63"
        },
        "item": {
          "id": "095cf6f3-a8c2-4e94-8909-70effaf65637",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "50a52908-0d36-4c4a-b5c5-0e9f53ff048f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb7ab74-8367-4e03-9450-86900502224c",
        "cursor": {
          "ref": "3e2cca09-7e48-48d5-8ec5-ce50015a90f9",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2b310f0e-d976-4898-bc73-01eec60a5a60"
        },
        "item": {
          "id": "2cb7ab74-8367-4e03-9450-86900502224c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "89a60f50-a2e0-4500-a94b-d2253112205c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f2373a-b5b5-4da4-8a11-0fc7203b6917",
        "cursor": {
          "ref": "64bf98ac-0848-40a0-89ab-bc73561697d0",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "75566e89-d18a-4a48-9400-484e5b4906a8"
        },
        "item": {
          "id": "59f2373a-b5b5-4da4-8a11-0fc7203b6917",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "03b6cea0-aae9-4f88-8ce3-ef73c316e0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b07ab0-6ac3-4eac-b712-1a79de7b72b0",
        "cursor": {
          "ref": "2c9796f3-a4fe-44bf-a7dd-619adc95f5dc",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d69d0fdb-acde-4d7a-bf4a-a2070c509361"
        },
        "item": {
          "id": "24b07ab0-6ac3-4eac-b712-1a79de7b72b0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "05e55083-bb93-484a-b03a-cdb8568f7e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6715cfb6-00c9-4d25-8c4d-dc8ed1f117cf",
        "cursor": {
          "ref": "13701ce2-7faf-462a-8d3e-9141068990a7",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cee0ddaf-f18b-45b0-900d-7bd1a855970c"
        },
        "item": {
          "id": "6715cfb6-00c9-4d25-8c4d-dc8ed1f117cf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ecd9b066-4cef-4bb9-b093-dcac21238c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641c0393-3b28-4e8c-834b-dd73eaf51b92",
        "cursor": {
          "ref": "963b59a0-3c33-47f0-8743-6b1be512f58d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "de3ed008-70b3-443f-a8e2-fe0b37f9762f"
        },
        "item": {
          "id": "641c0393-3b28-4e8c-834b-dd73eaf51b92",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e430d17f-c2bb-477c-afb8-32a2f72b6f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2efbe9-2288-4ff6-96e8-0a437cf5e3e2",
        "cursor": {
          "ref": "a4d349e0-21d8-4e07-ae66-46e7dc26add3",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "75dee3eb-44e5-4ebb-a0f1-de8515264c67"
        },
        "item": {
          "id": "2f2efbe9-2288-4ff6-96e8-0a437cf5e3e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c09559a2-b5db-4209-a442-4515134aa142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a12ffb-bc13-414a-9d4c-3a169571e6ec",
        "cursor": {
          "ref": "b25de440-56fc-4a1a-987a-080a71b738d2",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b29d0048-c1a4-4131-b1e0-447d48e24745"
        },
        "item": {
          "id": "e2a12ffb-bc13-414a-9d4c-3a169571e6ec",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "41eadba0-08cf-4d8b-837b-232fee12f4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc2b64d-b050-410c-a8cc-0b135964e7f5",
        "cursor": {
          "ref": "011bb1dd-bfd6-40e0-a102-6a8690759a25",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c70a71db-5c20-4432-8b9a-4f30ad8e46a0"
        },
        "item": {
          "id": "ecc2b64d-b050-410c-a8cc-0b135964e7f5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d56296d3-a6fb-4def-889a-dc6832fe6572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bce4bbe-8b97-443d-aea3-0b4c16f73356",
        "cursor": {
          "ref": "a8195ff6-0028-4567-82b2-6bd1ce4fc546",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7368f0e8-5d1c-4fad-9276-6a8026f7f22f"
        },
        "item": {
          "id": "0bce4bbe-8b97-443d-aea3-0b4c16f73356",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bf367c83-53ff-4591-808d-61a1ea54a3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178e33af-386e-4803-903e-34c33524633e",
        "cursor": {
          "ref": "265c258a-eb35-4093-a0a8-594ae0b17a31",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "57f34be7-559f-41ef-9488-22fe0a40e901"
        },
        "item": {
          "id": "178e33af-386e-4803-903e-34c33524633e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43d1a6af-4dd8-47cb-81c2-d0ad89652e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89100152-6cb0-4dc0-8824-4fafab25306d",
        "cursor": {
          "ref": "12b03998-f849-4a69-b15a-f7fa40ef629d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d728ce96-c319-478a-964e-b57c0a882fd3"
        },
        "item": {
          "id": "89100152-6cb0-4dc0-8824-4fafab25306d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b9a35553-8043-4ddc-96c8-ac1cb5eee740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a543495e-34e9-4060-acb3-9ea06aed7e31",
        "cursor": {
          "ref": "014f403f-dfb2-4283-b82d-9c4a6c0087ed",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eb793224-b61b-40ba-8983-bd65242e1345"
        },
        "item": {
          "id": "a543495e-34e9-4060-acb3-9ea06aed7e31",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "36debeb0-2f8b-40e6-a482-150c254e19d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d682fc-8fcb-4f01-8e8a-3f250f38e894",
        "cursor": {
          "ref": "baee508f-93a0-4e52-92a8-dd76992a6f10",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cdaa0d21-d553-4c62-b2cc-89a67dd90c6f"
        },
        "item": {
          "id": "32d682fc-8fcb-4f01-8e8a-3f250f38e894",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f7e47a2a-1412-4019-956c-cdfcd3556355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf0b66-a0ee-4c75-bc06-a87ad97682ff",
        "cursor": {
          "ref": "70c865cd-91da-4bad-985a-eb2b796442ec",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "33b73074-a310-49fc-b636-e0c44ae7e29d"
        },
        "item": {
          "id": "d8bf0b66-a0ee-4c75-bc06-a87ad97682ff",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "759edcea-be19-47fe-967a-655fad71d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c921c0-2e98-407d-9b42-371f4d7497e4",
        "cursor": {
          "ref": "32365781-2660-4b19-82cb-ae75d4dca061",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "aa0052b7-9052-403d-9d03-466fac47c752"
        },
        "item": {
          "id": "75c921c0-2e98-407d-9b42-371f4d7497e4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5ce65ad3-d68a-4d71-b984-53f50951c046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f58737b-dc22-4065-94e7-a2597ceca952",
        "cursor": {
          "ref": "2eee6b67-eee9-4534-8964-bbf19a75020f",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9a4d9c98-c7dc-4441-a6be-151a65cf1955"
        },
        "item": {
          "id": "0f58737b-dc22-4065-94e7-a2597ceca952",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1252122d-e1c4-48b1-b812-92edb1e53491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09af8deb-7694-4d23-ae25-b0c290e3f825",
        "cursor": {
          "ref": "8053a7b0-c843-4765-a54a-a3e9d8c34e7f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea672e02-781d-44fa-a08d-3da80e480b0c"
        },
        "item": {
          "id": "09af8deb-7694-4d23-ae25-b0c290e3f825",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6f60fa16-9928-4bc0-a907-cf6f7587030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d99171-60eb-47f3-80a6-0f9e9871c8b0",
        "cursor": {
          "ref": "54bdbf4b-e688-4425-8652-3dfe39a29d5f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "055983f3-ac6e-473b-9190-7ba575d8a48c"
        },
        "item": {
          "id": "e5d99171-60eb-47f3-80a6-0f9e9871c8b0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "18e0a180-9304-4c20-b0c7-082e3f916967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7727d4-312e-4f23-b3bc-9d029efc2209",
        "cursor": {
          "ref": "6072d12b-c29d-4de2-92ac-f3296c4c6a6f",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8aca4aed-656d-44ad-b148-9aad3fdbffe3"
        },
        "item": {
          "id": "aa7727d4-312e-4f23-b3bc-9d029efc2209",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dc08fe39-1c1e-4e0d-8f1a-9ef4da23b0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddf4b15-844a-4dac-9780-4a628b78c032",
        "cursor": {
          "ref": "240e39fb-4c05-4f8c-be2f-87a8efd07a81",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1a509d3b-bd1b-475c-900c-c519a82f870e"
        },
        "item": {
          "id": "eddf4b15-844a-4dac-9780-4a628b78c032",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b44e9b1a-3603-49dc-bdf5-9d4d38416a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d4f38c-dae3-492f-a2ef-0d892e221195",
        "cursor": {
          "ref": "ac771611-95a6-4412-b3ac-014dcb1e7bcd",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0406b24b-d305-45f7-a7a4-320fe4e2cd67"
        },
        "item": {
          "id": "98d4f38c-dae3-492f-a2ef-0d892e221195",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "016cd8da-a617-4cdd-bf14-fa0d6cfaf945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac01f2e6-09e7-4293-91e0-c14dab2784e1",
        "cursor": {
          "ref": "96129433-07ec-46cf-a656-a2630686ab44",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5a8abdbd-8336-4871-8b11-e632e2ba86f2"
        },
        "item": {
          "id": "ac01f2e6-09e7-4293-91e0-c14dab2784e1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ce9f9a2a-7e5c-4a72-af87-bfd08098c91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edf5891-03e2-40e4-a910-5e2ee385d4a1",
        "cursor": {
          "ref": "ff0714c4-5cc9-425e-81d6-be5232209403",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "babe167e-4e01-4dc3-af72-f78ef740fb8b"
        },
        "item": {
          "id": "4edf5891-03e2-40e4-a910-5e2ee385d4a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eb6a6e2c-7f94-43da-b734-551d498a8126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02787515-618e-48a6-8925-a7cf2c30638a",
        "cursor": {
          "ref": "5c31393a-2d61-4df9-ab7b-066f3834a62c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1bbd9774-07dc-4a14-a454-f26861fbe581"
        },
        "item": {
          "id": "02787515-618e-48a6-8925-a7cf2c30638a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3c19bbc6-01d6-4ea7-a375-98c80b54e6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c67d22c-81c9-44a1-b46b-22c1f124791f",
        "cursor": {
          "ref": "56a7a5a6-b2c8-4397-a64e-1c1892d1a3ba",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "706fb6b7-457f-499a-8039-a32fb21504aa"
        },
        "item": {
          "id": "4c67d22c-81c9-44a1-b46b-22c1f124791f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8b98a9f3-01d4-4a31-b8bd-2ef5c4cb3850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90fd9ff-e098-4829-8935-7df40e420fa0",
        "cursor": {
          "ref": "59283192-76d3-49e7-9686-b96a170c7e5c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e8d9dbff-1484-4f0d-8de8-4b3b4a09f2b0"
        },
        "item": {
          "id": "a90fd9ff-e098-4829-8935-7df40e420fa0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6e12d5d3-3e1f-4576-a587-29fbf8f186be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4803d1-0eea-4207-9ee6-28bae061f6fa",
        "cursor": {
          "ref": "1b5819ef-0134-4678-9b36-6dcb3bd1a544",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7c17c4cd-9080-4ede-9f96-00d6175b9711"
        },
        "item": {
          "id": "8c4803d1-0eea-4207-9ee6-28bae061f6fa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7c838dca-8a9a-4cbd-93e5-6d7a90e97fed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd6d4d1-e3da-49cc-bce8-6eae90036871",
        "cursor": {
          "ref": "eddffbdc-77cb-412d-ab0f-a5d2780b01ea",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1a185868-8642-4c57-a57d-dd64e74b049e"
        },
        "item": {
          "id": "8dd6d4d1-e3da-49cc-bce8-6eae90036871",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8262fa58-ef77-4252-9b9f-3f4752693384",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f46b56-9210-44c3-bd4b-a2b5c0c5c27d",
        "cursor": {
          "ref": "47bea0d2-16ac-4239-99a3-bc062959da08",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5a28866d-6cf2-419f-a2aa-6b733bc4083e"
        },
        "item": {
          "id": "a3f46b56-9210-44c3-bd4b-a2b5c0c5c27d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b55e716-d810-4611-8c47-d20da10c688c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f46b56-9210-44c3-bd4b-a2b5c0c5c27d",
        "cursor": {
          "ref": "47bea0d2-16ac-4239-99a3-bc062959da08",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5a28866d-6cf2-419f-a2aa-6b733bc4083e"
        },
        "item": {
          "id": "a3f46b56-9210-44c3-bd4b-a2b5c0c5c27d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b55e716-d810-4611-8c47-d20da10c688c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e5be82-2cee-4c2e-926b-fda9a83dd76f",
        "cursor": {
          "ref": "e0725d2f-9763-4c80-aaab-f4e19601fa22",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e7f0ab95-5000-4301-a172-3266dbada07a"
        },
        "item": {
          "id": "d4e5be82-2cee-4c2e-926b-fda9a83dd76f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "75f2dc75-eb41-4f70-8cbb-f351795d3ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e13bc4-d336-4439-96fb-8bf38efe3b1a",
        "cursor": {
          "ref": "9bd1a445-8758-450d-ba54-d3d97732c1fc",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2025cda7-16d6-4cfe-983d-a79a59dc864c"
        },
        "item": {
          "id": "80e13bc4-d336-4439-96fb-8bf38efe3b1a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "23707e0a-1020-439d-b990-91e0dd499f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bd731c-434e-41e5-820a-39f22173867f",
        "cursor": {
          "ref": "d2cb886d-d23e-4189-a1ad-cd28e87f6785",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "afd8199e-c925-48f8-ac00-b47e6b8812ad"
        },
        "item": {
          "id": "c3bd731c-434e-41e5-820a-39f22173867f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3b962aa9-fe48-497e-9d68-f4c41e5d0fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92081a85-4aec-4a28-9a5a-9067583e3e5c",
        "cursor": {
          "ref": "d7881633-9ae5-4266-a2fc-9b9cc2186dfa",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cd50bc22-e03e-44d1-ba07-a6a466213239"
        },
        "item": {
          "id": "92081a85-4aec-4a28-9a5a-9067583e3e5c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "076a23f2-afc6-4ecd-a262-2bcfa6317818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405e5e48-fa7b-4e32-8699-0c4210c85c35",
        "cursor": {
          "ref": "5e885d29-ff86-4acc-b1c7-31a3977263d4",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "03f9804e-0fc5-49e4-88d4-6d022ba1ffc0"
        },
        "item": {
          "id": "405e5e48-fa7b-4e32-8699-0c4210c85c35",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a255d871-b9fb-45ce-91b7-cd14b9d47688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0707f5d0-c1aa-4587-a758-e0fb1ba800e7",
        "cursor": {
          "ref": "e7a90d71-5cd6-4c65-b5a1-000e84a416a4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9acf7123-a7af-43a8-9e80-dab420f624d0"
        },
        "item": {
          "id": "0707f5d0-c1aa-4587-a758-e0fb1ba800e7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "69ea6058-941f-4537-a85a-bf16adb3142d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e7677b-7320-442a-badc-1c527fdb1980",
        "cursor": {
          "ref": "591c7a4e-2d48-4934-b094-448bafd1956e",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5a2be133-2848-45f1-ba2d-0b062c284275"
        },
        "item": {
          "id": "91e7677b-7320-442a-badc-1c527fdb1980",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e84444b0-e6f6-49f7-924b-80a41db19978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a227bdc-505a-4ba5-8209-c3c8286f58ca",
        "cursor": {
          "ref": "fc96c407-2579-4da9-b756-7475d1fb388a",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5e8773ca-6785-4d23-a44b-92ee0e5f1940"
        },
        "item": {
          "id": "5a227bdc-505a-4ba5-8209-c3c8286f58ca",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ad6f140c-fc80-41b9-b752-51e0095a00d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040c3811-7519-47d9-9872-1d27d682742f",
        "cursor": {
          "ref": "e0dd4178-505d-46b9-89d7-e01c354be976",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e4c66e9e-a101-4281-844f-6f5f134ec264"
        },
        "item": {
          "id": "040c3811-7519-47d9-9872-1d27d682742f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "26461e08-a5d5-4cee-ab4a-7fc9a4e7a0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b86ccb-e528-44b3-8526-c777e9bf7441",
        "cursor": {
          "ref": "2fb96031-0cf6-444b-8156-da59d48cd002",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f74e3b01-296c-4207-b59e-3a752fbf28f0"
        },
        "item": {
          "id": "d0b86ccb-e528-44b3-8526-c777e9bf7441",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "47eb21a6-3daf-4c9a-9edc-c7be634df9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16c3506-6a5a-4268-8ed6-13b8e7c7e68b",
        "cursor": {
          "ref": "f80eff5f-5e97-442b-b8ce-e78373e0c827",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4eeeccc5-0ed5-474a-9206-7ba530f451a8"
        },
        "item": {
          "id": "b16c3506-6a5a-4268-8ed6-13b8e7c7e68b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4bcb56c8-dd2d-47c0-bb8c-ede122ba60fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0114a231-043e-4969-8cb0-a159159ed720",
        "cursor": {
          "ref": "fdcbb3fd-e423-4144-916d-b16ed94c8d5d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c9dcc1d8-9d4c-42df-9260-2d80deca6765"
        },
        "item": {
          "id": "0114a231-043e-4969-8cb0-a159159ed720",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8e225c38-bc40-48ec-9971-f4d28279975b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8c0daf-0846-4367-9c89-b6d4bbea480b",
        "cursor": {
          "ref": "5a74b9d4-8d33-4f4f-b5d7-7409c0c015a1",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "470e1562-a15e-4050-acb5-f591a6585954"
        },
        "item": {
          "id": "dc8c0daf-0846-4367-9c89-b6d4bbea480b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e180b39c-886e-493a-b151-e8b9e629c4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b114c9-fd25-4769-a292-d5f4a2565a88",
        "cursor": {
          "ref": "6b776398-f375-40e3-a92d-cab7b62d0e33",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "828072a3-11f3-4c7f-a178-f0edc9b9a8e8"
        },
        "item": {
          "id": "b5b114c9-fd25-4769-a292-d5f4a2565a88",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e5fb8e55-599c-44dc-9ad3-8bfe0104a3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade034d2-cbf7-401d-ac5d-fb480415ab04",
        "cursor": {
          "ref": "e4bd63fc-f9ad-4829-9a98-d10f0d591256",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ddd9aba6-8d40-48b3-83fe-6b93b5891603"
        },
        "item": {
          "id": "ade034d2-cbf7-401d-ac5d-fb480415ab04",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "086918af-9666-49d2-8a11-d8025ac749a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a21d6e-9cd3-443f-bffb-b50fd8784372",
        "cursor": {
          "ref": "5bb09653-c92f-48ce-8a40-26d7ee4dc8fd",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8f673e09-95ff-4047-b0db-67e9b4fd8289"
        },
        "item": {
          "id": "30a21d6e-9cd3-443f-bffb-b50fd8784372",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "10ec7948-2180-494e-8a8d-44276b5bda3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dce659-879f-4096-97d1-6b8fdde57524",
        "cursor": {
          "ref": "76194dcf-2721-450c-adc2-95eb199daef5",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "361c8af3-41ff-40ad-a28c-9218315e3dd6"
        },
        "item": {
          "id": "f5dce659-879f-4096-97d1-6b8fdde57524",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c15fb50-1b28-46b7-9346-3064724a9046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d38b507-ff2c-49d2-9489-c34a1983a973",
        "cursor": {
          "ref": "8120b69f-9864-4936-89aa-1f5027315fa1",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cb22d063-6104-4ff9-846b-f9860f59e8b4"
        },
        "item": {
          "id": "2d38b507-ff2c-49d2-9489-c34a1983a973",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e31e7429-1d3f-4087-8c72-d78832f64262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6a8e15-e64f-447d-990d-64be939ae48f",
        "cursor": {
          "ref": "f9ee69cb-0edd-4284-b28e-7f90e3af4e45",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "974f4418-1875-4b2b-a7e1-bc27d1c1c6e3"
        },
        "item": {
          "id": "2c6a8e15-e64f-447d-990d-64be939ae48f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "58ba7133-1a86-409f-aa60-db6ad4378959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa09fe18-8972-40d9-bf6c-e72beec731da",
        "cursor": {
          "ref": "bece8a0d-255c-4039-9417-844f3935277a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "51b723e2-be29-42eb-b079-a97e8c912122"
        },
        "item": {
          "id": "aa09fe18-8972-40d9-bf6c-e72beec731da",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "697b5897-bc90-4ea0-aff0-9a2f9dfb1056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8174393-8e55-438f-9d14-50253034cca9",
        "cursor": {
          "ref": "3509b7b3-4b12-4e6c-abbe-27f9f878d4b1",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ebfb1240-0985-470c-992b-4842063bcd77"
        },
        "item": {
          "id": "e8174393-8e55-438f-9d14-50253034cca9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "46781e2a-d282-478b-9322-b711621ed8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c55f6b1-bc01-4dbc-adc7-4dec5800275d",
        "cursor": {
          "ref": "aed7170e-a866-44d5-b3e9-858c69cf7989",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "63a6b571-0a1c-42cc-b42c-eb22d1dfaedf"
        },
        "item": {
          "id": "0c55f6b1-bc01-4dbc-adc7-4dec5800275d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bfa3076b-a524-46ad-8082-b5dad3b2328e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1e2076-9b64-4106-acf3-c03e800ba07b",
        "cursor": {
          "ref": "71b700d2-8d32-401d-b77d-18ba16304989",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b1d4e507-d87d-494b-998b-c857bef26c03"
        },
        "item": {
          "id": "8f1e2076-9b64-4106-acf3-c03e800ba07b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1730aa73-7791-4748-b176-4d4eda4ad3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccbbf02-b197-4599-bd82-d441c3c9c064",
        "cursor": {
          "ref": "ae14419d-1390-4512-b1f1-009df746f6ea",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fa09a89d-c1c0-4e4d-a6e1-040019211181"
        },
        "item": {
          "id": "0ccbbf02-b197-4599-bd82-d441c3c9c064",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a77dc35-f4f7-41d8-9f17-604a1113a54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadc80d7-3f5d-48b5-8562-a12a0821a426",
        "cursor": {
          "ref": "cdede203-690c-40a7-8167-6717a3123c4e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "509ce852-0421-4af5-b201-9ecb7d2c6919"
        },
        "item": {
          "id": "dadc80d7-3f5d-48b5-8562-a12a0821a426",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "38dbfe05-551b-46b8-9705-ac7298e47107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02638be-fa58-4f68-808a-3c6847705942",
        "cursor": {
          "ref": "3928582a-4338-4357-9e60-6abd5e15b5cd",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "39cb3d0a-2673-4933-89b6-1d69a7dca1b5"
        },
        "item": {
          "id": "a02638be-fa58-4f68-808a-3c6847705942",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f2c9b62f-8deb-4599-a7da-7c58c1acb0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bec5fa-c83f-417b-87e6-33133d387911",
        "cursor": {
          "ref": "4231a649-3d97-433d-9a55-78a8f50e49f2",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e01e92c7-0de9-4c1a-a612-f0ef26eb7a11"
        },
        "item": {
          "id": "20bec5fa-c83f-417b-87e6-33133d387911",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f5a4f81f-d6d9-4590-ad54-098dedeed643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1186,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7e1ca1-5464-4849-8325-1aa326e79ff5",
        "cursor": {
          "ref": "5d8eafa4-5e79-45cb-98ef-57368e69e26a",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "867105dc-9c68-4d95-97ea-4bcbe07e1b70"
        },
        "item": {
          "id": "4f7e1ca1-5464-4849-8325-1aa326e79ff5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "93084a22-640f-4466-be95-701762dd664a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1031,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1a1dff-8334-4fef-8634-fa1a5bef8428",
        "cursor": {
          "ref": "6c505414-4fd8-4812-b6ac-780d89728b28",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f160c4ab-1ef8-4f40-9b3c-8149f5a09c9f"
        },
        "item": {
          "id": "6a1a1dff-8334-4fef-8634-fa1a5bef8428",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "29658886-2cf4-4cc3-869e-e6a135d38a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de1cc06-8272-4c81-bcc3-41da0bde7f65",
        "cursor": {
          "ref": "b3cb7250-b6dc-46a4-b5ba-9daee471fa3a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4b274754-6d1f-435e-9cba-a0610ae68592"
        },
        "item": {
          "id": "5de1cc06-8272-4c81-bcc3-41da0bde7f65",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f2c615f6-d848-4bc2-8c9b-fa17b0dd706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f7046e-f32b-4cac-9288-b012d65de140",
        "cursor": {
          "ref": "1621cd53-a59d-4769-86af-e6815144735f",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bb0572d5-e5cd-48d6-a64a-c20644cbec9c"
        },
        "item": {
          "id": "97f7046e-f32b-4cac-9288-b012d65de140",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "09acf4a3-444d-4a6a-8a7e-79cc907c12e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98f42b1-7489-41bc-9bcc-0ce00e170f3a",
        "cursor": {
          "ref": "f595450e-a45c-4afd-92ea-00aa69ce2954",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8a6962ea-1729-4bdc-87f4-a92e9eb7cb0b"
        },
        "item": {
          "id": "c98f42b1-7489-41bc-9bcc-0ce00e170f3a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "46d8e268-01a2-4fa2-93f0-c36b066b2225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929a5af1-9b23-4f79-80e2-5f20569dcfdc",
        "cursor": {
          "ref": "c423de07-55f2-4810-9f10-6d699f798f58",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4163cec2-2f05-418b-9943-2db389d744b0"
        },
        "item": {
          "id": "929a5af1-9b23-4f79-80e2-5f20569dcfdc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "12e54a4d-ed08-4d1f-a7f0-1a2bc67cc4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad9fe6f-bc34-44d0-b11d-e67f59f8273d",
        "cursor": {
          "ref": "2055d1fd-1633-47d3-ad5e-c236b841b2ab",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "aa09bdd0-3a49-4c27-8997-4f5789a89348"
        },
        "item": {
          "id": "1ad9fe6f-bc34-44d0-b11d-e67f59f8273d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b27bdf60-9061-48af-8859-db2849198394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb89711-7527-4b8f-8252-7e4c7ecf5816",
        "cursor": {
          "ref": "eac7a11d-092d-44b3-8344-be4ef3fdf566",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b071f4f2-9cee-4cf8-9401-07844d12eff7"
        },
        "item": {
          "id": "2fb89711-7527-4b8f-8252-7e4c7ecf5816",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "82585b66-2df4-4b08-855d-5be7d140e3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb556c03-19f0-435e-a466-787cb5bf7833",
        "cursor": {
          "ref": "b453fa19-91c5-4ba6-8d3b-8201184079de",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1c534ea6-40c6-4583-8ba1-2f564a58d1a9"
        },
        "item": {
          "id": "eb556c03-19f0-435e-a466-787cb5bf7833",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5a278610-9c31-46a7-9bd8-7501132600dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15e09b6-d14c-462c-8f83-0fdf8b716bd8",
        "cursor": {
          "ref": "de8e0ed5-4372-4584-a2a1-b8f2dd7c4197",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0e2b0e85-2f61-4444-9e57-818d47318d7b"
        },
        "item": {
          "id": "a15e09b6-d14c-462c-8f83-0fdf8b716bd8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "89e7e8e7-6e92-42ea-b7f6-8cafe80b786e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84035ea8-b16b-4b99-9d1e-1d0150c675bc",
        "cursor": {
          "ref": "3028cf82-4b7c-4da7-8fb7-bc4281830b3b",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e7704484-285c-4a55-8eac-e2f25ff0b683"
        },
        "item": {
          "id": "84035ea8-b16b-4b99-9d1e-1d0150c675bc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ae530b7a-8260-4135-965c-48652c3e7351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e637d5ed-f82e-427a-9b08-620e81756ad8",
        "cursor": {
          "ref": "6ad2c8df-1e41-46f1-863c-2a5a5e0a43f0",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c7779fd1-236f-4bc4-94c7-2eef227adc2b"
        },
        "item": {
          "id": "e637d5ed-f82e-427a-9b08-620e81756ad8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c3753712-7954-4321-baa6-a823935c88ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b16db-8a30-478c-8766-bfaf71d94b02",
        "cursor": {
          "ref": "6f9620b6-2f24-44fb-9b4a-81afec619c37",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eb7873d5-f4ab-4f35-b200-f41cd006846b"
        },
        "item": {
          "id": "418b16db-8a30-478c-8766-bfaf71d94b02",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c609689c-c037-420c-96a1-b99453a2a7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b5c79-7363-4d85-8d0b-f3d74a526c43",
        "cursor": {
          "ref": "a0dc1d40-defe-4832-a6e4-22bcc077acaa",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "322cfa62-4e37-4900-bf5c-ac37eb02c4fb"
        },
        "item": {
          "id": "080b5c79-7363-4d85-8d0b-f3d74a526c43",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "77f57b0e-3f7a-4b85-a9fc-a3244f2523cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfebe9b-3601-4ff8-ad50-5f71e7bc9da3",
        "cursor": {
          "ref": "7f56186e-e48b-46ba-9b0f-68bae0677ca6",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "dfea68e7-fff0-454a-ace1-c691dda27b39"
        },
        "item": {
          "id": "6bfebe9b-3601-4ff8-ad50-5f71e7bc9da3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6a6710cd-7d2d-4e8d-945b-67b6e3102ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f7862f-77ea-4ca1-8467-20dbb02dd794",
        "cursor": {
          "ref": "04a2f3c5-a4a7-4748-88bb-dbfd9eb8e955",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ce5c027b-b82b-4934-a757-42b9251a9342"
        },
        "item": {
          "id": "62f7862f-77ea-4ca1-8467-20dbb02dd794",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1d8f2676-cddd-460a-8042-a96fce6c37db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5c8e74-f2f4-4874-8fd9-f8d04e4a5001",
        "cursor": {
          "ref": "83682e83-dde4-4a55-9474-059c47d7a4e4",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b96876e4-3b90-4111-ad52-7dcd153b1381"
        },
        "item": {
          "id": "0f5c8e74-f2f4-4874-8fd9-f8d04e4a5001",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7e0bcc1c-1c39-4c14-b0b7-1e056d3e80be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaeb48d-063d-4b09-a176-6a87b2d3d7a9",
        "cursor": {
          "ref": "34fea4c1-01ab-4b5c-a1bb-fbaca43f5f67",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "48c100bc-352e-481a-9e95-e184e1f9cdab"
        },
        "item": {
          "id": "5aaeb48d-063d-4b09-a176-6a87b2d3d7a9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f8a645a9-c2c7-4576-b1e1-0a79503171e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06151246-1deb-41da-b212-a16ba19b7b4c",
        "cursor": {
          "ref": "ac0f50ce-4f1c-48e0-b6cc-ba747e03071d",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dcd82138-ca60-44db-b3f3-7c7d131968ae"
        },
        "item": {
          "id": "06151246-1deb-41da-b212-a16ba19b7b4c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5e018a05-2368-44de-9bbd-61826bb698bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daa8ac4-770c-4ba4-ad3c-5afa41a1bbf7",
        "cursor": {
          "ref": "cb9a5f8a-767c-4b5e-add8-f17d33cc6984",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "931e7645-b57c-42b9-b885-9840e08fc1e9"
        },
        "item": {
          "id": "0daa8ac4-770c-4ba4-ad3c-5afa41a1bbf7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6caadd21-642b-4d70-99fa-61b71d8c2152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93fc6d7-b647-4c80-a350-335589535b06",
        "cursor": {
          "ref": "c839ba57-3061-4dde-a8f7-063343db8fb8",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8b9fe7e2-df4a-4b95-81c8-93e5389df6e0"
        },
        "item": {
          "id": "c93fc6d7-b647-4c80-a350-335589535b06",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "51ffb9a9-198c-41bf-9427-012561964e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e157a21-1ce0-4b8a-8d6c-1a60fd6fb654",
        "cursor": {
          "ref": "6ba9f156-90f7-485b-9fde-60c5c85b3eb7",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6c81ad02-88fc-42a3-a022-fc4a9f70af8e"
        },
        "item": {
          "id": "4e157a21-1ce0-4b8a-8d6c-1a60fd6fb654",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0109038b-48ff-4595-898f-3c520bacdb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7ebafc-8000-4968-aa5e-8bb1d987c3ec",
        "cursor": {
          "ref": "e6eab455-696c-422a-b37d-4f236b640a8f",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "220cdefe-4f39-49a2-b039-810a607631f6"
        },
        "item": {
          "id": "bc7ebafc-8000-4968-aa5e-8bb1d987c3ec",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "86878e0b-9c7e-4f8e-a4f1-6ce25be6f22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31fb275-d46c-4fd4-ad0a-5b8bc98c2710",
        "cursor": {
          "ref": "1621baa2-24ad-41a5-be9f-97a68bedb97f",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f5217f3-ebc2-43e4-b805-2a9bb49feaa4"
        },
        "item": {
          "id": "c31fb275-d46c-4fd4-ad0a-5b8bc98c2710",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ba01d7da-a7e3-4b47-b533-2c4da9a06c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057aa746-7593-460a-8d1f-22ab7eaa02c7",
        "cursor": {
          "ref": "6415aa76-ddae-47f5-acf2-d12afb93a56c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2efb2cd1-1181-4f70-b273-efd5174a327e"
        },
        "item": {
          "id": "057aa746-7593-460a-8d1f-22ab7eaa02c7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5aa19e3e-02a8-4b47-85aa-22671ebaec21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a563fe-5600-4ecc-b4e8-a0a5306fdf0f",
        "cursor": {
          "ref": "08261ff8-389c-49fa-9e4c-4e1650c61fa8",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4e870c7a-f90d-4a9b-8631-36e960d8554c"
        },
        "item": {
          "id": "78a563fe-5600-4ecc-b4e8-a0a5306fdf0f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f8f92fc-b20c-4e11-a940-a281309bce41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90005f0f-64ac-4845-bffd-3fdec4d9cead",
        "cursor": {
          "ref": "d8215959-ca1f-4e7f-ab0b-86699681ea26",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8f73ef77-7ccb-47e7-95e2-d8d383507e56"
        },
        "item": {
          "id": "90005f0f-64ac-4845-bffd-3fdec4d9cead",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "06dcf6d6-bd64-4ff5-84fb-41da0866b361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0b2562-205f-4ed4-a5af-edfa3a7e0723",
        "cursor": {
          "ref": "e10231a0-add5-4733-809b-a33b33682d01",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c15fcdd4-2a01-43d6-b6cd-f4b5de2c01d9"
        },
        "item": {
          "id": "ed0b2562-205f-4ed4-a5af-edfa3a7e0723",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "72474129-4694-45ca-b156-bc1cd78f6fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63586f5-55b3-4231-ad96-15cd49ba30ca",
        "cursor": {
          "ref": "10d40f9e-30ca-48ca-983c-6b4ce5ec1265",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f1ad305a-3c22-44ac-a3d2-5b1a24759cb5"
        },
        "item": {
          "id": "c63586f5-55b3-4231-ad96-15cd49ba30ca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fa545452-b8e3-4017-a395-fba4ebcf56c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca9e0f7-fd33-48cd-9502-6589ff4bae64",
        "cursor": {
          "ref": "7d130793-d4de-462e-befb-1dbc276fd7a1",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e228883c-1721-4cc2-9c99-f9c4aa29d237"
        },
        "item": {
          "id": "1ca9e0f7-fd33-48cd-9502-6589ff4bae64",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4417c898-0352-421f-951f-781f69d23ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d076bf-e560-4b74-a0cd-26cb395d8171",
        "cursor": {
          "ref": "1bd43f85-8458-4760-9b17-9ab6261c6087",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "706d3065-c680-4874-a249-7de0e3258913"
        },
        "item": {
          "id": "77d076bf-e560-4b74-a0cd-26cb395d8171",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bfa59e6e-c413-40fc-8de0-6c73a91d82db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b408abc-b6e5-4ab4-99f2-937c91bbb460",
        "cursor": {
          "ref": "13147c90-27c9-4b39-a3bd-c04b0927fa69",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fae316b5-3a34-431c-adee-a9bfe383c926"
        },
        "item": {
          "id": "4b408abc-b6e5-4ab4-99f2-937c91bbb460",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2ad8d71c-5266-4611-a26d-c24d7e02107f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44276f6d-5806-43c7-bfe2-09c96582de81",
        "cursor": {
          "ref": "5c227bcb-e10e-4845-88fa-58baab8599ad",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1f70c7e0-817d-4442-a555-d059734ead29"
        },
        "item": {
          "id": "44276f6d-5806-43c7-bfe2-09c96582de81",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3037bc6b-add2-43b1-95de-84a7fcc895c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59af73bf-a97c-4e8a-a87b-e8e510e7d458",
        "cursor": {
          "ref": "a904f424-a918-4df5-aedb-444771a3eb06",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e4b016b8-5a8f-4fe9-851a-697969eaae24"
        },
        "item": {
          "id": "59af73bf-a97c-4e8a-a87b-e8e510e7d458",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "14593e30-8a09-4b10-852d-464721edcf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7be9a8c-64fd-4ce4-bf9e-b19a9f335dd1",
        "cursor": {
          "ref": "b18fecaf-579e-425f-9cdb-089443da81d5",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2d168851-288a-4910-b12d-9a7412b6c19c"
        },
        "item": {
          "id": "d7be9a8c-64fd-4ce4-bf9e-b19a9f335dd1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f295ff57-abff-437a-8e51-3763bb202525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1051,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0bf989-679f-48f0-a442-d71f30821d24",
        "cursor": {
          "ref": "a3641305-a518-49b2-be8b-9624cc1506ff",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "85b290c3-d6a7-4fb4-b3d6-8fd084eb0760"
        },
        "item": {
          "id": "ec0bf989-679f-48f0-a442-d71f30821d24",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ccd65641-9dbb-4d3e-a966-1fdcb48a083e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1343,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b991acc-009a-4bec-90f9-3568e258a925",
        "cursor": {
          "ref": "835f3eb7-2d11-40f4-baba-d117232df829",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "aea32d8b-4725-43a9-8472-02f63ea7e39e"
        },
        "item": {
          "id": "9b991acc-009a-4bec-90f9-3568e258a925",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d4d9dcac-e4f2-4c01-b6ca-ff9b24302607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc849c5-059e-43b2-b75c-245aab89b00a",
        "cursor": {
          "ref": "146d15de-6758-4fc2-ba0d-8dbe7d8514d9",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5163a4ce-c09a-4240-8e03-e36bba6d3aa9"
        },
        "item": {
          "id": "7dc849c5-059e-43b2-b75c-245aab89b00a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "219565ae-d386-46fd-9dcf-0bcb205ab022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1173,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322ee14f-d8d7-4423-80fd-7c4f95671d12",
        "cursor": {
          "ref": "9dafae1f-478a-42b3-b7e4-167e6c292b4a",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9d19ebd6-46b7-4776-85db-f26277cf2539"
        },
        "item": {
          "id": "322ee14f-d8d7-4423-80fd-7c4f95671d12",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "214d0456-8ec4-4c5a-9994-16b63c4966eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260922fc-8f2e-4dd3-922d-101392569936",
        "cursor": {
          "ref": "a70795b4-84b4-42d5-aa42-e50df89d8469",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5914afc9-df7d-4fc2-905a-0e0b44439fdb"
        },
        "item": {
          "id": "260922fc-8f2e-4dd3-922d-101392569936",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ae502dcf-c2a6-4a96-84f2-ca601dce0bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4414001a-f929-4672-9e36-8533e3fdbd72",
        "cursor": {
          "ref": "3e07ada6-8362-49bb-a78e-f72cfab50518",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5317e8ad-08d3-4292-8706-377b62540a38"
        },
        "item": {
          "id": "4414001a-f929-4672-9e36-8533e3fdbd72",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2bd7bb93-47cd-4177-a00b-442152963dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b969a76a-871c-4b68-9f9a-65a0e3920b94",
        "cursor": {
          "ref": "509546b2-b64b-4881-8ee3-87f2a4a09877",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6c4cddcf-7204-4fd8-887d-e3829383b8cd"
        },
        "item": {
          "id": "b969a76a-871c-4b68-9f9a-65a0e3920b94",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f84aee3b-7fd9-4381-b028-5c2e230effb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d83ba3-8a8d-4bcf-b748-df6446e23b7e",
        "cursor": {
          "ref": "7c7f4f56-e1de-4177-8d81-35ab22d6fa58",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "57c23747-37cb-4348-b4b7-e148ba406d43"
        },
        "item": {
          "id": "f4d83ba3-8a8d-4bcf-b748-df6446e23b7e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "eae42eec-37b1-4cca-b4f3-ce00c6b49a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9173a27d-a64d-4c4a-971f-cc0d572fdea6",
        "cursor": {
          "ref": "a9c8f23b-a6f0-42d9-8547-e511478d0b0d",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "52603711-d357-491e-83f6-045596bf8e0e"
        },
        "item": {
          "id": "9173a27d-a64d-4c4a-971f-cc0d572fdea6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f8fdd1d5-3cd3-4103-b19b-af31b16b631a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e8aa3e-53c8-4e16-b7fe-3f2a768bc30b",
        "cursor": {
          "ref": "6a73a0ac-b698-4fd4-9f36-60d3d2402256",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5bfc41b8-6879-437e-b349-dca8b250e54b"
        },
        "item": {
          "id": "b5e8aa3e-53c8-4e16-b7fe-3f2a768bc30b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3b24a8ab-18c9-4166-9b99-bd7c66cd6979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a0bd49-86f4-495e-ae98-cf17f8760dd2",
        "cursor": {
          "ref": "ce8fa891-711e-41ba-aedf-7c3df849715b",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a6d21bee-bcc6-45f7-9b93-13f648fa4920"
        },
        "item": {
          "id": "d4a0bd49-86f4-495e-ae98-cf17f8760dd2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b8a9e6a7-2775-46f4-9c12-223d00c34abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59d72c1-8e82-47fe-9234-28e5eba6ba9f",
        "cursor": {
          "ref": "5fa38c1c-89fd-4346-8459-1273806d0cbf",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5fd1ad53-d447-46ab-91c8-c49ae39208b1"
        },
        "item": {
          "id": "d59d72c1-8e82-47fe-9234-28e5eba6ba9f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4e523974-2305-4d52-a58f-21becc1f29a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6849cf4-f1a4-41a2-9fb3-95e31f3752fd",
        "cursor": {
          "ref": "dfd54058-20e5-40dd-959d-2bd1ed64093a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5bede39d-1d88-49a0-8f40-13820910e6e6"
        },
        "item": {
          "id": "a6849cf4-f1a4-41a2-9fb3-95e31f3752fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b872bad7-6438-4689-abb7-e7d36f87de1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7395b9-e512-48ec-b439-9843a5869b6b",
        "cursor": {
          "ref": "b55a51ad-f912-49f4-a968-ba14b124bad3",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d60b9ef7-90b1-444a-a6dd-6085db1d8a76"
        },
        "item": {
          "id": "2a7395b9-e512-48ec-b439-9843a5869b6b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f2a38e99-b852-4be0-8073-f80311cb4b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d8a465-d853-47f4-becf-44ed0af9151b",
        "cursor": {
          "ref": "d0256faa-cb3c-4546-9e65-190ab08423ec",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "41e439e6-ce6e-4b37-9049-2050d64ae904"
        },
        "item": {
          "id": "96d8a465-d853-47f4-becf-44ed0af9151b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a4cc314f-2cd0-4a89-abe2-08b59b593e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ecb57c-fe22-41d7-9b31-25df8b9bb976",
        "cursor": {
          "ref": "63ab4034-2a09-42d1-a18a-5169c0dd4e96",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "548145fa-076f-477a-84b5-65eca2e05fec"
        },
        "item": {
          "id": "79ecb57c-fe22-41d7-9b31-25df8b9bb976",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4b62e22a-f39e-4e08-a441-05dbad2dfa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9288910f-8550-48a8-8b69-b8ed04bb0121",
        "cursor": {
          "ref": "d23357d4-33b5-47aa-8462-3e2ed6b55207",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "06e43eb6-bbc1-4728-a5c3-e686d4bb5b8f"
        },
        "item": {
          "id": "9288910f-8550-48a8-8b69-b8ed04bb0121",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a61f7911-5fe3-411e-8ec4-26a6c7920c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59e0795-4e65-48c3-a78b-a7007abc2dfc",
        "cursor": {
          "ref": "e12a3f56-7d94-4a57-a24a-553bb3de7e36",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2958ab06-4cda-4574-b4d4-d2867d24bb75"
        },
        "item": {
          "id": "b59e0795-4e65-48c3-a78b-a7007abc2dfc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e57f80a1-32ed-4221-a44e-d312530798ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a8de46-406a-4627-8c47-6ce148556b14",
        "cursor": {
          "ref": "824ac8ac-42d5-45a3-8218-5e9b13e2ad73",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "16fcc059-f1ec-4112-a156-9d02de82adc2"
        },
        "item": {
          "id": "a3a8de46-406a-4627-8c47-6ce148556b14",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a0e6fb3c-9ff5-45f1-9727-b787f11c98d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c23e14-f662-44fb-aab6-ca6c0894de53",
        "cursor": {
          "ref": "b57639a4-ce26-4e20-9274-8fb340e98c76",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "be74b798-d097-485a-a9db-d4e1f7e873ef"
        },
        "item": {
          "id": "c9c23e14-f662-44fb-aab6-ca6c0894de53",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "01f05948-1678-43b7-8ff4-1a1411b26263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1095,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0155b121-614e-490c-a7ca-ed2ea89b11a6",
        "cursor": {
          "ref": "1e01ce9a-195f-4673-a513-855c098345df",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fd61954c-3a66-4559-82c6-1768cfddfddd"
        },
        "item": {
          "id": "0155b121-614e-490c-a7ca-ed2ea89b11a6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f79fceb9-3de3-46c3-ad0f-4e21af543926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1499,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b6432d-4056-4801-b0be-1782b9710560",
        "cursor": {
          "ref": "1a9dddb3-c1c0-465c-a4c1-cc9593e66459",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "63411f82-a0c7-4586-b4dd-9fccf878c301"
        },
        "item": {
          "id": "e2b6432d-4056-4801-b0be-1782b9710560",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c8a8b2b1-c6fe-4d50-8a64-38b5dfb75e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1641,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf6a663-be78-4a4f-a006-69ca995d0cff",
        "cursor": {
          "ref": "aa48be20-7a99-4f33-934e-079188469da0",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9668e853-5e3b-4a27-8627-b2a23c50d6c5"
        },
        "item": {
          "id": "3cf6a663-be78-4a4f-a006-69ca995d0cff",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "918c3c97-5c78-4338-9384-8678e273549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ccbfcf-0e90-4df6-99db-fb5842d72069",
        "cursor": {
          "ref": "7a623daa-cb42-4f63-92c2-bb5dc23fbf34",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ae667011-32ba-43d9-b323-eb566bb3c9a2"
        },
        "item": {
          "id": "d6ccbfcf-0e90-4df6-99db-fb5842d72069",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f7cb630c-bc82-49af-b96c-ac6d32c47d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1402,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be5ce41-9a72-4aeb-8eab-ae026ea6f120",
        "cursor": {
          "ref": "1bfe3c07-7257-485f-b43c-eb31b341f9c6",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6cd042f7-39bc-4f23-ae9b-d2c3aeacb159"
        },
        "item": {
          "id": "9be5ce41-9a72-4aeb-8eab-ae026ea6f120",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "94a048ea-f135-4eab-ad1a-12de05326abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1225,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef344b0-667e-4af0-87a2-a0c67019f837",
        "cursor": {
          "ref": "df9fb5a1-29d4-4d34-9d2b-403d989c4aee",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4e358d3b-3396-4487-9002-f483cf45bb04"
        },
        "item": {
          "id": "7ef344b0-667e-4af0-87a2-a0c67019f837",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f195b212-6347-428c-bebe-4b715951fce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1204,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601dc297-d42f-44c0-b631-952e95bcc0ee",
        "cursor": {
          "ref": "2421df0b-0135-41e4-8a73-825a46b81833",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2681fc2a-17b2-4443-883f-168e884a520e"
        },
        "item": {
          "id": "601dc297-d42f-44c0-b631-952e95bcc0ee",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eda4db3d-4614-4499-aa5d-05a5df267414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df323b73-1a61-4ca9-a3a0-eaa1946cb02c",
        "cursor": {
          "ref": "d996f238-5552-4975-a66f-e474848a2f58",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d3352d6c-8066-447e-a6d1-fb393f20f0b5"
        },
        "item": {
          "id": "df323b73-1a61-4ca9-a3a0-eaa1946cb02c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "de082f7c-cabb-4446-ba76-149b0677a5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d48955-7b18-4328-bf68-e6c4f3c87f38",
        "cursor": {
          "ref": "d026230e-d1e0-47c3-b473-aebf79d539f8",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "db3b558b-1221-4d85-859e-8f7836d0c1af"
        },
        "item": {
          "id": "b2d48955-7b18-4328-bf68-e6c4f3c87f38",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5afa7fc7-922c-4163-b099-aeb172972a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb99cb3b-61e5-402b-b032-43b54d4cdc54",
        "cursor": {
          "ref": "d7e18cda-737f-4606-8b34-022b6b5fa1a5",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c3e7c1e2-98cf-4746-a0d8-97b3ecd43644"
        },
        "item": {
          "id": "fb99cb3b-61e5-402b-b032-43b54d4cdc54",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9fc9e246-346d-499b-860a-f005929d584d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a231ae93-2869-4407-90af-d317de3dd9ca",
        "cursor": {
          "ref": "a86f5942-063e-4b5f-93c7-180d487389a8",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4b02b7f1-f91f-43a1-9711-0160e557ff97"
        },
        "item": {
          "id": "a231ae93-2869-4407-90af-d317de3dd9ca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "53647d12-aa14-4ad4-81fb-05c5117cea8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e43462-a101-477f-89a5-937855034e7d",
        "cursor": {
          "ref": "8e99ad59-bd24-438d-8eed-23c3da327f4d",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d5bb56fb-e04b-466b-ac18-3bb07737dc2b"
        },
        "item": {
          "id": "21e43462-a101-477f-89a5-937855034e7d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5b42fa29-a47e-4a3e-afd3-7eea1c7805ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e78c72c-c4d9-4702-84b2-28fcf886a98d",
        "cursor": {
          "ref": "c33d2ab3-8ea3-48f7-a9aa-98cf8ff39efd",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1c38a03f-cef6-4f02-8d08-2f75e50b190a"
        },
        "item": {
          "id": "7e78c72c-c4d9-4702-84b2-28fcf886a98d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "747d7214-90c6-4226-a255-fa78e5f472cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142d1fdb-ccce-4e91-86b6-9e62c22c2377",
        "cursor": {
          "ref": "489775ca-9870-4aac-8aba-25b5f62d1570",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e3e11f31-5902-4d1e-a60b-85c102f01777"
        },
        "item": {
          "id": "142d1fdb-ccce-4e91-86b6-9e62c22c2377",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cf420324-3d58-4cd6-a828-aa1e71b3db18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884e1298-87ab-4d50-a859-6a7e33ca596f",
        "cursor": {
          "ref": "aabca6d0-7a8e-41f7-908e-da3424ad65e2",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "73d91a27-6cd4-4543-9756-5d8c3d7787f0"
        },
        "item": {
          "id": "884e1298-87ab-4d50-a859-6a7e33ca596f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6310682c-435f-4a4e-925e-52b9f20f5c07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdb5fd4-d485-4ea9-88f9-4cad974f9d23",
        "cursor": {
          "ref": "95a40fce-d05b-464a-9524-c46aa5d8521c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3f0e3ab5-8878-40e4-adcf-d017fb32bafc"
        },
        "item": {
          "id": "cbdb5fd4-d485-4ea9-88f9-4cad974f9d23",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "78567cd3-39a8-4248-98a4-16da1928e0f9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 335,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ef14a0-52e7-43bb-9f06-11d663133b70",
        "cursor": {
          "ref": "829e6076-559e-4f5c-976c-5034c0657900",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c638615c-3769-4b9d-a053-42da05914f69"
        },
        "item": {
          "id": "63ef14a0-52e7-43bb-9f06-11d663133b70",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ecae176c-524b-470e-9dd2-80e822f1abba",
          "status": "OK",
          "code": 200,
          "responseTime": 429,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b5900a-4626-4ae5-95b3-625061390ee0",
        "cursor": {
          "ref": "218763a4-5251-4c7a-ad1c-b209f8fa4650",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4d45a15d-e0f5-4132-8594-6052c5ce0c87"
        },
        "item": {
          "id": "a8b5900a-4626-4ae5-95b3-625061390ee0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "39687bcc-3068-4c0d-bca8-8aaf08d44759",
          "status": "OK",
          "code": 200,
          "responseTime": 2111,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "32778432-d45a-41d6-9385-bfaed70c2dfe",
        "cursor": {
          "ref": "63bd2d94-99ca-4f39-a5a3-5fa4f92c6163",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "187df2a8-7be2-4070-a312-7dddc19ab66c"
        },
        "item": {
          "id": "32778432-d45a-41d6-9385-bfaed70c2dfe",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7934fd01-d019-4b7e-b903-5b095b26ca78",
          "status": "OK",
          "code": 200,
          "responseTime": 1578,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffadf8bd-d4c9-4a4c-860c-9ce1f7a96c1d",
        "cursor": {
          "ref": "a2067593-3857-41df-a673-f2d19ca41c51",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fb826505-ece3-4d9d-b370-efbfe1147b07"
        },
        "item": {
          "id": "ffadf8bd-d4c9-4a4c-860c-9ce1f7a96c1d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5168ee5a-37b8-4270-ab3b-09d2974344d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffadf8bd-d4c9-4a4c-860c-9ce1f7a96c1d",
        "cursor": {
          "ref": "a2067593-3857-41df-a673-f2d19ca41c51",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fb826505-ece3-4d9d-b370-efbfe1147b07"
        },
        "item": {
          "id": "ffadf8bd-d4c9-4a4c-860c-9ce1f7a96c1d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5168ee5a-37b8-4270-ab3b-09d2974344d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffadf8bd-d4c9-4a4c-860c-9ce1f7a96c1d",
        "cursor": {
          "ref": "a2067593-3857-41df-a673-f2d19ca41c51",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fb826505-ece3-4d9d-b370-efbfe1147b07"
        },
        "item": {
          "id": "ffadf8bd-d4c9-4a4c-860c-9ce1f7a96c1d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5168ee5a-37b8-4270-ab3b-09d2974344d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096830cb-0c5b-48cd-aea9-6b0eaf81c459",
        "cursor": {
          "ref": "cd0fdc6d-0de1-47b4-a38f-ee7c6572c4f3",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e0040d4e-7891-49e4-8c7a-5ae963a5a9d5"
        },
        "item": {
          "id": "096830cb-0c5b-48cd-aea9-6b0eaf81c459",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "bbc1099b-01dd-462b-89c1-7721c66e2f2d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 359,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe09eadd-095d-4921-848c-10c9f6435017",
        "cursor": {
          "ref": "a37587fa-bfd3-49df-a7d7-df0913130ddf",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4d9c6085-011b-401e-95e1-c756caa74c45"
        },
        "item": {
          "id": "fe09eadd-095d-4921-848c-10c9f6435017",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "67701381-4731-4087-aa5d-3ce22c1dd9cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe09eadd-095d-4921-848c-10c9f6435017",
        "cursor": {
          "ref": "a37587fa-bfd3-49df-a7d7-df0913130ddf",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4d9c6085-011b-401e-95e1-c756caa74c45"
        },
        "item": {
          "id": "fe09eadd-095d-4921-848c-10c9f6435017",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "67701381-4731-4087-aa5d-3ce22c1dd9cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e7c087-ab7e-411e-98bd-008b33addcdf",
        "cursor": {
          "ref": "fe1bf3dd-afcc-4655-925a-9a5b7a3ac7b1",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8fb88165-ca32-48fc-ae70-9462486db7fc"
        },
        "item": {
          "id": "73e7c087-ab7e-411e-98bd-008b33addcdf",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "36e12c6d-514f-4443-a757-2f02da9666f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b972231e-3769-4cb5-bb51-fdad396499b2",
        "cursor": {
          "ref": "1a865202-9954-4c46-9da7-1344b5020b12",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ddc3a56-4e55-4791-9d31-624d05eb020f"
        },
        "item": {
          "id": "b972231e-3769-4cb5-bb51-fdad396499b2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "92a87af4-10c4-499d-be7a-ab0a6651e809",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b972231e-3769-4cb5-bb51-fdad396499b2",
        "cursor": {
          "ref": "1a865202-9954-4c46-9da7-1344b5020b12",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ddc3a56-4e55-4791-9d31-624d05eb020f"
        },
        "item": {
          "id": "b972231e-3769-4cb5-bb51-fdad396499b2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "92a87af4-10c4-499d-be7a-ab0a6651e809",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8d3834-27c9-4353-ba42-e819b4c0cc27",
        "cursor": {
          "ref": "0af4a1a9-58fb-4fd2-84d3-fee8de3fcd45",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b11ff0ff-ba91-49c7-afc6-24c165a563e0"
        },
        "item": {
          "id": "ff8d3834-27c9-4353-ba42-e819b4c0cc27",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e562eaf7-27c7-480a-b9c7-935667e51117",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 582,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}